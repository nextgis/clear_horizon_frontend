{"version":3,"file":"main-2bde527d646bc68.js","mappings":"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","sources":["webpack://clear_horizon/./@nextgis/packages/ngw-kit/src/NgwKit.ts","webpack://clear_horizon/./@nextgis/packages/ngw-kit/src/NgwResource.ts","webpack://clear_horizon/./@nextgis/packages/ngw-kit/src/NgwWebmapItem.ts","webpack://clear_horizon/./@nextgis/packages/ngw-kit/src/NgwWebmapLayerAdapter.ts"],"sourcesContent":["import NgwConnector from '@nextgis/ngw-connector';\n\nimport { extendNgwWebmapLayerAdapter } from './utils/utils';\nimport { NgwWebmapLayerAdapter } from './NgwWebmapLayerAdapter';\nimport { classAdapters } from './adapters/createAsyncAdapter';\n\nimport type { Type } from '@nextgis/utils';\nimport type { WebMap, StarterKit, LayerAdapterCreators } from '@nextgis/webmap';\nimport type {\n  NgwKitOptions,\n  GetClassAdapter,\n  NgwWebmapAdapterOptions,\n} from './interfaces';\n\nexport class NgwKit implements StarterKit {\n  url: string;\n  connector: NgwConnector;\n  webMap?: WebMap;\n\n  constructor(public options: NgwKitOptions) {\n    if (this.options.connector) {\n      this.url = this.options.connector.options.baseUrl || '';\n      this.connector = this.options.connector;\n    } else {\n      if (this.options.baseUrl) {\n        this.url = this.options.baseUrl;\n      } else {\n        throw new Error('url is not defined');\n      }\n      this.connector = new NgwConnector({\n        baseUrl: this.url,\n        auth: this.options.auth,\n      });\n    }\n  }\n\n  static addClassAdapters(cls: string, adapter: GetClassAdapter): void {\n    classAdapters[cls] = adapter;\n  }\n\n  async onLoadSync(webMap: WebMap): Promise<NgwWebmapLayerAdapter | undefined> {\n    if (this.options.resourceId && this.url) {\n      // TODO: resources from array\n      const resourceIds = [this.options.resourceId];\n\n      if (resourceIds.length) {\n        for (const r of resourceIds) {\n          const options: Partial<NgwWebmapAdapterOptions> = {\n            resourceId: r,\n            connector: this.connector,\n            webMap,\n          };\n          const layer = (await webMap.addLayer(NgwWebmapLayerAdapter, {\n            visibility: true,\n            fit: true,\n            pixelRadius: this.options.pixelRadius,\n            ...options,\n          })) as NgwWebmapLayerAdapter;\n          return layer;\n        }\n      }\n    }\n  }\n\n  getLayerAdapters(): Promise<LayerAdapterCreators[]> {\n    return Promise.resolve([this._getLayerAdapter()]);\n  }\n\n  private _getLayerAdapter() {\n    return {\n      name: 'WEBMAP',\n      createAdapter: (webmap: WebMap) =>\n        Promise.resolve(this._createAdapter(webmap)),\n    };\n  }\n\n  private _createAdapter(webMap: WebMap): Type<NgwWebmapLayerAdapter> {\n    const connector = this.connector;\n    const baseUrl = this.url;\n    return extendNgwWebmapLayerAdapter({\n      webMap,\n      connector,\n      baseUrl,\n    });\n  }\n}\n","import { fetchNgwResourceExtent } from './utils/fetchNgwExtent';\n\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { ResourceItem } from '@nextgis/ngw-connector';\nimport type { LngLatBoundsArray } from '@nextgis/utils';\nimport { FetchNgwLayerExtentOptions } from './interfaces';\nexport class NgwResource {\n  item!: ResourceItem;\n  connector!: NgwConnector;\n\n  protected _extent?: LngLatBoundsArray;\n\n  /** @deprecated use {@link NgwResource.getBounds} instead */\n  async getExtent(): Promise<LngLatBoundsArray | undefined> {\n    return this.getBounds();\n  }\n\n  async getBounds(\n    options?: FetchNgwLayerExtentOptions,\n  ): Promise<LngLatBoundsArray | undefined> {\n    if (this._extent) {\n      return this._extent;\n    }\n    if (this.item) {\n      this._extent = await fetchNgwResourceExtent(\n        this.item,\n        this.connector,\n        options,\n      );\n      return this._extent;\n    }\n  }\n}\n","import { EventEmitter } from 'events';\nimport { Item } from '@nextgis/item';\nimport { treeSome } from '@nextgis/tree';\nimport {\n  WebMap,\n  LayerAdapter,\n  ImageAdapterOptions,\n  LayerAdapterDefinition,\n  VectorAdapterOptions,\n} from '@nextgis/webmap';\nimport { objectAssign } from '@nextgis/utils';\n\nimport { setScaleRatio } from './utils/utils';\nimport { WebmapLayerOpacityPropertyHandler } from './utils/WebmapLayerOpacityPropertyHandler';\n\nimport type { ItemOptions } from '@nextgis/item';\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { TreeGroup, TreeLayer, TreeItem } from './interfaces';\n\nexport class NgwWebmapItem extends Item<ItemOptions> {\n  static GetAdapterFromLayerType: {\n    [layerType: string]: (\n      item: TreeItem,\n      options: any,\n      webMap: WebMap,\n      connector?: NgwConnector,\n    ) => LayerAdapterDefinition;\n  } = {};\n\n  static options: ItemOptions = {\n    properties: [\n      {\n        type: 'boolean',\n        name: 'visibility',\n        getProperty(item?: NgwWebmapItem): boolean {\n          if (item) {\n            if (\n              item.item.item_type === 'group' ||\n              item.item.item_type === 'root'\n            ) {\n              return treeSome<TreeGroup | TreeLayer>(\n                item.item,\n                (i) => ('layer_enabled' in i ? i.layer_enabled : false),\n                (i) => (i as TreeGroup).children,\n              );\n            } else if (item.item.item_type === 'layer') {\n              return item.item.layer_enabled;\n            }\n            // else if (item.item.item_type === 'root') {\n            //   return true;\n            // }\n          }\n          return false;\n        },\n        onSet(\n          value: boolean,\n          options?: Record<string, any>,\n          item?: NgwWebmapItem,\n        ): void {\n          if (item && item.item.item_type === 'layer') {\n            if (item.layer) {\n              if (value) {\n                item.webMap.showLayer(item.layer);\n              } else {\n                item.webMap.hideLayer(item.layer);\n              }\n            }\n            item.item['layer_enabled'] = value;\n          }\n        },\n      },\n      {\n        name: 'opacity',\n        handler: WebmapLayerOpacityPropertyHandler,\n      },\n    ],\n  };\n\n  item: TreeGroup | TreeLayer;\n  connector?: NgwConnector;\n  layer?: LayerAdapter;\n  readonly emitter = new EventEmitter();\n\n  protected _rootDescendantsCount = 0;\n\n  constructor(\n    public webMap: WebMap,\n    item: TreeGroup | TreeLayer,\n    options?: ItemOptions,\n    connector?: NgwConnector,\n    parent?: NgwWebmapItem,\n    noInit?: boolean,\n  ) {\n    super({ ...NgwWebmapItem.options, ...options });\n    if (connector) {\n      this.connector = connector;\n    }\n    if (parent) {\n      this.tree.setParent(parent);\n    }\n    this.item = item;\n    if (this.item.item_type === 'root') {\n      this._rootDescendantsCount = this._sumUp(this.item.children);\n    } else {\n      const root = this.tree.getRoot<this>();\n      if (root) {\n        this._rootDescendantsCount = root._rootDescendantsCount;\n      }\n    }\n    this.initProperties();\n    if (!noInit) {\n      this._init(item);\n    }\n  }\n\n  static async create(\n    webMap: WebMap,\n    item: TreeGroup | TreeLayer,\n    options?: ItemOptions,\n    connector?: NgwConnector,\n    parent?: NgwWebmapItem,\n  ): Promise<NgwWebmapItem> {\n    const ngwWebmapItem = new NgwWebmapItem(\n      webMap,\n      item,\n      options,\n      connector,\n      parent,\n      true,\n    );\n    await ngwWebmapItem._init(item);\n    return ngwWebmapItem;\n  }\n\n  initItem(item: TreeGroup | TreeLayer): Promise<void> {\n    const i = item;\n    const options: Partial<ImageAdapterOptions> = this.getItemOptions(item);\n    const setNewLayer = (l: LayerAdapter) => {\n      i._layer = l;\n      this.layer = l;\n      const enabled = this.properties.get('visibility');\n      if (enabled) {\n        this.properties.set('visibility', true);\n      }\n\n      if (options.opacity !== undefined) {\n        this.webMap.setLayerOpacity(l, options.opacity);\n      }\n    };\n\n    if (item.item_type === 'group' || item.item_type === 'root') {\n      if (item.children && item.children.length) {\n        const children = this.getChildren(item);\n        for (const x of children) {\n          const children = new (this.constructor as typeof NgwWebmapItem)(\n            this.webMap,\n            x,\n            this.options,\n            this.connector,\n            this,\n          );\n          this.tree.addChild(children);\n        }\n      }\n      return Promise.resolve();\n    } else {\n      let adapter: LayerAdapterDefinition | undefined;\n      if (item.item_type === 'layer') {\n        adapter = item.adapter || item.layer_adapter.toUpperCase();\n      } else if (NgwWebmapItem.GetAdapterFromLayerType[item.item_type]) {\n        const getAdapter =\n          NgwWebmapItem.GetAdapterFromLayerType[item.item_type];\n        adapter = getAdapter(item, options, this.webMap, this.connector);\n      }\n      if (adapter) {\n        return this.webMap.addLayer(adapter, options).then((newLayer) => {\n          setNewLayer(newLayer);\n        });\n      }\n    }\n    if (item._layer) {\n      return Promise.resolve(setNewLayer(item._layer));\n    }\n    return Promise.reject('No layer added');\n  }\n\n  bringToFront(): void {\n    //\n  }\n\n  fit(): void {\n    if (this.item.item_type === 'layer') {\n      // console.log(this.item);\n    }\n  }\n\n  getLayer() {\n    return this.layer;\n  }\n\n  protected getItemOptions(item: TreeGroup | TreeLayer): Record<string, any> {\n    const transparency = item.item_type === 'layer' && item.layer_transparency;\n    const opacity =\n      typeof transparency === 'number' ? (100 - transparency) / 100 : undefined;\n    const options: Partial<ImageAdapterOptions> &\n      Pick<VectorAdapterOptions, 'popupOptions'> = {\n      visibility: false,\n      headers: this.options.headers,\n      crossOrigin: this.options.crossOrigin,\n      setViewDelay: this.options.setViewDelay,\n      params: { resource: this.item.resourceId, item: this.item },\n    };\n    if (this.options.order) {\n      const subOrder =\n        this.options.drawOrderEnabled && 'draw_order_position' in item\n          ? this._rootDescendantsCount - item.draw_order_position\n          : this.id;\n\n      // 9 > 0009, 11 > 0011\n      // TODO: find better way to set order in sub level, not limit by 1000 layer in group\n      const subLevel = String(subOrder).padStart(4, '0');\n      options.order = Number((this.options.order | 0) + '.' + subLevel);\n    }\n    if (this.options.popupOptions) {\n      options.popupOptions = this.options.popupOptions;\n    }\n    if (item.item_type === 'layer') {\n      const { maxZoom, minZoom } = this._getZoomRange(item);\n\n      objectAssign(options, {\n        updateWmsParams: item.updateWmsParams,\n        url: item.url,\n        headers: this.options.headers,\n        ratio: this.options.ratio,\n        maxZoom,\n        minZoom,\n        minScale: item.layer_min_scale_denom,\n        maxScale: item.layer_max_scale_denom,\n      });\n    }\n    if (opacity !== undefined) {\n      options.opacity = opacity;\n    }\n    return options;\n  }\n\n  protected getChildren(item: TreeGroup): (TreeGroup | TreeLayer)[] {\n    return [...item.children].reverse();\n  }\n\n  private _mapScaleToZoomLevel(scale: number) {\n    return setScaleRatio(scale);\n  }\n\n  private _getZoomRange(item: TreeLayer) {\n    const minZoomWebmap = this.options.minZoom;\n    const maxZoomWebmap = this.options.maxZoom;\n\n    const minZoomLayer = item.layer_min_scale_denom\n      ? this._mapScaleToZoomLevel(item.layer_min_scale_denom)\n      : undefined;\n    const maxZoomLayer = item.layer_max_scale_denom\n      ? this._mapScaleToZoomLevel(item.layer_max_scale_denom)\n      : undefined;\n\n    const minZooms = [minZoomWebmap, minZoomLayer].filter(Boolean) as number[];\n    const maxZooms = [maxZoomWebmap, maxZoomLayer].filter(Boolean) as number[];\n    const minZoom = minZooms.length ? Math.max(...minZooms) : undefined;\n    const maxZoom = maxZooms.length ? Math.min(...maxZooms) : undefined;\n    return { minZoom, maxZoom };\n  }\n\n  private _init(item: TreeGroup | TreeLayer) {\n    this.initItem(item).then(() => {\n      this.emitter.emit('init');\n    });\n  }\n\n  private _sumUp(children: Array<TreeGroup | TreeLayer>, totalValue = 0) {\n    for (const child of children) {\n      if (child.item_type === 'layer') {\n        totalValue += 1;\n        child.draw_order_position = child.draw_order_position || totalValue;\n      } else if (child.item_type === 'group') {\n        totalValue = this._sumUp(child.children, totalValue);\n      }\n    }\n    return totalValue;\n  }\n}\n","import { EventEmitter } from 'events';\n\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { fixUrlStr } from '@nextgis/utils';\nimport {\n  fetchNgwLayerItems,\n  WEBMAP_BASELAYER_ID_PREFIX,\n} from '@nextgis/ngw-kit';\n\nimport { NgwWebmapItem } from './NgwWebmapItem';\nimport { createOnFirstShowNgwAdapter } from './adapters/createOnFirstShowNgwAdapter';\nimport { ngwApiToAdapterOptions } from './utils/ngwApiToAdapterOptions';\nimport { getNgwWebmapExtent } from './utils/fetchNgwExtent';\nimport { updateImageParams } from './utils/utils';\nimport { BookmarkItem } from './BookmarkItem';\n\nimport type StrictEventEmitter from 'strict-event-emitter-types';\nimport type { Type, LngLatBoundsArray } from '@nextgis/utils';\nimport type { ItemOptions } from '@nextgis/item';\nimport type {\n  WebmapResource,\n  BasemapWebmap,\n  ResourceItem,\n} from '@nextgis/ngw-connector';\nimport type { WebMap, RasterAdapterOptions } from '@nextgis/webmap';\nimport type {\n  TreeGroup,\n  TreeLayer,\n  ResourceAdapter,\n  NgwLayerAdapterType,\n  NgwWebmapAdapterOptions,\n  NgwWebmapLayerAdapterEvents,\n} from './interfaces';\n\nexport class NgwWebmapLayerAdapter<M = any> implements ResourceAdapter<M> {\n  layer?: NgwWebmapItem;\n\n  NgwWebmapItem: Type<NgwWebmapItem> = NgwWebmapItem;\n  /**\n   * Radius for searching objects in pixels\n   */\n  pixelRadius = 10; // webmapSettings.identify_radius,\n  resourceId!: number;\n  webmapClassName = 'webmap';\n  readonly emitter: StrictEventEmitter<\n    EventEmitter,\n    NgwWebmapLayerAdapterEvents\n  > = new EventEmitter();\n  protected _extent?: LngLatBoundsArray;\n\n  private response?: ResourceItem;\n  private _webmapLayersIds?: number[];\n  private _webmapBaselayersIds: string[] = [];\n  private _lastActiveBaselayer?: string;\n\n  constructor(public map: M, public options: NgwWebmapAdapterOptions) {\n    const r = options.resourceId;\n\n    if (Array.isArray(r)) {\n      this.resourceId = r[0];\n      this.options.id = r[1];\n    } else {\n      this.resourceId = r;\n    }\n\n    if (!this.resourceId) {\n      throw new Error('NGW `resourceId` is not defined');\n    }\n  }\n\n  async addLayer(options: NgwWebmapAdapterOptions): Promise<any> {\n    this.options = { ...this.options, ...options };\n    this.layer = await this._getWebMapLayerItem();\n    const extentConstrained = this.response?.webmap?.extent_constrained;\n    if (\n      this.options.useExtentConstrained &&\n      this._extent &&\n      extentConstrained\n    ) {\n      this.options.webMap.setView({ maxBounds: this._extent });\n    }\n    return this.layer;\n  }\n\n  removeLayer(): void {\n    const mapAdapter = this.options.webMap.mapAdapter;\n\n    this.getDependLayers().forEach((x) => {\n      if (!('layer' in x)) return;\n      // @ts-ignore Update x interface\n      mapAdapter.removeLayer(x.layer.layer);\n    });\n\n    if (this._webmapBaselayersIds.length) {\n      for (const b of this._webmapBaselayersIds) {\n        this.options.webMap.removeLayer(b);\n      }\n      if (this._lastActiveBaselayer) {\n        this.options.webMap.showLayer(this._lastActiveBaselayer);\n      }\n    }\n\n    if (this.options.useExtentConstrained && this._extent) {\n      this.options.webMap.setView({ maxBounds: null });\n    }\n\n    delete this.layer;\n    delete this.response;\n    delete this._webmapLayersIds;\n  }\n\n  async showLayer(): Promise<void> {\n    if (this.layer && this.layer.properties) {\n      return this.layer.properties.property('visibility').set(true);\n    }\n  }\n\n  async hideLayer(): Promise<void> {\n    if (this.layer && this.layer.properties) {\n      return this.layer.properties.property('visibility').set(false);\n    }\n  }\n\n  async setOpacity(val: number): Promise<void> {\n    if (this.layer && this.layer.properties) {\n      return this.layer.properties.property('opacity').set(val);\n    }\n  }\n\n  /** @deprecated use {@link NgwWebmapLayerAdapter.getBounds} instead */\n  getExtent(): LngLatBoundsArray | undefined {\n    return this.getBounds();\n  }\n\n  getBounds(): LngLatBoundsArray | undefined {\n    const webmap = this.response && this.response.webmap;\n    if (webmap) {\n      return getNgwWebmapExtent(webmap);\n    }\n  }\n\n  getDependLayers(): Array<NgwWebmapItem> {\n    return (this.layer && this.layer.tree.getDescendants()) || [];\n  }\n\n  getBookmarksResourceId(): number | undefined {\n    const webmap = this.response && this.response.webmap;\n    if (webmap) {\n      return webmap.bookmark_resource.id;\n    }\n  }\n\n  fetchBookmarks(): CancelablePromise<BookmarkItem[]> {\n    const bookmarkResId = this.getBookmarksResourceId();\n    const connector = this.options.connector;\n    if (bookmarkResId) {\n      return connector.getResourceOrFail(bookmarkResId).then((item) => {\n        const labelField = item.feature_layer?.fields.find(\n          (x) => x.label_field,\n        );\n        const keyname = labelField && labelField.keyname;\n        return fetchNgwLayerItems({\n          connector,\n          resourceId: bookmarkResId,\n          geom: false,\n          fields: keyname ? [keyname] : undefined,\n        }).then((items) => {\n          const bookmarks: BookmarkItem[] = [];\n          for (const i of items) {\n            const bookmark = new BookmarkItem({\n              item: i,\n              resourceId: bookmarkResId,\n              labelField: keyname,\n              connector,\n            });\n            bookmarks.push(bookmark);\n          }\n          return bookmarks;\n        });\n      });\n    }\n    throw new Error(\n      'Webmap was not loaded correctly, it is impossible to extract bookmarks',\n    );\n  }\n\n  async getIdentificationIds(): Promise<number[]> {\n    const visibleLayers: number[] = [];\n    let ids = this._webmapLayersIds;\n    if (!ids) {\n      ids = await this._getWebMapIds();\n      this._webmapLayersIds = ids;\n    }\n    if (ids && ids.length) {\n      let deps = this.getDependLayers();\n      deps = deps.sort((a, b) => b.id - a.id);\n      deps.forEach((x) => {\n        const item = x.item;\n        const parentId = item.parentId;\n        if (parentId !== undefined && item.item_type === 'layer') {\n          const visible = x.properties.property('visibility');\n          const isVisible = visible.get() && !visible.isBlocked();\n          if (isVisible) {\n            visibleLayers.push(parentId);\n          }\n        }\n      });\n    }\n    return visibleLayers;\n  }\n\n  protected async _getWebMapLayerItem(): Promise<NgwWebmapItem | undefined> {\n    if (this.resourceId) {\n      const webmap = await this.getWebMapConfig(this.resourceId);\n      if (webmap && webmap.root_item) {\n        return new Promise<NgwWebmapItem>((resolve) => {\n          const options: ItemOptions = {};\n          if (this.options.connector && this.options.connector.options.auth) {\n            const headers = this.options.connector.getAuthorizationHeaders();\n            if (headers) {\n              options.headers = headers;\n            }\n          }\n          options.setViewDelay = this.options.setViewDelay;\n          options.order = this.options.order;\n          options.ratio = this.options.ratio;\n          options.crossOrigin = this.options.crossOrigin;\n          options.minZoom = this.options.minZoom;\n          options.maxZoom = this.options.maxZoom;\n          options.drawOrderEnabled = webmap.draw_order_enabled;\n          options.popupOptions = this.options.popupOptions;\n          const layer = new this.NgwWebmapItem(\n            this.options.webMap,\n            webmap.root_item,\n            options,\n            this.options.connector,\n          );\n          layer.emitter.on('init', () => resolve(layer));\n        });\n      }\n    }\n  }\n\n  private async getWebMapConfig(id: number) {\n    const data = await this.options.connector.getResource(id);\n    if (data) {\n      this.response = data;\n      const webmap = data[\n        this.webmapClassName as keyof ResourceItem\n      ] as WebmapResource;\n      this._setupBaselayers(data);\n      if (webmap) {\n        this._extent = [\n          webmap.extent_left,\n          webmap.extent_bottom,\n          webmap.extent_right,\n          webmap.extent_top,\n        ];\n        this._updateItemsParams(webmap.root_item, this.options.webMap, data);\n        return webmap;\n      } else {\n        // TODO: resource is no webmap\n      }\n    }\n  }\n\n  private _setupBaselayers(data: ResourceItem) {\n    const webMap = this.options.webMap;\n    const basemap = this.options.useBasemap ?? true;\n    if (basemap) {\n      if (data.basemap_webmap && data.basemap_webmap.basemaps.length) {\n        const activeBaselayer = webMap.getActiveBaseLayer();\n        this._lastActiveBaselayer = activeBaselayer\n          ? activeBaselayer.id\n          : undefined;\n        this._setBasemaps(data.basemap_webmap);\n      } else if (this.options.defaultBasemap) {\n        webMap.addBaseLayer('OSM', {\n          id: 'webmap-default-baselayer',\n          name: 'OpenStreetMap',\n        });\n      }\n    }\n  }\n\n  private _setBasemaps(baseWebmap: BasemapWebmap) {\n    const webMap = this.options.webMap;\n    // to avoid set many basemaps on init\n    let enabledAlreadySet = false;\n    for (const x of baseWebmap.basemaps) {\n      createOnFirstShowNgwAdapter({\n        webMap,\n        connector: this.options.connector,\n        item: x,\n        adapterOptions: { crossOrigin: this.options.crossOrigin },\n      }).then((adapter) => {\n        const visibility = enabledAlreadySet ? false : x.enabled;\n        if (x.enabled) {\n          enabledAlreadySet = true;\n        }\n        return webMap\n          .addBaseLayer(adapter, {\n            id: WEBMAP_BASELAYER_ID_PREFIX + x.resource_id,\n            name: x.display_name,\n            opacity: x.opacity,\n            visibility,\n          })\n          .then((l) => {\n            l.id && this._webmapBaselayersIds.push(l.id);\n          });\n      });\n    }\n  }\n\n  private _updateItemsParams(\n    item: TreeGroup | TreeLayer,\n    webMap: WebMap,\n    data: ResourceItem,\n  ) {\n    if (item) {\n      if (item.item_type === 'group' || item.item_type === 'root') {\n        if (item.children) {\n          item.children = item.children.map((x) =>\n            this._updateItemsParams(x, webMap, data),\n          );\n        }\n        if (item.item_type === 'root') {\n          item.display_name = data.resource.display_name;\n        }\n      } else if (item.item_type === 'layer') {\n        const url = fixUrlStr(\n          this.options.connector.options.baseUrl +\n            '/api/component/render/image',\n        );\n        const resourceId = item.layer_style_id;\n        item.url = url;\n        item.resourceId = resourceId;\n        item.updateWmsParams = (params) =>\n          updateImageParams(params, resourceId);\n        const adapter = item.layer_adapter.toUpperCase() as NgwLayerAdapterType;\n        const layerAdapterOptions = ngwApiToAdapterOptions({\n          options: {\n            adapter,\n            resource: resourceId,\n          },\n          webMap,\n          baseUrl: this.options.connector.options.baseUrl || '',\n        }) as RasterAdapterOptions;\n        item = {\n          ...item,\n          ...layerAdapterOptions,\n        };\n      }\n    }\n    return item;\n  }\n\n  private async _getWebMapIds(): Promise<number[] | undefined> {\n    const webMapItem = this.layer;\n    if (webMapItem && webMapItem.item.item_type === 'root') {\n      const layers = webMapItem.tree.getDescendants();\n      const promises: Array<CancelablePromise<any>> = [];\n      for (const x of layers) {\n        const item = x.item;\n        if (item.item_type === 'layer') {\n          const id = item.layer_style_id;\n          const promise = this.options.connector.getResource(id).then((y) => {\n            if (y) {\n              const parentId = Number(y.resource.parent.id);\n              item.parentId = parentId;\n              return parentId;\n            }\n          });\n          promises.push(promise);\n        }\n      }\n      const ids = await Promise.all(promises);\n      return ids.filter((x) => x !== undefined);\n    }\n  }\n}\n"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread","target","arguments","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","n","toString","from","test","_unsupportedIterableToArray","F","s","e","_e","f","normalCompletion","didErr","step","_e2","arr","len","arr2","asyncGeneratorStep","gen","_next","_throw","_defineProperties","props","descriptor","_toPropertyKey","input","hint","prim","toPrimitive","res","String","_toPrimitive","NgwKit","options","instance","Constructor","_classCallCheck","this","connector","url","baseUrl","NgwConnector","auth","protoProps","staticProps","_onLoadSync","_callee","webMap","resourceIds","_iterator","_step","r","_options","layer","_context","resourceId","addLayer","NgwWebmapLayerAdapter","visibility","fit","pixelRadius","t0","args","_x","_getLayerAdapter","_this","createAdapter","webmap","_createAdapter","extendNgwWebmapLayerAdapter","cls","adapter","classAdapters","_asyncToGenerator","NgwResource","_getBounds","_getExtent","getBounds","_callee2","_context2","_extent","item","fetchNgwResourceExtent","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_setPrototypeOf","p","bind","_assertThisInitialized","ReferenceError","_getPrototypeOf","NgwWebmapItem","_Item","subClass","superClass","_inherits","_create","Derived","hasNativeReflectConstruct","_super","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","Super","NewTarget","_possibleConstructorReturn","parent","noInit","EventEmitter","tree","setParent","item_type","_rootDescendantsCount","_sumUp","children","root","getRoot","initProperties","_init","_this2","getItemOptions","setNewLayer","l","_layer","properties","get","set","opacity","setLayerOpacity","getChildren","x","addChild","layer_adapter","toUpperCase","GetAdapterFromLayerType","getAdapter","newLayer","transparency","layer_transparency","headers","crossOrigin","setViewDelay","params","resource","order","subOrder","drawOrderEnabled","draw_order_position","id","subLevel","padStart","Number","popupOptions","_this$_getZoomRange","_getZoomRange","maxZoom","minZoom","objectAssign","updateWmsParams","ratio","minScale","layer_min_scale_denom","maxScale","layer_max_scale_denom","scale","setScaleRatio","minZoomWebmap","maxZoomWebmap","minZoomLayer","_mapScaleToZoomLevel","maxZoomLayer","minZooms","maxZooms","Math","max","min","_this3","initItem","emitter","emit","_step2","totalValue","_iterator2","child","ngwWebmapItem","_x2","_x3","_x4","_x5","Item","getProperty","treeSome","layer_enabled","onSet","showLayer","hideLayer","handler","WebmapLayerOpacityPropertyHandler","map","_getWebMapIds2","_getWebMapConfig","_getWebMapLayerItem2","_getIdentificationIds","_setOpacity","_hideLayer","_showLayer","_addLayer","_this$response","_this$response$webmap","extentConstrained","_getWebMapLayerItem","response","extent_constrained","useExtentConstrained","setView","maxBounds","mapAdapter","getDependLayers","removeLayer","_webmapBaselayersIds","b","_lastActiveBaselayer","_webmapLayersIds","property","_callee3","_context3","_callee4","_context4","getNgwWebmapExtent","getDescendants","bookmark_resource","bookmarkResId","getBookmarksResourceId","getResourceOrFail","_item$feature_layer","labelField","feature_layer","fields","find","label_field","keyname","fetchNgwLayerItems","geom","items","bookmarks","bookmark","BookmarkItem","_callee5","visibleLayers","ids","_context5","_getWebMapIds","sort","a","parentId","visible","isBlocked","_callee6","_context6","getWebMapConfig","root_item","getAuthorizationHeaders","draw_order_enabled","on","_callee7","data","_context7","getResource","webmapClassName","_setupBaselayers","extent_left","extent_bottom","extent_right","extent_top","_updateItemsParams","_this$options$useBase","useBasemap","basemap_webmap","basemaps","activeBaselayer","getActiveBaseLayer","_setBasemaps","defaultBasemap","addBaseLayer","baseWebmap","_step3","enabledAlreadySet","_iterator3","_loop","createOnFirstShowNgwAdapter","adapterOptions","enabled","WEBMAP_BASELAYER_ID_PREFIX","resource_id","display_name","fixUrlStr","layer_style_id","updateImageParams","layerAdapterOptions","ngwApiToAdapterOptions","_callee8","webMapItem","layers","promises","_iterator4","_step4","_loop2","_this4","_context9","promise","_context8","y","t1","all"],"sourceRoot":""}