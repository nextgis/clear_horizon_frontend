{"version":3,"sources":["webpack://clear_horizon/./src/components/Popup.ts","webpack://clear_horizon/./src/utils/index.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/CollapsiblePanel.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/WebmapTreeItem.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BaseMapsContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BookmarksContainer.ts","webpack://clear_horizon/./src/utils/formatTime.ts","webpack://clear_horizon/./src/constants.ts","webpack://clear_horizon/./src/utils/daysBehindRange.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/UserFiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/createCalendar.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/FiresContainer.ts","webpack://clear_horizon/./src/utils/layerTimestampExtremum.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/MapSettingsPanel.ts","webpack://clear_horizon/./src/components/GetCoordinateControl/GetCoordinateControl.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/i18n.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/utils.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureLabel.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureAction.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/Measure.ts","webpack://clear_horizon/./src/components/ToggleControl.ts","webpack://clear_horizon/./src/components/createMeasureControl.ts","webpack://clear_horizon/./src/components/ActionMap.ts","webpack://clear_horizon/./src/bulma.ts","webpack://clear_horizon/./src/App.ts","webpack://clear_horizon/./src/main.ts"],"names":["Popup","ngwMap","this","feature","resourceId","popupElement","document","createElement","properties","className","propertiesList","Object","entries","map","key","value","innerHTML","createPropertiesHtml","pre","appendChild","updateElementContent","then","elem","forEach","day","month","year","join","hour","minute","str","RegExp","test","prepareColumnValue","element","_getResourceItem","item","feature_layer","newProperties","fields","x","grid_visibility","property","keyname","push","display_name","newContent","getElementsByClassName","attachment","id","fid","attachmentElement","img","figure","_loadImage","width","height","src","imgElem","bulmaCarousel","_resourceItems","connector","get","options","Promise","resolve","reject","url","makeQuery","responseType","blob","reader","FileReader","readAsDataURL","onloadend","result","catch","er","LOADING_TEXT","CollapsiblePanel","status","undefined","open","_updateContainer","parent","getContainer","_container","_content","_updateContent","_toggle","_getToggleButtonHtml","_cleanContent","close","icon","title","header","_createHeader","content","leftLevel","rightLevel","toggle","onclick","html","WebmapTreeItem","layer","container","_createTreeItem","layers","input","setAttribute","item_type","layer_enabled","checked","visibility","emitter","on","ev","set","propagation","WebMap","name","children","length","tree","getChildren","treeBranch","_createTreeBranch","reverse","BaseMapsContainer","_createContainer","e","isBaseLayer","_updateBaseMapContainer","basemaps","_baseMapsContainer","_createBaseMapItem","getBaseLayers","getLayer","baseMap","control","isLayerVisible","toggleLayer","activeBaseLayer","getActiveBaseLayer","hideLayer","displayName","createTextNode","BookmarksContainer","bookmarksContainer","bookmarks","b","resource","labelField","find","label_field","fetchNgwLayerItems","items","_createBookmarkItem","bookmark","nameField","bookmarkBlock","nameValue","String","geoJson","GeoJSON","geom","lMap","mapAdapter","fitBounds","getBounds","formatTime","dt","unit","t","getTime","toISOString","DATE_RANGE_SELECT","NOW","Date","daysBehindRange","days","to","to_","now","Number","daysBehindFilter","props","timeUnit","dateField","Math","ceil","daysBehindRangeFormat","i","setInterval","UserFiresContainer","calendarWrapper","_createCalendar","insertBefore","firstChild","fires","promises","promise","onLayerAdd","all","block","_buildCalendarBlock","dateRange","defaultDateRange","extremeItems","defaultItems","min","max","startDate","endDate","opt","timedelta","onChange","l","filter","start","end","propertiesFilter","minDate","maxDate","select","querySelector","inputFrom","today","changeFunction","debounce","prop","defaultDate","datepicker","flatpickr","mode","locale","Russian","allowInput","onchange","setDate","createCalendar","firesEl","f","_createFireItem","cb","off","fire","defined","wrapper","layer_","split","replace","trim","symbol","_createSymbol","createItem","color","adapterOptions","paint","style","borderColor","backgroundColor","layerTimestampExtremum","getResourceIdOrFail","extremeReqOpt","limit","extremePromises","orderBy","ngwDate","OPTIONS","target","MapSettingsPanel","actionMap","getElementById","Error","_target","HTMLElement","sidebar","Sidebar","closeButton","position","autoPan","addTo","ngwLayers","hide","classList","remove","show","add","userFires","_createUserFiresContainer","_createNgwLayers","_createBasemapsContainer","_createBookmarksContainer","n","ngwLayer","treeContainer","bookmarkContainer","firm","firesContainer","baseMapsContainer","GetCoordinatePanelControl","EventEmitter","addLayer","radius","popup","popupOptions","createPopupContent","d","_createPopupContent","geometry","coordinates","toFixed","_layer","toggleControl","setCursor","_removeClickListener","__onMapClick","_onMapClick","clearLayerData","type","lngLat","setLayerData","emit","lng","lat","latLngStr","Clipboard","I18N","en","linearMeasurement","areaMeasurement","meter","kilometer","squareMeter","squareKilometers","ru","toRadians","deg","PI","square","pow","getDistanceString","distance","messages","numberFormat","number","decimals","thousandsSep","sign","num","abs","intPart","parseInt","j","substr","slice","MeasureLabel","latlng","Point","Util","offset","_offset","_map","_initLayout","getPanes","popupPane","_updatePosition","Browser","_zoomAnimation","_update","removeChild","latLng","_closeButton","DomUtil","_contentNode","point","latLngToLayerPoint","is3D","_containerBottom","y","_containerLeft","bottom","left","a","_latLngToNewLayerPoint","zoom","center","Layer","MeasureAction","model","overlays","points","_measureHandler","_finished","_activeMeasure","_disableMeasure","_measurementStarted","_finishMeasure","_enableMeasure","event","mouseEventToLatLng","_lastPoint","equals","_trail","_totalDistance","latlng1","latlng2","lat1","lat_dif","lat2","lng_dif","sin","cos","asin","sqrt","_addMeasurePoint","_addMarker","_addLable","_startMove","_directPath","setLatLngs","concat","contextMenu","disable","_onMouseClick","doubleClickZoom","_onMouseMove","enable","_clearOverlay","call","round","earthRadius","area","len","x1","y1","x2","y2","getArea","removeLayer","directPath","addLatLng","Polygon","weight","dashArray","fillOpacity","interactive","Polyline","measurePath","_measurePath","fillColor","_resetDirectPath","marker","CircleMarker","opacity","fill","ended","lable","enableClose","DomEvent","Handler","Measure","collapsed","console","error","_contents","_link","href","_buildItems","ele_ul","ele_li","ele_link_line","innerText","_enableMeasureLine","ele_link_area","_enableMeasureArea","_buildContainer","mouseenter","_expand","mouseleave","_collapse","disableMeasure","display","Control","StopToggleControlsCb","addStopToggleControl","stop","stopToggleControlsFor","excludeControlName","createMeasureControl","addControl","onLoad","disableSelection","enableSelection","ActionMap","mapOpt","mapOptions","NgwMap","MapAdapter","controls","minZoom","runtimeParams","UrlRuntimeParams","setNgwMap","addBaseLayer","getPaintFunctions","base","getIcon","_createLocateControl","customAttribution","_createShareControl","getNgwLayers","values","webmap","bookmark_resource","_addUserFires","_addFires","_createGetCoordinateControl","_addTreeControl","_addEventsListeners","locate","setView","locationfound","setCenter","auth","authBtn","getStatus","user","onClick","logout","window","location","reload","addEventListener","shareModal","closeModalBtn","shareModalContent","shareInput","shareControl","createButtonControl","_createShareModalContent","ShareButtons","createToggleControl","locateControl","_locate","addNgwLayer","stroke","selectable","selectedPaint","sidebarToggleBtn","isActive","contains","activeBurger","disactiveBurger","setTimeout","_promises","getFeaturePromise","cancel","_clean","params","getIdentifyItems","fetchIdentifyItem","extensions","toGeojson","geojson","data","selectOnHover","_addPhotos","featureId","cancelPromises","_highlighNgwLayer","$navbarBurgers","Array","prototype","querySelectorAll","el","dataset","$target","App","showContent","create","appContent","appLoadingContent","config","require","warn","deepmerge","bounds"],"mappings":"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","file":"main-4f064d562446814.js","sourcesContent":["// @ts-ignore\nimport bulmaCarousel from 'bulma-carousel';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { Feature, Geometry } from 'geojson';\nimport { FeatureItemAttachment, ResourceItem } from '@nextgis/ngw-connector';\nimport { prepareColumnValue } from '../utils';\n\ninterface CollectorDate {\n  year: number;\n  month: number;\n  day: number;\n}\ninterface CollectorTime {\n  hour: number;\n  minute: number;\n  second: number;\n}\n\ninterface KeyValue {\n  key: string;\n  value: any;\n}\n\ntype CollectorProperty = string | number | CollectorDate | CollectorTime;\n\nexport class Popup {\n  private ngwMap!: NgwMap;\n  private _resourceItems: { [resourceId: number]: ResourceItem } = {};\n\n  setNgwMap(ngwMap: NgwMap): void {\n    this.ngwMap = ngwMap;\n  }\n\n  createPopupContent<G extends Geometry = any, P = Record<string, any>>(\n    feature: Feature<G, P>,\n    resourceId?: number,\n  ): HTMLElement {\n    const popupElement = document.createElement('div');\n    const properties = document.createElement('div');\n    properties.className = 'properties';\n    const propertiesList: KeyValue[] = Object.entries(feature.properties).map(\n      ([key, value]) => {\n        return {\n          key,\n          value,\n        };\n      },\n    );\n    properties.innerHTML = this.createPropertiesHtml(propertiesList);\n\n    if (resourceId) {\n      const pre = document.createElement('div');\n      pre.appendChild(properties);\n      popupElement.innerHTML = 'Загрузка';\n      this.updateElementContent(pre, resourceId, feature).then(() => {\n        popupElement.innerHTML = '';\n        popupElement.appendChild(pre);\n      });\n    } else {\n      popupElement.appendChild(properties);\n    }\n    return popupElement;\n  }\n\n  createPropertiesHtml(\n    properties: Array<{ key: string; value: CollectorProperty }>,\n  ): string {\n    let elem = '';\n    properties.forEach(({ key, value }) => {\n      if (typeof value === 'object' && value) {\n        if ('year' in value) {\n          value = [value.day, value.month, value.year].join('.');\n        } else if ('hour' in value) {\n          value = [value.hour, value.minute].join(':');\n        }\n      }\n      elem += `\n      <div class=\"columns is-mobile\">\n        <div class=\"column is-two-fifths\">${key}</div>\n        <div class=\"column\">${prepareColumnValue(value)}</div>\n      </div>\n      `;\n    });\n    return elem;\n  }\n\n  async updateElementContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(\n    element: HTMLElement,\n    resourceId: number,\n    feature: Feature<G, P>,\n  ): Promise<ResourceItem> {\n    const item = await this._getResourceItem(resourceId);\n    if (item.feature_layer) {\n      const newProperties: KeyValue[] = [];\n      item.feature_layer.fields.forEach((x) => {\n        if (x.grid_visibility) {\n          const property = feature.properties[x.keyname];\n          if (property) {\n            newProperties.push({ key: x.display_name, value: property });\n          }\n        }\n      });\n      const newContent = this.createPropertiesHtml(newProperties);\n      const pre = element.getElementsByClassName('properties')[0];\n      if (pre) {\n        pre.innerHTML = newContent;\n      }\n    }\n    return item;\n  }\n\n  async _addPhotos(\n    element: HTMLElement,\n    attachment: FeatureItemAttachment[],\n    id: number,\n    fid: number,\n  ): Promise<void> {\n    const attachmentElement = document.createElement('div');\n\n    attachmentElement.className = 'carousel attachment';\n    for (const img of attachment) {\n      const width = 300;\n      const height = 300;\n      const figure = document.createElement('figure');\n      figure.className = `image is-${width}x${height}`;\n      const src = await this._loadImage(img, {\n        width,\n        height,\n        id,\n        fid,\n      });\n      const imgElem = document.createElement('img');\n      imgElem.src = src;\n      figure.appendChild(imgElem);\n      attachmentElement.appendChild(figure);\n    }\n    element.appendChild(attachmentElement);\n    bulmaCarousel.attach(attachmentElement);\n  }\n\n  private async _getResourceItem(resourceId: number) {\n    if (!this._resourceItems[resourceId]) {\n      const item = await this.ngwMap.connector.get('resource.item', null, {\n        id: resourceId,\n      });\n      this._resourceItems[resourceId] = item;\n    }\n    return this._resourceItems[resourceId];\n  }\n\n  private _loadImage(\n    img: FeatureItemAttachment,\n    options: { id: number; fid: number; width?: number; height?: number },\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const { width, height } = options;\n      const url =\n        '/api/resource/' +\n        options.id +\n        '/feature/' +\n        options.fid +\n        `/attachment/${img.id}/image` +\n        (width && height ? `?size=${width}x${height}` : '');\n      this.ngwMap.connector\n        .makeQuery(url, {}, { responseType: 'blob' })\n        .then((blob) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            resolve(reader.result as string);\n          };\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n}\n","export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function objToUrlStr(obj: { [param: string]: any }): string {\n  let str = '';\n  for (const key in obj) {\n    if (str !== '') {\n      str += '&';\n    }\n    str += key + '=' + encodeURIComponent(obj[key]);\n  }\n  return str;\n}\n\nfunction isValidUrl(str: string): boolean {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function prepareColumnValue(value: unknown): unknown | string {\n  if (typeof value === 'string') {\n    if (isValidUrl(value)) {\n      return `<a href=\"${value}\" target=\"_blank\">${value}</a>`;\n    }\n  }\n  return value;\n}\n","import './CollapsiblePanel.css';\n\ntype GetHTML = () => HTMLElement | Promise<HTMLElement>;\n\nconst LOADING_TEXT = 'Загрузка данных...';\n\nexport interface CollapsiblePanelOptions {\n  title?: string;\n  content: HTMLElement | GetHTML;\n  open?: boolean;\n  parent?: HTMLElement;\n}\n\nexport class CollapsiblePanel {\n  private readonly _container = document.createElement('div');\n  private _content?: HTMLElement;\n  private _toggle?: HTMLElement;\n  private status: boolean;\n\n  constructor(private options: CollapsiblePanelOptions) {\n    this.status = this.options.open !== undefined ? this.options.open : true;\n    this._updateContainer();\n    if (this.options.parent) {\n      this.options.parent.appendChild(this.getContainer());\n    }\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  open(): void {\n    if (\n      this._content &&\n      (!this._content.innerHTML || this._content.innerHTML === LOADING_TEXT)\n    ) {\n      this._updateContent();\n    }\n    // this._container.appendChild(this._content);\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-up');\n    }\n    this.status = true;\n  }\n\n  close(): void {\n    this._cleanContent();\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-down');\n    }\n    this.status = false;\n  }\n\n  toggle(): void {\n    if (this.status) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _getToggleButtonHtml(icon?: string) {\n    return `\n    <a class=\"button is-small\">\n    <span class=\"icon is-small\">\n      <i class=\"${icon}\"></i>\n    </span>\n    </a>\n    `;\n  }\n\n  private _updateContainer() {\n    this._container.innerHTML = '';\n    if (this.options.title) {\n      const header = this._createHeader();\n      this._container.appendChild(header);\n    }\n    const content = document.createElement('div');\n    content.innerHTML = LOADING_TEXT;\n    content.className = 'panel-content';\n    this._content = content;\n    this._container.appendChild(content);\n\n    if (this.status) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  private _createHeader() {\n    const header = document.createElement('div');\n    header.className = 'level is-mobile panel-header';\n\n    const leftLevel = document.createElement('div');\n    leftLevel.className = 'level-left';\n\n    const title = document.createElement('div');\n    title.className = 'level-item panel-header__title';\n    title.innerHTML = this.options.title || '';\n    leftLevel.appendChild(title);\n\n    const rightLevel = document.createElement('div');\n    rightLevel.className = 'level-right';\n    const toggle = document.createElement('div');\n    toggle.className = 'level-item panel-header__toggle';\n    rightLevel.appendChild(toggle);\n\n    toggle.onclick = () => {\n      this.toggle();\n    };\n    this._toggle = toggle;\n\n    header.appendChild(leftLevel);\n    header.appendChild(rightLevel);\n\n    return header;\n  }\n\n  private _cleanContent() {\n    if (this._content) {\n      this._content.innerHTML = '';\n    }\n  }\n\n  private async _updateContent() {\n    this._cleanContent();\n    if (this._content) {\n      const html =\n        typeof this.options.content === 'function'\n          ? await this.options.content()\n          : this.options.content;\n\n      this._content.appendChild(html);\n    }\n    return this._content;\n  }\n}\n","import { WebMap } from '@nextgis/webmap';\nimport { CheckProperty, ChangeEvent } from '@nextgis/item';\nimport { NgwWebmapItem, TreeGroup, TreeLayer } from '@nextgis/ngw-kit';\n\nexport class WebmapTreeItem {\n  private _container?: HTMLElement;\n\n  constructor(layer: NgwWebmapItem) {\n    const container = this._createTreeItem(layer);\n    if (container) {\n      this._container = container;\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  private _createTreeBranch(layers: NgwWebmapItem[]) {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item-children';\n    layers.forEach((x) => {\n      if (x.item) {\n        const item = this._createTreeItem(x);\n        if (item) {\n          elem.appendChild(item);\n        }\n      }\n    });\n    return elem;\n  }\n\n  private _createTreeItem(layer: NgwWebmapItem) {\n    const item: TreeGroup | TreeLayer = layer.item;\n    if (!item) {\n      return false;\n    }\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    if (item.display_name) {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'checkbox');\n      const value = item.item_type === 'layer' ? item.layer_enabled : true;\n      input.checked = value;\n\n      const visibility = layer.properties.property(\n        'visibility',\n      ) as CheckProperty;\n      if (visibility) {\n        visibility.emitter.on('change', (ev: ChangeEvent) => {\n          input.checked = ev.value;\n        });\n        input.onclick = () => {\n          visibility.set(input.checked, {\n            propagation: WebMap.keys.pressed('ctrl'),\n          });\n        };\n      }\n\n      const name = document.createElement('span');\n      name.innerHTML = item.display_name;\n\n      elem.appendChild(input);\n      elem.appendChild(name);\n    }\n\n    if (\n      item.item_type === 'group' ||\n      (item.item_type === 'root' && item.children.length)\n    ) {\n      const children = layer.tree.getChildren() as NgwWebmapItem[];\n      const treeBranch = this._createTreeBranch(children.reverse());\n      elem.appendChild(treeBranch);\n    }\n    return elem;\n  }\n}\n","import './BaseMapsContainer.css';\n\nimport { NgwMap, LayerAdapter } from '@nextgis/ngw-map';\n\nexport interface BaseMapsContainerOptions {\n  ngwMap: NgwMap;\n}\n\nexport class BaseMapsContainer {\n  private readonly ngwMap: NgwMap;\n  private _container: HTMLElement;\n  private _baseMapsContainer?: HTMLElement;\n\n  constructor(private options: BaseMapsContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n    this.ngwMap.emitter.on('layer:add', (e) => {\n      if (this.ngwMap.isBaseLayer(e)) {\n        this._updateBaseMapContainer();\n      }\n    });\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  private _createContainer() {\n    const container = document.createElement('div');\n    container.className = 'basemaps-contentainer panel-content-padding control';\n\n    const basemaps = document.createElement('div');\n    basemaps.className = 'basemaps-contentainer__layers';\n    this._baseMapsContainer = basemaps;\n    container.appendChild(basemaps);\n    this._updateBaseMapContainer();\n    return container;\n  }\n\n  private _updateBaseMapContainer() {\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.innerHTML = '';\n    }\n    // first checkbox to remove any basemap\n    this._createBaseMapItem();\n    this.ngwMap.getBaseLayers().forEach((x) => {\n      const layer = this.ngwMap.getLayer(x);\n      if (layer) {\n        this._createBaseMapItem(layer);\n      }\n    });\n  }\n\n  private _createBaseMapItem(baseMap?: LayerAdapter) {\n    const control = document.createElement('div');\n    control.className = 'control';\n    const elem = document.createElement('label');\n    elem.className = 'radio basemap-container__item';\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'radio');\n    input.setAttribute('name', 'basemap');\n\n    input.checked = !!baseMap && this.ngwMap.isLayerVisible(baseMap);\n\n    // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n    //   input.checked = ev.value;\n    // });\n    input.onclick = () => {\n      if (baseMap && baseMap.id) {\n        this.ngwMap.toggleLayer(baseMap.id, input.checked);\n      } else {\n        const activeBaseLayer = this.ngwMap.getActiveBaseLayer();\n        if (activeBaseLayer) {\n          this.ngwMap.hideLayer(activeBaseLayer);\n        }\n      }\n    };\n    const layerName = baseMap && (baseMap.name || baseMap.options.name);\n    const displayName = layerName || 'Blank';\n    const name = document.createTextNode(displayName);\n\n    elem.appendChild(input);\n\n    elem.appendChild(name);\n\n    control.appendChild(elem);\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.appendChild(control);\n    }\n  }\n}\n","import './BookmarksContainer.css';\n\nimport { Bookmark } from 'src/App';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { ResourceHierarchy, FeatureItem } from '@nextgis/ngw-connector';\nimport { GeoJSON, Map } from 'leaflet';\nimport { Polygon } from 'geojson';\n\nexport interface BookmarksContainerOptions {\n  ngwMap: NgwMap<Map>;\n  bookmarks: ResourceHierarchy[];\n}\n\nexport class BookmarksContainer {\n  private readonly ngwMap: NgwMap<Map>;\n  private _container: HTMLElement;\n\n  constructor(private options: BookmarksContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'bookmarks-contentainer panel-content-padding ';\n\n    const bookmarksContainer = document.createElement('div');\n    bookmarksContainer.className = 'bookmarks-contentainer__layers';\n    this.options.bookmarks.forEach((b) => {\n      this.ngwMap.connector\n        .get('resource.item', null, { id: b.id })\n        .then((resource) => {\n          if (resource.feature_layer) {\n            const labelField = resource.feature_layer.fields.find(\n              (x) => x.label_field,\n            );\n            if (labelField) {\n              this.ngwMap\n                .fetchNgwLayerItems<Bookmark, Polygon>({ resourceId: b.id })\n                .then((items) => {\n                  items.forEach((x) => {\n                    const elem = this._createBookmarkItem(\n                      x,\n                      labelField.keyname as keyof Bookmark,\n                    );\n                    container.appendChild(elem);\n                  });\n                });\n            }\n          }\n        });\n    });\n    container.appendChild(bookmarksContainer);\n\n    return container;\n  }\n\n  _createBookmarkItem<B extends Bookmark = Bookmark>(\n    bookmark: FeatureItem<B, Polygon>,\n    nameField: keyof B = 'name',\n  ): HTMLElement {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item bookmark';\n    const bookmarkBlock = document.createElement('div');\n    const nameValue = bookmark.fields[nameField];\n    bookmarkBlock.innerHTML = String(nameValue);\n    bookmarkBlock.onclick = () => {\n      const geoJson = new GeoJSON(bookmark.geom);\n      const lMap = this.ngwMap.mapAdapter.map;\n      lMap && lMap.fitBounds(geoJson.getBounds());\n    };\n    elem.appendChild(bookmarkBlock);\n    return elem;\n  }\n}\n","import type { TimeUnit } from '../interfaces';\n\nexport function formatTime(dt: Date, unit: TimeUnit = 'ms'): number | string {\n  const t = dt.getTime();\n  return unit === 's' ? t / 1000 : dt.toISOString();\n}\n","export const DATE_RANGE_SELECT: [days: number, text: string][] = [\n  [24, '1 день'],\n  [48, '2 дня'],\n  [72, '3 дня'],\n  [96, '4 дня'],\n  [120, '5 дней'],\n  [144, '6 дней'],\n  [168, 'неделя'],\n];\n\nexport let NOW = new Date();\n\n// update global NOW each hour for long session\nsetInterval(() => {\n  NOW = new Date();\n}, 60 * 60 * 1000);\n","import type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { FiresAdapterOptions, TimeUnit } from '../interfaces';\n\nexport function daysBehindRange(days: number, to?: Date): [Date, Date] {\n  const to_ = to ? to.getTime() : Date.now();\n  const from = to_ - Number(days) * 1000 * 60 * 60;\n  return [from, to_].map((x) => new Date(x)) as [Date, Date];\n}\n\nexport function daysBehindRangeFormat(\n  days: number,\n  unit: TimeUnit = 's',\n  to?: Date,\n): [number | string, number | string] {\n  return daysBehindRange(days, to).map((x) =>\n    unit === 'ISO'\n      ? new Date(x).toISOString()\n      : unit === 's'\n      ? Math.ceil(x.getTime()) / 1000\n      : x.getTime(),\n  ) as [number | string, number | string];\n}\n\nexport function daysBehindFilter(\n  days: number,\n  layer: FiresAdapterOptions,\n  to?: Date,\n): PropertiesFilter {\n  const { timeUnit, dateField } = layer.props;\n  const range = daysBehindRangeFormat(days, timeUnit, to);\n  return range.map((x, i) => [dateField, i ? 'le' : 'ge', x]);\n}\n","import { formatTime } from '../../utils/formatTime';\nimport { createCalendar } from './createCalendar';\nimport { FiresContainer } from './FiresContainer';\n\nimport type { ResourceAdapter } from '@nextgis/ngw-kit';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { CreateCalendarOptions } from './createCalendar';\nimport type { FiresLayerProps } from '../../interfaces';\n\nexport class UserFiresContainer extends FiresContainer {\n  protected _createContainer(): HTMLElement {\n    const container = super._createContainer();\n\n    const calendarWrapper = this._createCalendar();\n    container.insertBefore(calendarWrapper, container.firstChild);\n    return container;\n  }\n\n  private _createCalendar(): HTMLElement {\n    const calendarWrapper = document.createElement('div');\n    const fires = this.options.fires;\n\n    const promises: Promise<ResourceAdapter>[] = [];\n    fires.forEach((x) => {\n      const id = x.id;\n      if (id) {\n        const promise = new Promise<ResourceAdapter>((resolve) => {\n          this.onLayerAdd(id, resolve);\n        });\n        promises.push(promise);\n      }\n    });\n    Promise.all(promises).then((fires) => {\n      const block = this._buildCalendarBlock(\n        fires,\n        this.options.dateRange,\n        this.options.defaultDateRange,\n      );\n      calendarWrapper.appendChild(block);\n    });\n\n    return calendarWrapper;\n  }\n\n  private _buildCalendarBlock(\n    layers: ResourceAdapter[],\n    extremeItems: [Date?, Date?],\n    defaultItems: [Date?, Date?],\n  ) {\n    const [min, max]: (Date | undefined)[] = extremeItems;\n    const [startDate, endDate]: (Date | undefined)[] = defaultItems;\n    const opt: CreateCalendarOptions = {\n      timedelta: this.options.timedelta,\n      onChange: (e) => {\n        for (const l of layers) {\n          const { dateField, timeUnit } = (l.options.props ||\n            {}) as FiresLayerProps;\n          if (dateField) {\n            const filter: PropertiesFilter = [];\n            if (e.start) {\n              filter.push([dateField, 'ge', formatTime(e.start, timeUnit)]);\n            }\n            if (e.end) {\n              filter.push([dateField, 'le', formatTime(e.end, timeUnit)]);\n            }\n            if (l.propertiesFilter) {\n              l.propertiesFilter(filter);\n            }\n          }\n        }\n      },\n    };\n    if (min) {\n      opt.minDate = min;\n    }\n    if (startDate) {\n      opt.startDate = startDate;\n    }\n    if (max) {\n      opt.maxDate = max;\n    }\n    if (endDate) {\n      opt.endDate = endDate;\n    }\n    return createCalendar(opt);\n  }\n}\n","import 'flatpickr/dist/flatpickr.min.css';\nimport flatpickr from 'flatpickr';\n// import rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\nimport { Russian } from 'flatpickr/dist/l10n/ru.js';\nimport { DATE_RANGE_SELECT } from '../../constants';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { debounce } from '../../../@nextgis/packages/utils/src';\nexport interface CreateCalendarOptions {\n  maxDate?: Date;\n  minDate?: Date;\n  startDate?: Date;\n  endDate?: Date;\n  timedelta: number;\n  onChange: (val: { start?: Date; end?: Date }) => void;\n}\n\nexport function createCalendar(options: CreateCalendarOptions): HTMLElement {\n  const html = document.createElement('div');\n  html.className = 'field is-horizontal';\n  html.innerHTML = `\n    <div class=\"field\">\n        <input class=\"input input-from is-small\" type=\"text\" >\n    </div>\n\n    <div class=\"select is-small\">\n      <select class=\"select-input\">\n        ${DATE_RANGE_SELECT.map((x) => {\n          return `<option ${\n            options.timedelta === x[0] ? 'selected' : ''\n          } value=${x[0]}>${x[1]}</option>`;\n        })}\n      </select>\n    </div>\n    `;\n\n  // <div class=\"field\">\n  //     <input class=\"input input-to is-small\" type=\"text\" >\n  // </div>\n\n  const select = html.querySelector('.select-input') as HTMLSelectElement;\n  const inputFrom = html.querySelector('.input.input-from') as HTMLInputElement;\n  // const inputTo = html.querySelector('.input.input-to') as HTMLInputElement;\n  const { onChange, maxDate, minDate, startDate, endDate } = options;\n\n  const today = new Date();\n\n  const changeFunction = debounce((prop: { start: Date; end: Date }) => {\n    if (prop.start && prop.end) {\n      onChange(prop);\n    }\n  });\n\n  const defaultDate = startDate && endDate ? [startDate, endDate] : undefined;\n\n  const datepicker = flatpickr(inputFrom, {\n    mode: 'range',\n    locale: Russian,\n    allowInput: true,\n    maxDate: maxDate || today,\n    minDate,\n    defaultDate,\n    // plugins: [rangePlugin({ input: inputTo })],\n    onChange: ([start, end]) => {\n      select.value = '';\n      changeFunction({ start, end });\n    },\n  });\n\n  select.onchange = () => {\n    const [start, end] = daysBehindRange(Number(select.value), endDate);\n    datepicker.setDate([start, end]);\n    changeFunction({ start, end });\n  };\n\n  // calendar.on('select', () => {\n  //   // const val = calendar.value(); // string - string\n  //   onChange({ ...calendar.date });\n  // });\n\n  return html;\n}\n","import './FiresContainer.css';\n\nimport { defined } from '@nextgis/utils';\n\nimport type { LayerAdapter, NgwMap } from '@nextgis/ngw-map';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { ResourceAdapter, NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type { FireResource } from '../../App';\n\nexport interface FiresContainerOptions {\n  ngwMap: NgwMap;\n  fires: NgwLayerOptions<'GEOJSON'>[];\n  dateRange: [Date | undefined, Date | undefined];\n  defaultDateRange: [Date | undefined, Date | undefined];\n  timedelta: number;\n}\n\nexport abstract class FiresContainer {\n  protected readonly ngwMap: NgwMap;\n  protected _container: HTMLElement;\n\n  constructor(protected options: FiresContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  protected _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'fires-contentainer panel-content-padding ';\n\n    const firesEl = document.createElement('div');\n    firesEl.className = 'fires-contentainer__layers';\n    for (const f of this.options.fires) {\n      this._createFireItem(f, firesEl);\n    }\n    container.appendChild(firesEl);\n\n    return container;\n  }\n\n  protected onLayerAdd(id: string, cb: (layer: ResourceAdapter) => void): void {\n    const ngwMap = this.options.ngwMap;\n    const layer = ngwMap && (ngwMap.getLayer(id) as ResourceAdapter);\n    if (layer) {\n      cb(layer);\n    } else {\n      const onLayerAdd = (e: LayerAdapter) => {\n        if (e.id === id) {\n          cb(e as ResourceAdapter);\n          this.ngwMap.emitter.off('layer:add', onLayerAdd);\n        }\n      };\n      this.ngwMap.emitter.on('layer:add', onLayerAdd);\n    }\n  }\n\n  private _createFireItem(fire: FireResource, container: HTMLElement): void {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    const id = fire.id;\n    if (!defined(id)) return;\n\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = 'загрузка...';\n    container.appendChild(wrapper);\n\n    const createItem = (layer_: ResourceAdapter): void => {\n      const item = layer_.item;\n      wrapper.innerHTML = '';\n      if (item) {\n        const input = document.createElement('input');\n        input.setAttribute('type', 'checkbox');\n\n        input.checked = true;\n\n        // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n        //   input.checked = ev.value;\n        // });\n        input.onclick = () => {\n          this.ngwMap.toggleLayer(id, input.checked);\n        };\n\n        const name = document.createElement('span');\n        const displayName = item.resource.display_name.split('__')[0];\n        name.innerHTML = displayName.replace('fires', '').trim();\n        const symbol = this._createSymbol(fire);\n        elem.appendChild(input);\n        elem.appendChild(symbol);\n        elem.appendChild(name);\n        wrapper.appendChild(elem);\n      }\n    };\n    this.onLayerAdd(id, (layer) => createItem(layer));\n  }\n\n  private _createSymbol(fire: FireResource): HTMLElement {\n    const symbol = document.createElement('span');\n    symbol.className = 'item-symbol';\n    const color = (fire.adapterOptions?.paint as CirclePaint).color;\n    if (typeof color === 'string') {\n      symbol.style.color = color;\n      symbol.style.borderColor = color;\n      symbol.style.backgroundColor = color;\n    }\n    return symbol;\n  }\n}\n","import { fetchNgwLayerItems } from '@nextgis/ngw-kit';\nimport { NgwDateFormat } from '@nextgis/ngw-connector';\nimport { NOW } from '../constants';\n\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { FetchNgwItemsOptions, NgwLayerOptions } from '@nextgis/ngw-kit';\n\nexport function layerTimestampExtremum({\n  connector,\n  layer,\n}: {\n  connector: NgwConnector;\n  layer: NgwLayerOptions<'GEOJSON'>;\n}): Promise<[Date | undefined, Date | undefined]> {\n  const resource = layer.resource;\n  if (layer && resource && connector) {\n    const dateField = layer.adapterOptions?.props?.dateField || 'field_9';\n    return connector.getResourceIdOrFail(resource).then((resourceId) => {\n      const extremeReqOpt: FetchNgwItemsOptions = {\n        resourceId,\n        fields: [dateField],\n        geom: false,\n        connector,\n        limit: 1,\n      };\n      const extremePromises = [\n        fetchNgwLayerItems({ ...extremeReqOpt, orderBy: [dateField] }),\n        // fetchNgwLayerItems({ ...extremeReqOpt, orderBy: ['-' + dateField] }),\n      ];\n      return Promise.all(extremePromises).then(([minItem, maxItem]) => {\n        const [min] = [minItem, maxItem].map((items) => {\n          const item = items && items[0];\n          if (item) {\n            const ngwDate = item.fields[dateField] as NgwDateFormat;\n            if (ngwDate) {\n              return parseNgwDate(ngwDate);\n            }\n          }\n          return undefined;\n        });\n        const max = NOW;\n        return [min, max];\n      });\n    });\n  }\n  return Promise.resolve([undefined, undefined]);\n}\n\nfunction parseNgwDate(dt: NgwDateFormat): Date {\n  return new Date(dt.year, dt.month - 1, dt.day);\n}\n","import './MapSettingsPanel.css';\n// @ts-ignore\nimport Sidebar from 'leaflet-sidebar';\nimport 'leaflet-sidebar/src/L.Control.Sidebar.css';\n\nimport { NgwLayers } from '@nextgis/ngw-map';\n\nimport { ActionMap } from '../ActionMap';\nimport { CollapsiblePanel } from './CollapsiblePanel';\nimport { WebmapTreeItem } from './WebmapTreeItem';\nimport { BaseMapsContainer } from './BaseMapsContainer';\nimport { BookmarksContainer } from './BookmarksContainer';\nimport { UserFiresContainer } from './UserFiresContainer';\n\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type { MapSettingsPanelOptions } from './interfaces';\nimport { layerTimestampExtremum } from '../../utils/layerTimestampExtremum';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { NOW } from '../../constants';\n\nconst OPTIONS: Partial<MapSettingsPanelOptions> = {\n  target: 'tree',\n  // width: 300\n};\n\nexport class MapSettingsPanel {\n  options: MapSettingsPanelOptions;\n\n  sidebar: Sidebar;\n\n  private _container: HTMLElement;\n  private _target?: HTMLElement;\n\n  private ngwLayers!: NgwLayers;\n\n  constructor(private actionMap: ActionMap, options: MapSettingsPanelOptions) {\n    this.options = { ...OPTIONS, ...options };\n    if (typeof this.options.target === 'string') {\n      const target = document.getElementById(this.options.target);\n      if (target) {\n        this._target = target;\n      } else {\n        throw new Error(\n          `No element with ID #${this.options.target} in document for webmap tree`,\n        );\n      }\n    } else if (this.options.target instanceof HTMLElement) {\n      this._target = this.options.target;\n    }\n    this.sidebar = new Sidebar(this._target, {\n      closeButton: false,\n      position: 'left',\n      autoPan: false,\n    });\n    this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n\n    this.ngwLayers = this.options.ngwLayers;\n\n    this._container = this._createContainer();\n    if (!this.options.status) {\n      this.hide();\n    }\n    this._target && this._target.appendChild(this._container);\n  }\n\n  show(): void {\n    this._container.classList.remove('hidden');\n    this.sidebar.show();\n  }\n\n  hide(): void {\n    this.sidebar.hide();\n    this._container.classList.add('hidden');\n  }\n\n  private _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'tree-container';\n\n    if (this.options.width !== undefined) {\n      container.style.width = this.options.width + 'px';\n    }\n\n    if (this.options.userFires || this.options.fires) {\n      new CollapsiblePanel({\n        title: 'Пожары',\n        content: () => this._createUserFiresContainer(),\n        parent: container,\n      });\n    }\n    new CollapsiblePanel({\n      title: 'Базовые слои',\n      content: () => this._createNgwLayers(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Подложки',\n      content: () => this._createBasemapsContainer(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Закладки',\n      content: () => this._createBookmarksContainer(),\n      open: false,\n      parent: container,\n    });\n\n    return container;\n  }\n\n  private _createNgwLayers() {\n    const container = document.createElement('div');\n    container.className = 'webmap-tree-container';\n    for (const n in this.ngwLayers) {\n      const ngwLayer = this.ngwLayers[n];\n      const tree = new WebmapTreeItem(ngwLayer.layer.layer);\n      const treeContainer = tree.getContainer();\n      if (treeContainer) {\n        container.appendChild(treeContainer);\n      }\n    }\n    return container;\n  }\n\n  private _createBookmarksContainer() {\n    const container = document.createElement('div');\n    const bookmarks = this.options.bookmarks;\n    if (bookmarks) {\n      const bookmarkContainer = new BookmarksContainer({\n        bookmarks,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(bookmarkContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createUserFiresContainer() {\n    const container = document.createElement('div');\n    const { fires: firm, userFires } = this.options;\n    let dateRange: [Date | undefined, Date | undefined] = [\n      undefined,\n      undefined,\n    ];\n    if (firm || userFires) {\n      const fires: NgwLayerOptions<'GEOJSON'>[] = [];\n      if (userFires && userFires.id) {\n        fires.push(userFires);\n        dateRange = await layerTimestampExtremum({\n          layer: userFires,\n          connector: this.options.ngwMap.connector,\n        });\n      }\n      if (firm) {\n        firm.forEach((x) => fires.push(x));\n      }\n      const timedelta = this.actionMap.options.timedelta || 24;\n      const defaultDateRange = daysBehindRange(timedelta, NOW);\n      const firesContainer = new UserFiresContainer({\n        fires,\n        ngwMap: this.options.ngwMap,\n        dateRange,\n        defaultDateRange,\n        timedelta: this.actionMap.options.timedelta || 72,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createBasemapsContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.fires;\n    if (fires) {\n      const baseMapsContainer = new BaseMapsContainer({\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(baseMapsContainer.getContainer());\n    }\n    return container;\n  }\n}\n","import './GetCoordinateControl.css';\nimport '../ToggleControl.css';\nimport { ActionMap } from '../ActionMap';\nimport {\n  ToggleControlOptions,\n  MapClickEvent,\n  VectorLayerAdapter,\n  LayerDefinition,\n} from '@nextgis/ngw-map';\nimport { Clipboard } from '@nextgis/utils';\n\nimport { EventEmitter } from 'events';\nimport { Feature, Point } from 'geojson';\n\nexport interface GetCoordinatePanelControlOptions {\n  toggle?: (status: boolean) => void;\n}\n\nexport class GetCoordinatePanelControl implements ToggleControlOptions {\n  html = '<i class=\"fas fa-map-pin btn-control-icon \"></i>';\n  title = {\n    off: 'Полученить координаты с карты',\n    on: 'Выключить режим получения координат с карты',\n  };\n\n  addClass = 'toggle-control webmap-tree-control';\n  addClassOn = 'active';\n\n  status = false;\n\n  emitter = new EventEmitter();\n\n  private _toggle?: (status: boolean) => void;\n  private __onMapClick?: (e: MapClickEvent) => void;\n  private _layer!: VectorLayerAdapter;\n\n  constructor(\n    private actionMap: ActionMap,\n    options: GetCoordinatePanelControlOptions = {},\n  ) {\n    this._toggle = options.toggle;\n    this.actionMap.ngwMap\n      .addLayer('GEOJSON', {\n        id: 'show-coordinate-click',\n        visibility: true,\n        paint: { radius: 6 },\n        popup: true,\n        popupOptions: {\n          createPopupContent: (d: LayerDefinition<Feature<Point>>) => {\n            if (d.feature) {\n              return this._createPopupContent(\n                d.feature.geometry.coordinates.map((x) => x.toFixed(5)),\n              );\n            }\n          },\n        },\n      })\n      .then((layer) => {\n        if (layer) {\n          this._layer = layer;\n        }\n      });\n  }\n\n  onClick(status?: boolean): void {\n    this.toggleControl(status);\n  }\n\n  show(): void {\n    this.actionMap.ngwMap.setCursor('crosshair');\n    this._removeClickListener();\n    this.__onMapClick = (e: MapClickEvent) => this._onMapClick(e);\n    this.actionMap.ngwMap.emitter.on('click', this.__onMapClick);\n  }\n\n  hide(): void {\n    this.actionMap.ngwMap.setCursor('default');\n    this._removeClickListener();\n    this.actionMap.ngwMap.clearLayerData(this._layer);\n  }\n\n  private _removeClickListener() {\n    if (this.__onMapClick) {\n      this.actionMap.ngwMap.emitter.off('click', this.__onMapClick);\n      this.__onMapClick = undefined;\n    }\n  }\n\n  private _onMapClick(e: MapClickEvent) {\n    const feature: Feature<Point> = {\n      type: 'Feature',\n      properties: {},\n      geometry: { type: 'Point', coordinates: e.lngLat },\n    };\n    this.actionMap.ngwMap.setLayerData(this._layer, feature);\n  }\n\n  private toggleControl(status?: boolean) {\n    status = status !== undefined ? status : !this.status;\n    if (status) {\n      this.show();\n    } else {\n      this.hide();\n    }\n\n    this.status = status;\n    if (this._toggle) {\n      this._toggle(status);\n    }\n    this.emitter.emit('status', this.status);\n  }\n\n  private _createPopupContent([lng, lat]: string[]) {\n    const content = document.createElement('div');\n    const latLngStr = `${lat}, ${lng}`;\n    content.innerHTML = `\n    <span>Широта/Долгота:</span>\n    <span class=\"lat-lng-coord\"> ${latLngStr}</span>\n    <a href=\"#\" class=\"copy-to-clipboard\">\n    <i class=\"far fa-clipboard\"></i>\n    </a>`;\n    const clipBoardLink = content.getElementsByClassName(\n      'copy-to-clipboard',\n    )[0] as HTMLLinkElement;\n    clipBoardLink.onclick = () => {\n      Clipboard.copy(latLngStr);\n    };\n\n    return content;\n  }\n}\n","import type { Messages } from './interfaces';\n\nexport const I18N: Record<string, Messages> = {\n  en: {\n    linearMeasurement: 'Distance measurement',\n    areaMeasurement: 'Area measurement',\n    start: 'Start',\n    meter: 'm',\n    kilometer: 'km',\n    squareMeter: 'm²',\n    squareKilometers: 'km²',\n  },\n  ru: {\n    linearMeasurement: 'Измерение расстояния',\n    areaMeasurement: 'Измерение площади',\n    start: 'Старт',\n    meter: 'м',\n    kilometer: 'км',\n    squareMeter: 'м²',\n    squareKilometers: 'км²',\n  },\n};\n","import type { LatLng } from 'leaflet';\nimport type { Messages } from './interfaces';\n\nexport function toRadians(deg: number): number {\n  return deg * (Math.PI / 180);\n}\nexport function square(x: number): number {\n  return Math.pow(x, 2);\n}\nexport function getDistanceString(\n  distance: number,\n  messages: { meter: string; kilometer: string },\n): string {\n  return distance < 1e3\n    ? numberFormat(distance, 0) + ' ' + messages.meter\n    : numberFormat(distance / 1e3, 2) + ' ' + messages.kilometer;\n}\n\nexport function getDistance(latlng1: LatLng, latlng2: LatLng): number {\n  const earthRadius = 6378137; // radius of the earth in meter\n  const lat1 = toRadians(latlng1.lat);\n  const lat2 = toRadians(latlng2.lat);\n  const lat_dif = lat2 - lat1;\n  const lng_dif = toRadians(latlng2.lng - latlng1.lng);\n  const a =\n    square(Math.sin(lat_dif / 2)) +\n    Math.cos(lat1) * Math.cos(lat2) * square(Math.sin(lng_dif / 2));\n  return 2 * earthRadius * Math.asin(Math.sqrt(a));\n}\nexport function getAreaString(points: LatLng[], messages: Messages): string {\n  const a = Math.round(getArea(points));\n  return a < 1e6\n    ? numberFormat(a, 0) + ' ' + messages.squareMeter\n    : numberFormat(a / 1e6, 2) + ' ' + messages.squareKilometers;\n}\nexport function getArea(points: LatLng[]): number {\n  const earthRadius = 6378137;\n  let area = 0;\n  const len = points.length;\n  let x1 = points[len - 1].lng;\n  let y1 = points[len - 1].lat;\n  for (let i = 0; i < len; i++) {\n    const x2 = points[i].lng;\n    const y2 = points[i].lat;\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return Math.abs((area * earthRadius * earthRadius) / 2.0);\n}\nexport function numberFormat(number: number, decimals = 2): string {\n  const thousandsSep = ',';\n  const sign = number < 0 ? '-' : '';\n  const num = Math.abs(+number || 0);\n  const intPart = parseInt(num.toFixed(decimals), 10) + '';\n  const j = intPart.length > 3 ? intPart.length % 3 : 0;\n\n  return [\n    sign,\n    j ? intPart.substr(0, j) + thousandsSep : '',\n    intPart.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSep),\n    decimals\n      ? '.' +\n        Math.abs(num - Number(intPart))\n          .toFixed(decimals)\n          .slice(2)\n      : '',\n  ].join('');\n}\n","import { Layer, Point, Util, Browser, DomUtil, latLng } from 'leaflet';\n\nimport type { Map, LayerOptions, LatLng, ZoomAnimEvent } from 'leaflet';\n\nexport interface MeasureLabelOptions extends LayerOptions {\n  offset?: Point;\n  latlng: null | LatLng;\n  content: string;\n  className: string;\n}\n\nexport class MeasureLabel extends Layer {\n  options: MeasureLabelOptions = {\n    latlng: null,\n    content: '',\n    className: '',\n  };\n\n  protected _map!: Map;\n  private _offset = new Point(0, 30);\n  private _container?: HTMLElement;\n  private _contentNode?: HTMLElement;\n  private _closeButton?: HTMLElement;\n  private _containerBottom?: number;\n  private _containerLeft?: number;\n\n  constructor(options: MeasureLabelOptions) {\n    super(options);\n    Util.setOptions(this, options);\n    if (this.options.offset) {\n      this._offset = this.options.offset;\n    }\n  }\n  onAdd(map: Map): this {\n    this._map = map;\n    this._container || this._initLayout();\n    if (this._container) {\n      map.getPanes().popupPane.appendChild(this._container);\n    }\n    map.on('viewreset', this._updatePosition, this);\n    if (Browser.any3d) {\n      map.on('zoomanim', this._zoomAnimation, this);\n    }\n    this._update();\n    return this;\n  }\n  addTo(map: Map): this {\n    map.addLayer(this);\n    return this;\n  }\n  onRemove(map: Map): this {\n    if (this._container) {\n      map.getPanes().popupPane.removeChild(this._container);\n    }\n    map.off('viewreset', this._updatePosition, this);\n    map.off('zoomanim', this._zoomAnimation, this);\n    (this._map as any) = null;\n    return this;\n  }\n  setLatLng(latlng: LatLng): this {\n    this.options.latlng = latLng(latlng);\n    this._updatePosition();\n    return this;\n  }\n  setContent(content: string): this {\n    this.options.content = content;\n    this._updateContent();\n    return this;\n  }\n  enableClose(): HTMLElement {\n    this._closeButton = DomUtil.create('span', 'close', this._container);\n    this._closeButton.innerHTML =\n      '<svg class=\"icon\" viewBox=\"0 0 40 40\"><path stroke=\"#FF0000\" stroke-width=\"3\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" /></svg>';\n    return this._closeButton;\n  }\n  private _initLayout(): void {\n    this._container = DomUtil.create('div', this.options.className);\n    this._contentNode = DomUtil.create('div', 'content', this._container);\n  }\n  private _update(): void {\n    this._map && (this._updateContent(), this._updatePosition());\n  }\n  private _updateContent(): void {\n    if (this._contentNode && this.options.content) {\n      if (typeof this.options.content == 'string') {\n        this._contentNode.innerHTML = this.options.content;\n      } else {\n        this._contentNode.innerHTML = '';\n        this._contentNode.appendChild(this.options.content);\n      }\n    }\n  }\n  private _updatePosition(): void {\n    if (this.options.latlng && this._container) {\n      const point = this._map.latLngToLayerPoint(this.options.latlng);\n      const is3D = Browser.any3d;\n      const offset = this._offset;\n      is3D && DomUtil.setPosition(this._container, point);\n      this._containerBottom = -offset.y - (is3D ? 0 : point.y);\n      this._containerLeft = offset.x + (is3D ? 0 : point.x);\n      this._container.style.bottom = this._containerBottom + 'px';\n      this._container.style.left = this._containerLeft + 'px';\n    }\n  }\n  private _zoomAnimation(a: ZoomAnimEvent): void {\n    if (this._container) {\n      const point = (this._map as any)._latLngToNewLayerPoint(\n        this.options.latlng,\n        a.zoom,\n        a.center,\n      ) as Point;\n      DomUtil.setPosition(this._container, point);\n    }\n  }\n}\n","import {\n  Handler,\n  Util,\n  DomUtil,\n  DomEvent,\n  Polygon,\n  Polyline,\n  CircleMarker,\n} from 'leaflet';\n\nimport { I18N } from './i18n';\nimport { getAreaString, getDistance, getDistanceString } from './utils';\nimport { MeasureLabel } from './MeasureLabel';\n\nimport type { Map, LatLng, LeafletMouseEvent } from 'leaflet';\nimport {\n  DirectPath,\n  MeasureActionOptions,\n  MeasureModel,\n  Trail,\n} from './interfaces';\n\nexport class MeasureAction extends Handler {\n  options: MeasureActionOptions = {\n    color: '#FF0080',\n    model: 'distance',\n    messages: I18N['en'],\n  };\n\n  private _map: Map;\n  private _measureHandler: this;\n  private _finished: boolean;\n  private _startMove?: boolean;\n  private _measurementStarted?: boolean;\n  private _lastPoint?: LatLng;\n  private _totalDistance = 0;\n  private _trail: Trail = { overlays: [], points: [] };\n  private _directPath?: DirectPath;\n  private _measurePath?: DirectPath;\n\n  constructor(map: Map, options: MeasureActionOptions) {\n    super(map);\n    this._map = map;\n    this._measureHandler = this;\n    this._finished = false;\n    Util.setOptions(this, options);\n  }\n  setModel(model: MeasureModel): this {\n    this.options.model = model;\n    return this;\n  }\n  addHooks(): void {\n    this._activeMeasure();\n  }\n  removeHooks(): void {\n    this._disableMeasure();\n  }\n  private _activeMeasure(): void {\n    this._measureHandler._measurementStarted &&\n      this._measureHandler._finishMeasure();\n    this._measurementStarted ? this._finishMeasure() : this._enableMeasure();\n  }\n  private _onMouseClick(event: LeafletMouseEvent): void {\n    const latlng = event.latlng || this._map.mouseEventToLatLng(event as any);\n    if (this._lastPoint && latlng.equals(this._lastPoint)) {\n      return;\n    }\n    if (this._trail.points.length > 0) {\n      const points = this._trail.points;\n      points.push(latlng);\n      const length = points.length;\n      this._totalDistance += getDistance(\n        points[length - 2],\n        points[length - 1],\n      );\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          getDistanceString(this._totalDistance, this.options.messages),\n          'leaflet-measure-lable',\n        );\n      }\n    } else {\n      this._totalDistance = 0;\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          this.options.messages.start,\n          'leaflet-measure-lable',\n        );\n      }\n      this._trail.points.push(latlng);\n    }\n    this._lastPoint = latlng;\n    this._startMove = false;\n  }\n  private _onMouseMove(event: LeafletMouseEvent): void {\n    const latlng = event.latlng;\n    if (this._directPath && this._trail.points.length > 0) {\n      if (this._startMove) {\n        this._directPath.setLatLngs(this._trail.points.concat(latlng));\n      } else {\n        this._directPath.setLatLngs([latlng]);\n        this._startMove = true;\n      }\n    }\n  }\n  private _enableMeasure(): void {\n    this._trail = {\n      overlays: [],\n      points: [],\n    };\n    const map = this._map;\n    DomUtil.addClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.disable();\n    this._measurementStarted = true;\n    map.on('click', this._onMouseClick, this);\n    map.on('dblclick', this._finishMeasure, this);\n    map.on('contextmenu', this._finishMeasure, this);\n    map.doubleClickZoom.disable();\n    map.on('mousemove', this._onMouseMove, this);\n    map.fire('measure:start');\n  }\n  private _disableMeasure(): void {\n    const map = this._map;\n    DomUtil.removeClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.enable();\n    map.off('click', this._onMouseClick, this);\n    map.off('dblclick', this._finishMeasure, this);\n    map.off('contextmenu', this._finishMeasure, this);\n    map.off('mousemove', this._onMouseMove, this);\n    map.doubleClickZoom.enable();\n    this._measurementStarted = this._startMove = false;\n    if (!this._finished) {\n      this._clearOverlay.call(this);\n    }\n    map.fire('measure:stop');\n  }\n  private _finishMeasure(event?: LeafletMouseEvent): void {\n    if (this._trail.points.length > 0) {\n      if (this._trail.points.length > 1) {\n        if (this._directPath && (!event || event.type === 'contextmenu')) {\n          this._directPath.setLatLngs(this._trail.points);\n        }\n        if (this._lastPoint) {\n          if (this.options.model === 'area') {\n            this._addLable(\n              this._lastPoint,\n              getAreaString(this._trail.points, this.options.messages),\n              'leaflet-measure-lable',\n              true,\n            );\n          } else {\n            this._addLable(\n              this._lastPoint,\n              getDistanceString(this._totalDistance, this.options.messages),\n              'leaflet-measure-lable',\n              true,\n            );\n          }\n        }\n        this._directPath && this._map.removeLayer(this._directPath);\n        this._finished = true;\n      } else {\n        this._clearOverlay.call(this);\n      }\n    }\n    this.disable();\n  }\n  private _resetDirectPath(latlng: LatLng): void {\n    if (!this._directPath) {\n      let directPath: DirectPath;\n      if (this.options.model === 'area') {\n        directPath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          fillOpacity: 0,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          interactive: false,\n        });\n        directPath = polyline;\n      }\n      this._map.addLayer(directPath);\n      this._trail.overlays.push(directPath);\n      this._directPath = directPath;\n    } else {\n      this._directPath.addLatLng(latlng);\n    }\n  }\n  private _addMeasurePoint(latlng: LatLng): void {\n    if (!this._measurePath) {\n      let measurePath: DirectPath;\n      if (this.options.model === 'area') {\n        measurePath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          fillColor: this.options.color,\n          fillOpacity: 0.5,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          interactive: false,\n        });\n        measurePath = polyline;\n      }\n      this._map.addLayer(measurePath);\n      this._trail.overlays.push(measurePath);\n      this._measurePath = measurePath;\n    } else {\n      this._measurePath.addLatLng(latlng);\n    }\n    this._resetDirectPath(latlng);\n  }\n  private _addMarker(latLng: LatLng): void {\n    const marker = new CircleMarker(latLng, {\n      color: this.options.color,\n      opacity: 1,\n      weight: 1,\n      fillColor: '#FFFFFF',\n      fill: true,\n      fillOpacity: 1,\n      radius: 3,\n      interactive: false,\n    });\n    this._map.addLayer(marker);\n    this._trail.overlays.push(marker);\n  }\n  private _addLable(\n    latlng: LatLng,\n    content: string,\n    className: string,\n    ended?: boolean,\n  ): void {\n    const lable = new MeasureLabel({\n      latlng,\n      content,\n      className,\n    });\n    this._map.addLayer(lable);\n    this._trail.overlays.push(lable);\n    if (ended) {\n      const closeButton = lable.enableClose();\n      DomEvent.on(\n        closeButton,\n        'click',\n        (e) => {\n          DomEvent.stopPropagation(e);\n          this._clearOverlay();\n        },\n        this,\n      );\n    }\n  }\n  private _clearOverlay(): void {\n    const overlays = this._trail.overlays;\n    let i = 0,\n      length;\n    for (length = overlays.length; i < length; i++) {\n      this._map.removeLayer(overlays[i]);\n    }\n  }\n}\n","import { Control, DomUtil, DomEvent, Util } from 'leaflet';\nimport { I18N } from './i18n';\nimport { MeasureAction } from './MeasureAction';\n\nimport type { Map, Handler } from 'leaflet';\nimport type { MeasureOptions } from './interfaces';\n\nexport class Measure extends Control {\n  options: MeasureOptions = {\n    position: 'topright',\n    title: 'Measurement',\n    collapsed: true,\n    color: '#FF0080',\n    locale: 'en',\n    messages: I18N['en'],\n  };\n\n  private _map?: Map;\n  private _container?: HTMLElement;\n  private _link?: HTMLAnchorElement;\n  private _contents?: HTMLElement;\n  private _measureHandler?: Handler;\n\n  constructor(options: Partial<MeasureOptions>) {\n    super(options);\n    Util.setOptions(this, options);\n    const locale = options.locale;\n    if (locale && locale !== 'en') {\n      const messages = I18N[locale];\n      if (messages) {\n        this.options.messages = { ...I18N, ...messages };\n      } else {\n        console.error(\n          'Measure control has no messages for ' +\n            this.options.locale +\n            ' locale',\n        );\n      }\n    }\n  }\n  onAdd(map: Map): HTMLElement {\n    this._map = map;\n    return this._container || this._initLayout();\n  }\n  disableMeasure(): void {\n    if (this._measureHandler) {\n      this._measureHandler.disable();\n      this._measureHandler = undefined;\n    }\n  }\n  private _buildContainer(): HTMLElement {\n    this._container = DomUtil.create(\n      'div',\n      'leaflet-control-measure leaflet-bar leaflet-control',\n    );\n\n    this._contents = DomUtil.create(\n      'div',\n      'leaflet-measure-contents',\n      this._container,\n    );\n\n    this._link = DomUtil.create('a', 'leaflet-measure-toggle', this._container);\n    this._link.title = this.options.title || 'Measurement';\n    this._link.href = '#';\n\n    // if (this.options.title) {\n    //   var title = DomUtil.create('h3', '', this._contents);\n    //   title.innerText = this.options.title;\n    // }\n\n    this._buildItems();\n    return this._container;\n  }\n  private _buildItems(): void {\n    const ele_ul = DomUtil.create(\n      'ul',\n      'leaflet-measure-actions',\n      this._contents,\n    );\n    let ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_line = DomUtil.create('a', 'start', ele_li);\n    ele_link_line.innerText = this.options.messages.linearMeasurement;\n    ele_link_line.href = '#';\n    DomEvent.disableClickPropagation(ele_link_line);\n    DomEvent.on(ele_link_line, 'click', this._enableMeasureLine, this);\n\n    ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_area = DomUtil.create(\n      'a',\n      'leaflet-measure-action start',\n      ele_li,\n    );\n    ele_link_area.innerText = this.options.messages.areaMeasurement;\n    ele_link_area.href = '#';\n    DomEvent.disableClickPropagation(ele_link_area);\n    DomEvent.on(ele_link_area, 'click', this._enableMeasureArea, this);\n  }\n  private _initLayout(): HTMLElement {\n    const container = this._buildContainer();\n    DomEvent.disableClickPropagation(container);\n    DomEvent.disableScrollPropagation(container);\n    if (this.options.collapsed) {\n      DomEvent.on(\n        container,\n        {\n          mouseenter: this._expand,\n          mouseleave: this._collapse,\n        },\n        this,\n      );\n    } else {\n      this._expand();\n    }\n    return container;\n  }\n  private _enableMeasureLine(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'distance',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _enableMeasureArea(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'area',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _expand(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'none';\n      DomUtil.addClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n  private _collapse(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'block';\n      DomUtil.removeClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n}\n","export const StopToggleControlsCb: Array<{\n  name: string;\n  stop: () => void;\n}> = [];\n\nexport function addStopToggleControl(name: string, stop: () => void): void {\n  StopToggleControlsCb.push({ name, stop });\n}\n\nexport function stopToggleControlsFor(excludeControlName?: string): void {\n  StopToggleControlsCb.forEach((x) => {\n    if (x.name !== excludeControlName) {\n      x.stop();\n    }\n  });\n}\n","import { Measure } from '../assets/Leaflet.Measure-master/src';\nimport '../assets/Leaflet.Measure-master/src/leaflet.measure.css';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nimport type { Map } from 'leaflet';\n\nexport function createMeasureControl(ngwMap: NgwMap): void {\n  // @ts-ignore\n  const control = new Measure({ locale: 'ru' });\n  ngwMap.addControl(control, 'top-left');\n\n  ngwMap.onLoad().then(() => {\n    const map = ngwMap.mapAdapter.map as Map;\n    if (map) {\n      map.on('measure:start', () => {\n        stopToggleControlsFor('measure');\n        ngwMap.disableSelection();\n      });\n      map.on('measure:stop', () => {\n        ngwMap.setCursor('default');\n        ngwMap.enableSelection();\n      });\n    }\n    addStopToggleControl('measure', () => {\n      control.disableMeasure();\n    });\n  });\n}\n","import 'leaflet/dist/leaflet.css';\nimport 'bulma-carousel/dist/css/bulma-carousel.min.css';\nimport './ActionMap.css';\n\nimport { Control, Map, Layer } from 'leaflet';\n// @ts-ignore\nimport ShareButtons from 'share-buttons/dist/share-buttons';\n\nimport {\n  NgwMap,\n  ToggleControl,\n  NgwLayers,\n  LocationEvent,\n  VectorAdapterOptions,\n} from '@nextgis/ngw-map';\nimport { CirclePaint } from '@nextgis/paint';\nimport {\n  NgwIdentify,\n  NgwLayerOptions,\n  getIdentifyItems,\n} from '@nextgis/ngw-kit';\nimport { getIcon } from '@nextgis/icons';\nimport MapAdapter from '@nextgis/leaflet-map-adapter';\nimport UrlRuntimeParams from '@nextgis/url-runtime-params';\nimport { QmsAdapterOptions } from '@nextgis/qms-kit';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { ResourceHierarchy } from '@nextgis/ngw-connector';\n\nimport { AppOptions } from '../App';\nimport { Auth } from './Auth/Auth';\nimport { Popup } from './Popup';\nimport { MapSettingsPanel } from './MapSettingsPanel/MapSettingsPanel';\nimport { GetCoordinatePanelControl } from './GetCoordinateControl/GetCoordinateControl';\nimport { createMeasureControl } from './createMeasureControl';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\nimport { daysBehindFilter } from '../utils/daysBehindRange';\nimport { FiresAdapterOptions } from '../interfaces';\nimport { NOW } from '../constants';\n\nexport class ActionMap {\n  ngwMap!: NgwMap<Map, Layer, any>;\n\n  tree?: MapSettingsPanel;\n  treeControl?: Control & ToggleControl;\n\n  authControl?: Control & ToggleControl;\n  popup: Popup;\n\n  private _promises: { [name: string]: CancelablePromise<any> } = {};\n\n  constructor(public options: Partial<AppOptions>) {\n    this.popup = new Popup();\n  }\n\n  async create(opt: Partial<AppOptions>): Promise<void> {\n    // const auth = new Auth(opt.mapOptions);\n    const mapOpt = { ...opt.mapOptions };\n    // try {\n    //   await auth.login();\n    //   mapOpt.connector = auth.connector;\n    // } catch (er) {\n    //   // cancel login\n    // }\n\n    const { basemaps, fires, userFires } = opt;\n\n    const ngwMap = new NgwMap<Map, Layer>({\n      mapAdapter: new MapAdapter(),\n      controls: [],\n      minZoom: 4,\n      runtimeParams: [new UrlRuntimeParams()],\n      ...mapOpt,\n    });\n\n    this.ngwMap = ngwMap;\n\n    ngwMap.setCursor('default');\n    this.popup.setNgwMap(ngwMap);\n\n    if (basemaps) {\n      ngwMap.onLoad().then(() =>\n        basemaps.forEach((x, i) => {\n          ngwMap.addBaseLayer<any, QmsAdapterOptions>('QMS', {\n            ...x,\n            visibility: i === 0,\n          });\n        }),\n      );\n    }\n    ngwMap.getPaintFunctions = { base: getIcon };\n\n    ngwMap.addControl('ZOOM', 'top-left');\n    this._createLocateControl();\n    ngwMap.addControl('ATTRIBUTION', 'bottom-right', {\n      customAttribution: [\n        '<a href=\"https://nextgis.com\" target=\"_blank\">©NextGIS</a>',\n      ],\n    });\n    createMeasureControl(ngwMap);\n    this._createShareControl();\n    // await this._createAuthControl(auth);\n    // this.ngwMap.addControl(this.authControl, 'top-right');\n\n    const ngwLayers = await ngwMap.getNgwLayers();\n    const bookmarks: ResourceHierarchy[] = [];\n    Object.values(ngwLayers).forEach((x) => {\n      const bookmark =\n        x.layer.item &&\n        x.layer.item.webmap &&\n        x.layer.item.webmap.bookmark_resource;\n      if (bookmark) {\n        bookmarks.push(bookmark);\n      }\n    });\n\n    await this._addUserFires(opt.userFires);\n    await this._addFires(opt.fires);\n    this._createGetCoordinateControl();\n\n    this._addTreeControl({\n      ngwLayers,\n      fires,\n      userFires,\n      bookmarks,\n    });\n\n    this._addEventsListeners();\n  }\n\n  private _locate() {\n    const locationfound = (e: LocationEvent) => {\n      const lngLat = e.lngLat;\n      this.ngwMap.setCenter(lngLat);\n    };\n\n    this.ngwMap.locate({ setView: false }, { locationfound });\n  }\n\n  private async _createAuthControl(auth: Auth) {\n    const authBtn = document.getElementsByClassName(\n      'js-auth-btn',\n    )[0] as HTMLElement;\n    const getStatus = () => {\n      return !!(this.ngwMap.connector && this.ngwMap.connector.user);\n    };\n    const onClick = () => {\n      auth.logout();\n      window.location.reload();\n    };\n    authBtn.innerHTML = getStatus() ? 'Выйти' : 'Войти';\n    authBtn.style.display = 'block';\n    authBtn.addEventListener('click', onClick);\n  }\n\n  private _createShareControl() {\n    const shareModal = document.getElementsByClassName('js-modal')[0];\n    const closeModalBtn = document.getElementsByClassName('js-modal-close')[0];\n    const shareModalContent = document.getElementsByClassName(\n      'js-share-modal-content',\n    )[0];\n    const shareInput = document.getElementsByClassName(\n      'js-share-input',\n    )[0] as HTMLInputElement;\n    const showModal = () => {\n      const href = location.href;\n      const html = this._createShareModalContent(href);\n      shareInput.value = href;\n      shareModalContent.innerHTML = html;\n      ShareButtons.update();\n      shareModal.classList.add('is-active');\n    };\n    const closeModal = () => {\n      shareModalContent.innerHTML = '';\n      shareModal.classList.remove('is-active');\n    };\n    closeModalBtn.addEventListener('click', () => {\n      closeModal();\n    });\n\n    const shareControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-share-alt btn-control-icon \"></i>',\n      onClick() {\n        showModal();\n      },\n    });\n    this.ngwMap.addControl(shareControl, 'bottom-right');\n  }\n\n  private async _createGetCoordinateControl() {\n    const control = new GetCoordinatePanelControl(this, {\n      toggle: (status) => {\n        if (status) {\n          stopToggleControlsFor('coordinate');\n          this.ngwMap.disableSelection();\n        } else {\n          this.ngwMap.enableSelection();\n        }\n      },\n    });\n    const toggleControl = await this.ngwMap.createToggleControl(control);\n    this.ngwMap.addControl(toggleControl, 'top-left');\n    addStopToggleControl('coordinate', () => toggleControl.onClick(false));\n  }\n\n  private _createLocateControl() {\n    const onClick = () => this._locate();\n    const locateControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-location-arrow btn-control-icon\"></i>',\n      title: 'Найти меня на карте',\n      onClick,\n    });\n    this.ngwMap.addControl(locateControl, 'top-left');\n  }\n\n  private _createShareModalContent(url: string) {\n    const social = [\n      { id: 'tw', name: 'Twitter', icon: 'fab fa-twitter' },\n      { id: 'vk', name: 'VK', icon: 'fab fa-vk' },\n      { id: 'fb', name: 'Facebook', icon: 'fab fa-facebook-square' },\n    ];\n\n    const html = `<div class=\"buttons share-btn js-share-btn\" data-url=\"${url}\" data-title=\"\" data-desc=\"\">\n      ${social\n        .map(\n          (x) => `<a class=\"button is-primary\" data-id=\"${x.id}\">\n                    <span class=\"icon\">\n                        <i class=\"${x.icon}\"></i>\n                    </span>\n                    <span>${x.name}</span>\n                </a>`,\n        )\n        .join('')}\n    </div>`;\n    return html;\n  }\n\n  private async _addUserFires(\n    x?: NgwLayerOptions<'GEOJSON'>,\n    adapterOptions?: VectorAdapterOptions,\n  ) {\n    if (x) {\n      const paint =\n        x.adapterOptions && x.adapterOptions.paint\n          ? (x.adapterOptions.paint as CirclePaint)\n          : {};\n      this.ngwMap.addNgwLayer({\n        resource: x.resource,\n        id: x.id,\n        adapterOptions: {\n          ...x.adapterOptions,\n          paint: {\n            ...paint,\n            stroke: true,\n            fillOpacity: 0.6,\n            radius: 5,\n          },\n          selectable: true,\n          selectedPaint: {\n            ...paint,\n            stroke: true,\n            fillOpacity: 0.9,\n            radius: 7,\n          },\n          ...adapterOptions,\n          propertiesFilter: daysBehindFilter(\n            this.options.timedelta || 24,\n            x.adapterOptions as FiresAdapterOptions,\n            NOW,\n          ),\n        },\n      });\n    }\n  }\n\n  private async _addFires(fires?: NgwLayerOptions<'GEOJSON'>[]) {\n    if (fires) {\n      for (const x of fires) {\n        await this._addUserFires(x);\n      }\n    }\n  }\n\n  private async _addTreeControl(opt: {\n    ngwLayers: NgwLayers;\n    fires?: NgwLayerOptions<'GEOJSON'>[];\n    userFires?: NgwLayerOptions<'GEOJSON'>;\n    bookmarks?: ResourceHierarchy[];\n  }) {\n    const sidebarToggleBtn = document.getElementsByClassName('js-sidebar')[0];\n\n    const isActive = () => sidebarToggleBtn.classList.contains('is-active');\n    const activeBurger = () => sidebarToggleBtn.classList.add('is-active');\n    const disactiveBurger = () =>\n      sidebarToggleBtn.classList.remove('is-active');\n\n    await this.ngwMap.onLoad();\n\n    this.tree = new MapSettingsPanel(this, {\n      ...opt,\n      ngwMap: this.ngwMap,\n    });\n\n    const toggle = (status?: boolean) => {\n      status = status !== undefined ? status : isActive();\n      if (status) {\n        stopToggleControlsFor('tree');\n        this.tree && this.tree.show();\n        activeBurger();\n      } else {\n        this.tree && this.tree.hide();\n        disactiveBurger();\n      }\n    };\n    sidebarToggleBtn.addEventListener('click', () => {\n      toggle();\n    });\n    setTimeout(() => {\n      toggle();\n    }, 500);\n    addStopToggleControl('tree', () => toggle(false));\n  }\n\n  private _clean() {\n    if (\n      this._promises.getFeaturePromise &&\n      this._promises.getFeaturePromise.cancel\n    ) {\n      this._promises.getFeaturePromise.cancel();\n    }\n    this.ngwMap.removeLayer('highlight');\n  }\n\n  private _highlighNgwLayer(e: NgwIdentify) {\n    this._clean();\n    const paramsList = getIdentifyItems(e);\n    const params = paramsList[0];\n    if (params) {\n      const resourceId = params.resourceId;\n      this.ngwMap\n        .fetchIdentifyItem(e, {\n          extensions: ['attachment'],\n        })\n        .then((item) => {\n          item &&\n            item.toGeojson().then((geojson) => {\n              this.ngwMap.addLayer('GEOJSON', {\n                id: 'highlight',\n                data: geojson,\n                visibility: true,\n                paint: { color: 'green', stroke: true, fillOpacity: '0.8' },\n                // selectable: true,\n                selectOnHover: true,\n                popup: true,\n                // popupOnSelect: true,\n                popupOptions: {\n                  createPopupContent: (e) => {\n                    if (e.feature) {\n                      const element = this.popup.createPopupContent(\n                        e.feature,\n                        resourceId,\n                      );\n                      if (\n                        item.extensions.attachment &&\n                        item.extensions.attachment.length\n                      ) {\n                        this.popup._addPhotos(\n                          element,\n                          item.extensions.attachment,\n                          params.resourceId,\n                          params.featureId,\n                        );\n                      }\n                      return element;\n                    }\n                  },\n                },\n              });\n            });\n        });\n    }\n  }\n\n  private _addEventsListeners() {\n    this.ngwMap.emitter.on('click', () => {\n      this.ngwMap.cancelPromises('identify', 'select');\n    });\n    this.ngwMap.emitter.on('ngw:select', (e) => e && this._highlighNgwLayer(e));\n  }\n}\n","document.addEventListener('DOMContentLoaded', () => {\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(\n    document.querySelectorAll('.navbar-burger'),\n    0,\n  );\n\n  // Check if there are any navbar burgers\n  if ($navbarBurgers.length > 0) {\n    // Add a click event on each of them\n    $navbarBurgers.forEach((el) => {\n      el.addEventListener('click', () => {\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target);\n\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n        el.classList.toggle('is-active');\n        if ($target) {\n          $target.classList.toggle('is-active');\n        }\n      });\n    });\n  }\n});\n","import { ActionMap } from './components/ActionMap';\nimport './bulma';\n\nimport type { NgwMapOptions } from '@nextgis/ngw-map';\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\n\nexport interface ConnectionOptions {\n  acsUrl?: string;\n  authUrl: string;\n  showUrl: string;\n}\n\nexport type FireResource = NgwLayerOptions<'GEOJSON'>;\n\nexport interface Bookmark {\n  id: string;\n  name: string;\n}\n\nexport type Bookmarks = Bookmark[];\n\nexport interface BaseLayer {\n  name?: string;\n  qmsId: number;\n}\n\nexport interface AppOptions {\n  mapOptions?: NgwMapOptions;\n  fires?: NgwLayerOptions<'GEOJSON'>[];\n  userFires?: NgwLayerOptions<'GEOJSON'>;\n  basemaps?: BaseLayer[];\n  timedelta: number;\n}\n\nexport class App {\n  actionMap: ActionMap;\n\n  constructor(public options: Partial<AppOptions> = {}) {\n    this.actionMap = new ActionMap(options);\n  }\n\n  async create(options?: AppOptions): Promise<void> {\n    this.options = { ...this.options, ...options };\n    // show app html after js and css loading and before map drawing start\n    this.showContent();\n    await this.actionMap.create(this.options);\n  }\n\n  showContent(): void {\n    const appContent = document.getElementById('app');\n    const appLoadingContent = document.getElementById('app-loading');\n    if (appLoadingContent) {\n      appLoadingContent.style.display = 'none';\n    }\n    if (appContent) {\n      appContent.style.display = 'block';\n    }\n  }\n}\n","// import 'core-js';\nimport 'regenerator-runtime/runtime';\nimport { deepmerge } from '@nextgis/utils';\nimport { App, AppOptions } from './App';\n\nimport './style/style.scss';\n\nlet config: Partial<AppOptions> = {};\ntry {\n  config = require('../config').default;\n} catch (er) {\n  console.warn('Config file is not funded, run with default settings');\n}\n\nconst OPTIONS: AppOptions = {\n  mapOptions: {\n    target: 'map',\n    bounds: [36.59, 43.385, 49.374, 50.214],\n  },\n  timedelta: 72,\n};\nconst options = deepmerge(OPTIONS, config);\nconst app = new App(options);\n\napp.create();\n"],"sourceRoot":""}