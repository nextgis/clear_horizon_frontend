{"version":3,"sources":["webpack://clear_horizon/./config.ts","webpack://clear_horizon/./src/bulma.ts","webpack://clear_horizon/./src/components/Popup.ts","webpack://clear_horizon/./src/Utils.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/CollapsiblePanel.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/WebmapTreeItem.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/UserFiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/FiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BaseMapsContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BookmarksContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/MapSettingsPanel.ts","webpack://clear_horizon/./src/components/GetCoordinateControl/GetCoordinateControl.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/leaflet.measure.js","webpack://clear_horizon/./src/components/ToggleControl.ts","webpack://clear_horizon/./src/components/ActionMap.ts","webpack://clear_horizon/./src/components/createMeasureControl.ts","webpack://clear_horizon/./src/App.ts","webpack://clear_horizon/./src/main.ts"],"names":["mapOptions","target","bounds","baseUrl","resources","resource","fit","adapterOptions","selectable","basemaps","qmsId","userFires","id","paint","color","fires","document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","dataset","$target","getElementById","classList","toggle","ngwMap","_resourceItems","setNgwMap","this","createPopupContent","feature","resourceId","popupElement","createElement","properties","className","propertiesList","Object","keys","map","k","key","value","innerHTML","createPropertiesHtml","appendChild","updateElementContent","then","elem","day","month","year","join","hour","minute","str","RegExp","test","prepareColumnValue","element","_getResourceItem","item","feature_layer","fields","x","grid_visibility","property","keyname","push","display_name","newContent","pre","getElementsByClassName","_addPhotos","attachment","fid","attachmentElement","img","figure","_loadImage","width","height","src","imgElem","connector","get","options","Promise","resolve","reject","url","makeQuery","responseType","blob","reader","FileReader","readAsDataURL","onloadend","result","catch","er","_container","status","undefined","open","_updateContainer","parent","getContainer","_content","_updateContent","_toggle","_getToggleButtonHtml","close","_cleanContent","icon","title","header","_createHeader","content","leftLevel","rightLevel","onclick","html","layer","container","_createTreeItem","_createTreeBranch","layers","setAttribute","item_type","layer_enabled","checked","emitter","on","ev","set","propagation","children","tree","getChildren","treeBranch","reverse","_createContainer","f","_createFireItem","fire","getLayer","toggleLayer","displayName","split","replace","trim","symbol","_createSymbol","style","borderColor","backgroundColor","SELECT","selector","_createSelector","insertBefore","firstChild","label","createTextNode","option","text","onchange","propertiesFilter","Math","floor","Date","now","Number","UserFiresContainer","e","isBaseLayer","_updateBaseMapContainer","_baseMapsContainer","_createBaseMapItem","getBaseLayers","baseMap","control","input","isLayerVisible","hideLayer","getActiveBaseLayer","name","bookmarksContainer","bookmarks","b","labelField","find","label_field","getNgwLayerItems","items","_createBookmarkItem","bookmark","nameField","bookmarkBlock","geoJson","GeoJSON","geom","mapAdapter","fitBounds","getBounds","OPTIONS","actionMap","Error","_target","HTMLElement","sidebar","closeButton","position","autoPan","addTo","ngwLayers","hide","show","remove","add","CollapsiblePanel","_createUserFiresContainer","_createFiresContainer","_createNgwLayers","_createBasemapsContainer","_createBookmarksContainer","n","ngwLayer","treeContainer","WebmapTreeItem","bookmarkContainer","BookmarksContainer","firesContainer","FiresContainer","baseMapsContainer","BaseMapsContainer","off","addClass","addClassOn","EventEmitter","addLayer","visibility","radius","popup","popupOptions","d","_createPopupContent","geometry","coordinates","toFixed","_layer","onClick","toggleControl","setCursor","_removeClickListener","__onMapClick","_onMapClick","clearLayerData","type","latLng","lng","lat","setLayerData","emit","latLngStr","I18N","en","linearMeasurement","areaMeasurement","start","meter","kilometer","squareMeter","squareKilometers","ru","Measure","collapsed","locale","messages","initialize","console","error","onAdd","_map","_initLayout","disableMeasure","_measureHandler","disable","_buildContainer","_contents","_link","href","_buildItems","ele_ul","ele_li","ele_link_line","innerText","_enableMeasureLine","ele_link_area","_enableMeasureArea","mouseenter","_expand","mouseleave","_collapse","MeasureAction","model","enable","display","offset","latlng","_panes","popupPane","_updatePosition","_zoomAnimation","_update","onRemove","removeChild","viewreset","zoomanim","setLatLng","setContent","_contentNode","point","latLngToLayerPoint","is3D","_containerBottom","y","_containerLeft","bottom","left","a","_latLngToNewLayerPoint","zoom","center","enableClose","_closeButton","_finished","setModel","addHooks","_activeMeasure","removeHooks","_disableMeasure","_measurementStarted","_finishMeasure","_enableMeasure","_onMouseClick","event","mouseEventToLatLng","_lastPoint","equals","_trail","points","_totalDistance","_getDistance","_addMeasurePoint","_addMarker","_addLable","_getDistanceString","_startMove","_onMouseMove","_directPath","setLatLngs","concat","overlays","contextMenu","doubleClickZoom","_clearOverlay","_getAreaString","removeLayer","_resetDirectPath","addLatLng","weight","dashArray","fillOpacity","interactive","_measurePath","fillColor","marker","opacity","fill","ended","lable","i","toRadians","deg","PI","square","pow","distance","_numberFormat","latlng1","latlng2","lat1","lat2","lat_dif","lng_dif","sin","cos","asin","sqrt","round","_getArea","earthRadius","area","len","x1","y1","x2","y2","abs","number","decimals","sign","num","intPart","parseInt","j","substr","StopToggleControlsCb","addStopToggleControl","stop","stopToggleControlsFor","excludeControlName","_promises","Popup","create","opt","mapOpt","controls","minZoom","runtimeParams","onLoad","addBaseLayer","getPaintFunctions","base","addControl","_createLocateControl","customAttribution","disableSelection","enableSelection","_createShareControl","getNgwLayers","values","webmap","bookmark_resource","_addUserFires","_addFires","_createGetCoordinateControl","_addTreeControl","_addEventsListeners","_locate","locate","setView","locationfound","lngLat","setCenter","_createAuthControl","auth","authBtn","getStatus","user","logout","window","location","reload","shareModal","closeModalBtn","shareModalContent","shareInput","shareControl","createButtonControl","_createShareModalContent","GetCoordinatePanelControl","createToggleControl","locateControl","addNgwLayer","stroke","selectedPaint","timedelta","sidebarToggleBtn","isActive","contains","activeBurger","disactiveBurger","MapSettingsPanel","setTimeout","_clean","getFeaturePromise","cancel","_highlighNgwLayer","params","fetchIdentifyItem","extensions","toGeojson","geojson","data","selectOnHover","featureId","cancelPromises","ActionMap","config","warn","App"],"mappings":"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","file":"main-9a8b795aa5ceaac.js","sourcesContent":["import { AppOptions } from './src/App';\n\nconst options: AppOptions = {\n  mapOptions: {\n    target: 'map',\n    bounds: [45, 46, 47, 49],\n    // baseUrl: location.protocol + '//clear-horizon.nextgis.com',\n    baseUrl: 'https://clear-horizon.nextgis.com',\n    resources: [\n      {\n        resource: 1,\n        fit: true,\n        adapterOptions: { selectable: true },\n      },\n    ],\n  },\n  basemaps: [\n    {\n      qmsId: 1135,\n    },\n    {\n      qmsId: 487,\n    },\n  ],\n  userFires: {\n    resource: 'userfirepoints',\n    id: 'USERFIRE',\n    adapterOptions: { paint: { color: 'rgb(100,20,40)' } },\n  },\n  fires: [\n    {\n      resource: 103,\n      id: 'MODIS',\n      adapterOptions: { paint: { color: 'red' } },\n    },\n    {\n      resource: 105,\n      id: 'VIIRS',\n      adapterOptions: { paint: { color: 'orange' } },\n    },\n  ],\n};\n\nexport default options;\n","document.addEventListener('DOMContentLoaded', () => {\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(\n    document.querySelectorAll('.navbar-burger'),\n    0,\n  );\n\n  // Check if there are any navbar burgers\n  if ($navbarBurgers.length > 0) {\n    // Add a click event on each of them\n    $navbarBurgers.forEach((el) => {\n      el.addEventListener('click', () => {\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target);\n\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n        el.classList.toggle('is-active');\n        if ($target) {\n          $target.classList.toggle('is-active');\n        }\n      });\n    });\n  }\n});\n","import bulmaCarousel from 'bulma-carousel';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { Feature, Geometry } from 'geojson';\nimport { FeatureItemAttachment, ResourceItem } from '@nextgis/ngw-connector';\nimport { prepareColumnValue } from '../Utils';\n\ninterface CollectorDate {\n  year: number;\n  month: number;\n  day: number;\n}\ninterface CollectorTime {\n  hour: number;\n  minute: number;\n  second: number;\n}\n\ntype CollectorProperty = string | number | CollectorDate | CollectorTime;\n\nexport class Popup {\n  private _resourceItems: { [resourceId: number]: ResourceItem } = {};\n\n  constructor(private ngwMap: NgwMap) {}\n\n  setNgwMap(ngwMap: NgwMap): void {\n    this.ngwMap = ngwMap;\n  }\n\n  createPopupContent<G extends Geometry = any, P = any>(\n    feature: Feature<G, P>,\n    resourceId?: number,\n  ): HTMLElement {\n    const popupElement = document.createElement('div');\n    const properties = document.createElement('div');\n    properties.className = 'properties';\n    const propertiesList = Object.keys(feature.properties).map((k) => {\n      return {\n        key: k,\n        value: feature.properties[k],\n      };\n    });\n    properties.innerHTML = this.createPropertiesHtml(propertiesList);\n\n    if (resourceId) {\n      const pre = document.createElement('div');\n      pre.appendChild(properties);\n      popupElement.innerHTML = 'Загрузка';\n      this.updateElementContent(pre, resourceId, feature).then(() => {\n        popupElement.innerHTML = '';\n        popupElement.appendChild(pre);\n      });\n    } else {\n      popupElement.appendChild(properties);\n    }\n    return popupElement;\n  }\n\n  createPropertiesHtml(\n    properties: Array<{ key: string; value: CollectorProperty }>,\n  ): string {\n    let elem = '';\n    properties.forEach(({ key, value }) => {\n      if (typeof value === 'object' && value) {\n        if ('year' in value) {\n          value = [value.day, value.month, value.year].join('.');\n        } else if ('hour' in value) {\n          value = [value.hour, value.minute].join(':');\n        }\n      }\n      elem += `\n      <div class=\"columns is-mobile\">\n        <div class=\"column is-two-fifths\">${key}</div>\n        <div class=\"column\">${prepareColumnValue(value)}</div>\n      </div>\n      `;\n    });\n    return elem;\n  }\n\n  async updateElementContent<G extends Geometry = any, P = any>(\n    element: HTMLElement,\n    resourceId: number,\n    feature: Feature<G, P>,\n  ): Promise<ResourceItem> {\n    const item = await this._getResourceItem(resourceId);\n    if (item.feature_layer) {\n      const newProperties = [];\n      item.feature_layer.fields.forEach((x) => {\n        if (x.grid_visibility) {\n          const property = feature.properties[x.keyname];\n          if (property) {\n            newProperties.push({ key: x.display_name, value: property });\n          }\n        }\n      });\n      const newContent = this.createPropertiesHtml(newProperties);\n      const pre = element.getElementsByClassName('properties')[0];\n      if (pre) {\n        pre.innerHTML = newContent;\n      }\n    }\n    return item;\n  }\n\n  async _addPhotos(\n    element: HTMLElement,\n    attachment: FeatureItemAttachment[],\n    id: number,\n    fid: number,\n  ): Promise<void> {\n    const attachmentElement = document.createElement('div');\n\n    attachmentElement.className = 'carousel attachment';\n    for (const img of attachment) {\n      const width = 300;\n      const height = 300;\n      const figure = document.createElement('figure');\n      figure.className = `image is-${width}x${height}`;\n      const src = await this._loadImage(img, {\n        width,\n        height,\n        id,\n        fid,\n      });\n      const imgElem = document.createElement('img');\n      imgElem.src = src;\n      figure.appendChild(imgElem);\n      attachmentElement.appendChild(figure);\n    }\n    element.appendChild(attachmentElement);\n    bulmaCarousel.attach(attachmentElement);\n  }\n\n  private async _getResourceItem(resourceId: number) {\n    if (!this._resourceItems[resourceId]) {\n      const item = await this.ngwMap.connector.get('resource.item', null, {\n        id: resourceId,\n      });\n      this._resourceItems[resourceId] = item;\n    }\n    return this._resourceItems[resourceId];\n  }\n\n  private _loadImage(\n    img: FeatureItemAttachment,\n    options: { id: number; fid: number; width?: number; height?: number },\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const { width, height } = options;\n      const url =\n        '/api/resource/' +\n        options.id +\n        '/feature/' +\n        options.fid +\n        `/attachment/${img.id}/image` +\n        (width && height ? `?size=${width}x${height}` : '');\n      this.ngwMap.connector\n        .makeQuery(url, {}, { responseType: 'blob' })\n        .then((blob) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            resolve(reader.result as string);\n          };\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n}\n","export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function objToUrlStr(obj: { [param: string]: any }): string {\n  let str = '';\n  for (const key in obj) {\n    if (str !== '') {\n      str += '&';\n    }\n    str += key + '=' + encodeURIComponent(obj[key]);\n  }\n  return str;\n}\n\nfunction isValidUrl(str: string): boolean {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function prepareColumnValue(value: unknown): unknown | string {\n  if (typeof value === 'string') {\n    if (isValidUrl(value)) {\n      return `<a href=\"${value}\" target=\"_blank\">${value}</a>`;\n    }\n  }\n  return value;\n}\n","import './CollapsiblePanel.css';\n\ntype GetHTML = () => HTMLElement;\n\nexport interface CollapsiblePanelOptions {\n  title?: string;\n  content: HTMLElement | GetHTML;\n  open?: boolean;\n  parent?: HTMLElement;\n}\n\nexport class CollapsiblePanel {\n  private readonly _container = document.createElement('div');\n  private _content: HTMLElement;\n  private _toggle?: HTMLElement;\n  private status: boolean;\n\n  constructor(private options: CollapsiblePanelOptions) {\n    this.status = this.options.open !== undefined ? this.options.open : true;\n    this._updateContainer();\n    if (this.options.parent) {\n      this.options.parent.appendChild(this.getContainer());\n    }\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  open(): void {\n    if (!this._content.innerHTML) {\n      this._updateContent();\n    }\n    // this._container.appendChild(this._content);\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-up');\n    }\n    this.status = true;\n  }\n\n  close(): void {\n    this._cleanContent();\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-down');\n    }\n    this.status = false;\n  }\n\n  toggle(): void {\n    if (this.status) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _getToggleButtonHtml(icon?: string) {\n    return `\n    <a class=\"button is-small\">\n    <span class=\"icon is-small\">\n      <i class=\"${icon}\"></i>\n    </span>\n    </a>\n    `;\n  }\n\n  private _updateContainer() {\n    this._container.innerHTML = '';\n    if (this.options.title) {\n      const header = this._createHeader();\n      this._container.appendChild(header);\n    }\n    const content = document.createElement('div');\n    content.className = 'panel-content';\n    this._content = content;\n    this._container.appendChild(content);\n\n    if (this.status) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  private _createHeader() {\n    const header = document.createElement('div');\n    header.className = 'level is-mobile panel-header';\n\n    const leftLevel = document.createElement('div');\n    leftLevel.className = 'level-left';\n\n    const title = document.createElement('div');\n    title.className = 'level-item panel-header__title';\n    title.innerHTML = this.options.title;\n    leftLevel.appendChild(title);\n\n    const rightLevel = document.createElement('div');\n    rightLevel.className = 'level-right';\n    const toggle = document.createElement('div');\n    toggle.className = 'level-item panel-header__toggle';\n    rightLevel.appendChild(toggle);\n\n    toggle.onclick = () => {\n      this.toggle();\n    };\n    this._toggle = toggle;\n\n    header.appendChild(leftLevel);\n    header.appendChild(rightLevel);\n\n    return header;\n  }\n\n  private _cleanContent() {\n    this._content.innerHTML = '';\n  }\n\n  private _updateContent() {\n    this._cleanContent();\n    const html =\n      typeof this.options.content === 'function'\n        ? this.options.content()\n        : this.options.content;\n\n    this._content.appendChild(html);\n    return this._content;\n  }\n}\n","import { WebMap } from '@nextgis/webmap';\nimport { CheckProperty, ChangeEvent } from '@nextgis/item';\nimport { NgwWebmapItem, TreeGroup, TreeLayer } from '@nextgis/ngw-kit';\n\nexport class WebmapTreeItem {\n  private _container?: HTMLElement;\n\n  constructor(layer: NgwWebmapItem) {\n    const container = this._createTreeItem(layer);\n    if (container) {\n      this._container = container;\n    }\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  private _createTreeBranch(layers: NgwWebmapItem[]) {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item-children';\n    layers.forEach((x) => {\n      if (x.item) {\n        const item = this._createTreeItem(x);\n        if (item) {\n          elem.appendChild(item);\n        }\n      }\n    });\n    return elem;\n  }\n\n  private _createTreeItem(layer: NgwWebmapItem) {\n    const item: TreeGroup | TreeLayer = layer.item;\n    if (!item) {\n      return false;\n    }\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    if (item.display_name) {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'checkbox');\n      const value = item.item_type === 'layer' ? item.layer_enabled : true;\n      input.checked = value;\n\n      const visibility = layer.properties.property(\n        'visibility',\n      ) as CheckProperty;\n      if (visibility) {\n        visibility.emitter.on('change', (ev: ChangeEvent) => {\n          input.checked = ev.value;\n        });\n        input.onclick = () => {\n          visibility.set(input.checked, {\n            propagation: WebMap.keys.pressed('ctrl'),\n          });\n        };\n      }\n\n      const name = document.createElement('span');\n      name.innerHTML = item.display_name;\n\n      elem.appendChild(input);\n      elem.appendChild(name);\n    }\n\n    if (\n      item.item_type === 'group' ||\n      (item.item_type === 'root' && item.children.length)\n    ) {\n      const children = layer.tree.getChildren() as NgwWebmapItem[];\n      const treeBranch = this._createTreeBranch(children.reverse());\n      elem.appendChild(treeBranch);\n    }\n    return elem;\n  }\n}\n","import './FiresContainer.css';\n\nimport { FireResource } from 'src/App';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { CirclePaint } from '@nextgis/paint';\nimport { ResourceAdapter, NgwLayerOptions } from '@nextgis/ngw-kit';\n\nexport interface FiresContainerOptions {\n  ngwMap: NgwMap;\n  fires: NgwLayerOptions<'GEOJSON'>[];\n}\n\nexport class UserFiresContainer {\n  protected readonly ngwMap: NgwMap;\n  protected _container: HTMLElement;\n\n  constructor(protected options: FiresContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'fires-contentainer panel-content-padding ';\n\n    const fires = document.createElement('div');\n    fires.className = 'fires-contentainer__layers';\n    this.options.fires.forEach((f) => {\n      this._createFireItem(f, fires);\n    });\n    container.appendChild(fires);\n\n    return container;\n  }\n\n  _createFireItem(fire: FireResource, container: HTMLElement): void {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    const layer = this.ngwMap.getLayer(fire.id) as ResourceAdapter;\n    if (layer && layer.item) {\n      const item = layer.item;\n      const input = document.createElement('input');\n      input.setAttribute('type', 'checkbox');\n\n      input.checked = true;\n\n      // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n      //   input.checked = ev.value;\n      // });\n      input.onclick = () => {\n        this.ngwMap.toggleLayer(fire.id, input.checked);\n      };\n\n      const name = document.createElement('span');\n\n      const displayName = item.resource.display_name.split('__')[0];\n\n      name.innerHTML = displayName.replace('fires', '').trim();\n\n      const symbol = this._createSymbol(fire);\n\n      elem.appendChild(input);\n      elem.appendChild(symbol);\n      elem.appendChild(name);\n\n      container.appendChild(elem);\n    }\n  }\n\n  _createSymbol(fire: FireResource): HTMLElement {\n    const symbol = document.createElement('span');\n    symbol.className = 'item-symbol';\n    const color = (fire.adapterOptions?.paint as CirclePaint).color;\n    if (typeof color === 'string') {\n      symbol.style.color = color;\n      symbol.style.borderColor = color;\n      symbol.style.backgroundColor = color;\n    }\n    return symbol;\n  }\n}\n","import './FiresContainer.css';\n\nimport { VectorResourceAdapter } from '@nextgis/ngw-kit';\nimport { UserFiresContainer } from './UserFiresContainer';\n\nconst SELECT = [\n  ['24', '24 часа'],\n  ['48', '48 часов'],\n  ['72', '72 часа'],\n  ['168', 'неделя'],\n];\n\nexport class FiresContainer extends UserFiresContainer {\n  _createContainer(): HTMLElement {\n    const container = super._createContainer();\n\n    const selector = this._createSelector();\n    container.insertBefore(selector, container.firstChild);\n\n    return container;\n  }\n\n  private _createSelector() {\n    const elem = document.createElement('div');\n    const label = document.createElement('label');\n\n    label.appendChild(document.createTextNode('Просмотр термоточек: '));\n    const selector = document.createElement('select');\n\n    SELECT.forEach((x) => {\n      const option = document.createElement('option');\n      option.value = x[0];\n      option.text = x[1];\n      selector.appendChild(option);\n    });\n\n    selector.onchange = () => {\n      this.options.fires.forEach((x) => {\n        const layer = this.ngwMap.getLayer(x.id) as VectorResourceAdapter;\n        layer.propertiesFilter([\n          [\n            'timestamp',\n            'ge',\n            Math.floor(Date.now() / 1000) - Number(selector.value) * 3600,\n          ],\n        ]);\n      });\n    };\n\n    label.appendChild(selector);\n    elem.appendChild(label);\n    return elem;\n  }\n}\n","import './BaseMapsContainer.css';\n\nimport { NgwMap, LayerAdapter } from '@nextgis/ngw-map';\n\nexport interface BaseMapsContainerOptions {\n  ngwMap: NgwMap;\n}\n\nexport class BaseMapsContainer {\n  private readonly ngwMap: NgwMap;\n  private _container: HTMLElement;\n  private _baseMapsContainer: HTMLElement;\n\n  constructor(private options: BaseMapsContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n    this.ngwMap.emitter.on('layer:add', (e) => {\n      if (this.ngwMap.isBaseLayer(e)) {\n        this._updateBaseMapContainer();\n      }\n    });\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  private _createContainer() {\n    const container = document.createElement('div');\n    container.className = 'basemaps-contentainer panel-content-padding control';\n\n    const basemaps = document.createElement('div');\n    basemaps.className = 'basemaps-contentainer__layers';\n    this._baseMapsContainer = basemaps;\n    container.appendChild(basemaps);\n    this._updateBaseMapContainer();\n    return container;\n  }\n\n  private _updateBaseMapContainer() {\n    this._baseMapsContainer.innerHTML = '';\n    // first checkbox to remove any basemap\n    this._createBaseMapItem();\n    this.ngwMap.getBaseLayers().forEach((x) => {\n      const layer = this.ngwMap.getLayer(x);\n      if (layer) {\n        this._createBaseMapItem(layer);\n      }\n    });\n  }\n\n  private _createBaseMapItem(baseMap?: LayerAdapter) {\n    const control = document.createElement('div');\n    control.className = 'control';\n    const elem = document.createElement('label');\n    elem.className = 'radio basemap-container__item';\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'radio');\n    input.setAttribute('name', 'basemap');\n\n    input.checked = this.ngwMap.isLayerVisible(baseMap);\n\n    // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n    //   input.checked = ev.value;\n    // });\n    input.onclick = () => {\n      if (baseMap) {\n        this.ngwMap.toggleLayer(baseMap.id, input.checked);\n      } else {\n        this.ngwMap.hideLayer(this.ngwMap.getActiveBaseLayer());\n      }\n    };\n    const layerName = baseMap && (baseMap.name || baseMap.options.name);\n    const displayName = layerName || 'Blank';\n    const name = document.createTextNode(displayName);\n\n    elem.appendChild(input);\n\n    elem.appendChild(name);\n\n    control.appendChild(elem);\n\n    this._baseMapsContainer.appendChild(control);\n  }\n}\n","import './BookmarksContainer.css';\n\nimport { Bookmark } from 'src/App';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { ResourceHierarchy, FeatureItem } from '@nextgis/ngw-connector';\nimport { GeoJSON, Map } from 'leaflet';\nimport { Polygon } from 'geojson';\n\nexport interface BookmarksContainerOptions {\n  ngwMap: NgwMap<Map>;\n  bookmarks: ResourceHierarchy[];\n}\n\nexport class BookmarksContainer {\n  private readonly ngwMap: NgwMap<Map>;\n  private _container: HTMLElement;\n\n  constructor(private options: BookmarksContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'bookmarks-contentainer panel-content-padding ';\n\n    const bookmarksContainer = document.createElement('div');\n    bookmarksContainer.className = 'bookmarks-contentainer__layers';\n    this.options.bookmarks.forEach((b) => {\n      this.ngwMap.connector\n        .get('resource.item', null, { id: b.id })\n        .then((resource) => {\n          const labelField = resource.feature_layer.fields.find(\n            (x) => x.label_field,\n          );\n          this.ngwMap.getNgwLayerItems({ resourceId: b.id }).then((items) => {\n            items.forEach((x: FeatureItem<Bookmark, Polygon>) => {\n              const elem = this._createBookmarkItem(x, labelField.keyname);\n              container.appendChild(elem);\n            });\n          });\n        });\n    });\n    container.appendChild(bookmarksContainer);\n\n    return container;\n  }\n\n  _createBookmarkItem(\n    bookmark: FeatureItem<Bookmark, Polygon>,\n    nameField = 'name',\n  ): HTMLElement {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item bookmark';\n    const bookmarkBlock = document.createElement('div');\n    bookmarkBlock.innerHTML = bookmark.fields[nameField];\n    bookmarkBlock.onclick = () => {\n      const geoJson = new GeoJSON(bookmark.geom);\n      const lMap = this.ngwMap.mapAdapter.map;\n      lMap.fitBounds(geoJson.getBounds());\n    };\n    elem.appendChild(bookmarkBlock);\n    return elem;\n  }\n}\n","import './MapSettingsPanel.css';\n\nimport Sidebar from 'leaflet-sidebar';\nimport 'leaflet-sidebar/src/L.Control.Sidebar.css';\n\nimport { MapSettingsPanelOptions } from './interfaces';\n\nimport { NgwLayers } from '@nextgis/ngw-map';\n\nimport { CollapsiblePanel } from './CollapsiblePanel';\nimport { WebmapTreeItem } from './WebmapTreeItem';\nimport { FiresContainer } from './FiresContainer';\nimport { BaseMapsContainer } from './BaseMapsContainer';\nimport { BookmarksContainer } from './BookmarksContainer';\nimport { ActionMap } from '../ActionMap';\nimport { UserFiresContainer } from './UserFiresContainer';\n\nconst OPTIONS: MapSettingsPanelOptions = {\n  target: 'tree',\n  // width: 300\n};\n\nexport class MapSettingsPanel {\n  options: MapSettingsPanelOptions;\n\n  sidebar: Sidebar;\n\n  private _container: HTMLElement;\n  private _target: HTMLElement;\n\n  private ngwLayers!: NgwLayers;\n\n  constructor(private actionMap: ActionMap, options: MapSettingsPanelOptions) {\n    this.options = { ...OPTIONS, ...options };\n    if (typeof this.options.target === 'string') {\n      const target = document.getElementById(this.options.target);\n      if (target) {\n        this._target = target;\n      } else {\n        throw new Error(\n          `No element with ID #${this.options.target} in document for webmap tree`,\n        );\n      }\n    } else if (this.options.target instanceof HTMLElement) {\n      this._target = this.options.target;\n    }\n    this.sidebar = new Sidebar(this._target, {\n      closeButton: false,\n      position: 'left',\n      autoPan: false,\n    });\n    this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n\n    this.ngwLayers = this.options.ngwLayers;\n\n    this._container = this._createContainer();\n    if (!this.options.status) {\n      this.hide();\n    }\n    this._target.appendChild(this._container);\n  }\n\n  show(): void {\n    this._container.classList.remove('hidden');\n    this.sidebar.show();\n  }\n\n  hide(): void {\n    this.sidebar.hide();\n    this._container.classList.add('hidden');\n  }\n\n  private _createContainer() {\n    const container = document.createElement('div');\n    container.className = 'tree-container';\n\n    if (this.options.width !== undefined) {\n      container.style.width = this.options.width + 'px';\n    }\n\n    if (this.options.userFires) {\n      new CollapsiblePanel({\n        title: 'Пожары',\n        content: () => this._createUserFiresContainer(),\n        parent: container,\n      });\n    }\n    if (this.options.fires) {\n      new CollapsiblePanel({\n        title: 'Термоточки (FIRMS)',\n        content: () => this._createFiresContainer(),\n        parent: container,\n      });\n    }\n    new CollapsiblePanel({\n      title: 'Базовые слои',\n      content: () => this._createNgwLayers(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Подложки',\n      content: () => this._createBasemapsContainer(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Закладки',\n      content: () => this._createBookmarksContainer(),\n      open: false,\n      parent: container,\n    });\n\n    return container;\n  }\n\n  private _createNgwLayers() {\n    const container = document.createElement('div');\n    container.className = 'webmap-tree-container';\n    for (const n in this.ngwLayers) {\n      const ngwLayer = this.ngwLayers[n];\n      const tree = new WebmapTreeItem(ngwLayer.layer.layer);\n      const treeContainer = tree.getContainer();\n      if (treeContainer) {\n        container.appendChild(treeContainer);\n      }\n    }\n    return container;\n  }\n\n  private _createBookmarksContainer() {\n    const container = document.createElement('div');\n    const bookmarks = this.options.bookmarks;\n    if (bookmarks) {\n      const bookmarkContainer = new BookmarksContainer({\n        bookmarks,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(bookmarkContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createUserFiresContainer() {\n    const container = document.createElement('div');\n    const fires = [this.options.userFires];\n    if (fires) {\n      const firesContainer = new UserFiresContainer({\n        fires,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createFiresContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.fires;\n    if (fires) {\n      const firesContainer = new FiresContainer({\n        fires,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createBasemapsContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.fires;\n    if (fires) {\n      const baseMapsContainer = new BaseMapsContainer({\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(baseMapsContainer.getContainer());\n    }\n    return container;\n  }\n}\n","import './GetCoordinateControl.css';\nimport '../ToggleControl.css';\nimport { ActionMap } from '../ActionMap';\nimport {\n  ToggleControlOptions,\n  MapClickEvent,\n  VectorLayerAdapter,\n  LayerDefinition,\n} from '@nextgis/ngw-map';\nimport { Clipboard } from '@nextgis/utils';\n\nimport { EventEmitter } from 'events';\nimport { Feature, Point } from 'geojson';\n\nexport interface GetCoordinatePanelControlOptions {\n  toggle?: (status: boolean) => void;\n}\n\nexport class GetCoordinatePanelControl implements ToggleControlOptions {\n  html = '<i class=\"fas fa-map-pin btn-control-icon \"></i>';\n  title = {\n    off: 'Полученить координаты с карты',\n    on: 'Выключить режим получения координат с карты',\n  };\n\n  addClass = 'toggle-control webmap-tree-control';\n  addClassOn = 'active';\n\n  status = false;\n\n  emitter = new EventEmitter();\n\n  private _toggle?: (status: boolean) => void;\n  private __onMapClick?: (e: MapClickEvent) => void;\n  private _layer!: VectorLayerAdapter;\n\n  constructor(\n    private actionMap: ActionMap,\n    options?: GetCoordinatePanelControlOptions,\n  ) {\n    this._toggle = options.toggle;\n    this.actionMap.ngwMap\n      .addLayer('GEOJSON', {\n        id: 'show-coordinate-click',\n        visibility: true,\n        paint: { radius: 6 },\n        popup: true,\n        popupOptions: {\n          createPopupContent: (d: LayerDefinition<Feature<Point>>) => {\n            return this._createPopupContent(\n              d.feature.geometry.coordinates.map((x) => x.toFixed(5)),\n            );\n          },\n        },\n      })\n      .then((layer) => {\n        if (layer) {\n          this._layer = layer;\n        }\n      });\n  }\n\n  onClick(status: boolean): void {\n    this.toggleControl(status);\n  }\n\n  show(): void {\n    this.actionMap.ngwMap.setCursor('crosshair');\n    this._removeClickListener();\n    this.__onMapClick = (e: MapClickEvent) => this._onMapClick(e);\n    this.actionMap.ngwMap.emitter.on('click', this.__onMapClick);\n  }\n\n  hide(): void {\n    this.actionMap.ngwMap.setCursor('default');\n    this._removeClickListener();\n    this.actionMap.ngwMap.clearLayerData(this._layer);\n  }\n\n  private _removeClickListener() {\n    if (this.__onMapClick) {\n      this.actionMap.ngwMap.emitter.off('click', this.__onMapClick);\n      this.__onMapClick = null;\n    }\n  }\n\n  private _onMapClick(e: MapClickEvent) {\n    const feature: Feature<Point> = {\n      type: 'Feature',\n      properties: {},\n      geometry: { type: 'Point', coordinates: [e.latLng.lng, e.latLng.lat] },\n    };\n    this.actionMap.ngwMap.setLayerData(this._layer, feature);\n  }\n\n  private toggleControl(status?: boolean) {\n    status = status !== undefined ? status : !this.status;\n    if (status) {\n      this.show();\n    } else {\n      this.hide();\n    }\n\n    this.status = status;\n    if (this._toggle) {\n      this._toggle(status);\n    }\n    this.emitter.emit('status', this.status);\n  }\n\n  private _createPopupContent([lng, lat]: string[]) {\n    const content = document.createElement('div');\n    const latLngStr = `${lat}, ${lng}`;\n    content.innerHTML = `\n    <span>Широта/Долгота:</span>\n    <span class=\"lat-lng-coord\"> ${latLngStr}</span>\n    <a href=\"#\" class=\"copy-to-clipboard\">\n    <i class=\"far fa-clipboard\"></i>\n    </a>`;\n    const clipBoardLink = content.getElementsByClassName(\n      'copy-to-clipboard',\n    )[0] as HTMLLinkElement;\n    clipBoardLink.onclick = () => {\n      Clipboard.copy(latLngStr);\n    };\n\n    return content;\n  }\n}\n","import L from 'leaflet';\nconst I18N = {\n  en: {\n    linearMeasurement: 'Distance measurement',\n    areaMeasurement: 'Area measurement',\n    start: 'Start',\n    meter: 'm',\n    kilometer: 'km',\n    squareMeter: 'm²',\n    squareKilometers: 'km²',\n  },\n  ru: {\n    linearMeasurement: 'Измерение расстояния',\n    areaMeasurement: 'Измерение площади',\n    start: 'Старт',\n    meter: 'м',\n    kilometer: 'км',\n    squareMeter: 'м²',\n    squareKilometers: 'км²',\n  },\n};\n\nconst Measure = L.Control.extend({\n  options: {\n    position: 'topright',\n    title: 'Measurement',\n    collapsed: true,\n    color: '#FF0080',\n    locale: 'en',\n    messages: I18N['en'],\n  },\n  initialize: function (options) {\n    L.Util.setOptions(this, options);\n    if (options.locale !== 'en') {\n      const messages = I18N[options.locale];\n      if (messages) {\n        this.options.messages = { ...I18N, ...messages };\n      } else {\n        console.error(\n          'Measure control has no messages for ' +\n            this.options.locale +\n            ' locale',\n        );\n      }\n    }\n  },\n  onAdd: function (map) {\n    this._map = map;\n    this._container || this._initLayout();\n    return this._container;\n  },\n  disableMeasure: function () {\n    if (this._measureHandler) {\n      this._measureHandler.disable();\n      this._measureHandler = undefined;\n    }\n  },\n  _buildContainer: function () {\n    this._container = L.DomUtil.create(\n      'div',\n      'leaflet-control-measure leaflet-bar leaflet-control',\n    );\n\n    this._contents = L.DomUtil.create(\n      'div',\n      'leaflet-measure-contents',\n      this._container,\n    );\n\n    this._link = L.DomUtil.create(\n      'a',\n      'leaflet-measure-toggle',\n      this._container,\n    );\n    this._link.title = this.options.title || 'Measurement';\n    this._link.href = '#';\n\n    // if (this.options.title) {\n    //   var title = L.DomUtil.create('h3', '', this._contents);\n    //   title.innerText = this.options.title;\n    // }\n\n    this._buildItems();\n  },\n  _buildItems: function () {\n    var ele_ul = L.DomUtil.create(\n      'ul',\n      'leaflet-measure-actions',\n      this._contents,\n    );\n    var ele_li = L.DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    var ele_link_line = L.DomUtil.create('a', 'start', ele_li);\n    ele_link_line.innerText = this.options.messages.linearMeasurement;\n    ele_link_line.href = '#';\n    L.DomEvent.disableClickPropagation(ele_link_line);\n    L.DomEvent.on(ele_link_line, 'click', this._enableMeasureLine, this);\n\n    ele_li = L.DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    var ele_link_area = L.DomUtil.create(\n      'a',\n      'leaflet-measure-action start',\n      ele_li,\n    );\n    ele_link_area.innerText = this.options.messages.areaMeasurement;\n    ele_link_area.href = '#';\n    L.DomEvent.disableClickPropagation(ele_link_area);\n    L.DomEvent.on(ele_link_area, 'click', this._enableMeasureArea, this);\n  },\n  _initLayout: function () {\n    this._buildContainer();\n    L.DomEvent.disableClickPropagation(this._container);\n    L.DomEvent.disableScrollPropagation(this._container);\n    if (this.options.collapsed) {\n      L.DomEvent.on(\n        this._container,\n        {\n          mouseenter: this._expand,\n          mouseleave: this._collapse,\n        },\n        this,\n      );\n    } else {\n      this._expand();\n    }\n  },\n  _enableMeasureLine: function (ev) {\n    L.DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    this._measureHandler = new MeasureAction(this._map, {\n      model: 'distance',\n      color: this.options.color,\n      messages: this.options.messages,\n    });\n    this._measureHandler.enable();\n  },\n  _enableMeasureArea: function (ev) {\n    L.DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    this._measureHandler = new MeasureAction(this._map, {\n      model: 'area',\n      color: this.options.color,\n      messages: this.options.messages,\n    });\n    this._measureHandler.enable();\n  },\n  _expand: function () {\n    this._link.style.display = 'none';\n    L.DomUtil.addClass(this._container, 'leaflet-measure-expanded');\n    return this;\n  },\n  _collapse: function () {\n    this._link.style.display = 'block';\n    L.DomUtil.removeClass(this._container, 'leaflet-measure-expanded');\n    return this;\n  },\n});\n\nL.MeasureLable = L.Layer.extend({\n  options: {\n    offset: new L.Point(0, 30),\n    latlng: null,\n    content: '',\n    className: '',\n  },\n  initialize: function (options) {\n    L.Util.setOptions(this, options);\n  },\n  onAdd: function (map) {\n    this._map = map;\n    this._container || this._initLayout();\n    map._panes.popupPane.appendChild(this._container);\n    map.on('viewreset', this._updatePosition, this);\n    if (L.Browser.any3d) {\n      map.on('zoomanim', this._zoomAnimation, this);\n    }\n    this._update();\n  },\n  addTo: function (map) {\n    map.addLayer(this);\n    return this;\n  },\n  onRemove: function (map) {\n    map._panes.popupPane.removeChild(this._container);\n    map.off(\n      {\n        viewreset: this._updatePosition,\n        zoomanim: this._zoomAnimation,\n      },\n      this,\n    );\n    this._map = null;\n  },\n  setLatLng: function (latlng) {\n    this.options.latlng = L.latLng(latlng);\n    this._updatePosition();\n    return this;\n  },\n  setContent: function (content) {\n    this.options.content = content;\n    this._updateContent();\n    return this;\n  },\n  _initLayout: function () {\n    this._container = L.DomUtil.create('div', this.options.className);\n    this._contentNode = L.DomUtil.create('div', 'content', this._container);\n  },\n  _update: function () {\n    this._map && (this._updateContent(), this._updatePosition());\n  },\n  _updateContent: function () {\n    if (this.options.content) {\n      if (typeof this.options.content == 'string') {\n        this._contentNode.innerHTML = this.options.content;\n      } else {\n        this._contentNode.innerHTML = '';\n        this._contentNode.appendChild(this.options.content);\n      }\n    }\n  },\n  _updatePosition: function () {\n    var point = this._map.latLngToLayerPoint(this.options.latlng),\n      is3D = L.Browser.any3d,\n      offset = this.options.offset;\n    is3D && L.DomUtil.setPosition(this._container, point);\n    this._containerBottom = -offset.y - (is3D ? 0 : point.y);\n    this._containerLeft = offset.x + (is3D ? 0 : point.x);\n    this._container.style.bottom = this._containerBottom + 'px';\n    this._container.style.left = this._containerLeft + 'px';\n  },\n  _zoomAnimation: function (a) {\n    a = this._map._latLngToNewLayerPoint(this.options.latlng, a.zoom, a.center);\n    L.DomUtil.setPosition(this._container, a);\n  },\n  enableClose: function () {\n    this._closeButton = L.DomUtil.create('span', 'close', this._container);\n    this._closeButton.innerHTML =\n      '<svg class=\"icon\" viewBox=\"0 0 40 40\"><path stroke=\"#FF0000\" stroke-width=\"3\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" /></svg>';\n    return this._closeButton;\n  },\n});\n\nconst MeasureAction = L.Handler.extend({\n  options: {\n    color: '#FF0080',\n    model: 'distance', // area or distance\n    messages: I18N['en'],\n  },\n\n  initialize: function (map, options) {\n    this._map = map;\n    this._map._measureHandler = this;\n    this._finished = false;\n    L.Util.setOptions(this, options);\n  },\n  setModel: function (model) {\n    this.options.model = model;\n    return this;\n  },\n  addHooks: function () {\n    this._activeMeasure();\n  },\n  removeHooks: function () {\n    this._disableMeasure();\n  },\n  _activeMeasure: function () {\n    this._map._measureHandler._measurementStarted &&\n      this._map._measureHandler._finishMeasure();\n    this._measurementStarted ? this._finishMeasure() : this._enableMeasure();\n  },\n  _onMouseClick: function (event) {\n    var latlng = event.latlng || this._map.mouseEventToLatLng(event);\n    if (this._lastPoint && latlng.equals(this._lastPoint)) {\n      return;\n    }\n    if (this._trail.points.length > 0) {\n      var points = this._trail.points;\n      points.push(latlng);\n      var length = points.length;\n      this._totalDistance += this._getDistance(\n        points[length - 2],\n        points[length - 1],\n      );\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          this._getDistanceString(this._totalDistance),\n          'leaflet-measure-lable',\n        );\n      }\n    } else {\n      this._totalDistance = 0;\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          this.options.messages.start,\n          'leaflet-measure-lable',\n        );\n      }\n      this._trail.points.push(latlng);\n    }\n    this._lastPoint = latlng;\n    this._startMove = false;\n  },\n  _onMouseMove: function (event) {\n    var latlng = event.latlng;\n    if (this._trail.points.length > 0) {\n      if (this._startMove) {\n        this._directPath.setLatLngs(this._trail.points.concat(latlng));\n      } else {\n        this._directPath.setLatLngs([latlng]);\n        this._startMove = true;\n      }\n    }\n  },\n  _enableMeasure: function () {\n    this._trail = {\n      overlays: [],\n      points: [],\n    };\n    var map = this._map;\n    L.DomUtil.addClass(map._container, 'leaflet-measure-map');\n    map.contextMenu && map.contextMenu.disable();\n    this._measurementStarted = true;\n    map.on('click', this._onMouseClick, this);\n    map.on('dblclick contextmenu', this._finishMeasure, this);\n    map.doubleClickZoom.disable();\n    map.on('mousemove', this._onMouseMove, this);\n    map.fire('measure:start');\n  },\n  _disableMeasure: function () {\n    var map = this._map;\n    L.DomUtil.removeClass(map.getContainer(), 'leaflet-measure-map');\n    map.contextMenu && map.contextMenu.enable();\n    map.off('click', this._onMouseClick, this);\n    map.off('dblclick contextmenu', this._finishMeasure, this);\n    map.off('mousemove', this._onMouseMove, this);\n    map.doubleClickZoom.enable();\n    this._measurementStarted = this._startMove = false;\n    if (!this._finished) {\n      this._clearOverlay.call(this);\n    }\n    map.fire('measure:stop');\n  },\n  _finishMeasure: function (event) {\n    if (this._trail.points.length > 0) {\n      if (this._trail.points.length > 1) {\n        if (!event || event.type === 'contextmenu') {\n          this._directPath.setLatLngs(this._trail.points);\n        }\n        if (this.options.model === 'area') {\n          this._addLable(\n            this._lastPoint,\n            this._getAreaString(this._trail.points),\n            'leaflet-measure-lable',\n            true,\n          );\n        } else {\n          this._addLable(\n            this._lastPoint,\n            this._getDistanceString(this._totalDistance),\n            'leaflet-measure-lable',\n            true,\n          );\n        }\n        this._directPath && this._map.removeLayer(this._directPath);\n        this._finished = true;\n      } else {\n        this._clearOverlay.call(this);\n      }\n    }\n    this.disable();\n  },\n  _resetDirectPath: function (latlng) {\n    if (!this._directPath) {\n      if (this.options.model === 'area') {\n        this._directPath = new L.Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          fillOpacity: 0,\n          interactive: false,\n        });\n      } else {\n        this._directPath = new L.Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          interactive: false,\n        });\n      }\n      this._map.addLayer(this._directPath);\n      this._trail.overlays.push(this._directPath);\n    } else {\n      this._directPath.addLatLng(latlng);\n    }\n  },\n  _addMeasurePoint: function (latlng) {\n    if (!this._measurePath) {\n      if (this.options.model === 'area') {\n        this._measurePath = new L.Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          fillColor: this.options.color,\n          fillOpacity: 0.5,\n          interactive: false,\n        });\n      } else {\n        this._measurePath = new L.Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          interactive: false,\n        });\n      }\n      this._map.addLayer(this._measurePath);\n      this._trail.overlays.push(this._measurePath);\n    } else {\n      this._measurePath.addLatLng(latlng);\n    }\n    this._resetDirectPath(latlng);\n  },\n  _addMarker: function (latLng) {\n    var marker = new L.CircleMarker(latLng, {\n      color: this.options.color,\n      opacity: 1,\n      weight: 1,\n      fillColor: '#FFFFFF',\n      fill: true,\n      fillOpacity: 1,\n      radius: 3,\n      interactive: false,\n    });\n    this._map.addLayer(marker);\n    this._trail.overlays.push(marker);\n  },\n  _addLable: function (latlng, content, className, ended) {\n    var lable = new L.MeasureLable({\n      latlng: latlng,\n      content: content,\n      className: className,\n    });\n    this._map.addLayer(lable);\n    this._trail.overlays.push(lable);\n    if (ended) {\n      var closeButton = lable.enableClose();\n      L.DomEvent.on(closeButton, 'click', this._clearOverlay, this);\n    }\n  },\n  _clearOverlay: function () {\n    var i = 0,\n      overlays = this._trail.overlays,\n      length;\n    for (length = overlays.length; i < length; i++) {\n      this._map.removeLayer(overlays[i]);\n    }\n  },\n  toRadians: function (deg) {\n    return deg * (Math.PI / 180);\n  },\n  square: function (x) {\n    return Math.pow(x, 2);\n  },\n  _getDistanceString: function (distance) {\n    return distance < 1e3\n      ? this._numberFormat(distance, 0) + ' ' + this.options.messages.meter\n      : this._numberFormat(distance / 1e3, 2) +\n          ' ' +\n          this.options.messages.kilometer;\n  },\n\n  _getDistance: function (latlng1, latlng2) {\n    var earthRadius = 6378137; // radius of the earth in meter\n    var lat1 = this.toRadians(latlng1.lat);\n    var lat2 = this.toRadians(latlng2.lat);\n    var lat_dif = lat2 - lat1;\n    var lng_dif = this.toRadians(latlng2.lng - latlng1.lng);\n    var a =\n      this.square(Math.sin(lat_dif / 2)) +\n      Math.cos(lat1) * Math.cos(lat2) * this.square(Math.sin(lng_dif / 2));\n    return 2 * earthRadius * Math.asin(Math.sqrt(a));\n  },\n  _getAreaString: function (points) {\n    var a = Math.round(this._getArea(points));\n    return a < 1e6\n      ? this._numberFormat(a, 0) + ' ' + this.options.messages.squareMeter\n      : this._numberFormat(a / 1e6, 2) +\n          ' ' +\n          this.options.messages.squareKilometers;\n  },\n  _getArea: function (points) {\n    var earthRadius = 6378137;\n    var area = 0;\n    var len = points.length;\n    var x1 = points[len - 1].lng;\n    var y1 = points[len - 1].lat;\n    for (var i = 0; i < len; i++) {\n      var x2 = points[i].lng;\n      var y2 = points[i].lat;\n      area +=\n        this.toRadians(x2 - x1) *\n        (2 + Math.sin(this.toRadians(y1)) + Math.sin(this.toRadians(y2)));\n      x1 = x2;\n      y1 = y2;\n    }\n    return Math.abs((area * earthRadius * earthRadius) / 2.0);\n  },\n  _numberFormat: function (number, decimals = 2) {\n    var thousandsSep = ',';\n    var sign = number < 0 ? '-' : '';\n    var num = Math.abs(+number || 0);\n    var intPart = parseInt(num.toFixed(decimals), 10) + '';\n    var j = intPart.length > 3 ? intPart.length % 3 : 0;\n\n    return [\n      sign,\n      j ? intPart.substr(0, j) + thousandsSep : '',\n      intPart.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSep),\n      decimals\n        ? '.' +\n          Math.abs(num - intPart)\n            .toFixed(decimals)\n            .slice(2)\n        : '',\n    ].join('');\n  },\n});\n\nexport { Measure, MeasureAction };\n","export const StopToggleControlsCb: Array<{\n  name: string;\n  stop: () => void;\n}> = [];\n\nexport function addStopToggleControl(name: string, stop: () => void): void {\n  StopToggleControlsCb.push({ name, stop });\n}\n\nexport function stopToggleControlsFor(excludeControlName?: string): void {\n  StopToggleControlsCb.forEach((x) => {\n    if (x.name !== excludeControlName) {\n      x.stop();\n    }\n  });\n}\n","import 'leaflet/dist/leaflet.css';\nimport 'bulma-carousel/dist/css/bulma-carousel.min.css';\nimport './ActionMap.css';\n\nimport { Control, Map, Layer } from 'leaflet';\nimport ShareButtons from 'share-buttons/dist/share-buttons';\n\nimport {\n  NgwMap,\n  ToggleControl,\n  NgwLayers,\n  LocationEvent,\n  VectorAdapterOptions,\n} from '@nextgis/ngw-map';\nimport { CirclePaint } from '@nextgis/paint';\nimport {\n  NgwIdentify,\n  NgwLayerOptions,\n  getIdentifyItems,\n} from '@nextgis/ngw-kit';\nimport { getIcon } from '@nextgis/icons';\nimport MapAdapter from '@nextgis/leaflet-map-adapter';\nimport UrlRuntimeParams from '@nextgis/url-runtime-params';\nimport { QmsAdapterOptions } from '@nextgis/qms-kit';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { ResourceHierarchy } from '@nextgis/ngw-connector';\n\nimport { AppOptions } from '../App';\nimport { Auth } from './Auth/Auth';\nimport { Popup } from './Popup';\nimport { MapSettingsPanel } from './MapSettingsPanel/MapSettingsPanel';\nimport { GetCoordinatePanelControl } from './GetCoordinateControl/GetCoordinateControl';\nimport { createMeasureControl } from './createMeasureControl';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nexport class ActionMap {\n  ngwMap: NgwMap<Map, Layer, any>;\n\n  tree?: MapSettingsPanel;\n  treeControl?: Control & ToggleControl;\n\n  authControl?: Control & ToggleControl;\n  popup: Popup;\n\n  private _promises: { [name: string]: CancelablePromise<any> } = {};\n\n  constructor(private options: AppOptions) {\n    this.popup = new Popup(this.ngwMap);\n  }\n\n  async create(opt: AppOptions): Promise<void> {\n    // const auth = new Auth(opt.mapOptions);\n    const mapOpt = { ...opt.mapOptions };\n    // try {\n    //   await auth.login();\n    //   mapOpt.connector = auth.connector;\n    // } catch (er) {\n    //   // cancel login\n    // }\n\n    this.ngwMap = new NgwMap({\n      mapAdapter: new MapAdapter(),\n      controls: [],\n      minZoom: 4,\n      runtimeParams: [new UrlRuntimeParams()],\n      ...mapOpt,\n    });\n    this.ngwMap.setCursor('default');\n    this.popup.setNgwMap(this.ngwMap);\n    if (opt.basemaps) {\n      this.ngwMap.onLoad().then(() =>\n        opt.basemaps.forEach((x, i) => {\n          this.ngwMap.addBaseLayer<any, QmsAdapterOptions>('QMS', {\n            ...x,\n            visibility: i === 0,\n          });\n        }),\n      );\n    }\n    this.ngwMap.getPaintFunctions = { base: getIcon };\n\n    this.ngwMap.addControl('ZOOM', 'top-left');\n    this._createLocateControl();\n    this.ngwMap.addControl('ATTRIBUTION', 'bottom-right', {\n      customAttribution: [\n        '<a href=\"https://nextgis.com\" target=\"_blank\">©NextGIS</a>',\n      ],\n    });\n    createMeasureControl(this.ngwMap);\n    this._createShareControl();\n    // await this._createAuthControl(auth);\n    // this.ngwMap.addControl(this.authControl, 'top-right');\n\n    const ngwLayers = await this.ngwMap.getNgwLayers();\n    const bookmarks: ResourceHierarchy[] = [];\n    Object.values(ngwLayers).forEach((x) => {\n      const bookmark =\n        x.layer.item &&\n        x.layer.item.webmap &&\n        x.layer.item.webmap.bookmark_resource;\n      if (bookmark) {\n        bookmarks.push(bookmark);\n      }\n    });\n    await this._addUserFires(opt.userFires);\n    await this._addFires(opt.fires);\n    this._createGetCoordinateControl();\n    this._addTreeControl({\n      ngwLayers,\n      fires: opt.fires,\n      userFires: opt.userFires,\n      bookmarks,\n    });\n    // this.ngwMap.addControl(crateLineMeasureControl(), 'top-left');\n\n    this._addEventsListeners();\n  }\n\n  private _locate() {\n    const locationfound = (e: LocationEvent) => {\n      const lngLat = e.lngLat;\n      // const lngLat: [number, number] = [40, 46];\n      // TODO: get extent from webmap or frame layer;\n      // const extent = this.ngwMap.getBounds();\n      // if (extent) {\n      //   const [minLng, minLat, maxLng, maxLat] = extent;\n      //   const [lng, lat] = lngLat;\n      //   const isLngInBbox = minLng < lng && lng < maxLng;\n      //   const isLatInBbox = minLat < lat && lat < maxLat;\n      //   if (isLngInBbox && isLatInBbox) {\n      //     this.ngwMap.setCenter(lngLat);\n      //   }\n      // }\n      this.ngwMap.setCenter(lngLat);\n    };\n\n    this.ngwMap.locate({ setView: false }, { locationfound });\n  }\n\n  private async _createAuthControl(auth: Auth) {\n    const authBtn = document.getElementsByClassName(\n      'js-auth-btn',\n    )[0] as HTMLElement;\n    const getStatus = () => {\n      return !!(this.ngwMap.connector && this.ngwMap.connector.user);\n    };\n    const onClick = () => {\n      auth.logout();\n      window.location.reload();\n    };\n    authBtn.innerHTML = getStatus() ? 'Выйти' : 'Войти';\n    authBtn.style.display = 'block';\n    authBtn.addEventListener('click', onClick);\n  }\n\n  private _createShareControl() {\n    const shareModal = document.getElementsByClassName('js-modal')[0];\n    const closeModalBtn = document.getElementsByClassName('js-modal-close')[0];\n    const shareModalContent = document.getElementsByClassName(\n      'js-share-modal-content',\n    )[0];\n    const shareInput = document.getElementsByClassName(\n      'js-share-input',\n    )[0] as HTMLInputElement;\n    const showModal = () => {\n      const href = location.href;\n      const html = this._createShareModalContent(href);\n      shareInput.value = href;\n      shareModalContent.innerHTML = html;\n      ShareButtons.update();\n      shareModal.classList.add('is-active');\n    };\n    const closeModal = () => {\n      shareModalContent.innerHTML = '';\n      shareModal.classList.remove('is-active');\n    };\n    closeModalBtn.addEventListener('click', () => {\n      closeModal();\n    });\n\n    const shareControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-share-alt btn-control-icon \"></i>',\n      onClick() {\n        showModal();\n      },\n    });\n    this.ngwMap.addControl(shareControl, 'bottom-right');\n  }\n\n  private async _createGetCoordinateControl() {\n    const control = new GetCoordinatePanelControl(this, {\n      toggle: (status) => {\n        if (status) {\n          stopToggleControlsFor('coordinate');\n          this.ngwMap.disableSelection();\n        } else {\n          this.ngwMap.enableSelection();\n        }\n      },\n    });\n    const toggleControl = await this.ngwMap.createToggleControl(control);\n    this.ngwMap.addControl(toggleControl, 'top-left');\n    addStopToggleControl('coordinate', () => toggleControl.onClick(false));\n  }\n\n  private _createLocateControl() {\n    const onClick = () => this._locate();\n    const locateControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-location-arrow btn-control-icon\"></i>',\n      title: 'Найти меня на карте',\n      onClick,\n    });\n    this.ngwMap.addControl(locateControl, 'top-left');\n  }\n\n  private _createShareModalContent(url: string) {\n    const social = [\n      { id: 'tw', name: 'Twitter', icon: 'fab fa-twitter' },\n      { id: 'vk', name: 'VK', icon: 'fab fa-vk' },\n      { id: 'fb', name: 'Facebook', icon: 'fab fa-facebook-square' },\n    ];\n\n    const html = `<div class=\"buttons share-btn js-share-btn\" data-url=\"${url}\" data-title=\"\" data-desc=\"\">\n      ${social\n        .map(\n          (x) => `<a class=\"button is-primary\" data-id=\"${x.id}\">\n                    <span class=\"icon\">\n                        <i class=\"${x.icon}\"></i>\n                    </span>\n                    <span>${x.name}</span>\n                </a>`,\n        )\n        .join('')}\n    </div>`;\n    return html;\n  }\n\n  private async _addUserFires(\n    x?: NgwLayerOptions<'GEOJSON'>,\n    adapterOptions?: VectorAdapterOptions,\n  ) {\n    if (x) {\n      const paint = x.adapterOptions.paint as CirclePaint;\n      this.ngwMap.addNgwLayer({\n        resource: x,\n        id: x.id,\n\n        adapterOptions: {\n          paint: {\n            ...paint,\n            stroke: true,\n            fillOpacity: 0.6,\n            radius: 5,\n          },\n          selectable: true,\n          selectedPaint: {\n            ...paint,\n            stroke: true,\n            fillOpacity: 0.9,\n            radius: 7,\n          },\n          ...adapterOptions,\n        },\n      });\n    }\n  }\n\n  private async _addFires(fires?: NgwLayerOptions<'GEOJSON'>[]) {\n    if (fires) {\n      for (const x of fires) {\n        await this._addUserFires(x, {\n          propertiesFilter: [\n            [\n              'timestamp',\n              'ge',\n              Math.floor(Date.now() / 1000) -\n                Number(this.options.timedelta) * 3600,\n            ],\n          ],\n        });\n      }\n    }\n  }\n\n  private async _addTreeControl(opt: {\n    ngwLayers: NgwLayers;\n    fires: NgwLayerOptions<'GEOJSON'>[];\n    userFires: NgwLayerOptions<'GEOJSON'>;\n    bookmarks: ResourceHierarchy[];\n  }) {\n    const sidebarToggleBtn = document.getElementsByClassName('js-sidebar')[0];\n\n    const isActive = () => sidebarToggleBtn.classList.contains('is-active');\n    const activeBurger = () => sidebarToggleBtn.classList.add('is-active');\n    const disactiveBurger = () =>\n      sidebarToggleBtn.classList.remove('is-active');\n\n    await this.ngwMap.onLoad();\n\n    this.tree = new MapSettingsPanel(this, {\n      ...opt,\n      ngwMap: this.ngwMap,\n    });\n\n    const toggle = (status?: boolean) => {\n      status = status !== undefined ? status : isActive();\n      if (status) {\n        stopToggleControlsFor('tree');\n        this.tree.show();\n        activeBurger();\n      } else {\n        this.tree.hide();\n        disactiveBurger();\n      }\n    };\n    sidebarToggleBtn.addEventListener('click', () => {\n      toggle();\n    });\n    setTimeout(() => {\n      toggle();\n    }, 500);\n    addStopToggleControl('tree', () => toggle(false));\n  }\n\n  private _clean() {\n    if (\n      this._promises.getFeaturePromise &&\n      this._promises.getFeaturePromise.cancel\n    ) {\n      this._promises.getFeaturePromise.cancel();\n    }\n    this.ngwMap.removeLayer('highlight');\n  }\n\n  private _highlighNgwLayer(e: NgwIdentify) {\n    this._clean();\n    const paramsList = getIdentifyItems(e);\n    const params = paramsList[0];\n    if (params) {\n      const resourceId = params.resourceId;\n      this.ngwMap\n        .fetchIdentifyItem(e, {\n          extensions: ['attachment'],\n        })\n        .then((item) => {\n          item.toGeojson().then((geojson) => {\n            this.ngwMap.addLayer('GEOJSON', {\n              id: 'highlight',\n              data: geojson,\n              visibility: true,\n              paint: { color: 'green', stroke: true, fillOpacity: '0.8' },\n              // selectable: true,\n              selectOnHover: true,\n              popup: true,\n              // popupOnSelect: true,\n              popupOptions: {\n                createPopupContent: (e) => {\n                  if (e.feature) {\n                    const element = this.popup.createPopupContent(\n                      e.feature,\n                      resourceId,\n                    );\n                    if (\n                      item.extensions.attachment &&\n                      item.extensions.attachment.length\n                    ) {\n                      this.popup._addPhotos(\n                        element,\n                        item.extensions.attachment,\n                        params.resourceId,\n                        params.featureId,\n                      );\n                    }\n                    return element;\n                  }\n                },\n              },\n            });\n          });\n        });\n    }\n  }\n\n  private _addEventsListeners() {\n    this.ngwMap.emitter.on('click', () => {\n      this.ngwMap.cancelPromises('identify', 'select');\n    });\n    this.ngwMap.emitter.on('ngw:select', (e) => this._highlighNgwLayer(e));\n  }\n}\n","import { Measure } from '../assets/Leaflet.Measure-master/src/leaflet.measure';\nimport '../assets/Leaflet.Measure-master/src/leaflet.measure.css';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nimport type { Map } from 'leaflet';\n\nexport function createMeasureControl(ngwMap: NgwMap): void {\n  // @ts-ignore\n  const control = new Measure({ locale: 'ru' });\n  ngwMap.addControl(control, 'top-left');\n\n  ngwMap.onLoad().then(() => {\n    const map = ngwMap.mapAdapter.map as Map;\n    if (map) {\n      map.on('measure:start', () => {\n        stopToggleControlsFor('measure');\n        ngwMap.disableSelection();\n      });\n      map.on('measure:stop', () => {\n        ngwMap.setCursor('default');\n        ngwMap.enableSelection();\n      });\n    }\n    addStopToggleControl('measure', () => {\n      control.disableMeasure();\n    });\n  });\n}\n","import { ActionMap } from './components/ActionMap';\nimport './bulma';\n\nimport type { NgwMapOptions } from '@nextgis/ngw-map';\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nexport interface AsuLayer {\n  name: string;\n}\n\nexport interface ConnectionOptions {\n  acsUrl?: string;\n  authUrl: string;\n  showUrl: string;\n}\n\nexport type FireResource = NgwLayerOptions<'GEOJSON'>;\n\nexport interface Bookmark {\n  id: string;\n  name: string;\n}\n\nexport type Bookmarks = Bookmark[];\n\nexport interface BaseLayer {\n  name?: string;\n  qmsId: number;\n}\n\nexport interface AppOptions {\n  mapOptions?: NgwMapOptions;\n  fires?: NgwLayerOptions<'GEOJSON'>[];\n  userFires?: NgwLayerOptions<'GEOJSON'>;\n  basemaps?: BaseLayer[];\n  timedelta?: 24;\n}\n\nexport class App {\n  actionMap = new ActionMap(this.options);\n\n  constructor(public options?: AppOptions) {}\n\n  async create(options?: AppOptions): Promise<void> {\n    this.options = { ...this.options, ...options };\n    this.actionMap.create(this.options);\n  }\n}\n","import 'core-js';\nimport 'regenerator-runtime/runtime';\nimport { deepmerge } from '@nextgis/utils';\nimport { App, AppOptions } from './App';\n\nimport './style/style.scss';\n\nlet config: AppOptions = {};\ntry {\n  config = require('../config').default;\n} catch (er) {\n  console.warn('Config file is not funded, run with default settings');\n}\n\nconst OPTIONS: AppOptions = {\n  mapOptions: {\n    target: 'map',\n    bounds: [36.59, 43.385, 49.374, 50.214],\n  },\n  timedelta: 24,\n};\nconst options = deepmerge(OPTIONS, config);\nconst app = new App(options);\n\napp.create();\n"],"sourceRoot":""}