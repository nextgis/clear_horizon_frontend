{"version":3,"sources":["webpack://clear_horizon/./src/utils/index.ts","webpack://clear_horizon/./src/components/Popup.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/CollapsiblePanel.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/WebmapTreeItem.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BaseMapsContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BookmarksContainer.ts","webpack://clear_horizon/./src/utils/formatTime.ts","webpack://clear_horizon/./src/constants.ts","webpack://clear_horizon/./src/utils/daysBehindRange.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/LayersContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/FiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/createCalendar.ts","webpack://clear_horizon/./src/utils/layerTimestampExtremum.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/MapSettingsPanel.ts","webpack://clear_horizon/./src/components/GetCoordinateControl/GetCoordinateControl.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/i18n.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/utils.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureLabel.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureAction.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/Measure.ts","webpack://clear_horizon/./src/components/ToggleControl.ts","webpack://clear_horizon/./src/components/createMeasureControl.ts","webpack://clear_horizon/./src/components/ActionMap.ts","webpack://clear_horizon/./src/bulma.ts","webpack://clear_horizon/./src/config.ts","webpack://clear_horizon/./src/main.ts","webpack://clear_horizon/./src/App.ts"],"names":["prepareColumnValue","value","str","RegExp","test","Popup","ngwMap","this","feature","resourceId","attachment","popupElement","document","createElement","className","style","minWidth","maxWidth","properties","maxHeight","overflow","innerHTML","getPropertiesContent","then","inner","appendChild","length","_addPhotos","Number","id","elem","key","val","String","day","month","year","join","hour","minute","connector","getResource","item","feature_layer","newProperties","fields","forEach","x","grid_visibility","property","keyname","push","display_name","createPropertiesHtml","element","fid","attachmentElement","width","img","figure","_loadImage","height","src","imgElem","bulmaCarousel","slidesToShow","options","Promise","resolve","reject","url","makeQuery","responseType","blob","reader","FileReader","readAsDataURL","onloadend","result","catch","er","LOADING_TEXT","CollapsiblePanel","status","undefined","open","_updateContainer","parent","getContainer","_container","_content","_updateContent","_toggle","_getToggleButtonHtml","_cleanContent","close","icon","title","header","_createHeader","content","leftLevel","rightLevel","toggle","onclick","html","WebmapTreeItem","layer","container","_createTreeItem","layers","input","setAttribute","item_type","layer_enabled","checked","visibility","emitter","on","ev","set","propagation","WebMap","name","children","tree","getChildren","treeBranch","_createTreeBranch","reverse","BaseMapsContainer","_createContainer","e","isBaseLayer","_updateBaseMapContainer","basemaps","_baseMapsContainer","_createBaseMapItem","getBaseLayers","getLayer","baseMap","control","isLayerVisible","toggleLayer","activeBaseLayer","getActiveBaseLayer","hideLayer","displayName","createTextNode","BookmarksContainer","bookmarksContainer","bookmarks","b","get","resource","labelField","find","label_field","fetchNgwLayerItems","items","_createBookmarkItem","bookmark","nameField","bookmarkBlock","nameValue","geoJson","GeoJSON","geom","lMap","mapAdapter","map","fitBounds","getBounds","formatTime","dt","unit","t","getTime","toISOString","DATE_RANGE_SELECT","NOW","Date","daysBehindRange","days","to","to_","now","daysBehindFilter","props","timeUnit","dateField","Math","ceil","daysBehindRangeFormat","i","setInterval","LayersContainer","firesEl","f","_createFireItem","cb","onLayerAdd","off","fire","defined","wrapper","layer_","split","replace","trim","symbol","_createSymbol","createItem","adapterOptions","paint","color","stroke","strokeColor","backgroundColor","borderColor","FiresContainer","calendarWrapper","_createCalendar","insertBefore","firstChild","fires","promises","promise","all","block","_buildCalendarBlock","dateRange","defaultDateRange","extremeItems","defaultItems","min","max","startDate","endDate","opt","timedelta","onChange","l","filter","start","end","propertiesFilter","onDateChange","minDate","maxDate","select","querySelector","inputFrom","today","changeFunction","debounce","prop","defaultDate","datepicker","flatpickr","mode","locale","Russian","allowInput","onchange","setDate","createCalendar","layerTimestampExtremum","getResourceIdOrFail","extremeReqOpt","limit","extremePromises","orderBy","ngwDate","OPTIONS","target","MapSettingsPanel","actionMap","getElementById","Error","_target","HTMLElement","sidebar","Sidebar","closeButton","position","autoPan","addTo","ngwLayers","hide","classList","remove","show","add","userFires","firms","_createFiresContainer","sensors","_createSensorContainer","_createNgwLayers","_createBasemapsContainer","_createBookmarksContainer","n","ngwLayer","treeContainer","bookmarkContainer","firesContainer","baseMapsContainer","GetCoordinatePanelControl","EventEmitter","addLayer","radius","popup","popupOptions","createPopupContent","d","_createPopupContent","geometry","coordinates","toFixed","_layer","toggleControl","setCursor","_removeClickListener","__onMapClick","_onMapClick","clearLayerData","type","lngLat","setLayerData","emit","lng","lat","latLngStr","getElementsByClassName","Clipboard","I18N","en","linearMeasurement","areaMeasurement","meter","kilometer","squareMeter","squareKilometers","ru","toRadians","deg","PI","square","pow","getDistanceString","distance","messages","numberFormat","number","decimals","thousandsSep","sign","num","abs","intPart","parseInt","j","substr","slice","MeasureLabel","latlng","Point","Util","offset","_offset","_map","_initLayout","getPanes","popupPane","_updatePosition","Browser","_zoomAnimation","_update","removeChild","latLng","_closeButton","DomUtil","_contentNode","point","latLngToLayerPoint","is3D","_containerBottom","y","_containerLeft","bottom","left","a","_latLngToNewLayerPoint","zoom","center","Layer","MeasureAction","model","overlays","points","_measureHandler","_finished","_activeMeasure","_disableMeasure","_measurementStarted","_finishMeasure","_enableMeasure","event","mouseEventToLatLng","_lastPoint","equals","_trail","_totalDistance","latlng1","latlng2","lat1","lat_dif","lat2","lng_dif","sin","cos","asin","sqrt","_addMeasurePoint","_addMarker","_addLable","_startMove","_directPath","setLatLngs","concat","contextMenu","disable","_onMouseClick","doubleClickZoom","_onMouseMove","enable","_clearOverlay","call","round","earthRadius","area","len","x1","y1","x2","y2","getArea","removeLayer","directPath","addLatLng","Polygon","weight","dashArray","fillOpacity","interactive","Polyline","measurePath","_measurePath","fillColor","_resetDirectPath","marker","CircleMarker","opacity","fill","ended","lable","enableClose","DomEvent","Handler","Measure","collapsed","console","error","_contents","_link","href","_buildItems","ele_ul","ele_li","ele_link_line","innerText","_enableMeasureLine","ele_link_area","_enableMeasureArea","_buildContainer","mouseenter","_expand","mouseleave","_collapse","disableMeasure","display","Control","StopToggleControlsCb","addStopToggleControl","stop","stopToggleControlsFor","excludeControlName","createMeasureControl","addControl","onLoad","disableSelection","enableSelection","ActionMap","mapOpt","mapOptions","NgwMap","MapAdapter","controls","minZoom","runtimeParams","UrlRuntimeParams","setNgwMap","addBaseLayer","getPaintFunctions","base","getIcon","_createLocateControl","customAttribution","_createShareControl","getNgwLayers","Object","values","webmap","bookmark_resource","_addFireLayer","_addFirms","_addSensors","_createGetCoordinateControl","_addTreeControl","_addEventsListeners","locate","setView","locationfound","setCenter","shareModal","closeModalBtn","shareModalContent","shareInput","addEventListener","shareControl","createButtonControl","onClick","location","_createShareModalContent","ShareButtons","createToggleControl","locateControl","_locate","addNgwLayer","selectable","selectedPaint","sensor","sidebarToggleBtn","isActive","contains","activateBurger","deactivateBurger","_cleanSelection","setTimeout","_promises","getFeaturePromise","cancel","params","getIdentifyItems","fetchIdentifyItem","extensions","toGeojson","geojson","data","selectOnHover","cancelPromises","_highlighNgwLayer","$navbarBurgers","Array","prototype","querySelectorAll","el","dataset","$target","firmsAdapterOptions","strokeOpacity","showContent","create","appContent","appLoadingContent","bounds","baseUrl","resources","fit","qmsId"],"mappings":"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","file":"main-4f064d56413d4bc.js","sourcesContent":["export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function objToUrlStr(obj: { [param: string]: any }): string {\n  let str = '';\n  for (const key in obj) {\n    if (str !== '') {\n      str += '&';\n    }\n    str += key + '=' + encodeURIComponent(obj[key]);\n  }\n  return str;\n}\n\nfunction isValidUrl(str: string): boolean {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function prepareColumnValue(value: unknown): unknown | string {\n  if (typeof value === 'string') {\n    if (isValidUrl(value)) {\n      return `<a href=\"${value}\" target=\"_blank\">${value}</a>`;\n    }\n  }\n  return value;\n}\n","// @ts-ignore\nimport bulmaCarousel from 'bulma-carousel';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { Feature, Geometry } from 'geojson';\nimport { FeatureItemAttachment } from '@nextgis/ngw-connector';\nimport { prepareColumnValue } from '../utils';\n\ninterface CollectorDate {\n  year: number;\n  month: number;\n  day: number;\n}\ninterface CollectorTime {\n  hour: number;\n  minute: number;\n  second: number;\n}\n\ninterface KeyValue {\n  key: string;\n  value: any;\n}\n\ntype CollectorProperty = string | number | CollectorDate | CollectorTime;\n\nexport class Popup {\n  private ngwMap!: NgwMap;\n\n  setNgwMap(ngwMap: NgwMap): void {\n    this.ngwMap = ngwMap;\n  }\n\n  createPopupContent<G extends Geometry = any, P = Record<string, any>>(\n    feature: Feature<G, P>,\n    resourceId?: number,\n    attachment?: FeatureItemAttachment[],\n  ): HTMLElement {\n    const popupElement = document.createElement('div');\n    popupElement.className = 'columns';\n    popupElement.style.minWidth = '300px';\n    popupElement.style.maxWidth = '700px';\n\n    const properties = document.createElement('div');\n\n    properties.style.maxHeight = '300px';\n    properties.style.maxWidth = '350px';\n    properties.style.overflow = 'auto';\n\n    properties.className = 'column properties';\n\n    if (resourceId) {\n      popupElement.innerHTML = 'Загрузка';\n      this.getPropertiesContent(resourceId, feature).then((inner) => {\n        popupElement.innerHTML = '';\n        if (inner) {\n          properties.innerHTML = inner;\n        }\n        popupElement.appendChild(properties);\n      });\n\n      if (attachment && attachment.length) {\n        this._addPhotos(\n          popupElement,\n          attachment,\n          resourceId,\n          Number(feature.id),\n        );\n      }\n    }\n\n    return popupElement;\n  }\n\n  createPropertiesHtml(\n    properties: Array<{ key: string; value: CollectorProperty }>,\n  ): string {\n    let elem = '<table class=\"table\"><tbody>';\n    for (const { key, value } of properties) {\n      let val = String(value);\n      if (typeof value === 'object' && value) {\n        if ('year' in value) {\n          val = [value.day, value.month, value.year].join('.');\n        } else if ('hour' in value) {\n          val = [value.hour, value.minute].join(':');\n        }\n      }\n      elem += `\n      <tr>\n        <th>${key}</th>\n        <td>${prepareColumnValue(val)}</td>\n      </tr>\n      `;\n    }\n    elem += '</tbody></table>';\n    return elem;\n  }\n\n  async getPropertiesContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(resourceId: number, feature: Feature<G, P>): Promise<string | undefined> {\n    const item = await this.ngwMap.connector.getResource(resourceId);\n    if (item && item.feature_layer) {\n      const newProperties: KeyValue[] = [];\n      item.feature_layer.fields.forEach((x) => {\n        if (x.grid_visibility) {\n          const property = feature.properties[x.keyname];\n          if (property) {\n            newProperties.push({ key: x.display_name, value: property });\n          }\n        }\n      });\n      return this.createPropertiesHtml(newProperties);\n    }\n  }\n\n  async _addPhotos(\n    element: HTMLElement,\n    attachment: FeatureItemAttachment[],\n    id: number,\n    fid: number,\n  ): Promise<void> {\n    const attachmentElement = document.createElement('div');\n    attachmentElement.style.width = '300px';\n    attachmentElement.className = 'column carousel attachment';\n    for (const img of attachment) {\n      const width = 350;\n      const height = 350;\n      const figure = document.createElement('figure');\n      figure.className = `image`;\n      const src = await this._loadImage(img, {\n        width,\n        height,\n        id,\n        fid,\n      });\n      const imgElem = document.createElement('img');\n      imgElem.src = src;\n      figure.appendChild(imgElem);\n      attachmentElement.appendChild(figure);\n    }\n    element.appendChild(attachmentElement);\n    bulmaCarousel.attach(attachmentElement, { slidesToShow: 1 });\n  }\n\n  private _loadImage(\n    img: FeatureItemAttachment,\n    options: { id: number; fid: number; width?: number; height?: number },\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const { width, height } = options;\n      const url =\n        '/api/resource/' +\n        options.id +\n        '/feature/' +\n        options.fid +\n        `/attachment/${img.id}/image` +\n        (width && height ? `?size=${width}x${height}` : '');\n      this.ngwMap.connector\n        .makeQuery(url, {}, { responseType: 'blob' })\n        .then((blob) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            resolve(reader.result as string);\n          };\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n}\n","import './CollapsiblePanel.css';\n\ntype GetHTML = () => HTMLElement | Promise<HTMLElement>;\n\nconst LOADING_TEXT = 'Загрузка данных...';\n\nexport interface CollapsiblePanelOptions {\n  title?: string;\n  content: HTMLElement | GetHTML;\n  open?: boolean;\n  parent?: HTMLElement;\n}\n\nexport class CollapsiblePanel {\n  private readonly _container = document.createElement('div');\n  private _content?: HTMLElement;\n  private _toggle?: HTMLElement;\n  private status: boolean;\n\n  constructor(private options: CollapsiblePanelOptions) {\n    this.status = this.options.open !== undefined ? this.options.open : true;\n    this._updateContainer();\n    if (this.options.parent) {\n      this.options.parent.appendChild(this.getContainer());\n    }\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  open(): void {\n    if (\n      this._content &&\n      (!this._content.innerHTML || this._content.innerHTML === LOADING_TEXT)\n    ) {\n      this._updateContent();\n    }\n    // this._container.appendChild(this._content);\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-up');\n    }\n    this.status = true;\n  }\n\n  close(): void {\n    this._cleanContent();\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-down');\n    }\n    this.status = false;\n  }\n\n  toggle(): void {\n    if (this.status) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _getToggleButtonHtml(icon?: string) {\n    return `\n    <a class=\"button is-small\">\n    <span class=\"icon is-small\">\n      <i class=\"${icon}\"></i>\n    </span>\n    </a>\n    `;\n  }\n\n  private _updateContainer() {\n    this._container.innerHTML = '';\n    if (this.options.title) {\n      const header = this._createHeader();\n      this._container.appendChild(header);\n    }\n    const content = document.createElement('div');\n    content.innerHTML = LOADING_TEXT;\n    content.className = 'panel-content';\n    this._content = content;\n    this._container.appendChild(content);\n\n    if (this.status) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  private _createHeader() {\n    const header = document.createElement('div');\n    header.className = 'level is-mobile panel-header';\n\n    const leftLevel = document.createElement('div');\n    leftLevel.className = 'level-left';\n\n    const title = document.createElement('div');\n    title.className = 'level-item panel-header__title';\n    title.innerHTML = this.options.title || '';\n    leftLevel.appendChild(title);\n\n    const rightLevel = document.createElement('div');\n    rightLevel.className = 'level-right';\n    const toggle = document.createElement('div');\n    toggle.className = 'level-item panel-header__toggle';\n    rightLevel.appendChild(toggle);\n\n    toggle.onclick = () => {\n      this.toggle();\n    };\n    this._toggle = toggle;\n\n    header.appendChild(leftLevel);\n    header.appendChild(rightLevel);\n\n    return header;\n  }\n\n  private _cleanContent() {\n    if (this._content) {\n      this._content.innerHTML = '';\n    }\n  }\n\n  private async _updateContent() {\n    this._cleanContent();\n    if (this._content) {\n      const html =\n        typeof this.options.content === 'function'\n          ? await this.options.content()\n          : this.options.content;\n\n      this._content.appendChild(html);\n    }\n    return this._content;\n  }\n}\n","import { WebMap } from '@nextgis/webmap';\nimport { CheckProperty, ChangeEvent } from '@nextgis/item';\nimport { NgwWebmapItem, TreeGroup, TreeLayer } from '@nextgis/ngw-kit';\n\nexport class WebmapTreeItem {\n  private _container?: HTMLElement;\n\n  constructor(layer: NgwWebmapItem) {\n    const container = this._createTreeItem(layer);\n    if (container) {\n      this._container = container;\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  private _createTreeBranch(layers: NgwWebmapItem[]) {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item-children';\n    layers.forEach((x) => {\n      if (x.item) {\n        const item = this._createTreeItem(x);\n        if (item) {\n          elem.appendChild(item);\n        }\n      }\n    });\n    return elem;\n  }\n\n  private _createTreeItem(layer: NgwWebmapItem) {\n    const item: TreeGroup | TreeLayer = layer.item;\n    if (!item) {\n      return false;\n    }\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    if (item.display_name) {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'checkbox');\n      const value = item.item_type === 'layer' ? item.layer_enabled : true;\n      input.checked = value;\n\n      const visibility = layer.properties.property(\n        'visibility',\n      ) as CheckProperty;\n      if (visibility) {\n        visibility.emitter.on('change', (ev: ChangeEvent) => {\n          input.checked = ev.value;\n        });\n        input.onclick = () => {\n          visibility.set(input.checked, {\n            propagation: WebMap.keys.pressed('ctrl'),\n          });\n        };\n      }\n\n      const name = document.createElement('span');\n      name.innerHTML = item.display_name;\n\n      elem.appendChild(input);\n      elem.appendChild(name);\n    }\n\n    if (\n      item.item_type === 'group' ||\n      (item.item_type === 'root' && item.children.length)\n    ) {\n      const children = layer.tree.getChildren() as NgwWebmapItem[];\n      const treeBranch = this._createTreeBranch(children.reverse());\n      elem.appendChild(treeBranch);\n    }\n    return elem;\n  }\n}\n","import './BaseMapsContainer.css';\n\nimport { NgwMap, LayerAdapter } from '@nextgis/ngw-map';\n\nexport interface BaseMapsContainerOptions {\n  ngwMap: NgwMap;\n}\n\nexport class BaseMapsContainer {\n  private readonly ngwMap: NgwMap;\n  private _container: HTMLElement;\n  private _baseMapsContainer?: HTMLElement;\n\n  constructor(private options: BaseMapsContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n    this.ngwMap.emitter.on('layer:add', (e) => {\n      if (this.ngwMap.isBaseLayer(e)) {\n        this._updateBaseMapContainer();\n      }\n    });\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  private _createContainer() {\n    const container = document.createElement('div');\n    container.className = 'basemaps-contentainer panel-content-padding control';\n\n    const basemaps = document.createElement('div');\n    basemaps.className = 'basemaps-contentainer__layers';\n    this._baseMapsContainer = basemaps;\n    container.appendChild(basemaps);\n    this._updateBaseMapContainer();\n    return container;\n  }\n\n  private _updateBaseMapContainer() {\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.innerHTML = '';\n    }\n    // first checkbox to remove any basemap\n    this._createBaseMapItem();\n    this.ngwMap.getBaseLayers().forEach((x) => {\n      const layer = this.ngwMap.getLayer(x);\n      if (layer) {\n        this._createBaseMapItem(layer);\n      }\n    });\n  }\n\n  private _createBaseMapItem(baseMap?: LayerAdapter) {\n    const control = document.createElement('div');\n    control.className = 'control';\n    const elem = document.createElement('label');\n    elem.className = 'radio basemap-container__item';\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'radio');\n    input.setAttribute('name', 'basemap');\n\n    input.checked = !!baseMap && this.ngwMap.isLayerVisible(baseMap);\n\n    // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n    //   input.checked = ev.value;\n    // });\n    input.onclick = () => {\n      if (baseMap && baseMap.id) {\n        this.ngwMap.toggleLayer(baseMap.id, input.checked);\n      } else {\n        const activeBaseLayer = this.ngwMap.getActiveBaseLayer();\n        if (activeBaseLayer) {\n          this.ngwMap.hideLayer(activeBaseLayer);\n        }\n      }\n    };\n    const layerName = baseMap && (baseMap.name || baseMap.options.name);\n    const displayName = layerName || 'Blank';\n    const name = document.createTextNode(displayName);\n\n    elem.appendChild(input);\n\n    elem.appendChild(name);\n\n    control.appendChild(elem);\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.appendChild(control);\n    }\n  }\n}\n","import './BookmarksContainer.css';\n\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { ResourceHierarchy, FeatureItem } from '@nextgis/ngw-connector';\nimport { GeoJSON, Map } from 'leaflet';\nimport { Polygon } from 'geojson';\nimport { Bookmark } from '../../interfaces';\n\nexport interface BookmarksContainerOptions {\n  ngwMap: NgwMap<Map>;\n  bookmarks: ResourceHierarchy[];\n}\n\nexport class BookmarksContainer {\n  private readonly ngwMap: NgwMap<Map>;\n  private _container: HTMLElement;\n\n  constructor(private options: BookmarksContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'bookmarks-contentainer panel-content-padding ';\n\n    const bookmarksContainer = document.createElement('div');\n    bookmarksContainer.className = 'bookmarks-contentainer__layers';\n    this.options.bookmarks.forEach((b) => {\n      this.ngwMap.connector\n        .get('resource.item', null, { id: b.id })\n        .then((resource) => {\n          if (resource.feature_layer) {\n            const labelField = resource.feature_layer.fields.find(\n              (x) => x.label_field,\n            );\n            if (labelField) {\n              this.ngwMap\n                .fetchNgwLayerItems<Bookmark, Polygon>({ resourceId: b.id })\n                .then((items) => {\n                  items.forEach((x) => {\n                    const elem = this._createBookmarkItem(\n                      x,\n                      labelField.keyname as keyof Bookmark,\n                    );\n                    container.appendChild(elem);\n                  });\n                });\n            }\n          }\n        });\n    });\n    container.appendChild(bookmarksContainer);\n\n    return container;\n  }\n\n  _createBookmarkItem<B extends Bookmark = Bookmark>(\n    bookmark: FeatureItem<B, Polygon>,\n    nameField: keyof B = 'name',\n  ): HTMLElement {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item bookmark';\n    const bookmarkBlock = document.createElement('div');\n    const nameValue = bookmark.fields[nameField];\n    bookmarkBlock.innerHTML = String(nameValue);\n    bookmarkBlock.onclick = () => {\n      const geoJson = new GeoJSON(bookmark.geom);\n      const lMap = this.ngwMap.mapAdapter.map;\n      lMap && lMap.fitBounds(geoJson.getBounds());\n    };\n    elem.appendChild(bookmarkBlock);\n    return elem;\n  }\n}\n","import type { TimeUnit } from '../interfaces';\n\nexport function formatTime(dt: Date, unit: TimeUnit = 'ms'): number | string {\n  const t = dt.getTime();\n  return unit === 's' ? t / 1000 : dt.toISOString();\n}\n","export const DATE_RANGE_SELECT: [days: number, text: string][] = [\n  [24, '1 день'],\n  [48, '2 дня'],\n  [72, '3 дня'],\n  [96, '4 дня'],\n  [120, '5 дней'],\n  [144, '6 дней'],\n  [168, 'неделя'],\n];\n\nexport const USERFIRE_ID = 'USERFIRE';\nexport const MODIS_ID = 'MODIS';\nexport const VIIRS_ID = 'VIIRS';\nexport const SENSOR_ID = 'SENSOR';\n\nexport let NOW = new Date();\n\n// update global NOW each hour for long session\nsetInterval(() => {\n  NOW = new Date();\n}, 60 * 60 * 1000);\n","import type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { FiresAdapterOptions, TimeUnit } from '../interfaces';\n\nexport function daysBehindRange(days: number, to?: Date): [Date, Date] {\n  const to_ = to ? to.getTime() : Date.now();\n  const from = to_ - Number(days) * 1000 * 60 * 60;\n  return [from, to_].map((x) => new Date(x)) as [Date, Date];\n}\n\nexport function daysBehindRangeFormat(\n  days: number,\n  unit: TimeUnit = 's',\n  to?: Date,\n): [number | string, number | string] {\n  return daysBehindRange(days, to).map((x) =>\n    unit === 'ISO'\n      ? new Date(x).toISOString()\n      : unit === 's'\n      ? Math.ceil(x.getTime()) / 1000\n      : x.getTime(),\n  ) as [number | string, number | string];\n}\n\nexport function daysBehindFilter(\n  days: number,\n  layer: FiresAdapterOptions,\n  to?: Date,\n): PropertiesFilter {\n  const { timeUnit, dateField } = layer.props;\n  const range = daysBehindRangeFormat(days, timeUnit, to);\n  return range.map((x, i) => [dateField, i ? 'le' : 'ge', x]);\n}\n","import './FiresContainer.css';\n\nimport { defined } from '@nextgis/utils';\n\nimport type { LayerAdapter, NgwMap } from '@nextgis/ngw-map';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { ResourceAdapter, NgwLayerOptions } from '@nextgis/ngw-kit';\nimport { FireResource } from '../../interfaces';\n\nexport interface LayersContainerOptions {\n  ngwMap: NgwMap;\n  layers: NgwLayerOptions<'GEOJSON'>[];\n}\n\nexport class LayersContainer<\n  O extends LayersContainerOptions = LayersContainerOptions,\n> {\n  protected readonly ngwMap: NgwMap;\n  protected _container: HTMLElement;\n\n  constructor(protected options: O) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  protected _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'fires-contentainer panel-content-padding ';\n\n    const firesEl = document.createElement('div');\n    firesEl.className = 'fires-contentainer__layers';\n    for (const f of this.options.layers) {\n      this._createFireItem(f, firesEl);\n    }\n    container.appendChild(firesEl);\n\n    return container;\n  }\n\n  protected onLayerAdd(id: string, cb: (layer: ResourceAdapter) => void): void {\n    const ngwMap = this.options.ngwMap;\n    const layer = ngwMap && (ngwMap.getLayer(id) as ResourceAdapter);\n    if (layer) {\n      cb(layer);\n    } else {\n      const onLayerAdd = (e: LayerAdapter) => {\n        if (e.id === id) {\n          cb(e as ResourceAdapter);\n          this.ngwMap.emitter.off('layer:add', onLayerAdd);\n        }\n      };\n      this.ngwMap.emitter.on('layer:add', onLayerAdd);\n    }\n  }\n\n  private _createFireItem(fire: FireResource, container: HTMLElement): void {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    const id = fire.id;\n    if (!defined(id)) return;\n\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = 'загрузка...';\n    container.appendChild(wrapper);\n\n    const createItem = (layer_: ResourceAdapter): void => {\n      const item = layer_.item;\n      wrapper.innerHTML = '';\n      if (item) {\n        const input = document.createElement('input');\n        input.setAttribute('type', 'checkbox');\n\n        input.checked = true;\n\n        // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n        //   input.checked = ev.value;\n        // });\n        input.onclick = () => {\n          this.ngwMap.toggleLayer(id, input.checked);\n        };\n\n        const name = document.createElement('span');\n        const displayName = item.resource.display_name.split('__')[0];\n        name.innerHTML = displayName.replace('fires', '').trim();\n        const symbol = this._createSymbol(fire);\n        elem.appendChild(input);\n        elem.appendChild(symbol);\n        elem.appendChild(name);\n        wrapper.appendChild(elem);\n      }\n    };\n    this.onLayerAdd(id, (layer) => createItem(layer));\n  }\n\n  private _createSymbol(fire: FireResource): HTMLElement {\n    const symbol = document.createElement('span');\n    symbol.className = 'item-symbol';\n    const { color, stroke, strokeColor } = fire.adapterOptions\n      ?.paint as CirclePaint;\n    if (typeof color === 'string') {\n      symbol.style.color = color;\n      symbol.style.backgroundColor = color;\n    }\n    if (stroke && typeof strokeColor === 'string') {\n      symbol.style.borderColor = strokeColor;\n    }\n    return symbol;\n  }\n}\n","import { formatTime } from '../../utils/formatTime';\nimport { createCalendar } from './createCalendar';\nimport { LayersContainer, LayersContainerOptions } from './LayersContainer';\n\nimport type { ResourceAdapter } from '@nextgis/ngw-kit';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { CreateCalendarOptions } from './createCalendar';\nimport type { FiresLayerProps } from '../../interfaces';\n\nexport interface FiresContainerOptions extends LayersContainerOptions {\n  dateRange: [Date | undefined, Date | undefined];\n  defaultDateRange: [Date | undefined, Date | undefined];\n  timedelta: number;\n  onDateChange?: () => void;\n}\n\nexport class FiresContainer extends LayersContainer<FiresContainerOptions> {\n  protected _createContainer(): HTMLElement {\n    const container = super._createContainer();\n\n    const calendarWrapper = this._createCalendar();\n    container.insertBefore(calendarWrapper, container.firstChild);\n    return container;\n  }\n\n  private _createCalendar(): HTMLElement {\n    const calendarWrapper = document.createElement('div');\n    const fires = this.options.layers;\n\n    const promises: Promise<ResourceAdapter>[] = [];\n    fires.forEach((x) => {\n      const id = x.id;\n      if (id) {\n        const promise = new Promise<ResourceAdapter>((resolve) => {\n          this.onLayerAdd(id, resolve);\n        });\n        promises.push(promise);\n      }\n    });\n    Promise.all(promises).then((fires) => {\n      const block = this._buildCalendarBlock(\n        fires,\n        this.options.dateRange,\n        this.options.defaultDateRange,\n      );\n      calendarWrapper.appendChild(block);\n    });\n\n    return calendarWrapper;\n  }\n\n  private _buildCalendarBlock(\n    layers: ResourceAdapter[],\n    extremeItems: [Date?, Date?],\n    defaultItems: [Date?, Date?],\n  ) {\n    const [min, max]: (Date | undefined)[] = extremeItems;\n    const [startDate, endDate]: (Date | undefined)[] = defaultItems;\n    const opt: CreateCalendarOptions = {\n      timedelta: this.options.timedelta,\n      onChange: (e) => {\n        for (const l of layers) {\n          const { dateField, timeUnit } = (l.options.props ||\n            {}) as FiresLayerProps;\n          if (dateField) {\n            const filter: PropertiesFilter = [];\n            if (e.start) {\n              filter.push([dateField, 'ge', formatTime(e.start, timeUnit)]);\n            }\n            if (e.end) {\n              filter.push([dateField, 'le', formatTime(e.end, timeUnit)]);\n            }\n            if (l.propertiesFilter) {\n              l.propertiesFilter(filter);\n            }\n          }\n        }\n        if (this.options.onDateChange) {\n          this.options.onDateChange();\n        }\n      },\n    };\n    if (min) {\n      opt.minDate = min;\n    }\n    if (startDate) {\n      opt.startDate = startDate;\n    }\n    if (max) {\n      opt.maxDate = max;\n    }\n    if (endDate) {\n      opt.endDate = endDate;\n    }\n    return createCalendar(opt);\n  }\n}\n","import 'flatpickr/dist/flatpickr.min.css';\nimport flatpickr from 'flatpickr';\n// import rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\nimport { Russian } from 'flatpickr/dist/l10n/ru.js';\nimport { DATE_RANGE_SELECT } from '../../constants';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { debounce } from '../../../@nextgis/packages/utils/src';\nexport interface CreateCalendarOptions {\n  maxDate?: Date;\n  minDate?: Date;\n  startDate?: Date;\n  endDate?: Date;\n  timedelta: number;\n  onChange: (val: { start?: Date; end?: Date }) => void;\n}\n\nexport function createCalendar(options: CreateCalendarOptions): HTMLElement {\n  const html = document.createElement('div');\n  html.className = 'field is-horizontal';\n  html.innerHTML = `\n    <div class=\"field\">\n        <input class=\"input input-from is-small\" type=\"text\" >\n    </div>\n\n    <div class=\"select is-small\">\n      <select class=\"select-input\">\n        ${DATE_RANGE_SELECT.map((x) => {\n          return `<option ${\n            options.timedelta === x[0] ? 'selected' : ''\n          } value=${x[0]}>${x[1]}</option>`;\n        })}\n      </select>\n    </div>\n    `;\n\n  // <div class=\"field\">\n  //     <input class=\"input input-to is-small\" type=\"text\" >\n  // </div>\n\n  const select = html.querySelector('.select-input') as HTMLSelectElement;\n  const inputFrom = html.querySelector('.input.input-from') as HTMLInputElement;\n  // const inputTo = html.querySelector('.input.input-to') as HTMLInputElement;\n  const { onChange, maxDate, minDate, startDate, endDate } = options;\n\n  const today = new Date();\n\n  const changeFunction = debounce((prop: { start: Date; end: Date }) => {\n    if (prop.start && prop.end) {\n      onChange(prop);\n    }\n  });\n\n  const defaultDate = startDate && endDate ? [startDate, endDate] : undefined;\n\n  const datepicker = flatpickr(inputFrom, {\n    mode: 'range',\n    locale: Russian,\n    allowInput: true,\n    maxDate: maxDate || today,\n    minDate,\n    defaultDate,\n    // plugins: [rangePlugin({ input: inputTo })],\n    onChange: ([start, end]) => {\n      select.value = '';\n      changeFunction({ start, end });\n    },\n  });\n\n  select.onchange = () => {\n    const [start, end] = daysBehindRange(Number(select.value), endDate);\n    datepicker.setDate([start, end]);\n    changeFunction({ start, end });\n  };\n\n  // calendar.on('select', () => {\n  //   // const val = calendar.value(); // string - string\n  //   onChange({ ...calendar.date });\n  // });\n\n  return html;\n}\n","import { fetchNgwLayerItems } from '@nextgis/ngw-kit';\nimport { NgwDateFormat } from '@nextgis/ngw-connector';\nimport { NOW } from '../constants';\n\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { FetchNgwItemsOptions, NgwLayerOptions } from '@nextgis/ngw-kit';\n\nexport function layerTimestampExtremum({\n  connector,\n  layer,\n}: {\n  connector: NgwConnector;\n  layer: NgwLayerOptions<'GEOJSON'>;\n}): Promise<[Date | undefined, Date | undefined]> {\n  const resource = layer.resource;\n  if (layer && resource && connector) {\n    const dateField = layer.adapterOptions?.props?.dateField || 'field_9';\n    return connector.getResourceIdOrFail(resource).then((resourceId) => {\n      const extremeReqOpt: FetchNgwItemsOptions = {\n        resourceId,\n        fields: [dateField],\n        geom: false,\n        connector,\n        limit: 1,\n      };\n      const extremePromises = [\n        fetchNgwLayerItems({ ...extremeReqOpt, orderBy: [dateField] }),\n        // fetchNgwLayerItems({ ...extremeReqOpt, orderBy: ['-' + dateField] }),\n      ];\n      return Promise.all(extremePromises).then(([minItem, maxItem]) => {\n        const [min] = [minItem, maxItem].map((items) => {\n          const item = items && items[0];\n          if (item) {\n            const ngwDate = item.fields[dateField] as NgwDateFormat;\n            if (ngwDate) {\n              return parseNgwDate(ngwDate);\n            }\n          }\n          return undefined;\n        });\n        const max = NOW;\n        return [min, max];\n      });\n    });\n  }\n  return Promise.resolve([undefined, undefined]);\n}\n\nfunction parseNgwDate(dt: NgwDateFormat): Date {\n  return new Date(dt.year, dt.month - 1, dt.day);\n}\n","import './MapSettingsPanel.css';\n// @ts-ignore\nimport Sidebar from 'leaflet-sidebar';\nimport 'leaflet-sidebar/src/L.Control.Sidebar.css';\n\nimport { NgwLayers } from '@nextgis/ngw-map';\n\nimport { ActionMap } from '../ActionMap';\nimport { CollapsiblePanel } from './CollapsiblePanel';\nimport { WebmapTreeItem } from './WebmapTreeItem';\nimport { BaseMapsContainer } from './BaseMapsContainer';\nimport { BookmarksContainer } from './BookmarksContainer';\nimport { FiresContainer } from './FiresContainer';\n\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type { MapSettingsPanelOptions } from './interfaces';\nimport { layerTimestampExtremum } from '../../utils/layerTimestampExtremum';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { NOW } from '../../constants';\nimport { LayersContainer } from './LayersContainer';\n\nconst OPTIONS: Partial<MapSettingsPanelOptions> = {\n  target: 'tree',\n  // width: 300\n};\n\nexport class MapSettingsPanel {\n  options: MapSettingsPanelOptions;\n\n  sidebar: Sidebar;\n\n  private _container: HTMLElement;\n  private _target?: HTMLElement;\n\n  private ngwLayers!: NgwLayers;\n\n  constructor(private actionMap: ActionMap, options: MapSettingsPanelOptions) {\n    this.options = { ...OPTIONS, ...options };\n    if (typeof this.options.target === 'string') {\n      const target = document.getElementById(this.options.target);\n      if (target) {\n        this._target = target;\n      } else {\n        throw new Error(\n          `No element with ID #${this.options.target} in document for webmap tree`,\n        );\n      }\n    } else if (this.options.target instanceof HTMLElement) {\n      this._target = this.options.target;\n    }\n    this.sidebar = new Sidebar(this._target, {\n      closeButton: false,\n      position: 'left',\n      autoPan: false,\n    });\n    this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n\n    this.ngwLayers = this.options.ngwLayers;\n\n    this._container = this._createContainer();\n    if (!this.options.status) {\n      this.hide();\n    }\n    this._target && this._target.appendChild(this._container);\n  }\n\n  show(): void {\n    this._container.classList.remove('hidden');\n    this.sidebar.show();\n  }\n\n  hide(): void {\n    this.sidebar.hide();\n    this._container.classList.add('hidden');\n  }\n\n  private _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'tree-container';\n\n    if (this.options.width !== undefined) {\n      container.style.width = this.options.width + 'px';\n    }\n\n    if (this.options.userFires || this.options.firms) {\n      new CollapsiblePanel({\n        title: 'Пожары',\n        content: () => this._createFiresContainer(),\n        parent: container,\n      });\n    }\n    if (this.options.sensors) {\n      new CollapsiblePanel({\n        title: 'Датчики',\n        content: () => this._createSensorContainer(),\n        parent: container,\n      });\n    }\n    new CollapsiblePanel({\n      title: 'Базовые слои',\n      content: () => this._createNgwLayers(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Подложки',\n      content: () => this._createBasemapsContainer(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Закладки',\n      content: () => this._createBookmarksContainer(),\n      open: false,\n      parent: container,\n    });\n\n    return container;\n  }\n\n  private _createNgwLayers() {\n    const container = document.createElement('div');\n    container.className = 'webmap-tree-container';\n    for (const n in this.ngwLayers) {\n      const ngwLayer = this.ngwLayers[n];\n      const tree = new WebmapTreeItem(ngwLayer.layer.layer);\n      const treeContainer = tree.getContainer();\n      if (treeContainer) {\n        container.appendChild(treeContainer);\n      }\n    }\n    return container;\n  }\n\n  private _createBookmarksContainer() {\n    const container = document.createElement('div');\n    const bookmarks = this.options.bookmarks;\n    if (bookmarks) {\n      const bookmarkContainer = new BookmarksContainer({\n        bookmarks,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(bookmarkContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createFiresContainer() {\n    const container = document.createElement('div');\n    const { firms, userFires } = this.options;\n    let dateRange: [Date | undefined, Date | undefined] = [\n      undefined,\n      undefined,\n    ];\n    if (firms || userFires) {\n      const fires: NgwLayerOptions<'GEOJSON'>[] = [];\n      if (userFires && userFires.id) {\n        fires.push(userFires);\n        dateRange = await layerTimestampExtremum({\n          layer: userFires,\n          connector: this.options.ngwMap.connector,\n        });\n      }\n      if (firms) {\n        firms.forEach((x) => fires.push(x));\n      }\n      const timedelta = this.actionMap.options.timedelta || 24;\n      const defaultDateRange = daysBehindRange(timedelta, NOW);\n      const firesContainer = new FiresContainer({\n        layers: fires,\n        ngwMap: this.options.ngwMap,\n        dateRange,\n        defaultDateRange,\n        timedelta: this.actionMap.options.timedelta || 72,\n        onDateChange: () => {\n          if (this.options.onDateChange) {\n            this.options.onDateChange();\n          }\n        },\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createSensorContainer() {\n    const container = document.createElement('div');\n    const { sensors } = this.options;\n    if (sensors) {\n      const firesContainer = new LayersContainer({\n        layers: [sensors],\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createBasemapsContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.firms;\n    if (fires) {\n      const baseMapsContainer = new BaseMapsContainer({\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(baseMapsContainer.getContainer());\n    }\n    return container;\n  }\n}\n","import './GetCoordinateControl.css';\nimport '../ToggleControl.css';\nimport { ActionMap } from '../ActionMap';\nimport {\n  ToggleControlOptions,\n  MapClickEvent,\n  VectorLayerAdapter,\n  LayerDefinition,\n} from '@nextgis/ngw-map';\nimport { Clipboard } from '@nextgis/utils';\n\nimport { EventEmitter } from 'events';\nimport { Feature, Point } from 'geojson';\n\nexport interface GetCoordinatePanelControlOptions {\n  toggle?: (status: boolean) => void;\n}\n\nexport class GetCoordinatePanelControl implements ToggleControlOptions {\n  html = '<i class=\"fas fa-map-pin btn-control-icon \"></i>';\n  title = {\n    off: 'Полученить координаты с карты',\n    on: 'Выключить режим получения координат с карты',\n  };\n\n  addClass = 'toggle-control webmap-tree-control';\n  addClassOn = 'active';\n\n  status = false;\n\n  emitter = new EventEmitter();\n\n  private _toggle?: (status: boolean) => void;\n  private __onMapClick?: (e: MapClickEvent) => void;\n  private _layer!: VectorLayerAdapter;\n\n  constructor(\n    private actionMap: ActionMap,\n    options: GetCoordinatePanelControlOptions = {},\n  ) {\n    this._toggle = options.toggle;\n    this.actionMap.ngwMap\n      .addLayer('GEOJSON', {\n        id: 'show-coordinate-click',\n        visibility: true,\n        paint: { radius: 6 },\n        popup: true,\n        popupOptions: {\n          createPopupContent: (d: LayerDefinition<Feature<Point>>) => {\n            if (d.feature) {\n              return this._createPopupContent(\n                d.feature.geometry.coordinates.map((x) => x.toFixed(5)),\n              );\n            }\n          },\n        },\n      })\n      .then((layer) => {\n        if (layer) {\n          this._layer = layer;\n        }\n      });\n  }\n\n  onClick(status?: boolean): void {\n    this.toggleControl(status);\n  }\n\n  show(): void {\n    this.actionMap.ngwMap.setCursor('crosshair');\n    this._removeClickListener();\n    this.__onMapClick = (e: MapClickEvent) => this._onMapClick(e);\n    this.actionMap.ngwMap.emitter.on('click', this.__onMapClick);\n  }\n\n  hide(): void {\n    this.actionMap.ngwMap.setCursor('default');\n    this._removeClickListener();\n    this.actionMap.ngwMap.clearLayerData(this._layer);\n  }\n\n  private _removeClickListener() {\n    if (this.__onMapClick) {\n      this.actionMap.ngwMap.emitter.off('click', this.__onMapClick);\n      this.__onMapClick = undefined;\n    }\n  }\n\n  private _onMapClick(e: MapClickEvent) {\n    const feature: Feature<Point> = {\n      type: 'Feature',\n      properties: {},\n      geometry: { type: 'Point', coordinates: e.lngLat },\n    };\n    this.actionMap.ngwMap.setLayerData(this._layer, feature);\n  }\n\n  private toggleControl(status?: boolean) {\n    status = status !== undefined ? status : !this.status;\n    if (status) {\n      this.show();\n    } else {\n      this.hide();\n    }\n\n    this.status = status;\n    if (this._toggle) {\n      this._toggle(status);\n    }\n    this.emitter.emit('status', this.status);\n  }\n\n  private _createPopupContent([lng, lat]: string[]) {\n    const content = document.createElement('div');\n    const latLngStr = `${lat}, ${lng}`;\n    content.innerHTML = `\n    <span>Широта/Долгота:</span>\n    <span class=\"lat-lng-coord\"> ${latLngStr}</span>\n    <a href=\"#\" class=\"copy-to-clipboard\">\n    <i class=\"far fa-clipboard\"></i>\n    </a>`;\n    const clipBoardLink = content.getElementsByClassName(\n      'copy-to-clipboard',\n    )[0] as HTMLLinkElement;\n    clipBoardLink.onclick = () => {\n      Clipboard.copy(latLngStr);\n    };\n\n    return content;\n  }\n}\n","import type { Messages } from './interfaces';\n\nexport const I18N: Record<string, Messages> = {\n  en: {\n    linearMeasurement: 'Distance measurement',\n    areaMeasurement: 'Area measurement',\n    start: 'Start',\n    meter: 'm',\n    kilometer: 'km',\n    squareMeter: 'm²',\n    squareKilometers: 'km²',\n  },\n  ru: {\n    linearMeasurement: 'Измерение расстояния',\n    areaMeasurement: 'Измерение площади',\n    start: 'Старт',\n    meter: 'м',\n    kilometer: 'км',\n    squareMeter: 'м²',\n    squareKilometers: 'км²',\n  },\n};\n","import type { LatLng } from 'leaflet';\nimport type { Messages } from './interfaces';\n\nexport function toRadians(deg: number): number {\n  return deg * (Math.PI / 180);\n}\nexport function square(x: number): number {\n  return Math.pow(x, 2);\n}\nexport function getDistanceString(\n  distance: number,\n  messages: { meter: string; kilometer: string },\n): string {\n  return distance < 1e3\n    ? numberFormat(distance, 0) + ' ' + messages.meter\n    : numberFormat(distance / 1e3, 2) + ' ' + messages.kilometer;\n}\n\nexport function getDistance(latlng1: LatLng, latlng2: LatLng): number {\n  const earthRadius = 6378137; // radius of the earth in meter\n  const lat1 = toRadians(latlng1.lat);\n  const lat2 = toRadians(latlng2.lat);\n  const lat_dif = lat2 - lat1;\n  const lng_dif = toRadians(latlng2.lng - latlng1.lng);\n  const a =\n    square(Math.sin(lat_dif / 2)) +\n    Math.cos(lat1) * Math.cos(lat2) * square(Math.sin(lng_dif / 2));\n  return 2 * earthRadius * Math.asin(Math.sqrt(a));\n}\nexport function getAreaString(points: LatLng[], messages: Messages): string {\n  const a = Math.round(getArea(points));\n  return a < 1e6\n    ? numberFormat(a, 0) + ' ' + messages.squareMeter\n    : numberFormat(a / 1e6, 2) + ' ' + messages.squareKilometers;\n}\nexport function getArea(points: LatLng[]): number {\n  const earthRadius = 6378137;\n  let area = 0;\n  const len = points.length;\n  let x1 = points[len - 1].lng;\n  let y1 = points[len - 1].lat;\n  for (let i = 0; i < len; i++) {\n    const x2 = points[i].lng;\n    const y2 = points[i].lat;\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return Math.abs((area * earthRadius * earthRadius) / 2.0);\n}\nexport function numberFormat(number: number, decimals = 2): string {\n  const thousandsSep = ',';\n  const sign = number < 0 ? '-' : '';\n  const num = Math.abs(+number || 0);\n  const intPart = parseInt(num.toFixed(decimals), 10) + '';\n  const j = intPart.length > 3 ? intPart.length % 3 : 0;\n\n  return [\n    sign,\n    j ? intPart.substr(0, j) + thousandsSep : '',\n    intPart.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSep),\n    decimals\n      ? '.' +\n        Math.abs(num - Number(intPart))\n          .toFixed(decimals)\n          .slice(2)\n      : '',\n  ].join('');\n}\n","import { Layer, Point, Util, Browser, DomUtil, latLng } from 'leaflet';\n\nimport type { Map, LayerOptions, LatLng, ZoomAnimEvent } from 'leaflet';\n\nexport interface MeasureLabelOptions extends LayerOptions {\n  offset?: Point;\n  latlng: null | LatLng;\n  content: string;\n  className: string;\n}\n\nexport class MeasureLabel extends Layer {\n  options: MeasureLabelOptions = {\n    latlng: null,\n    content: '',\n    className: '',\n  };\n\n  protected _map!: Map;\n  private _offset = new Point(0, 30);\n  private _container?: HTMLElement;\n  private _contentNode?: HTMLElement;\n  private _closeButton?: HTMLElement;\n  private _containerBottom?: number;\n  private _containerLeft?: number;\n\n  constructor(options: MeasureLabelOptions) {\n    super(options);\n    Util.setOptions(this, options);\n    if (this.options.offset) {\n      this._offset = this.options.offset;\n    }\n  }\n  onAdd(map: Map): this {\n    this._map = map;\n    this._container || this._initLayout();\n    if (this._container) {\n      map.getPanes().popupPane.appendChild(this._container);\n    }\n    map.on('viewreset', this._updatePosition, this);\n    if (Browser.any3d) {\n      map.on('zoomanim', this._zoomAnimation, this);\n    }\n    this._update();\n    return this;\n  }\n  addTo(map: Map): this {\n    map.addLayer(this);\n    return this;\n  }\n  onRemove(map: Map): this {\n    if (this._container) {\n      map.getPanes().popupPane.removeChild(this._container);\n    }\n    map.off('viewreset', this._updatePosition, this);\n    map.off('zoomanim', this._zoomAnimation, this);\n    (this._map as any) = null;\n    return this;\n  }\n  setLatLng(latlng: LatLng): this {\n    this.options.latlng = latLng(latlng);\n    this._updatePosition();\n    return this;\n  }\n  setContent(content: string): this {\n    this.options.content = content;\n    this._updateContent();\n    return this;\n  }\n  enableClose(): HTMLElement {\n    this._closeButton = DomUtil.create('span', 'close', this._container);\n    this._closeButton.innerHTML =\n      '<svg class=\"icon\" viewBox=\"0 0 40 40\"><path stroke=\"#FF0000\" stroke-width=\"3\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" /></svg>';\n    return this._closeButton;\n  }\n  private _initLayout(): void {\n    this._container = DomUtil.create('div', this.options.className);\n    this._contentNode = DomUtil.create('div', 'content', this._container);\n  }\n  private _update(): void {\n    this._map && (this._updateContent(), this._updatePosition());\n  }\n  private _updateContent(): void {\n    if (this._contentNode && this.options.content) {\n      if (typeof this.options.content == 'string') {\n        this._contentNode.innerHTML = this.options.content;\n      } else {\n        this._contentNode.innerHTML = '';\n        this._contentNode.appendChild(this.options.content);\n      }\n    }\n  }\n  private _updatePosition(): void {\n    if (this.options.latlng && this._container) {\n      const point = this._map.latLngToLayerPoint(this.options.latlng);\n      const is3D = Browser.any3d;\n      const offset = this._offset;\n      is3D && DomUtil.setPosition(this._container, point);\n      this._containerBottom = -offset.y - (is3D ? 0 : point.y);\n      this._containerLeft = offset.x + (is3D ? 0 : point.x);\n      this._container.style.bottom = this._containerBottom + 'px';\n      this._container.style.left = this._containerLeft + 'px';\n    }\n  }\n  private _zoomAnimation(a: ZoomAnimEvent): void {\n    if (this._container) {\n      const point = (this._map as any)._latLngToNewLayerPoint(\n        this.options.latlng,\n        a.zoom,\n        a.center,\n      ) as Point;\n      DomUtil.setPosition(this._container, point);\n    }\n  }\n}\n","import {\n  Handler,\n  Util,\n  DomUtil,\n  DomEvent,\n  Polygon,\n  Polyline,\n  CircleMarker,\n} from 'leaflet';\n\nimport { I18N } from './i18n';\nimport { getAreaString, getDistance, getDistanceString } from './utils';\nimport { MeasureLabel } from './MeasureLabel';\n\nimport type { Map, LatLng, LeafletMouseEvent } from 'leaflet';\nimport {\n  DirectPath,\n  MeasureActionOptions,\n  MeasureModel,\n  Trail,\n} from './interfaces';\n\nexport class MeasureAction extends Handler {\n  options: MeasureActionOptions = {\n    color: '#FF0080',\n    model: 'distance',\n    messages: I18N['en'],\n  };\n\n  private _map: Map;\n  private _measureHandler: this;\n  private _finished: boolean;\n  private _startMove?: boolean;\n  private _measurementStarted?: boolean;\n  private _lastPoint?: LatLng;\n  private _totalDistance = 0;\n  private _trail: Trail = { overlays: [], points: [] };\n  private _directPath?: DirectPath;\n  private _measurePath?: DirectPath;\n\n  constructor(map: Map, options: MeasureActionOptions) {\n    super(map);\n    this._map = map;\n    this._measureHandler = this;\n    this._finished = false;\n    Util.setOptions(this, options);\n  }\n  setModel(model: MeasureModel): this {\n    this.options.model = model;\n    return this;\n  }\n  addHooks(): void {\n    this._activeMeasure();\n  }\n  removeHooks(): void {\n    this._disableMeasure();\n  }\n  private _activeMeasure(): void {\n    this._measureHandler._measurementStarted &&\n      this._measureHandler._finishMeasure();\n    this._measurementStarted ? this._finishMeasure() : this._enableMeasure();\n  }\n  private _onMouseClick(event: LeafletMouseEvent): void {\n    const latlng = event.latlng || this._map.mouseEventToLatLng(event as any);\n    if (this._lastPoint && latlng.equals(this._lastPoint)) {\n      return;\n    }\n    if (this._trail.points.length > 0) {\n      const points = this._trail.points;\n      points.push(latlng);\n      const length = points.length;\n      this._totalDistance += getDistance(\n        points[length - 2],\n        points[length - 1],\n      );\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          getDistanceString(this._totalDistance, this.options.messages),\n          'leaflet-measure-label',\n        );\n      }\n    } else {\n      this._totalDistance = 0;\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          this.options.messages.start,\n          'leaflet-measure-label',\n        );\n      }\n      this._trail.points.push(latlng);\n    }\n    this._lastPoint = latlng;\n    this._startMove = false;\n  }\n  private _onMouseMove(event: LeafletMouseEvent): void {\n    const latlng = event.latlng;\n    if (this._directPath && this._trail.points.length > 0) {\n      if (this._startMove) {\n        this._directPath.setLatLngs(this._trail.points.concat(latlng));\n      } else {\n        this._directPath.setLatLngs([latlng]);\n        this._startMove = true;\n      }\n    }\n  }\n  private _enableMeasure(): void {\n    this._trail = {\n      overlays: [],\n      points: [],\n    };\n    const map = this._map;\n    DomUtil.addClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.disable();\n    this._measurementStarted = true;\n    map.on('click', this._onMouseClick, this);\n    map.on('dblclick', this._finishMeasure, this);\n    map.on('contextmenu', this._finishMeasure, this);\n    map.doubleClickZoom.disable();\n    map.on('mousemove', this._onMouseMove, this);\n    map.fire('measure:start');\n  }\n  private _disableMeasure(): void {\n    const map = this._map;\n    DomUtil.removeClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.enable();\n    map.off('click', this._onMouseClick, this);\n    map.off('dblclick', this._finishMeasure, this);\n    map.off('contextmenu', this._finishMeasure, this);\n    map.off('mousemove', this._onMouseMove, this);\n    map.doubleClickZoom.enable();\n    this._measurementStarted = this._startMove = false;\n    if (!this._finished) {\n      this._clearOverlay.call(this);\n    }\n    map.fire('measure:stop');\n  }\n  private _finishMeasure(event?: LeafletMouseEvent): void {\n    if (this._trail.points.length > 0) {\n      if (this._trail.points.length > 1) {\n        if (this._directPath && (!event || event.type === 'contextmenu')) {\n          this._directPath.setLatLngs(this._trail.points);\n        }\n        if (this._lastPoint) {\n          if (this.options.model === 'area') {\n            this._addLable(\n              this._lastPoint,\n              getAreaString(this._trail.points, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          } else {\n            this._addLable(\n              this._lastPoint,\n              getDistanceString(this._totalDistance, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          }\n        }\n        this._directPath && this._map.removeLayer(this._directPath);\n        this._finished = true;\n      } else {\n        this._clearOverlay.call(this);\n      }\n    }\n    this.disable();\n  }\n  private _resetDirectPath(latlng: LatLng): void {\n    if (!this._directPath) {\n      let directPath: DirectPath;\n      if (this.options.model === 'area') {\n        directPath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          fillOpacity: 0,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          interactive: false,\n        });\n        directPath = polyline;\n      }\n      this._map.addLayer(directPath);\n      this._trail.overlays.push(directPath);\n      this._directPath = directPath;\n    } else {\n      this._directPath.addLatLng(latlng);\n    }\n  }\n  private _addMeasurePoint(latlng: LatLng): void {\n    if (!this._measurePath) {\n      let measurePath: DirectPath;\n      if (this.options.model === 'area') {\n        measurePath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          fillColor: this.options.color,\n          fillOpacity: 0.5,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          interactive: false,\n        });\n        measurePath = polyline;\n      }\n      this._map.addLayer(measurePath);\n      this._trail.overlays.push(measurePath);\n      this._measurePath = measurePath;\n    } else {\n      this._measurePath.addLatLng(latlng);\n    }\n    this._resetDirectPath(latlng);\n  }\n  private _addMarker(latLng: LatLng): void {\n    const marker = new CircleMarker(latLng, {\n      color: this.options.color,\n      opacity: 1,\n      weight: 1,\n      fillColor: '#FFFFFF',\n      fill: true,\n      fillOpacity: 1,\n      radius: 3,\n      interactive: false,\n    });\n    this._map.addLayer(marker);\n    this._trail.overlays.push(marker);\n  }\n  private _addLable(\n    latlng: LatLng,\n    content: string,\n    className: string,\n    ended?: boolean,\n  ): void {\n    const lable = new MeasureLabel({\n      latlng,\n      content,\n      className,\n    });\n    this._map.addLayer(lable);\n    this._trail.overlays.push(lable);\n    if (ended) {\n      const closeButton = lable.enableClose();\n      DomEvent.on(\n        closeButton,\n        'click',\n        (e) => {\n          DomEvent.stopPropagation(e);\n          this._clearOverlay();\n        },\n        this,\n      );\n    }\n  }\n  private _clearOverlay(): void {\n    const overlays = this._trail.overlays;\n    let i = 0,\n      length;\n    for (length = overlays.length; i < length; i++) {\n      this._map.removeLayer(overlays[i]);\n    }\n  }\n}\n","import { Control, DomUtil, DomEvent, Util } from 'leaflet';\nimport { I18N } from './i18n';\nimport { MeasureAction } from './MeasureAction';\n\nimport type { Map, Handler } from 'leaflet';\nimport type { MeasureOptions } from './interfaces';\n\nexport class Measure extends Control {\n  options: MeasureOptions = {\n    position: 'topright',\n    title: 'Measurement',\n    collapsed: true,\n    color: '#FF0080',\n    locale: 'en',\n    messages: I18N['en'],\n  };\n\n  private _map?: Map;\n  private _container?: HTMLElement;\n  private _link?: HTMLAnchorElement;\n  private _contents?: HTMLElement;\n  private _measureHandler?: Handler;\n\n  constructor(options: Partial<MeasureOptions>) {\n    super(options);\n    Util.setOptions(this, options);\n    const locale = options.locale;\n    if (locale && locale !== 'en') {\n      const messages = I18N[locale];\n      if (messages) {\n        this.options.messages = { ...I18N, ...messages };\n      } else {\n        console.error(\n          'Measure control has no messages for ' +\n            this.options.locale +\n            ' locale',\n        );\n      }\n    }\n  }\n  onAdd(map: Map): HTMLElement {\n    this._map = map;\n    return this._container || this._initLayout();\n  }\n  disableMeasure(): void {\n    if (this._measureHandler) {\n      this._measureHandler.disable();\n      this._measureHandler = undefined;\n    }\n  }\n  private _buildContainer(): HTMLElement {\n    this._container = DomUtil.create(\n      'div',\n      'leaflet-control-measure leaflet-bar leaflet-control',\n    );\n\n    this._contents = DomUtil.create(\n      'div',\n      'leaflet-measure-contents',\n      this._container,\n    );\n\n    this._link = DomUtil.create('a', 'leaflet-measure-toggle', this._container);\n    this._link.title = this.options.title || 'Measurement';\n    this._link.href = '#';\n\n    // if (this.options.title) {\n    //   var title = DomUtil.create('h3', '', this._contents);\n    //   title.innerText = this.options.title;\n    // }\n\n    this._buildItems();\n    return this._container;\n  }\n  private _buildItems(): void {\n    const ele_ul = DomUtil.create(\n      'ul',\n      'leaflet-measure-actions',\n      this._contents,\n    );\n    let ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_line = DomUtil.create('a', 'start', ele_li);\n    ele_link_line.innerText = this.options.messages.linearMeasurement;\n    ele_link_line.href = '#';\n    DomEvent.disableClickPropagation(ele_link_line);\n    DomEvent.on(ele_link_line, 'click', this._enableMeasureLine, this);\n\n    ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_area = DomUtil.create(\n      'a',\n      'leaflet-measure-action start',\n      ele_li,\n    );\n    ele_link_area.innerText = this.options.messages.areaMeasurement;\n    ele_link_area.href = '#';\n    DomEvent.disableClickPropagation(ele_link_area);\n    DomEvent.on(ele_link_area, 'click', this._enableMeasureArea, this);\n  }\n  private _initLayout(): HTMLElement {\n    const container = this._buildContainer();\n    DomEvent.disableClickPropagation(container);\n    DomEvent.disableScrollPropagation(container);\n    if (this.options.collapsed) {\n      DomEvent.on(\n        container,\n        {\n          mouseenter: this._expand,\n          mouseleave: this._collapse,\n        },\n        this,\n      );\n    } else {\n      this._expand();\n    }\n    return container;\n  }\n  private _enableMeasureLine(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'distance',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _enableMeasureArea(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'area',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _expand(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'none';\n      DomUtil.addClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n  private _collapse(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'block';\n      DomUtil.removeClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n}\n","export const StopToggleControlsCb: Array<{\n  name: string;\n  stop: () => void;\n}> = [];\n\nexport function addStopToggleControl(name: string, stop: () => void): void {\n  StopToggleControlsCb.push({ name, stop });\n}\n\nexport function stopToggleControlsFor(excludeControlName?: string): void {\n  StopToggleControlsCb.forEach((x) => {\n    if (x.name !== excludeControlName) {\n      x.stop();\n    }\n  });\n}\n","import { Measure } from '../assets/Leaflet.Measure-master/src';\nimport '../assets/Leaflet.Measure-master/src/leaflet.measure.css';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nimport type { Map } from 'leaflet';\n\nexport function createMeasureControl(ngwMap: NgwMap): void {\n  // @ts-ignore\n  const control = new Measure({ locale: 'ru' });\n  ngwMap.addControl(control, 'top-left');\n\n  ngwMap.onLoad().then(() => {\n    const map = ngwMap.mapAdapter.map as Map;\n    if (map) {\n      map.on('measure:start', () => {\n        stopToggleControlsFor('measure');\n        ngwMap.disableSelection();\n      });\n      map.on('measure:stop', () => {\n        ngwMap.setCursor('default');\n        ngwMap.enableSelection();\n      });\n    }\n    addStopToggleControl('measure', () => {\n      control.disableMeasure();\n    });\n  });\n}\n","import 'leaflet/dist/leaflet.css';\nimport './ActionMap.css';\n\nimport { Control, Map, Layer } from 'leaflet';\n// @ts-ignore\nimport ShareButtons from 'share-buttons/dist/share-buttons';\n\nimport {\n  NgwMap,\n  NgwLayers,\n  LocationEvent,\n  ToggleControl,\n  VectorAdapterOptions,\n} from '@nextgis/ngw-map';\nimport { CirclePaint } from '@nextgis/paint';\nimport {\n  NgwIdentify,\n  NgwLayerOptions,\n  getIdentifyItems,\n} from '@nextgis/ngw-kit';\nimport { getIcon } from '@nextgis/icons';\nimport MapAdapter from '@nextgis/leaflet-map-adapter';\nimport UrlRuntimeParams from '@nextgis/url-runtime-params';\nimport { QmsAdapterOptions } from '@nextgis/qms-kit';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { ResourceHierarchy } from '@nextgis/ngw-connector';\n\nimport { Popup } from './Popup';\nimport { MapSettingsPanel } from './MapSettingsPanel/MapSettingsPanel';\nimport { GetCoordinatePanelControl } from './GetCoordinateControl/GetCoordinateControl';\nimport { createMeasureControl } from './createMeasureControl';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\nimport { daysBehindFilter } from '../utils/daysBehindRange';\nimport {\n  AppOptions,\n  FiresAdapterOptions,\n  FirmsLayerOptions,\n  SensorLayerOptions,\n  UserFiresLayerOptions,\n} from '../interfaces';\nimport { NOW } from '../constants';\n\nexport class ActionMap {\n  ngwMap!: NgwMap<Map, Layer, any>;\n\n  tree?: MapSettingsPanel;\n  treeControl?: Control & ToggleControl;\n\n  authControl?: Control & ToggleControl;\n  popup: Popup;\n\n  private _promises: { [name: string]: CancelablePromise<any> } = {};\n\n  constructor(public options: Partial<AppOptions>) {\n    this.popup = new Popup();\n  }\n\n  async create(opt: Partial<AppOptions>): Promise<void> {\n    // const auth = new Auth(opt.mapOptions);\n    const mapOpt = { ...opt.mapOptions };\n    // try {\n    //   await auth.login();\n    //   mapOpt.connector = auth.connector;\n    // } catch (er) {\n    //   // cancel login\n    // }\n\n    const { basemaps, firms, userFires, sensors } = opt;\n\n    const ngwMap = new NgwMap<Map, Layer>({\n      mapAdapter: new MapAdapter(),\n      controls: [],\n      minZoom: 4,\n      runtimeParams: [new UrlRuntimeParams()],\n      ...mapOpt,\n    });\n\n    this.ngwMap = ngwMap;\n\n    ngwMap.setCursor('default');\n    this.popup.setNgwMap(ngwMap);\n\n    if (basemaps) {\n      ngwMap.onLoad().then(() =>\n        basemaps.forEach((x, i) => {\n          ngwMap.addBaseLayer<any, QmsAdapterOptions>('QMS', {\n            ...x,\n            visibility: i === 0,\n          });\n        }),\n      );\n    }\n    ngwMap.getPaintFunctions = { base: getIcon };\n\n    ngwMap.addControl('ZOOM', 'top-left');\n    this._createLocateControl();\n    ngwMap.addControl('ATTRIBUTION', 'bottom-right', {\n      customAttribution: [\n        '<a href=\"https://nextgis.com\" target=\"_blank\">©NextGIS</a>',\n      ],\n    });\n    createMeasureControl(ngwMap);\n    this._createShareControl();\n    // await this._createAuthControl(auth);\n    // this.ngwMap.addControl(this.authControl, 'top-right');\n\n    const ngwLayers = await ngwMap.getNgwLayers();\n    const bookmarks: ResourceHierarchy[] = [];\n    Object.values(ngwLayers).forEach((x) => {\n      const bookmark =\n        x.layer.item &&\n        x.layer.item.webmap &&\n        x.layer.item.webmap.bookmark_resource;\n      if (bookmark) {\n        bookmarks.push(bookmark);\n      }\n    });\n\n    await this._addFireLayer(opt.userFires);\n    await this._addFirms(opt.firms);\n    await this._addSensors(opt.sensors);\n    this._createGetCoordinateControl();\n\n    this._addTreeControl({\n      ngwLayers,\n      firms,\n      sensors,\n      userFires,\n      bookmarks,\n    });\n\n    this._addEventsListeners();\n  }\n\n  private _locate() {\n    const locationfound = (e: LocationEvent) => {\n      const lngLat = e.lngLat;\n      this.ngwMap.setCenter(lngLat);\n    };\n\n    this.ngwMap.locate({ setView: false }, { locationfound });\n  }\n\n  // private async _createAuthControl(auth: Auth) {\n  //   const authBtn = document.getElementsByClassName(\n  //     'js-auth-btn',\n  //   )[0] as HTMLElement;\n  //   const getStatus = () => {\n  //     return !!(this.ngwMap.connector && this.ngwMap.connector.user);\n  //   };\n  //   const onClick = () => {\n  //     auth.logout();\n  //     window.location.reload();\n  //   };\n  //   authBtn.innerHTML = getStatus() ? 'Выйти' : 'Войти';\n  //   authBtn.style.display = 'block';\n  //   authBtn.addEventListener('click', onClick);\n  // }\n\n  private _createShareControl() {\n    const shareModal = document.getElementsByClassName('js-modal')[0];\n    const closeModalBtn = document.getElementsByClassName('js-modal-close')[0];\n    const shareModalContent = document.getElementsByClassName(\n      'js-share-modal-content',\n    )[0];\n    const shareInput = document.getElementsByClassName(\n      'js-share-input',\n    )[0] as HTMLInputElement;\n    const showModal = () => {\n      const href = location.href;\n      const html = this._createShareModalContent(href);\n      shareInput.value = href;\n      shareModalContent.innerHTML = html;\n      ShareButtons.update();\n      shareModal.classList.add('is-active');\n    };\n    const closeModal = () => {\n      shareModalContent.innerHTML = '';\n      shareModal.classList.remove('is-active');\n    };\n    closeModalBtn.addEventListener('click', () => {\n      closeModal();\n    });\n\n    const shareControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-share-alt btn-control-icon \"></i>',\n      onClick() {\n        showModal();\n      },\n    });\n    this.ngwMap.addControl(shareControl, 'bottom-right');\n  }\n\n  private async _createGetCoordinateControl() {\n    const control = new GetCoordinatePanelControl(this, {\n      toggle: (status) => {\n        if (status) {\n          stopToggleControlsFor('coordinate');\n          this.ngwMap.disableSelection();\n        } else {\n          this.ngwMap.enableSelection();\n        }\n      },\n    });\n    const toggleControl = await this.ngwMap.createToggleControl(control);\n    this.ngwMap.addControl(toggleControl, 'top-left');\n    addStopToggleControl('coordinate', () => toggleControl.onClick(false));\n  }\n\n  private _createLocateControl() {\n    const onClick = () => this._locate();\n    const locateControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-location-arrow btn-control-icon\"></i>',\n      title: 'Найти меня на карте',\n      onClick,\n    });\n    this.ngwMap.addControl(locateControl, 'top-left');\n  }\n\n  private _createShareModalContent(url: string) {\n    const social = [\n      { id: 'tw', name: 'Twitter', icon: 'fab fa-twitter' },\n      { id: 'vk', name: 'VK', icon: 'fab fa-vk' },\n      { id: 'fb', name: 'Facebook', icon: 'fab fa-facebook-square' },\n    ];\n\n    const html = `<div class=\"buttons share-btn js-share-btn\" data-url=\"${url}\" data-title=\"\" data-desc=\"\">\n      ${social\n        .map(\n          (x) => `<a class=\"button is-primary\" data-id=\"${x.id}\">\n                    <span class=\"icon\">\n                        <i class=\"${x.icon}\"></i>\n                    </span>\n                    <span>${x.name}</span>\n                </a>`,\n        )\n        .join('')}\n    </div>`;\n    return html;\n  }\n\n  private async _addFireLayer(\n    x?: NgwLayerOptions<'GEOJSON'>,\n    adapterOptions?: VectorAdapterOptions,\n  ) {\n    if (x) {\n      const paint =\n        x.adapterOptions && x.adapterOptions.paint\n          ? (x.adapterOptions.paint as CirclePaint)\n          : {};\n      return this.ngwMap.addNgwLayer({\n        resource: x.resource,\n        id: x.id,\n        adapterOptions: {\n          ...x.adapterOptions,\n          paint: {\n            ...paint,\n            radius: 5,\n          },\n          selectable: true,\n          selectedPaint: {\n            ...paint,\n            radius: 7,\n          },\n          ...adapterOptions,\n          propertiesFilter: daysBehindFilter(\n            this.options.timedelta || 24,\n            x.adapterOptions as FiresAdapterOptions,\n            NOW,\n          ),\n        },\n      });\n    }\n  }\n\n  private async _addFirms(fires?: FirmsLayerOptions[]) {\n    if (fires) {\n      for (const x of fires) {\n        await this._addFireLayer(x);\n      }\n    }\n  }\n\n  private async _addSensors(sensor?: SensorLayerOptions) {\n    return sensor && this.ngwMap.addNgwLayer(sensor);\n  }\n\n  private async _addTreeControl(opt: {\n    ngwLayers: NgwLayers;\n    firms?: FirmsLayerOptions[];\n    userFires?: UserFiresLayerOptions;\n    sensors?: SensorLayerOptions;\n    bookmarks?: ResourceHierarchy[];\n  }) {\n    const sidebarToggleBtn = document.getElementsByClassName('js-sidebar')[0];\n\n    const isActive = () => sidebarToggleBtn.classList.contains('is-active');\n    const activateBurger = () => sidebarToggleBtn.classList.add('is-active');\n    const deactivateBurger = () =>\n      sidebarToggleBtn.classList.remove('is-active');\n\n    await this.ngwMap.onLoad();\n\n    this.tree = new MapSettingsPanel(this, {\n      ...opt,\n      onDateChange: () => {\n        this._cleanSelection();\n      },\n      ngwMap: this.ngwMap,\n    });\n\n    const toggle = (status?: boolean) => {\n      status = status !== undefined ? status : isActive();\n      if (status) {\n        stopToggleControlsFor('tree');\n        this.tree && this.tree.show();\n        activateBurger();\n      } else {\n        this.tree && this.tree.hide();\n        deactivateBurger();\n      }\n    };\n    sidebarToggleBtn.addEventListener('click', () => {\n      toggle();\n    });\n    setTimeout(() => {\n      toggle();\n    }, 500);\n    addStopToggleControl('tree', () => toggle(false));\n  }\n\n  private _cleanSelection() {\n    if (\n      this._promises.getFeaturePromise &&\n      this._promises.getFeaturePromise.cancel\n    ) {\n      this._promises.getFeaturePromise.cancel();\n    }\n    this.ngwMap.removeLayer('highlight');\n  }\n\n  private _highlighNgwLayer(e: NgwIdentify) {\n    this._cleanSelection();\n    const paramsList = getIdentifyItems(e);\n    const params = paramsList[0];\n    if (params) {\n      const resourceId = params.resourceId;\n      this.ngwMap\n        .fetchIdentifyItem(e, {\n          extensions: ['attachment'],\n        })\n        .then((item) => {\n          if (item) {\n            item.toGeojson().then((geojson) => {\n              this.ngwMap.addLayer('GEOJSON', {\n                id: 'highlight',\n                data: geojson,\n                visibility: true,\n                paint: { color: 'green', stroke: true, fillOpacity: '0.8' },\n                selectOnHover: true,\n                popup: true,\n                popupOptions: {\n                  createPopupContent: (e) => {\n                    if (e.feature) {\n                      const element = this.popup.createPopupContent(\n                        e.feature,\n                        resourceId,\n                        item.extensions.attachment,\n                      );\n\n                      return element;\n                    }\n                  },\n                },\n              });\n            });\n          }\n        });\n    }\n  }\n\n  private _addEventsListeners() {\n    this.ngwMap.emitter.on('click', () => {\n      this.ngwMap.cancelPromises('identify', 'select');\n    });\n    this.ngwMap.emitter.on('ngw:select', (e) => e && this._highlighNgwLayer(e));\n  }\n}\n","document.addEventListener('DOMContentLoaded', () => {\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(\n    document.querySelectorAll('.navbar-burger'),\n    0,\n  );\n\n  // Check if there are any navbar burgers\n  if ($navbarBurgers.length > 0) {\n    // Add a click event on each of them\n    $navbarBurgers.forEach((el) => {\n      el.addEventListener('click', () => {\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target);\n\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n        el.classList.toggle('is-active');\n        if ($target) {\n          $target.classList.toggle('is-active');\n        }\n      });\n    });\n  }\n});\n","import { MODIS_ID, SENSOR_ID, USERFIRE_ID, VIIRS_ID } from './constants';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { AppOptions, FiresAdapterOptions } from './interfaces';\n\nconst firmsAdapterOptions: FiresAdapterOptions = {\n  limit: 2000,\n  props: { dateField: 'timestamp', timeUnit: 's' },\n};\n\nconst stroke: CirclePaint = {\n  stroke: true,\n  strokeColor: '#ffffff',\n  strokeOpacity: 1,\n  opacity: 1,\n};\n\nconst options: AppOptions = {\n  mapOptions: {\n    target: 'map',\n    bounds: [36.59, 43.385, 49.374, 50.214],\n    baseUrl: 'https://clear-horizon.nextgis.com',\n    resources: [\n      {\n        resource: 1,\n        fit: true,\n        adapterOptions: { selectable: true },\n      },\n    ],\n  },\n  timedelta: 72,\n  basemaps: [\n    {\n      qmsId: 1135,\n    },\n    {\n      qmsId: 487,\n    },\n  ],\n  userFires: {\n    resource: 'userfirepoints',\n    id: USERFIRE_ID,\n    adapterOptions: {\n      paint: { color: 'rgb(100,20,40)', ...stroke },\n      props: { dateField: 'field_9', timeUnit: 'ISO' },\n    },\n  },\n  sensors: {\n    resource: 359,\n    id: SENSOR_ID,\n    adapterOptions: {\n      selectable: true,\n      paint: {\n        color: '#0000ff',\n        radius: 5,\n        ...stroke,\n      },\n    },\n  },\n  firms: [\n    {\n      resource: 103,\n      id: MODIS_ID,\n      adapterOptions: {\n        paint: { color: 'red', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n    {\n      resource: 105,\n      id: VIIRS_ID,\n      adapterOptions: {\n        paint: { color: 'orange', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n  ],\n};\n\nexport default options;\n","import 'regenerator-runtime/runtime';\n\nimport { App } from './App';\nimport config from './config';\n\nimport './style/style.scss';\n\nconst app = new App(config);\n\napp.create();\n","import { ActionMap } from './components/ActionMap';\nimport './bulma';\nimport type { AppOptions } from './interfaces';\n\nexport class App {\n  actionMap: ActionMap;\n\n  constructor(public options: Partial<AppOptions> = {}) {\n    this.actionMap = new ActionMap(options);\n  }\n\n  async create(options?: AppOptions): Promise<void> {\n    this.options = { ...this.options, ...options };\n    // show app html after js and css loading and before map drawing start\n    this.showContent();\n    await this.actionMap.create(this.options);\n  }\n\n  showContent(): void {\n    const appContent = document.getElementById('app');\n    const appLoadingContent = document.getElementById('app-loading');\n    if (appLoadingContent) {\n      appLoadingContent.style.display = 'none';\n    }\n    if (appContent) {\n      appContent.style.display = 'block';\n    }\n  }\n}\n"],"sourceRoot":""}