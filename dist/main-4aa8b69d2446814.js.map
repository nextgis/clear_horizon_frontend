{"version":3,"sources":["webpack://clear_horizon/./@nextgis/packages/icons/src/index.ts","webpack://clear_horizon/./@nextgis/packages/item/src/TreeHelper.ts","webpack://clear_horizon/./@nextgis/packages/item/src/properties/CheckProperty.ts","webpack://clear_horizon/./@nextgis/packages/item/src/properties/BaseProperty.ts","webpack://clear_horizon/./@nextgis/packages/item/src/properties/ItemProperties.ts","webpack://clear_horizon/./@nextgis/packages/item/src/Item.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/BaseAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/utils/utils.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/GeoJsonAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/controls/Attribution.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/controls/createControl.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/layersUtility.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/ImageAdapter/ImageOverlay.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/ImageAdapter/ImageLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/ImageAdapter/ImageAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/RemoteTileLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/TileAdapter/TileLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/TileAdapter/TileAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/WmsAdapter/WmsLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/WmsAdapter/WmsAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/OsmAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/LeafletMapAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/controls/createButtonControl.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/index.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/NgwError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/NetworkError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/loadData.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/template.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/ResourceNotFoundError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/InsufficientPermissionsError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/activeConnectors.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/isObject.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/resourceToQuery.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/ResourcesControl.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/resourceCompare.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/apiRequest.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/NgwConnector.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/index.ts"],"names":["svgPath","brill","circle","rect","marker","cross","star","triangle","plus","minus","asterisk","insertSvg","width","height","stroke","content","s","svg","oParser","DOMParser","oDOM","parseFromString","documentElement","getIcon","opt","shape","color","strokeColor","size","anchor","defSize","scale","pathAlias","path","fistChild","firstChild","transform","setAttribute","String","XMLSerializer","type","iconSize","iconAnchor","html","serializeToString","TreeHelper","item","this","parent","_parent","child","_children","push","filterFunc","getParent","treeFilter","x","tree","toReturn","treeFind","getChildren","treeEvery","treeSome","getDescendants","CheckProperty","name","options","set","get","value","bubble","unBlock","property","properties","Object","assign","propagation","isBlocked","_turnOn","_turnOff","_propagation","getParents","every","turnOff","call","_callOnSet","hierarchy","isGroup","blockChild","turnOn","unblockChild","_blocked","_block","getValue","_unBlock","forEach","_blockChild","_unBlockChild","prop","block","children","fry","length","EventEmitter","_value","getProperty","undefined","parents","find","parentProp","_prepareValue","update","_fireChangeEvent","_container","parentNode","removeChild","_removeEventsListener","onSet","emitter","emit","label","ItemProperties","propertiesList","_propertiesList","_setPropertyHandler","bind","propOpt","handlers","handler","BaseProperty","_properties","list","map","p","destroy","ID","Item","BaseAdapter","order","pane","exist","getPane","createPane","style","zIndex","Math","round","_options","typeAlias","Point","LineString","MultiPoint","Polygon","MultiLineString","MultiPolygon","GeometryCollection","PAINT","opacity","backAliases","a","layerType","backAlias","findMostFrequentGeomType","arr","counts","maxName","c","maxCount","geometryFilter","geometry","indexOf","convertMapClickEvent","evt","coord","containerPoint","latLng","latlng","lat","lngLat","lng","pixel","left","top","y","source","GeoJsonAdapter","debounce","updateTooltip","layer","FeatureGroup","paint","selectedPaint","data","addData","_addMapMoveListener","_removeMapMoveListener","findFeatureFun","_layers","filter","_selectLayer","selected","setPaintEachLayer","_unSelectLayer","_selectedLayers","feature","_filteredLayers","fun","_filterFun","_map","remove","filteredLayers","addLayer","removeLayer","addTo","visible","target","cb","def","splice","clearLayers","clearLayer","geoJsonOptions","geojson","detectedType","features","f","geometries","g","console","warn","_data","filterGeometries","getGeoJsonOptions","GeoJSON","_openPopup","_closePopup","layerDef","_updateTooltip","getLayers","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","labelField","unbindTooltip","message","permanent","labelOnHover","bindTooltip","sticky","minWidth","autoPan","maxWidth","createPopupContent","popupContent","popup","bindPopup","setTimeout","openPopup","closePopup","unbindPopup","l","setPaint","isPaintCallback","isPaint","divIcon","createDivIcon","setIcon","setStyle","preparePaint","aliases","readyPaint","radius","to","from","paintProp","defineProperty","enumerable","lopt","pointToLayer","iconOpt","createPaintToLayer","createPaintOptions","onEachFeature","ok","popupOptions","selectable","interactive","selectOnHover","defined","on","e","_selectOnLayerClick","_handleMouseEvents","createMouseOptions","layer_","event","onClick","onLayerClick","onMouseOut","onMouseOver","onClick_","DomEvent","isSelected","unselectOnSecondClick","multiselect","popupOnSelect","onSelect","index","icon","toLIconOpt","DivIcon","className","iconClassName","geoJsonPoint","Marker","CircleMarker","paintOptions","$updateTooltip","off","AttributionControl","customAttribution","attributions","Array","isArray","addAttribution","Control","createControl","control","C","onAdd","element","document","createElement","classList","add","bar","margin","marginBottom","marginTop","marginLeft","marginRight","appendChild","onRemove","callAjax","src","callback","headers","xhr","XMLHttpRequest","h","open","responseType","setRequestHeader","onload","arrayBufferView","Uint8Array","response","blob","Blob","imageUrl","window","URL","webkitURL","createObjectURL","send","abort","ImageOverlay","_abort","img","_image","LImageOverlay","ImageLayer","url","service","request","version","layers","styles","format","transparent","crs","uppercase","attribution","isBack","minZoom","maxZoom","viewPortBuffer","setViewDelay","_url","params","opts","Util","wmsParams","defaultWmsParams","_currentOverlay","cancelLoad","_currentUrl","moveend","updateWmsParams","getImageUrl","pad","overlay","once","setOpacity","bringToBack","bringToFront","setZIndex","getZoom","getSize","factor","ceil","wmsVersion","parseFloat","projectionKey","nw","project","getNorthWest","se","getSouthEast","code","bbox","CRS","join","pstr","Layer","ImageAdapter","updateWmsParamsFromOpt","makeRemote","Base","args","_update","GridLayer","coords","done","getTileUrl","tile","crossOrigin","alt","tiles","_tiles","tileZoom","_tileZoom","i","z","el","onerror","complete","DomUtil","TileLayer","urlTemplate","TL","TileAdapter","tileLayerOptions","nativeOptions","subdomains","WmsLayer","WmsAdapter","layerOptions","WMS","OsmAdapter","LeafletMapAdapter","layerAdapters","controlAdapters","zoom","center","mb","maxBounds","mapAdapterOptions","Map","zoomControl","attributionControl","_addMapListeners","getContainer","cursor","setView","animate","setCenter","panTo","getCenter","setZoom","b","offset","padding","fitBounds","link","title","href","HTMLElement","innerHTML","stopPropagation","addEventListener","removeEventListener","createButtonControl","position","replace","addControl","removeControl","converted","events","locate","locationfound","locationerror","locationFound","stop","onMapClick","_universalEvents","IMAGE","TILE","GEOJSON","OSM","ZOOM","ATTRIBUTION","NgwError","er","setPrototypeOf","prototype","Error","loadData","NetworkError","location","origin","error","onCancel","method","getResponseText","JSON","parse","responseText","processingResponse","forError","status","upload","onprogress","lengthComputable","percentComplete","loaded","total","onProgress","header","withCredentials","file","FormData","append","d","stringify","templateRe","template","str","key","ResourceNotFoundError","obj","InsufficientPermissionsError","CONNECTORS","addConnector","connector","isObject","val","toString","resourceToQuery","resource","prefix","query","entries","ResourcesControl","Cache","requestOptions","_fetchResourceBy","keyname","_fetchResourceById","CancelablePromise","getOne","then","res","id","getId","resp","_resourceCacheFilter","items","serialization","resources","cache","getResource","put","delete","catch","getMany","matchAll","res1","res2","objectDeepEqual","apiRequest","resolve","reject","connect","apiItems","apiItem","shift","replaceParams","arg","paramArray","paramList","makeQuery","NgwConnector","baseUrl","auth","findConnector","route","routeStr","logout","login","password","getUserInfo","credentials","user","clean","getAuthorizationHeaders","client","makeClientId","Authorization","unescape","encodeURIComponent","btoa","params_","objectRemoveEmpty","makeApiRequest","fixUrlStr","_loadData","getOneOrFail","getIdOrFail","getChildrenOf","httpError","_handleHttpError","exception"],"mappings":"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","file":"main-4aa8b69d2446814.js","sourcesContent":["/**\n * @module icons\n */\n\n// tslint:disable:max-line-length\nimport { IconOptions as WebmapIcoOptions } from '@nextgis/paint';\n\nconst svgPath: { [name: string]: string | GetPathCallback } = {\n  brill: '<path d=\"m6 0-5 6 5 6 5-6z\"/>',\n  circle: '<circle cx=\"6\" cy=\"6\" r=\"6\"/>',\n  rect: '<rect width=\"12\" height=\"12\"/>',\n  marker:\n    '<path d=\"m6 0c-1.85 0-4 1.19-4 4.22 0 2.05 3.08 6.59 4 7.78 0.821-1.19 4-5.62 4-7.78 0-3.03-2.15-4.22-4-4.22z\"/>',\n  cross:\n    '<path d=\"M 2.4,12 6,8.4 9.6,12 12,9.6 8.4,6 12,2.4 9.6,0 6,3.6 2.4,0 0,2.4 3.6,6 0,9.6 Z\"/>',\n  star: '<path d=\"m6 0.25 1.71 4.18 4.29-1.04e-4 -3.43 3.14 0.857 4.18-3.43-3.14-3.43 3.14 0.857-4.18-3.43-3.14 4.29-0.209z\"/>',\n  triangle: '<path d=\"m12 11.7h-12l6-11.2z\"/>',\n  plus: '<path d=\"m7.5 12v-4.5h4.5v-3h-4.5v-4.5h-3v4.5h-4.5v3h4.5v4.5z\"/>',\n  minus: '<path d=\"m12 7.5v-3h-12v3z\"/>',\n  asterisk:\n    '<path d=\"m7.59 12v-3.27l2.83 1.64 1.58-2.74-2.85-1.64 2.83-1.64-1.56-2.74-2.83 1.64v-3.24h-3.17v3.24l-2.85-1.64-1.57 2.74 2.84 1.64-2.84 1.64 1.57 2.74 2.85-1.64v3.27z\"/>',\n};\n\nexport interface IconOptions {\n  shape?:\n    | 'circle'\n    | 'brill'\n    | 'rect'\n    | 'marker'\n    | 'star'\n    | 'asterisk'\n    | 'triangle'\n    | 'plus'\n    | 'minus';\n  color?: string;\n  size?: number;\n  stroke?: number;\n  strokeColor?: string;\n  rotate?: number;\n}\n\nconst STROKE = 0.8;\n\nfunction insertSvg(\n  width: number,\n  height: number,\n  stroke = 0,\n  content?: string,\n) {\n  const s = stroke / 2;\n  const svg = `<svg\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${width}\"\n    height=\"${height}\"\n    viewBox=\"-${s} -${s} ${width + stroke} ${height + stroke}\"\n  >${content}</svg>`;\n  const oParser = new DOMParser();\n  const oDOM = oParser.parseFromString(svg, 'image/svg+xml');\n  return oDOM.documentElement;\n}\n\ntype GetPathCallback = (opt?: IconOptions) => string;\n\nexport function getIcon(opt: IconOptions = {}): WebmapIcoOptions {\n  // default values\n  const shape = opt.shape || 'circle';\n  const color = opt.color || 'blue';\n  const strokeColor = opt.strokeColor || 'white';\n  const size = opt.size || 12;\n\n  const anchor = size / 2;\n  const defSize = 12;\n  const stroke = typeof opt.stroke === 'number' ? opt.stroke : STROKE;\n  const scale = size / defSize;\n\n  const pathAlias = svgPath[shape] || 'circle';\n\n  const path = typeof pathAlias === 'string' ? pathAlias : pathAlias(opt);\n  const svg = insertSvg(size, size, stroke * scale, path);\n  const fistChild = svg.firstChild as SVGElement;\n\n  const transform = `scale(${scale})`;\n\n  fistChild.setAttribute('fill', color);\n  if (stroke) {\n    fistChild.setAttribute('stroke', strokeColor);\n    fistChild.setAttribute('stroke-width', String(stroke));\n  }\n  fistChild.setAttribute('transform', transform);\n  const s = new XMLSerializer();\n\n  return {\n    type: 'icon',\n    iconSize: [size, size],\n    iconAnchor: [anchor, anchor],\n    html: s.serializeToString(svg),\n    svg,\n  };\n}\n","import { treeFind, treeFilter, treeEvery, treeSome } from '@nextgis/tree';\nimport { Item } from './Item';\nimport { ItemOptions } from './interfaces';\n\nexport class TreeHelper {\n  item: Item;\n\n  private _children: Item[] = [];\n  private _parent?: Item;\n\n  constructor(item: Item) {\n    this.item = item;\n  }\n\n  setParent(parent: Item): void {\n    this._parent = parent;\n  }\n\n  addChild(child: Item): void {\n    this._children.push(child);\n  }\n\n  getParent(): Item | undefined {\n    return this._parent;\n  }\n\n  getParents<I extends Item = Item>(filterFunc?: (item: I) => boolean): I[] {\n    const parent = this.getParent() as I;\n    if (parent) {\n      return treeFilter<I>(\n        parent,\n        filterFunc,\n        (x: I) => x.tree.getParent() as I,\n      );\n    }\n    return [];\n  }\n\n  getRoot<I extends Item = Item>(): I | undefined {\n    let parent = this.getParent() as I;\n    let toReturn = parent;\n    while (parent) {\n      parent = parent.tree.getParent() as I;\n      if (parent) {\n        toReturn = parent;\n      }\n    }\n    return toReturn;\n  }\n\n  find(filterFunc?: (item: Item) => boolean): Item<ItemOptions> | undefined {\n    return treeFind(this._children, filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  every<I extends Item = Item>(filterFunc?: (item: I) => boolean): boolean {\n    return treeEvery(this._children as I[], filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  some<I extends Item = Item>(filterFunc?: (item: I) => boolean): boolean {\n    return treeSome(this._children as I[], filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  // getDescendants shortcut\n  all(filterFunc?: (item: Item) => boolean): any[] {\n    return this.getDescendants(filterFunc);\n  }\n\n  getDescendants(filterFunc?: (item: Item) => boolean): any[] {\n    return treeFilter(this._children, filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  getChildren<T extends Item = Item>(): T[] {\n    return this._children as T[];\n  }\n}\n","import { BaseProperty } from './BaseProperty';\nimport { Item } from '../Item';\n\nimport { CheckOptions } from '../interfaces';\n\ntype VAL = boolean;\n\ntype PreparedValue = any;\n\nexport class CheckProperty<\n  V extends VAL = VAL,\n  O extends CheckOptions<VAL> = CheckOptions<VAL>,\n> extends BaseProperty<VAL, CheckOptions<VAL>> {\n  static options: CheckOptions = {\n    hierarchy: true,\n    bubble: false,\n    propagation: false,\n    label: 'Toggle',\n    // PropertyContainer: IndicatorContainer\n  };\n\n  constructor(name: string, item: Item, options: O) {\n    super(name, item, { ...CheckProperty.options, ...options });\n    this.set(this.get());\n  }\n\n  update(value?: V, options?: O): void {\n    if (value) {\n      const bubble = (options && options.bubble) || this.options.bubble;\n      if (bubble) {\n        this.unBlock(options);\n        const parent = this.getParent();\n        const property =\n          parent && parent.properties && parent.properties.property(this.name);\n        if (property) {\n          property.set(\n            value,\n            Object.assign({}, options, { bubble: true, propagation: false }),\n          );\n        }\n      }\n      if (!this.isBlocked()) {\n        this._turnOn(options);\n      }\n    } else {\n      this._turnOff(options);\n    }\n    const propagation =\n      (options && options.propagation) || this.options.propagation;\n    if (propagation) {\n      this._propagation(value, options);\n    }\n  }\n\n  getHierarchyValue(): boolean | undefined {\n    return (\n      this.get() &&\n      this.getParents().every((x) => {\n        const property = x.properties && x.properties.get(this.name);\n        return property && property.get();\n      })\n    );\n  }\n\n  _prepareValue(value?: PreparedValue): V | undefined {\n    return value;\n  }\n\n  _turnOff(options?: O): void {\n    if (this.options.turnOff) {\n      this.options.turnOff.call(this, options);\n    }\n    this._callOnSet(false, options);\n    if (this.options.hierarchy && this.isGroup()) {\n      this.blockChild(options);\n    }\n  }\n\n  _turnOn(options?: O): void {\n    if (this.options.turnOn) {\n      this.options.turnOn.call(this, options);\n    }\n    this._callOnSet(true, options);\n    if (this.options.hierarchy && this.isGroup()) {\n      this.unblockChild(options);\n    }\n  }\n\n  block(options?: O): void {\n    this._blocked = true;\n    this._block(options);\n  }\n\n  _block(options?: O): void {\n    this._turnOff(options);\n  }\n\n  unBlock(options?: O): void {\n    this._blocked = false;\n    if (this.getValue()) {\n      this._unBlock(options);\n    }\n  }\n\n  _unBlock(options?: O): void {\n    this._turnOn(options);\n  }\n\n  blockChild(options?: O): void {\n    this.item.tree\n      .getDescendants()\n      .forEach((x) => this._blockChild(x, options));\n  }\n\n  unblockChild(options?: O): void {\n    this.item.tree.getChildren().forEach((x) => this._unBlockChild(x, options));\n  }\n\n  _blockChild(item: Item, options?: O): void {\n    const prop =\n      item.properties &&\n      (item.properties.property(this.name) as CheckProperty<V, O>);\n    if (prop && prop.block) {\n      prop.block(options);\n    }\n  }\n\n  _unBlockChild(item: Item, options?: O): void {\n    const prop =\n      item.properties &&\n      (item.properties.property(this.name) as CheckProperty<V, O>);\n    if (prop && prop.unBlock) {\n      prop.unBlock(options);\n    }\n  }\n\n  _propagation(value?: V, options?: O): void {\n    if (this.isGroup()) {\n      const children = this.item.tree.getChildren();\n      for (let fry = 0; fry < children.length; fry++) {\n        const child = children[fry];\n        const property =\n          child.properties &&\n          (child.properties.property(this.name) as CheckProperty<V, O>);\n        if (property) {\n          property.set(value, {\n            ...options,\n            ...{\n              propagation: true,\n              bubble: false,\n            },\n          });\n        }\n      }\n    }\n  }\n}\n","import { EventEmitter } from 'events';\nimport { Item } from '../Item';\nimport { ItemBasePropertyOptions, ItemOptions } from '../interfaces';\n\n// import StrictEventEmitter from 'strict-event-emitter-types/types/src';\n\n// export interface BasePropertyEvents<V, O> {\n//   'change': {value: V, options: O};\n//   'change-tree': {value: V, options: O, item: Item};\n// }\n\nexport abstract class BaseProperty<\n  V = any,\n  O extends ItemBasePropertyOptions<V> = ItemBasePropertyOptions<V>,\n> {\n  options: O;\n\n  // emitter: StrictEventEmitter<EventEmitter, BasePropertyEvents<V, O>> = new EventEmitter();\n  emitter = new EventEmitter();\n  name: string;\n\n  item: Item;\n  protected _blocked = false;\n  protected _container?: HTMLElement;\n  protected _value?: V;\n\n  private _removeEventsListener?: () => void;\n\n  constructor(name: string, item: Item, options: O) {\n    this.item = item;\n    this.options = Object.assign({}, options);\n    this.name = name;\n    this._value = this.getProperty();\n  }\n\n  getProperty(): V | undefined {\n    if (typeof this.options.getProperty === 'function') {\n      return this.options.getProperty.call(this, this.item);\n    }\n    return this.options.value;\n  }\n\n  getParents(): Item[] {\n    return this.item.tree.getParents() || [];\n  }\n\n  getParent(): Item<ItemOptions> | undefined {\n    return this.item.tree.getParent();\n  }\n\n  isGroup(): number {\n    const children = this.item.tree.getDescendants();\n    return children.length;\n  }\n\n  isBlocked(): boolean {\n    if (this._blocked === undefined) {\n      const parents = this.item.tree.getParents();\n      if (parents) {\n        const isBlocked = parents.find((x: Item) => {\n          const parentProp = x.properties && x.properties.property(this.name);\n          if (parentProp) {\n            return !parentProp.get();\n          }\n          return false;\n        });\n        this._blocked = !!isBlocked;\n      } else {\n        this._blocked = false;\n      }\n    }\n    return this._blocked;\n  }\n\n  set(value?: V, options?: O): void {\n    this._value = this._prepareValue(value);\n\n    this.update(this._value, options);\n    this._fireChangeEvent(this._value, options);\n  }\n\n  // shortcut for getValue\n  get(): V | undefined {\n    return this.getValue();\n  }\n\n  update(value?: V, options?: O): void {\n    this._callOnSet(value, options);\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  destroy(): void {\n    if (this._container) {\n      const parentNode = this._container.parentNode;\n      if (parentNode) {\n        parentNode.removeChild(this._container);\n      }\n    }\n    if (this._removeEventsListener) {\n      this._removeEventsListener();\n    }\n  }\n\n  getValue(): V | undefined {\n    return this._value !== undefined ? this._value : this.getProperty();\n  }\n\n  protected _prepareValue(value?: V): V | undefined {\n    return value;\n  }\n\n  protected _callOnSet<W extends V = V>(value?: W, options?: O): void {\n    if (this.options.onSet) {\n      this.options.onSet.call(this, value, options, this.item);\n    }\n  }\n\n  protected _fireChangeEvent(value?: V, options?: O): void {\n    if (this.emitter) {\n      value = value !== undefined ? value : this.getValue();\n      this.emitter.emit('change', { value, options });\n      const parents = this.item.tree.getParents();\n      parents.forEach((x) => {\n        const prop = x.properties && x.properties.property(this.name);\n        if (prop) {\n          prop.emitter.emit('change-tree', {\n            value,\n            options,\n            item: this.item,\n          });\n        }\n      });\n    }\n  }\n}\n","import { BaseProperty } from './BaseProperty';\nimport { CheckProperty } from './CheckProperty';\nimport { Item } from '../Item';\n\nimport {\n  ItemBasePropertyOptions,\n  Type,\n  ItemPropertyConfig,\n  ItemPropertyTypes,\n} from '../interfaces';\n\nexport class ItemProperties {\n  static handlers: { [name: string]: Type<BaseProperty> } = {\n    CheckProperty,\n  };\n\n  options = {};\n\n  private _properties: { [propName: string]: BaseProperty } = {};\n  private _propertiesList: string[];\n\n  constructor(\n    public item: Item,\n    propertiesList?: ItemPropertyConfig<keyof ItemPropertyTypes>[],\n  ) {\n    this._propertiesList = []; // ordered list\n    if (propertiesList) {\n      propertiesList.forEach(this._setPropertyHandler.bind(this));\n    }\n  }\n\n  add(propOpt: ItemPropertyConfig<keyof ItemPropertyTypes>): void {\n    this._setPropertyHandler(propOpt);\n  }\n\n  _setPropertyHandler(\n    propOpt: ItemPropertyConfig<keyof ItemPropertyTypes>,\n  ): void {\n    const handlers = ItemProperties.handlers;\n    let handler = propOpt.handler;\n    if (!handler && propOpt.type) {\n      switch (propOpt.type) {\n        case 'boolean':\n          handler = handlers.CheckProperty;\n          break;\n        case 'string':\n          handler = handlers.BaseProperty;\n          break;\n        default:\n          handler = handlers.BaseProperty;\n      }\n    }\n    if (handler && propOpt.name) {\n      const options = { ...(propOpt || {}) };\n      this._properties[propOpt.name] = new handler(\n        propOpt.name,\n        this.item,\n        options,\n      );\n      this._propertiesList.push(propOpt.name);\n    }\n  }\n\n  update(): void {\n    this.list().forEach((x) => {\n      x.update();\n    });\n  }\n\n  get(name: string): any {\n    const prop = this.property(name);\n    if (prop) {\n      return prop.get();\n    }\n  }\n\n  set<K extends keyof ItemPropertyTypes>(\n    name: string,\n    value: ItemPropertyTypes[K],\n    options?: ItemBasePropertyOptions<ItemPropertyTypes[K]>,\n  ): void {\n    const prop = this.property(name);\n    if (prop) {\n      return prop.set(value, options);\n    }\n  }\n\n  property(name: string): BaseProperty<any, ItemBasePropertyOptions<any>> {\n    return this._properties[name];\n  }\n\n  list(): BaseProperty<any, ItemBasePropertyOptions<any>>[] {\n    return this._propertiesList.map((x) => this._properties[x]);\n  }\n\n  destroy(): void {\n    for (const p in this._properties) {\n      const prop = this.property(p);\n      if (prop && prop.destroy) {\n        prop.destroy();\n      }\n    }\n    this._properties = {};\n    this._propertiesList = [];\n  }\n}\n","import { TreeHelper } from './TreeHelper';\nimport { ItemProperties } from './properties/ItemProperties';\nimport { ItemOptions } from './interfaces';\n\nlet ID = 0;\nexport class Item<O extends ItemOptions = ItemOptions> {\n  options: O = {} as O;\n\n  properties!: ItemProperties;\n  tree: TreeHelper;\n  id = ID;\n\n  constructor(options?: O) {\n    ID += 1;\n    this.options = { ...options } as O;\n    this.tree = new TreeHelper(this);\n  }\n\n  initProperties(): void {\n    this.properties = new ItemProperties(this, this.options.properties);\n  }\n}\n","import { MainLayerAdapter, AdapterOptions } from '@nextgis/webmap';\nimport { Map } from 'leaflet';\n\nexport class BaseAdapter<O extends AdapterOptions = AdapterOptions, L = any>\n  implements MainLayerAdapter<Map, L, O>\n{\n  layer?: L;\n  protected pane = 'order-0';\n\n  constructor(public map: L.Map, public options: O) {\n    if (options.order !== undefined) {\n      const pane = 'order-' + options.order;\n      let exist = map.getPane(pane);\n      if (!exist) {\n        exist = map.createPane(pane);\n      }\n      exist.style.zIndex = String(Math.round(options.order * 100));\n      this.pane = pane;\n    }\n  }\n\n  addLayer(_options: O): L | Promise<L> | undefined {\n    return undefined;\n  }\n}\n","import { VectorAdapterLayerType, MapClickEvent } from '@nextgis/webmap';\nimport {\n  GeoJsonObject,\n  GeoJsonGeometryTypes,\n  FeatureCollection,\n  Feature,\n  GeometryCollection,\n} from 'geojson';\nimport { LeafletMouseEvent } from 'leaflet';\n\nexport const typeAlias: {\n  [key in GeoJsonGeometryTypes]: VectorAdapterLayerType;\n} = {\n  Point: 'point',\n  LineString: 'line',\n  MultiPoint: 'point',\n  Polygon: 'polygon',\n  MultiLineString: 'line',\n  MultiPolygon: 'polygon',\n  GeometryCollection: 'polygon',\n};\n\nexport const PAINT = {\n  stroke: false,\n  opacity: 1,\n};\n\nexport const backAliases: {\n  [key in VectorAdapterLayerType]?: GeoJsonGeometryTypes[];\n} = {};\n\nfor (const a in typeAlias) {\n  const layerType = typeAlias[a as GeoJsonGeometryTypes];\n  const backAlias = backAliases[layerType] || [];\n  backAlias.push(a as GeoJsonGeometryTypes);\n  backAliases[layerType] = backAlias;\n}\n\nexport function findMostFrequentGeomType(\n  arr: GeoJsonGeometryTypes[],\n): GeoJsonGeometryTypes {\n  const counts: { [x: string]: number } = {};\n  for (let fry = 0; fry < arr.length; fry++) {\n    counts[arr[fry]] = 1 + (counts[arr[fry]] || 0);\n  }\n  let maxName = '';\n  for (const c in counts) {\n    const maxCount = maxName ? counts[maxName] : 0;\n    if (counts[c] > maxCount) {\n      maxName = c;\n    }\n  }\n  return maxName as GeoJsonGeometryTypes;\n}\n\nexport function detectType(geojson: GeoJsonObject): GeoJsonGeometryTypes {\n  let geometry: GeoJsonGeometryTypes;\n  if (geojson.type === 'FeatureCollection') {\n    const featuresTypes = (geojson as FeatureCollection).features.map(\n      (f) => f.geometry.type,\n    );\n    geometry = findMostFrequentGeomType(featuresTypes);\n  } else if (geojson.type === 'GeometryCollection') {\n    const geometryTypes = (geojson as GeometryCollection).geometries.map(\n      (g) => g.type,\n    );\n    geometry = findMostFrequentGeomType(geometryTypes);\n  } else if (geojson.type === 'Feature') {\n    geometry = (geojson as Feature).geometry.type;\n  } else {\n    geometry = geojson.type;\n  }\n  return geometry;\n}\n\nexport function geometryFilter(\n  geometry: GeoJsonGeometryTypes,\n  type: VectorAdapterLayerType,\n): boolean {\n  const geoJsonGeometry = backAliases[type] || [];\n  return geoJsonGeometry.indexOf(geometry) !== -1;\n}\n\nexport function filterGeometries(\n  data: GeoJsonObject,\n  type: VectorAdapterLayerType,\n): GeoJsonObject | false {\n  if (data.type === 'FeatureCollection') {\n    const _data = data as FeatureCollection;\n    _data.features = _data.features.filter((f) =>\n      geometryFilter(f.geometry.type, type),\n    );\n  } else if (data.type === 'Feature') {\n    const allow = geometryFilter((data as Feature).geometry.type, type);\n    if (!allow) {\n      return false;\n    }\n  } else if (data.type === 'GeometryCollection') {\n    const _data = data as GeometryCollection;\n    _data.geometries = _data.geometries.filter((g) =>\n      geometryFilter(g.type, type),\n    );\n  }\n  return data;\n}\n\nexport function convertMapClickEvent(evt: LeafletMouseEvent): MapClickEvent {\n  const coord = evt.containerPoint;\n  const latLng = evt.latlng;\n  const { lat, lng } = latLng;\n  return {\n    latLng,\n    lngLat: [lng, lat],\n    pixel: { left: coord.x, top: coord.y },\n    source: evt,\n  };\n}\n","import {\n  CircleMarker,\n  FeatureGroup,\n  DomEvent,\n  GeoJSON,\n  DivIcon,\n  Marker,\n  Layer,\n} from 'leaflet';\nimport { debounce, defined } from '@nextgis/utils';\nimport { isPaintCallback, isPaint } from '@nextgis/paint';\nimport { BaseAdapter } from './BaseAdapter';\nimport {\n  PAINT,\n  typeAlias,\n  detectType,\n  filterGeometries,\n  convertMapClickEvent,\n} from '../utils/utils';\n\nimport type { GeoJsonObject, Feature, Point } from 'geojson';\nimport type {\n  CircleMarkerOptions,\n  LeafletMouseEvent,\n  LatLngExpression,\n  GeoJSONOptions,\n  PathOptions,\n  LatLng,\n  Path,\n  Map,\n} from 'leaflet';\nimport type {\n  Paint,\n  IconPaint,\n  PathPaint,\n  VectorAdapterLayerPaint,\n} from '@nextgis/paint';\nimport type {\n  VectorAdapterLayerType,\n  GeoJsonAdapterOptions,\n  VectorLayerAdapter,\n  LngLatBoundsArray,\n  OnLayerSelectType,\n  LayerDefinition,\n  DataLayerFilter,\n  PopupOptions,\n} from '@nextgis/webmap';\n\ntype LayerDef = LayerDefinition<Feature, Layer>;\n\nexport class GeoJsonAdapter\n  extends BaseAdapter<GeoJsonAdapterOptions>\n  implements VectorLayerAdapter<Map>\n{\n  layer: FeatureGroup;\n  selected = false;\n\n  private paint?: Paint;\n  private selectedPaint?: Paint;\n  private type?: VectorAdapterLayerType;\n\n  private _layers: LayerDef[] = [];\n  private _selectedLayers: LayerDef[] = [];\n  private _filteredLayers: LayerDef[] = [];\n  private _filterFun?: DataLayerFilter<Feature>;\n\n  private $updateTooltip = debounce(() => {\n    this.updateTooltip();\n  }, 300);\n\n  constructor(map: L.Map, options: GeoJsonAdapterOptions) {\n    super(map, options);\n    this.layer = new FeatureGroup([], { pane: this.pane });\n  }\n\n  addLayer(options: GeoJsonAdapterOptions): FeatureGroup<any> | undefined {\n    this.options = options;\n    this.paint = options.paint;\n\n    this.selectedPaint = options.selectedPaint;\n    options.paint = this.paint;\n\n    if (options.data) {\n      this.addData(options.data);\n    }\n\n    this._addMapMoveListener();\n\n    return this.layer;\n  }\n\n  beforeRemove(): void {\n    this._removeMapMoveListener();\n  }\n\n  select(findFeatureFun?: DataLayerFilter): void {\n    if (findFeatureFun) {\n      const def = this._layers.filter(findFeatureFun);\n      def.forEach((x) => {\n        this._selectLayer(x, 'api');\n      });\n    } else if (!this.selected) {\n      this.selected = true;\n      if (this.selectedPaint) {\n        this.setPaintEachLayer(this.selectedPaint);\n      }\n    }\n  }\n\n  unselect(findFeatureFun?: DataLayerFilter): void {\n    if (findFeatureFun) {\n      const feature = this._layers.filter(findFeatureFun);\n      feature.forEach((x) => {\n        this._unSelectLayer(x.layer);\n      });\n    } else if (this.selected) {\n      this.selected = false;\n      if (this.paint) {\n        this.setPaintEachLayer(this.paint);\n      }\n    }\n  }\n\n  getSelected(): LayerDefinition<Feature, LayerDef>[] {\n    return this._selectedLayers.map((x) => {\n      return { feature: x.feature, layer: x };\n    });\n  }\n\n  getFiltered(): LayerDef[] {\n    return this._filteredLayers;\n  }\n\n  filter(fun?: DataLayerFilter): LayerDef[] {\n    // Some optimization\n    this._filterFun = fun;\n    // @ts-ignore\n    const _map = this.layer._map;\n    if (_map) {\n      this.layer.remove();\n    }\n    const filteredLayers: LayerDef[] = [];\n    this._layers.forEach(({ feature, layer }) => {\n      if (layer) {\n        const ok = fun ? fun({ feature, layer }) : true;\n        if (ok) {\n          this.layer.addLayer(layer);\n          filteredLayers.push({ feature, layer });\n        } else {\n          this.layer.removeLayer(layer);\n        }\n      }\n    });\n    this._filteredLayers = filteredLayers;\n    if (_map) {\n      this.layer.addTo(_map);\n    }\n    return this._filteredLayers;\n  }\n\n  cleanFilter(): void {\n    this.filter();\n  }\n\n  getLayers(): LayerDef[] {\n    return this._layers.map(({ layer, feature }) => {\n      const visible = layer && !!(layer as any)._map;\n      return {\n        feature,\n        layer,\n        visible,\n        target: this,\n      };\n    });\n  }\n\n  clearLayer(cb?: (feature: Feature) => boolean): void {\n    if (cb) {\n      for (let fry = this._layers.length; fry--; ) {\n        const def = this._layers[fry];\n        if (def) {\n          const { feature, layer } = def;\n          if (feature && layer) {\n            const exist = cb(feature);\n            if (exist) {\n              this.layer.removeLayer(layer);\n              this._layers.splice(fry, 1);\n            }\n          }\n        }\n      }\n    } else {\n      this.layer.clearLayers();\n      this._layers = [];\n    }\n  }\n\n  setData(data: GeoJsonObject): void {\n    this.clearLayer();\n    this.addData(data);\n  }\n\n  addData(data: GeoJsonObject | false): void {\n    const options = this.options;\n    let geoJsonOptions: GeoJSONOptions | undefined;\n    if (options) {\n      if (data) {\n        let type: VectorAdapterLayerType;\n\n        if (!options.type) {\n          const detectedType = detectType(data);\n          type = typeAlias[detectedType];\n        } else {\n          type = options.type;\n        }\n        if (this.type && this.type !== type) {\n          console.warn('no other data type than layer can be added');\n          return;\n        }\n        this.type = type;\n\n        data = filterGeometries(data, type);\n        if (data) {\n          geoJsonOptions = this.getGeoJsonOptions(options, type);\n        }\n      }\n      new GeoJSON(data || undefined, geoJsonOptions);\n    }\n  }\n\n  openPopup(findFeatureFun: DataLayerFilter, options?: PopupOptions): void {\n    if (findFeatureFun) {\n      const def = this._layers.filter(findFeatureFun);\n      def.forEach((x) => {\n        this._openPopup(x, options, 'api');\n      });\n    }\n  }\n\n  closePopup(findFeatureFun?: DataLayerFilter): void {\n    const featuresToClosePopup = findFeatureFun\n      ? this._layers.filter(findFeatureFun)\n      : this._layers;\n\n    featuresToClosePopup.forEach((x) => {\n      this._closePopup(x);\n    });\n  }\n\n  updateTooltip(layerDef?: LayerDefinition): void {\n    if (layerDef) {\n      this._updateTooltip(layerDef);\n    } else {\n      this.getLayers().forEach((x) =>\n        this._updateTooltip({ feature: x.feature, layer: x.layer }),\n      );\n    }\n  }\n\n  getExtent(): LngLatBoundsArray | undefined {\n    const bounds = this.layer.getBounds();\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    if (ne && sw) {\n      return [sw.lng, sw.lat, ne.lng, ne.lat];\n    }\n  }\n\n  private _updateTooltip(layerDef: LayerDef) {\n    const { feature, layer } = layerDef;\n    if (feature && layer && feature.properties && this.options.labelField) {\n      layer.unbindTooltip();\n      const message = feature.properties[this.options.labelField];\n      if (message !== undefined) {\n        const permanent = !this.options.labelOnHover;\n\n        layer.bindTooltip(String(message), { permanent, sticky: false });\n      }\n    }\n  }\n\n  private async _openPopup(\n    def: LayerDef,\n    options: PopupOptions = {},\n    type: OnLayerSelectType,\n  ) {\n    const { feature, layer } = def;\n    const { minWidth, autoPan, maxWidth } = { minWidth: 300, ...options };\n    const content = options.createPopupContent\n      ? await options.createPopupContent({\n          layer,\n          feature,\n          target: this,\n          type,\n        })\n      : options.popupContent;\n    if (content && layer) {\n      const popup = layer.bindPopup(content, { minWidth, autoPan, maxWidth });\n      setTimeout(() => {\n        popup.openPopup();\n      }, 0);\n    }\n  }\n\n  private _closePopup(def: LayerDef) {\n    if (def.layer) {\n      def.layer.closePopup().unbindPopup();\n    }\n  }\n\n  private setPaintEachLayer(paint: Paint) {\n    this._layers.forEach((l) => {\n      this.setPaint(l, paint);\n    });\n  }\n\n  private setPaint(def: LayerDef, paint: Paint) {\n    let style: VectorAdapterLayerPaint | undefined = undefined;\n    const { layer, feature } = def;\n    if (layer && feature) {\n      if (isPaintCallback(paint)) {\n        style = paint(feature);\n      } else if (isPaint(paint)) {\n        style = paint;\n      }\n      if (style) {\n        if (this.type === 'point' && style.type === 'icon') {\n          const marker = layer as Marker;\n          const divIcon = this.createDivIcon(style);\n          marker.setIcon(divIcon);\n        } else if ('setStyle' in layer) {\n          (layer as Path).setStyle(this.preparePaint(style));\n        }\n      }\n    }\n  }\n\n  private preparePaint(paint: VectorAdapterLayerPaint): PathOptions {\n    if (paint.type !== 'get-paint') {\n      // const path: CircleMarkerOptions | PathOptions = paint as CircleMarkerOptions | PathOptions;\n      // if (path.opacity) {\n      //   path.fillOpacity = path.opacity;\n      // }\n\n      const paintAliases: [keyof PathOptions, keyof PathPaint][] = [\n        // ['color', 'color'],\n        ['color', 'strokeColor'],\n        ['opacity', 'strokeOpacity'],\n        ['stroke', 'stroke'],\n        ['fillColor', 'fillColor'],\n        ['fillOpacity', 'fillOpacity'],\n        ['fill', 'fill'],\n        ['weight', 'weight'],\n      ];\n      const aliases: [keyof PathOptions, keyof PathPaint][] =\n        this.type === 'line'\n          ? [\n              ['color', 'strokeColor'],\n              ['opacity', 'strokeOpacity'],\n              ['weight', 'weight'],\n            ]\n          : paintAliases;\n\n      const readyPaint: PathOptions & CircleMarkerOptions = {};\n\n      if ('radius' in paint && typeof paint.radius === 'number') {\n        readyPaint.radius = paint.radius;\n      }\n      aliases.forEach(([to, from]: [keyof PathOptions, keyof PathPaint]) => {\n        const paintProp = (paint as PathPaint)[from];\n        if (paintProp !== undefined) {\n          Object.defineProperty(readyPaint, to, {\n            enumerable: true,\n            value: paintProp,\n          });\n        }\n      });\n\n      return readyPaint;\n    }\n    return PAINT;\n  }\n\n  private getGeoJsonOptions(\n    options: GeoJsonAdapterOptions,\n    type: VectorAdapterLayerType,\n  ): GeoJSONOptions {\n    const paint = options.paint;\n    let lopt: GeoJSONOptions = {};\n\n    if (typeof paint === 'function') {\n      if (type === 'point') {\n        // TODO: fix types (@geoman-io/leaflet-geoman-free)\n        (lopt as any).pointToLayer = (\n          feature: Feature<Point, any>,\n          latLng: LatLng,\n        ) => {\n          const iconOpt = paint(feature);\n          const pointToLayer = this.createPaintToLayer(iconOpt as IconPaint);\n          return pointToLayer(feature, latLng);\n        };\n      } else {\n        lopt = {\n          style: (feature) => {\n            if (feature) {\n              return this.preparePaint({ ...PAINT, ...paint(feature) });\n            } else {\n              return this.preparePaint({ ...PAINT, type: 'path' });\n            }\n          },\n        };\n      }\n    } else {\n      lopt = this.createPaintOptions(paint as VectorAdapterLayerPaint, type);\n    }\n\n    lopt.onEachFeature = (feature: Feature, layer) => {\n      // @ts-ignore\n      layer.options.pane = this.pane;\n      this._layers.push({ feature, layer });\n      let ok = true;\n      if (this._filterFun) {\n        ok = this._filterFun({ feature, layer });\n      }\n      if (ok) {\n        const { popup, popupOptions, selectable, interactive, selectOnHover } =\n          this.options;\n        // @ts-ignore\n        layer.options.interactive = defined(interactive) ? interactive : true;\n        this.layer.addLayer(layer);\n        if (selectable) {\n          if (selectOnHover) {\n            layer.on('mouseover', () => {\n              this._selectLayer({ feature, layer }, 'hover');\n            });\n            layer.on('mouseout', () => {\n              this._unSelectLayer(layer);\n            });\n          } else {\n            layer.on(\n              'click',\n              (e) => this._selectOnLayerClick(e as LeafletMouseEvent),\n              this,\n            );\n          }\n        }\n        this._handleMouseEvents(layer);\n        if (popup) {\n          this._openPopup({ layer, feature }, popupOptions, 'api');\n        }\n\n        this._updateTooltip({ layer, feature });\n      }\n    };\n\n    return lopt;\n  }\n\n  private _handleMouseEvents(layer: Layer) {\n    const isSelected = (l: LayerDef) => this._selectedLayers.indexOf(l) !== -1;\n    const createMouseOptions = (e: LeafletMouseEvent) => {\n      const layer_ = e.target as LayerDef;\n      return {\n        layer: this,\n        feature: layer_.feature,\n        event: convertMapClickEvent(e),\n        source: e,\n      };\n    };\n    const { onClick, onLayerClick, onMouseOut, onMouseOver } = this.options;\n    // TODO: remove backward compatibility for onLayerClick\n    const onClick_ = onClick || onLayerClick;\n    if (onClick_) {\n      layer.on(\n        'click',\n        (e) => {\n          onClick_({\n            selected: isSelected(e.target),\n            ...createMouseOptions(e as LeafletMouseEvent),\n          });\n        },\n        this,\n      );\n    }\n    if (onMouseOut) {\n      layer.on(\n        'mouseout',\n        (e) => {\n          onMouseOut(createMouseOptions(e as LeafletMouseEvent));\n        },\n        this,\n      );\n    }\n    if (onMouseOver) {\n      layer.on(\n        'mouseover',\n        (e) => {\n          onMouseOver(createMouseOptions(e as LeafletMouseEvent));\n        },\n        this,\n      );\n    }\n  }\n\n  private _selectOnLayerClick(e: LeafletMouseEvent) {\n    DomEvent.stopPropagation(e);\n    const def = e.target as LayerDef;\n    let isSelected = this._selectedLayers.indexOf(def) !== -1;\n    if (isSelected) {\n      if (this.options && this.options.unselectOnSecondClick) {\n        this._unSelectLayer(def);\n        isSelected = false;\n      }\n    } else {\n      this._selectLayer(def, 'click');\n      isSelected = true;\n    }\n  }\n\n  private _selectLayer(def: LayerDef, type: OnLayerSelectType) {\n    if (this.options && !this.options.multiselect) {\n      this._selectedLayers.forEach((x) => this._unSelectLayer(x));\n    }\n    this._selectedLayers.push(def);\n    this.selected = true;\n    if (this.options) {\n      if (this.options.selectedPaint && def.layer) {\n        this.setPaint(def, this.options.selectedPaint);\n      }\n      if (this.options.popupOnSelect) {\n        this._openPopup(def, this.options.popupOptions, type);\n      }\n      if (this.options.onSelect) {\n        this.options.onSelect({\n          type,\n          layer: this,\n          features: def.feature ? [def.feature] : [],\n        });\n      }\n    }\n  }\n\n  private _unSelectLayer(layer: any) {\n    const index = this._selectedLayers.indexOf(layer);\n    if (index !== -1) {\n      this._selectedLayers.splice(index, 1);\n    }\n    this.selected = this._selectedLayers.length > 0;\n    if (this.options) {\n      if (this.options.paint) {\n        this.setPaint(layer, this.options.paint);\n      }\n\n      if (this.options.popupOnSelect) {\n        this._closePopup(layer);\n      }\n    }\n  }\n\n  private createDivIcon(icon: IconPaint) {\n    const { ...toLIconOpt } = icon;\n    return new DivIcon({ className: '', ...toLIconOpt });\n  }\n\n  private createPaintToLayer(icon: IconPaint) {\n    if (icon && icon.type) {\n      if (icon.type === 'icon') {\n        const iconClassName = icon.className;\n        const html = icon.html;\n        if (iconClassName || html) {\n          return (geoJsonPoint: any, latlng: LatLngExpression) => {\n            const divIcon = this.createDivIcon(icon);\n            return new Marker(latlng, { icon: divIcon });\n          };\n        }\n      } else if (icon.type === 'pin') {\n        return (geoJsonPoint: any, latlng: LatLngExpression) => {\n          // const divIcon = this.createDivIcon(icon);\n          return new Marker(latlng);\n        };\n      }\n    }\n    return (geoJsonPoint: any, latlng: LatLngExpression) => {\n      const p: any = PAINT;\n      return new CircleMarker(latlng, this.preparePaint({ ...p, ...icon }));\n    };\n  }\n\n  private createPaintOptions(\n    paintOptions: VectorAdapterLayerPaint,\n    type: VectorAdapterLayerType,\n  ): GeoJSONOptions {\n    const geoJsonOptions: GeoJSONOptions = {};\n    const paint = (paintOptions && this.preparePaint(paintOptions)) || {};\n    if (paintOptions) {\n      geoJsonOptions.style = () => {\n        return paint;\n      };\n    }\n    if (type === 'point') {\n      (geoJsonOptions as any).pointToLayer = this.createPaintToLayer(\n        paintOptions as IconPaint,\n      );\n    } else if (type === 'line') {\n      paint.stroke = true;\n    }\n    return geoJsonOptions;\n  }\n\n  private _addMapMoveListener() {\n    const map = this.map;\n    if (map) {\n      if (this.options.labelField && !this.options.labelOnHover) {\n        map.on('zoomend', this.$updateTooltip);\n        map.on('moveend', this.$updateTooltip);\n      }\n    }\n  }\n\n  private _removeMapMoveListener() {\n    this.map.off('zoomend', this.$updateTooltip);\n    this.map.off('moveend', this.$updateTooltip);\n  }\n}\n","import { Control, ControlOptions } from 'leaflet';\nimport { AttributionControlOptions } from '@nextgis/webmap';\n\nexport class AttributionControl extends Control.Attribution {\n  // options: AttributionControlOptions\n  constructor(options: AttributionControlOptions & ControlOptions) {\n    super(options);\n    const customAttribution = options && options.customAttribution;\n    if (customAttribution) {\n      let attributions: string[] = [];\n      if (Array.isArray(customAttribution)) {\n        attributions = customAttribution;\n      } else if (customAttribution) {\n        attributions = [customAttribution];\n      }\n      attributions.forEach((x) => this.addAttribution(x));\n    }\n  }\n}\n","import { MapControl, CreateControlOptions } from '@nextgis/webmap';\nimport { Control, DomEvent } from 'leaflet';\n\nexport function createControl(\n  control: MapControl,\n  options: CreateControlOptions = {},\n): Control {\n  const C = Control.extend({\n    onAdd() {\n      const element = document.createElement('div');\n      const content = control.onAdd();\n      element.classList.add('leaflet-control');\n      if (options.bar) {\n        element.classList.add('leaflet-bar');\n      }\n      if (!options.margin && !options.bar) {\n        element.style.marginBottom = '0px';\n        element.style.marginTop = '0px';\n        element.style.marginLeft = '0px';\n        element.style.marginRight = '0px';\n      }\n      if (content) {\n        element.appendChild(content);\n      }\n\n      DomEvent.disableClickPropagation(element);\n\n      return element;\n    },\n    onRemove() {\n      control.onRemove();\n    },\n  });\n  return new C();\n}\n","export function callAjax(\n  src: string,\n  callback: (resp: any) => any,\n  headers: Record<string, any>,\n): () => void {\n  const xhr = new XMLHttpRequest();\n  xhr.open('GET', src);\n  xhr.responseType = 'arraybuffer';\n  for (const h in headers) {\n    xhr.setRequestHeader(h, headers[h]);\n  }\n  xhr.onload = function () {\n    const arrayBufferView = new Uint8Array(this.response);\n    const blob = new Blob([arrayBufferView], { type: 'image/png' });\n    // @ts-ignore for typedoc\n    const urlCreator = window.URL || window.webkitURL;\n    const imageUrl = urlCreator.createObjectURL(blob);\n    callback(imageUrl);\n  };\n  xhr.send();\n  return () => {\n    xhr.abort();\n  };\n}\n","import {\n  ImageOverlay as LImageOverlay,\n  LatLngBoundsExpression,\n  ImageOverlayOptions,\n} from 'leaflet';\nimport { callAjax } from '../layersUtility';\n\ntype IOptions = ImageOverlayOptions & { headers?: any };\n\nexport class ImageOverlay extends LImageOverlay {\n  private _abort: (() => void)[] = [];\n\n  constructor(\n    imageUrl: string,\n    bounds: LatLngBoundsExpression,\n    options?: IOptions,\n  ) {\n    super(imageUrl, bounds, options);\n  }\n\n  cancelLoad(): void {\n    if (this._abort) {\n      this._abort.forEach((x) => x());\n      this._abort = [];\n    }\n  }\n\n  _initImage(): void {\n    // @ts-ignore\n    super._initImage();\n    // @ts-ignore\n    const headers = this.options.headers;\n    if (headers) {\n      // @ts-ignore\n      const img: HTMLImageElement = this._image;\n      const src = img.src;\n      img.src = '';\n      this._abort.push(\n        callAjax(\n          src,\n          (response) => {\n            img.src = response;\n          },\n          headers,\n        ),\n      );\n    }\n  }\n}\n","/*!\n * leaflet.wms.js\n * A collection of Leaflet utilities for working with Web Mapping services.\n * (c) 2014-2016, Houston Engineering, Inc.\n * MIT License\n */\n\nimport { Layer, Util, CRS } from 'leaflet';\nimport { debounce } from '@nextgis/utils';\nimport { ImageOverlay } from './ImageOverlay';\n\ninterface OverlayOptions {\n  crs?: null;\n  uppercase?: boolean;\n  attribution?: string;\n  opacity?: number;\n  isBack?: boolean;\n  minZoom?: number;\n  maxZoom?: number;\n  zIndex?: number;\n  pane?: string;\n  headers?: any;\n  viewPortBuffer?: number;\n  setViewDelay?: number;\n}\n\n/*\n * Overlay:\n * \"Single Tile\" WMS image overlay that updates with map changes.\n * Portions of wms.Overlay are directly extracted from L.TileLayer.WMS.\n * See Leaflet license.\n */\nexport class ImageLayer extends Layer {\n  defaultWmsParams = {\n    service: 'WMS',\n    request: 'GetMap',\n    version: '1.1.1',\n    layers: '',\n    styles: '',\n    format: 'image/jpeg',\n    transparent: false,\n  };\n\n  options: OverlayOptions = {\n    crs: null,\n    uppercase: false,\n    attribution: '',\n    opacity: 1,\n    isBack: false,\n    minZoom: 0,\n    maxZoom: 18,\n    pane: 'tilePane',\n    headers: null,\n    viewPortBuffer: 0,\n    setViewDelay: 100,\n  };\n\n  private wmsParams: any;\n  private _url?: string;\n  private _currentUrl?: string;\n  private _currentOverlay?: ImageOverlay;\n\n  constructor(url: string, options: OverlayOptions) {\n    super(options);\n    this._url = url;\n\n    // Move WMS parameters to params object\n    const params: any = {};\n    const opts: any = {};\n    let opt: keyof OverlayOptions;\n    for (opt in options) {\n      if (opt in this.options) {\n        opts[opt] = options[opt];\n      } else {\n        params[opt] = options[opt];\n      }\n    }\n    Util.setOptions(this, opts);\n    this.wmsParams = Util.extend({}, this.defaultWmsParams, params);\n  }\n\n  setParams(params: Record<string, any>): void {\n    Util.extend(this.wmsParams, params);\n    this.update();\n  }\n\n  getAttribution(): string {\n    return this.options.attribution || '';\n  }\n\n  onAdd(): this {\n    this.update();\n    return this;\n  }\n\n  onRemove(map: L.Map): this {\n    if (this._currentOverlay) {\n      this._currentOverlay.cancelLoad();\n      map.removeLayer(this._currentOverlay);\n      delete this._currentOverlay;\n    }\n    if (this._currentUrl) {\n      delete this._currentUrl;\n    }\n    return this;\n  }\n\n  getEvents(): {\n    moveend: () => void;\n  } {\n    return {\n      moveend: debounce(this.update, this.options.setViewDelay),\n    };\n  }\n\n  update(): void {\n    if (!this._map) {\n      return;\n    }\n    // Determine image URL and whether it has changed since last update\n    this.updateWmsParams();\n    const url = this.getImageUrl();\n    if (this._currentUrl === url) {\n      return;\n    }\n    this._currentUrl = url;\n\n    // Keep current image overlay in place until new one loads\n    // (inspired by esri.leaflet)\n    const viewPortBuffer = this.options.viewPortBuffer || 0;\n    const bounds = this._map.getBounds().pad(viewPortBuffer);\n\n    const overlay = new ImageOverlay(url, bounds, {\n      opacity: 0,\n      pane: this.options.pane,\n      headers: this.options.headers,\n    });\n    overlay.addTo(this._map);\n    if (this._currentOverlay) {\n      this._currentOverlay.cancelLoad();\n    }\n    overlay.once(\n      'load',\n      () => {\n        if (!this._map) {\n          return;\n        }\n        // @ts-ignore\n        if (overlay._url !== this._currentUrl) {\n          this._map.removeLayer(overlay);\n          return;\n        } else if (this._currentOverlay) {\n          this._map.removeLayer(this._currentOverlay);\n        }\n        this._currentOverlay = overlay;\n        overlay.setOpacity(\n          this.options.opacity !== undefined ? this.options.opacity : 1,\n        );\n        if (this.options.isBack === true) {\n          overlay.bringToBack();\n        }\n        if (this.options.isBack === false) {\n          overlay.bringToFront();\n        }\n        if (this.options.zIndex !== undefined) {\n          overlay.setZIndex(this.options.zIndex);\n        }\n      },\n      this,\n    );\n    const { minZoom, maxZoom } = this.options;\n    if (\n      (minZoom && this._map.getZoom() < minZoom) ||\n      (maxZoom && this._map.getZoom() > maxZoom)\n    ) {\n      this._map.removeLayer(overlay);\n    }\n  }\n\n  setOpacity(opacity: number): void {\n    this.options.opacity = opacity;\n    if (this._currentOverlay) {\n      this._currentOverlay.setOpacity(opacity);\n    }\n  }\n\n  bringToBack(): void {\n    this.options.isBack = true;\n    if (this._currentOverlay) {\n      this._currentOverlay.bringToBack();\n    }\n  }\n\n  bringToFront(): void {\n    this.options.isBack = false;\n    if (this._currentOverlay) {\n      this._currentOverlay.bringToFront();\n    }\n  }\n\n  setZIndex(zIndex: number): void {\n    this.options.zIndex = zIndex;\n    if (this._currentOverlay) {\n      this._currentOverlay.setZIndex(zIndex);\n    }\n  }\n\n  // See L.TileLayer.WMS: onAdd() & getTileUrl()\n  updateWmsParams(map?: L.Map): void {\n    if (!map) {\n      map = this._map;\n    }\n    // Compute WMS options\n    const viewPortBuffer = this.options.viewPortBuffer || 0;\n    const bounds = map.getBounds().pad(viewPortBuffer);\n    const size = map.getSize();\n    if (this.options.viewPortBuffer !== 0) {\n      const factor = viewPortBuffer + 1;\n      size.x = Math.ceil(size.x * factor);\n      size.y = Math.ceil(size.y * factor);\n    }\n    const wmsVersion = parseFloat(this.wmsParams.version);\n    const crs = this.options.crs || map.options.crs;\n    const projectionKey = wmsVersion >= 1.3 ? 'crs' : 'srs';\n    if (crs) {\n      const nw = crs.project(bounds.getNorthWest());\n      const se = crs.project(bounds.getSouthEast());\n\n      // Assemble WMS parameter string\n      const params: any = {\n        width: size.x,\n        height: size.y,\n      };\n      params[projectionKey] = crs.code;\n      params.bbox = (\n        wmsVersion >= 1.3 && crs === CRS.EPSG4326\n          ? [se.y, nw.x, nw.y, se.x]\n          : [nw.x, se.y, se.x, nw.y]\n      ).join(',');\n\n      Util.extend(this.wmsParams, params);\n    }\n  }\n\n  getImageUrl(): string {\n    const uppercase = this.options.uppercase || false;\n    const pstr = Util.getParamString(this.wmsParams, this._url, uppercase);\n    return this._url + pstr;\n  }\n}\n","import { MainLayerAdapter, ImageAdapterOptions } from '@nextgis/webmap';\n// @ts-ignore\nimport { ImageLayer } from './ImageLayer';\n\nimport { Map } from 'leaflet';\nimport { BaseAdapter } from '../BaseAdapter';\n\nexport class ImageAdapter\n  extends BaseAdapter<ImageAdapterOptions>\n  implements MainLayerAdapter<Map>\n{\n  layer: any;\n\n  addLayer(options: ImageAdapterOptions): any {\n    const url = options && options.url;\n    if (url) {\n      options = { transparent: true, ...options };\n      const updateWmsParamsFromOpt = options.updateWmsParams;\n      this.layer = new ImageLayer(url, {\n        pane: this.pane,\n        headers: options.headers,\n        setViewDelay: options.setViewDelay,\n        /**\n         * TODO: safe remove, use only options.params\n         */\n        ...options,\n        ...options.params,\n      });\n      if (updateWmsParamsFromOpt) {\n        const updateWmsParams = this.layer.updateWmsParams;\n        this.layer.updateWmsParams = function (map: Map) {\n          updateWmsParams.call(this, map);\n          this.wmsParams = updateWmsParamsFromOpt(this.wmsParams);\n        };\n      }\n      return this.layer;\n    }\n  }\n}\n","import { DomUtil, GridLayer, Util } from 'leaflet';\nimport { debounce } from '../../../utils/src';\nimport { callAjax } from './layersUtility';\n\n// import type { TileLayerOptionsExtended } from './TileAdapter/TileLayer';\n\ntype Constructor = new (...args: any[]) => any;\n\nexport function makeRemote<\n  TBase extends Constructor,\n  // O extends TileLayerOptionsExtended = TileLayerOptionsExtended\n>(Base: TBase): TBase {\n  return class RemoteTileLayer extends Base {\n    constructor(...args: any[]) {\n      super(...args);\n      if (this.options.setViewDelay) {\n        // @ts-ignore\n        this._update = debounce((...a: any[]) => {\n          // @ts-ignore\n          GridLayer.prototype._update.call(this, ...a);\n        }, this.options.setViewDelay);\n      }\n    }\n\n    createTile(\n      coords: Record<string, unknown>,\n      done: (error: any, tile: HTMLImageElement) => void,\n    ): HTMLImageElement {\n      // @ts-ignore\n      const url = this.getTileUrl(coords);\n\n      const tile = document.createElement('img');\n      (tile as any).abort = callAjax(\n        url,\n        (response) => {\n          tile.src = response;\n          done(null, tile);\n        },\n        // @ts-ignore\n        this.options.headers,\n      );\n\n      if (this.options.crossOrigin || this.options.crossOrigin === '') {\n        tile.crossOrigin =\n          this.options.crossOrigin === true ? '' : this.options.crossOrigin;\n      }\n\n      tile.alt = '';\n      tile.setAttribute('role', 'presentation');\n\n      return tile;\n    }\n\n    _abortLoading() {\n      // @ts-ignore\n      const tiles = this._tiles;\n      // @ts-ignore\n      const tileZoom = this._tileZoom;\n      for (const i in tiles) {\n        if (tiles[i].coords.z !== tileZoom) {\n          const tile = tiles[i].el;\n\n          tile.onload = Util.falseFn;\n          tile.onerror = Util.falseFn;\n          if (!tile.complete) {\n            if (tile.abort) {\n              tile.abort();\n            }\n            tile.src = Util.emptyImageUrl;\n            DomUtil.remove(tile);\n            delete tiles[i];\n          }\n        }\n      }\n    }\n  };\n}\n","import { TileLayer as TL, TileLayerOptions } from 'leaflet';\n\nimport { makeRemote } from '../RemoteTileLayer';\n\nexport type TileLayerOptionsExtended = TileLayerOptions & {\n  headers: Record<string, any>;\n  setViewDelay?: number;\n};\n\nclass TileLayerBase extends TL {\n  constructor(urlTemplate: string, options?: TileLayerOptionsExtended) {\n    super(urlTemplate, options);\n    Object.assign(this.options, options);\n  }\n}\n\nexport const TileLayer = makeRemote(TileLayerBase);\n","import { MainLayerAdapter, TileAdapterOptions } from '@nextgis/webmap';\nimport { TileLayer, TileLayerOptions } from 'leaflet';\nimport { TileLayer as TL } from './TileLayer';\nimport { BaseAdapter } from '../BaseAdapter';\n\nexport class TileAdapter\n  extends BaseAdapter<TileAdapterOptions, TileLayer>\n  implements MainLayerAdapter\n{\n  addLayer(options: TileAdapterOptions): TileLayer | undefined {\n    if (options) {\n      const { url, ...opt } = options;\n      if (url) {\n        const tileLayerOptions: TileLayerOptions = {\n          pane: this.pane,\n          attribution: opt.attribution,\n          minZoom: opt.minZoom,\n          maxZoom: opt.maxZoom,\n\n          ...opt.nativeOptions,\n        };\n        if (opt.subdomains) {\n          tileLayerOptions.subdomains = opt.subdomains;\n        }\n        let layer;\n        if (opt.headers) {\n          layer = new TL(url, {\n            ...tileLayerOptions,\n            headers: opt.headers,\n            setViewDelay: opt.setViewDelay,\n          });\n        } else {\n          layer = new TileLayer(url, tileLayerOptions);\n        }\n        return layer;\n      }\n    }\n  }\n}\n","import { TileLayer as TL, WMSOptions } from 'leaflet';\nimport { makeRemote } from '../RemoteTileLayer';\n\ntype LayerOptions = WMSOptions & { headers: any };\n\nclass WmsLayerBase extends TL.WMS {\n  constructor(urlTemplate: string, options: LayerOptions) {\n    super(urlTemplate, options);\n  }\n}\n\nexport const WmsLayer = makeRemote(WmsLayerBase);\n\n// applyMixins(WmsLayer, [RemoteTileLayer]);\n","import { MainLayerAdapter, WmsAdapterOptions } from '@nextgis/webmap';\nimport { TileLayer, WMSOptions } from 'leaflet';\nimport { WmsLayer as WMS } from './WmsLayer';\nimport { BaseAdapter } from '../BaseAdapter';\n\nexport class WmsAdapter\n  extends BaseAdapter<WmsAdapterOptions, TileLayer.WMS>\n  implements MainLayerAdapter\n{\n  addLayer(options: WmsAdapterOptions): TileLayer.WMS | undefined {\n    if (options) {\n      const { url, ...opt } = options;\n      if (url) {\n        const layerOptions: WMSOptions = {\n          pane: this.pane,\n          attribution: opt.attribution,\n          minZoom: opt.minZoom,\n          maxZoom: opt.maxZoom,\n          layers: options.layers,\n          format: options.format,\n        };\n        let layer;\n        if (opt.headers) {\n          layer = new WMS(url, { ...layerOptions, headers: opt.headers });\n        } else {\n          layer = new TileLayer.WMS(url, layerOptions);\n        }\n        return layer;\n      }\n    }\n  }\n}\n","import { MainLayerAdapter, TileAdapterOptions } from '@nextgis/webmap';\nimport { TileLayer } from 'leaflet';\n\nimport { TileAdapter } from './TileAdapter/TileAdapter';\n\nexport class OsmAdapter extends TileAdapter implements MainLayerAdapter {\n  addLayer(options: TileAdapterOptions): TileLayer | undefined {\n    return super.addLayer({\n      ...options,\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    });\n  }\n}\n","import { EventEmitter } from 'events';\nimport { Map, Control, FitBoundsOptions } from 'leaflet';\nimport { GeoJsonAdapter } from './layer-adapters/GeoJsonAdapter';\nimport { AttributionControl } from './controls/Attribution';\nimport { convertMapClickEvent } from './utils/utils';\nimport { createButtonControl } from './controls/createButtonControl';\nimport { createControl } from './controls/createControl';\nimport { ImageAdapter } from './layer-adapters/ImageAdapter/ImageAdapter';\nimport { TileAdapter } from './layer-adapters/TileAdapter/TileAdapter';\nimport { WmsAdapter } from './layer-adapters/WmsAdapter/WmsAdapter';\nimport { OsmAdapter } from './layer-adapters/OsmAdapter';\n\nimport type {\n  CreateControlOptions,\n  ButtonControlOptions,\n  LngLatBoundsArray,\n  LocationEvents,\n  LocateOptions,\n  MainMapEvents,\n  LayerAdapter,\n  LngLatArray,\n  MapAdapter,\n  MapOptions,\n  FitOptions,\n  MapControl,\n  Locate,\n} from '@nextgis/webmap';\nimport type {\n  Layer,\n  GridLayer,\n  ControlPosition,\n  LeafletMouseEvent,\n} from 'leaflet';\n\nexport type Type<T> = new (...args: any[]) => T;\n\nexport class LeafletMapAdapter implements MapAdapter<Map, any, Control> {\n  static layerAdapters: {\n    [name: string]: Type<LayerAdapter<Map, any, any>>;\n  } = {\n    IMAGE: ImageAdapter,\n    TILE: TileAdapter,\n    GEOJSON: GeoJsonAdapter,\n    WMS: WmsAdapter,\n    // // MVT: MvtAdapter,\n    OSM: OsmAdapter,\n  };\n\n  static controlAdapters = {\n    ZOOM: Control.Zoom,\n    ATTRIBUTION: AttributionControl,\n  };\n\n  static Map = Map;\n\n  options: MapOptions = { target: 'map' };\n\n  layerAdapters = LeafletMapAdapter.layerAdapters;\n  controlAdapters = LeafletMapAdapter.controlAdapters;\n  emitter = new EventEmitter();\n  map?: Map;\n\n  private _universalEvents: (keyof MainMapEvents)[] = [\n    'zoomstart',\n    'zoom',\n    'zoomend',\n    'movestart',\n    'move',\n    'moveend',\n  ];\n\n  create(options: MapOptions): void {\n    this.options = { ...options };\n    if (this.options.target) {\n      const {\n        maxZoom,\n        minZoom,\n        zoom,\n        center,\n        maxBounds: mb,\n        mapAdapterOptions,\n      } = this.options;\n      this.map = new Map(this.options.target, {\n        zoomControl: false,\n        attributionControl: false,\n        maxZoom,\n        minZoom,\n        zoom,\n        maxBounds: mb && [\n          [mb[1], mb[0]],\n          [mb[3], mb[2]],\n        ],\n        center: center && [center[1], center[0]],\n        ...mapAdapterOptions,\n      });\n      // create default pane\n      const defPane = this.map.createPane('order-0');\n      defPane.style.zIndex = String(0);\n      this.emitter.emit('create', this);\n      this._addMapListeners();\n    }\n  }\n\n  destroy(): void {\n    if (this.map) {\n      this.map.remove();\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this.map && this.map.getContainer();\n  }\n\n  setCursor(cursor: string): void {\n    if (this.map) {\n      this.map.getContainer().style.cursor = cursor;\n    }\n  }\n\n  setView(lngLat: LngLatArray, zoom?: number): void {\n    const [lng, lat] = lngLat;\n    if (this.map) {\n      if (typeof zoom === 'number') {\n        this.map.setView([lat, lng], zoom, { animate: false });\n      } else {\n        this.setCenter([lng, lat]);\n      }\n    }\n  }\n\n  setCenter(lngLat: LngLatArray): void {\n    const [lng, lat] = lngLat;\n    if (this.map) {\n      this.map.panTo([lat, lng]);\n    }\n  }\n\n  getCenter(): LngLatArray | undefined {\n    const map = this.map;\n    if (map) {\n      const bounds = map.getBounds();\n      const center = bounds.getCenter();\n      return [center.lng, center.lat];\n    }\n  }\n\n  setZoom(zoom: number): void {\n    if (this.map) {\n      this.map.setZoom(zoom);\n    }\n  }\n\n  getZoom(): number | undefined {\n    return (this.map && this.map.getZoom()) || undefined;\n  }\n\n  getBounds(): LngLatBoundsArray | undefined {\n    if (!this.map) return undefined;\n    const b = this.map.getBounds();\n    const sw = b.getSouthWest();\n    const ne = b.getNorthEast();\n    return [sw.lng, sw.lat, ne.lng, ne.lat];\n  }\n\n  // [west, south, east, north]\n  fitBounds(e: LngLatBoundsArray, options: FitOptions = {}): void {\n    if (this.map) {\n      const { maxZoom, offset, padding } = options;\n      const opt: FitBoundsOptions = {};\n      if (maxZoom) {\n        opt.maxZoom = maxZoom;\n      }\n      if (padding) {\n        opt.padding = [padding, padding];\n      }\n      if (offset) {\n        opt.padding = offset;\n      }\n      // top, left, bottom, right\n      this.map.fitBounds(\n        [\n          [e[3], e[0]],\n          [e[1], e[2]],\n        ],\n        opt,\n      );\n    }\n  }\n\n  getLayerAdapter(name: string): Type<LayerAdapter<L.Map, any, any>> {\n    return LeafletMapAdapter.layerAdapters[name];\n  }\n\n  createControl(control: MapControl, options: CreateControlOptions): L.Control {\n    return createControl(control, options);\n  }\n\n  createButtonControl(options: ButtonControlOptions): L.Control {\n    return createButtonControl(options);\n  }\n\n  addControl(control: Control, position: string): Control | undefined {\n    control.options.position = position.replace('-', '') as ControlPosition;\n    if (this.map) {\n      this.map.addControl(control);\n      return control;\n    }\n  }\n\n  removeControl(control: Control): void {\n    if (this.map) {\n      this.map.removeControl(control);\n    }\n  }\n\n  removeLayer(layer: Layer): void {\n    layer && layer.remove && layer.remove();\n  }\n\n  showLayer(layer: Layer): void {\n    if (this.map) {\n      layer.addTo(this.map);\n    }\n  }\n\n  hideLayer(layer: Layer): void {\n    layer.remove();\n  }\n\n  setLayerOpacity(layer: GridLayer | Layer, value: number): void {\n    if ('setOpacity' in layer) {\n      layer.setOpacity(value);\n    }\n  }\n\n  setLayerOrder(\n    layer: Layer,\n    order: number,\n    layers: { [x: string]: LayerAdapter },\n  ): void {\n    // const baseLayers: string[] = [];\n    // const orderedLayers = Object.keys(layers).filter((x) => {\n    //   if (layers[x].options.baselayer) {\n    //     baseLayers.push(x);\n    //     return false;\n    //   }\n    //   return true;\n    // }).sort((a, b) => {\n    //   const layerAOrder = layers[a] && layers[a].options.order;\n    //   const layerBOrder = layers[b] && layers[b].options.order;\n    //   if (layerAOrder !== undefined && layerBOrder !== undefined) {\n    //     return layerAOrder - layerBOrder;\n    //   }\n    //   return 0;\n    // });\n    // baseLayers.forEach((x) => {\n    //   layers[x].layer.bringToBack();\n    // });\n    // if (layer.setZIndex) {\n    //   layer.setZIndex(order);\n    // } else {\n    //   for (let fry = 0; fry < orderedLayers.length; fry++) {\n    //     if (layers[orderedLayers[fry]].options.visibility) {\n    //       layers[orderedLayers[fry]].layer.bringToFront();\n    //     }\n    //   }\n    // }\n    // orderedLayers.forEach((x) => {\n    //   const l = layers[x];\n    //   const map = l.layer._map;\n    //   if (l.options.visibility && map) {\n    //     l.layer.remove();\n    //     l.layer.addTo(map);\n    //   }\n    // });\n  }\n\n  onMapClick(evt: LeafletMouseEvent): void {\n    const converted = convertMapClickEvent(evt);\n    this.emitter.emit('preclick', converted);\n    this.emitter.emit('click', converted);\n  }\n\n  locate(opt: LocateOptions, events?: LocationEvents): Locate {\n    const map = this.map;\n    if (map) {\n      map.locate(opt);\n      if (events) {\n        const { locationfound, locationerror } = events;\n        const locationFound = (e: L.LeafletEvent) => {\n          const event = e as L.LocationEvent;\n          const lngLat: [number, number] = [event.latlng.lng, event.latlng.lat];\n          locationfound({ lngLat });\n        };\n        if (locationfound !== undefined) {\n          map.on('locationfound', locationFound, this);\n        }\n        if (locationerror) {\n          map.on('locationerror', locationerror, this);\n        }\n        const stop = () => {\n          if (locationfound !== undefined) {\n            map.off('locationfound', locationFound);\n          }\n          if (locationerror) {\n            map.off('locationerror', locationerror);\n          }\n        };\n        return { stop };\n      }\n    }\n    const stop = () => void 'fake function';\n    return { stop };\n  }\n\n  private _addMapListeners() {\n    const map = this.map;\n    if (map) {\n      map.on('click', (evt) => {\n        this.onMapClick(evt as LeafletMouseEvent);\n      });\n      this._universalEvents.forEach((e) => {\n        map.on(e, () => this.emitter.emit(e, this), map);\n      });\n    }\n  }\n}\n","import { ButtonControlOptions } from '@nextgis/webmap';\nimport { createControl } from './createControl';\nimport { DomEvent, Control } from 'leaflet';\n\nexport function createButtonControl(options: ButtonControlOptions): Control {\n  const link = document.createElement('a');\n\n  const title = options.title || '';\n  link.href = '#';\n  link.title = title;\n\n  link.setAttribute('role', 'button');\n  link.setAttribute('aria-label', title);\n\n  DomEvent.disableClickPropagation(link);\n  DomEvent.on(link, 'click', DomEvent.stop);\n\n  if (options.html instanceof HTMLElement) {\n    link.appendChild(options.html);\n  } else if (typeof options.html === 'string') {\n    link.innerHTML = options.html;\n  }\n\n  const onClick = (e: Event) => {\n    e.stopPropagation();\n    options.onClick();\n  };\n\n  return createControl(\n    {\n      onAdd() {\n        if (options.onClick !== undefined) {\n          link.addEventListener('click', onClick);\n        }\n        return link;\n      },\n      onRemove() {\n        const parent = link.parentNode;\n        if (parent) {\n          parent.removeChild(link);\n        }\n        if (options.onClick !== undefined) {\n          link.removeEventListener('click', onClick);\n        }\n      },\n    },\n    { bar: true },\n  );\n}\n","/**\n * @module leaflet-map-adapter\n */\n\nimport { LeafletMapAdapter } from './LeafletMapAdapter';\n\nexport default LeafletMapAdapter;\n","import { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when...\n */\nexport class NgwError extends Error {\n  name = 'NgwError';\n\n  title!: string;\n  message!: string;\n  detail!: string;\n  exception!: NgwExceptions;\n  status_code!: number | 404 | 500;\n  data?: Record<string, any>;\n  guru_meditation!: string;\n\n  constructor(er?: NgwError) {\n    super();\n    Object.assign(this, er);\n    Object.setPrototypeOf(this, NgwError.prototype);\n  }\n}\n","/**\n * Thrown when...\n */\nexport class NetworkError extends Error {\n  name = 'NetworkError';\n\n  constructor(url: string) {\n    super();\n    Object.setPrototypeOf(this, NetworkError.prototype);\n    this.message = `Unable to request ${url}.\n    Possibly invalid NGW URL entered or CORS not configured to get request from ${location.origin}`; // /control-panel/cors\n  }\n}\n","import {\n  RequestOptions as NgwRequestOptions,\n  RequestMethods,\n} from '../interfaces';\nimport { NgwError } from '../errors/NgwError';\nimport { NetworkError } from '../errors/NetworkError';\n\n// readyState\n// Holds the status of the XMLHttpRequest.\n// 0: request not initialized\n// 1: server connection established\n// 2: request received\n// 3: processing request\n// 4: request finished and response is ready\n\n// status\n// 200: \"OK\"\n// 201 \"Created\"\tThe request has been fulfilled, and a new resource is created\n// 403: \"Forbidden\"\n// 404: \"Page not found\"\n// 500: \"Internal Server Error\"\n// For a complete list go to the Http Messages Reference\n\ntype LoadData = (\n  url: string,\n  callback: (...args: any[]) => any,\n  options: NgwRequestOptions<RequestMethods> | undefined,\n  error: (reason?: any) => void,\n  onCancel: (cancelHandler: () => void) => void,\n) => void;\n\nlet loadData: LoadData;\n// @ts-ignore\nif (__BROWSER__) {\n  loadData = (\n    url: string,\n    callback: (...args: any[]) => any,\n    options: NgwRequestOptions = {},\n    error: (reason?: any) => void,\n    onCancel: (cancelHandler: () => void) => void,\n  ): void => {\n    options.method = options.method || 'GET';\n\n    const xhr = new XMLHttpRequest();\n    xhr.open(options.method || 'GET', url, true); // true for asynchronous\n\n    if (options.responseType === 'blob') {\n      xhr.responseType = options.responseType;\n    }\n    const getResponseText = () => {\n      try {\n        return JSON.parse(xhr.responseText);\n      } catch (er) {\n        return xhr.responseText;\n      }\n    };\n    const processingResponse = (forError = false) => {\n      const cb = forError ? error : callback;\n      if (options.responseType === 'blob') {\n        cb(xhr.response);\n      } else {\n        if (xhr.responseText) {\n          cb(getResponseText());\n        } else {\n          error({ message: '' });\n        }\n      }\n    };\n    xhr.onload = () => {\n      if ([401, 403, 404, 500].indexOf(xhr.status) !== -1) {\n        error(new NgwError(getResponseText()));\n      }\n      processingResponse();\n    };\n\n    // xhr.onreadystatechange = () => {\n    //   if (\n    //     (xhr.readyState === 4 && xhr.status === 200) ||\n    //     (xhr.readyState === 3 && xhr.status === 201)\n    //   ) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 3 && xhr.status === 400) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 4 && xhr.status === 500) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 4 && xhr.status === 401) {\n    //     error(xhr.statusText);\n    //   } else if (xhr.readyState === 4) {\n    //     error('request error');\n    //   }\n    // };\n\n    xhr.onerror = (er) => {\n      if (xhr.status === 0) {\n        error(new NetworkError(url));\n      } else {\n        error(er);\n      }\n    };\n\n    xhr.upload.onprogress = function (e) {\n      if (e.lengthComputable) {\n        const percentComplete = (e.loaded / e.total) * 100;\n        if (options.onProgress) {\n          options.onProgress(percentComplete, e);\n        }\n        // console.log(percentComplete + '% uploaded');\n      }\n    };\n\n    const headers = options.headers;\n    if (headers) {\n      for (const h in headers) {\n        const header = headers[h];\n        if (typeof header === 'string') {\n          xhr.setRequestHeader(h, header);\n        }\n      }\n    }\n    if (options.withCredentials !== undefined) {\n      xhr.withCredentials = options.withCredentials;\n    }\n\n    let data: FormData | any;\n    if (options.file) {\n      data = new FormData();\n      data.append('file', options.file);\n      if (options.data) {\n        for (const d in data) {\n          data.append(d, data[d]);\n        }\n      }\n    } else {\n      data = options.data\n        ? typeof options.data === 'string'\n          ? options.data\n          : JSON.stringify(options.data)\n        : null;\n    }\n    if (onCancel) {\n      onCancel(() => {\n        xhr.abort();\n      });\n    }\n    xhr.send(data);\n  };\n} else {\n  const url = require('url');\n  const http = require('http');\n  const https = require('https');\n\n  const adapterFor = (inputUrl: string) => {\n    const adapters: Record<string, any> = {\n      'http:': http,\n      'https:': https,\n    };\n    const protocol = url.parse(inputUrl).protocol || 'https:';\n    return adapters[protocol];\n  };\n\n  loadData = (\n    url: string,\n    callback: (...args: any[]) => any,\n    options: NgwRequestOptions<RequestMethods> = {},\n    error: (reason?: any) => void,\n    onCancel: (cancelHandler: () => void) => void,\n  ): Promise<unknown> => {\n    const request = new Promise((resolve, reject) => {\n      const adapter = adapterFor(url);\n      if (adapter) {\n        const requestOpt = {\n          headers: options.headers || {},\n          method: options.method,\n        };\n        const body =\n          typeof options.data === 'string'\n            ? options.data\n            : JSON.stringify(options.data);\n        // https://stackoverflow.com/questions/35589109/node-http-delete-request-no-longer-works-after-upgrading-from-0-10-40\n        if (body !== undefined && options.method !== 'POST') {\n          Object.assign(requestOpt.headers, {\n            'Content-Type': 'application/json',\n            'Content-Length': Buffer.byteLength(body),\n          });\n        }\n        const req = adapter.request(url, requestOpt, (resp: any) => {\n          let data = '';\n          resp.on('data', (chunk: any) => {\n            data += chunk;\n          });\n          resp.on('end', () => {\n            if (data) {\n              let json: Record<string, any> | undefined;\n              try {\n                json = JSON.parse(data);\n                if (json && json.status_code && json.status_code) {\n                  reject(json.message);\n                }\n              } catch (er) {\n                reject(er);\n                // throw new Error(er);\n              }\n              if (json !== undefined) {\n                resolve(json);\n              }\n            }\n            reject('no data');\n          });\n        });\n        req.on('error', (err: any) => {\n          reject(err);\n        });\n        if (body) {\n          req.write(body);\n        }\n        onCancel(() => {\n          req.abort();\n        });\n        req.end();\n      } else {\n        throw new Error(`Given URL '${url}' is not correct`);\n      }\n    });\n    return request\n      .then((data) => {\n        if (callback) {\n          callback(data);\n        }\n        return data;\n      })\n      .catch((er) => {\n        if (error) {\n          error(er);\n        } else {\n          throw new Error(er);\n        }\n      });\n  };\n}\n\nexport { loadData };\n","// https://github.com/Leaflet/Leaflet/blob/b507e21c510b53cd704fb8d3f89bb46ea925c8eb/src/core/Util.js#L165\nconst templateRe = /\\{ *([\\w_-]+) *\\}/g;\n\nexport function template(str: string, data: { [param: string]: any }): string {\n  return str.replace(templateRe, (s, key) => {\n    let value = data[key];\n\n    if (value === undefined) {\n      throw new Error('No value provided for letiable ' + s);\n    } else if (typeof value === 'function') {\n      value = value(data);\n    }\n    return value;\n  });\n}\n","import { NgwError } from './NgwError';\nimport { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when ...\n */\nexport class ResourceNotFoundError extends NgwError {\n  name = 'ResourceNotFoundError';\n  exception: NgwExceptions = 'nextgisweb.resource.exception.ResourceNotFound';\n\n  constructor(obj?: ResourceNotFoundError) {\n    super(obj);\n    Object.setPrototypeOf(this, ResourceNotFoundError.prototype);\n  }\n}\n","import { NgwError } from './NgwError';\nimport { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when ...\n */\nexport class InsufficientPermissionsError extends NgwError {\n  name = 'InsufficientPermissionsError';\n  exception: NgwExceptions =\n    'nextgisweb.core.exception.InsufficientPermissions';\n\n  constructor(obj: InsufficientPermissionsError) {\n    super(obj);\n    Object.setPrototypeOf(this, InsufficientPermissionsError.prototype);\n  }\n}\n","import { NgwConnectorOptions } from './interfaces';\nimport { NgwConnector } from './NgwConnector';\nimport { objectDeepEqual } from '@nextgis/utils';\n\nexport const CONNECTORS: NgwConnector[] = [];\n\nexport function addConnector(connector: NgwConnector): void {\n  CONNECTORS.push(connector);\n}\n\nexport function findConnector(\n  options: NgwConnectorOptions,\n): NgwConnector | undefined {\n  return CONNECTORS.find((x) => {\n    if (x.options.baseUrl === options.baseUrl) {\n      if (options.auth) {\n        if (x.options.auth) {\n          return objectDeepEqual(x.options.auth, options.auth);\n        }\n      } else {\n        // if auth not in find options; use first connector with same url\n        return true;\n      }\n    }\n  });\n}\n\nexport function removeConnector(connector: NgwConnector): void {\n  const index = CONNECTORS.indexOf(connector);\n  if (index !== -1) {\n    CONNECTORS.splice(index, 1);\n  }\n}\n\nexport function findAndRemoveConnector(options: NgwConnectorOptions): void {\n  const exist = findConnector(options);\n  if (exist) {\n    removeConnector(exist);\n  }\n}\n","export function isObject(val: unknown): val is Record<string | number, any> {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n","import { DeepPartial, defined } from '@nextgis/utils';\nimport { Resource } from '../types/ResourceItem';\nimport { isObject } from './isObject';\n\n/**\n * ```\n * { keyname, parent: { id }} > { keyname, parent__id }\n * ```\n * @param resource - Any property from NGW resource item\n */\nexport function resourceToQuery(\n  resource: DeepPartial<Resource>,\n  prefix = '',\n): Record<string, unknown> {\n  prefix = prefix ? prefix + '__' : '';\n  const query: Record<string, any> = {};\n  Object.entries(resource).forEach(([key, value]) => {\n    if (isObject(value)) {\n      const children = resourceToQuery(value as DeepPartial<Resource>, key);\n      Object.assign(query, children);\n    } else if (defined(value)) {\n      query[prefix + key] = value;\n    }\n  });\n  return query;\n}\n","import CancelablePromise from '@nextgis/cancelable-promise';\nimport { defined } from '@nextgis/utils';\nimport Cache from '@nextgis/cache';\n\nimport { resourceToQuery } from './utils/resourceToQuery';\nimport { resourceCompare } from './utils/resourceCompare';\nimport { ResourceNotFoundError } from './errors/ResourceNotFoundError';\n\nimport { isObject } from './utils/isObject';\n\nimport type { DeepPartial } from '@nextgis/utils';\nimport type { NgwConnector } from './NgwConnector';\nimport type { ResourceItem, Resource } from './types/ResourceItem';\nimport type { RequestOptions, ResourceDefinition } from './interfaces';\n\nexport class ResourcesControl {\n  cache = new Cache<\n    CancelablePromise<ResourceItem | undefined>,\n    { id?: number }\n  >();\n\n  constructor(private connector: NgwConnector) {}\n\n  // -------------------------------------------------------------------------\n  // Resource Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Receive resource from NGW by id, keyname or search-object parameter.\n   * @param resource - Resource id, keyname or search-object\n   *\n   * @remarks\n   * Fetching resource would be cached to speed up next call\n   */\n  getOne(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    const cache = new Cache();\n    const makeRequest = () => {\n      if (typeof resource === 'string') {\n        return this._fetchResourceBy({ keyname: resource }, requestOptions);\n      } else if (typeof resource === 'number') {\n        return this._fetchResourceById(resource, requestOptions);\n      } else if (isObject(resource)) {\n        return this._fetchResourceBy(resource, requestOptions);\n      }\n      return CancelablePromise.resolve(undefined);\n    };\n    return cache.add('resource', makeRequest, { resource });\n  }\n\n  getOneOrFail(resource: ResourceDefinition): CancelablePromise<ResourceItem> {\n    return this.getOne(resource).then((res) => {\n      if (res) {\n        return res;\n      }\n      throw new ResourceNotFoundError();\n    });\n  }\n\n  /**\n   * A fast way to retrieve resource ID for any resource definition.\n   * @param resource - Any available resource definition\n   *\n   * @remarks\n   * There are situations when exactly the resource id is needed\n   * (for example, to compose the correct request to the api)\n   * then this method will come in handy to facilitate the extraction of the identifier\n   * if the resource is specified through a keyname or other parameters.\n   */\n  getId(resource: ResourceDefinition): CancelablePromise<number | undefined> {\n    if (typeof resource === 'number') {\n      return CancelablePromise.resolve(resource);\n    } else if (typeof resource === 'string' || isObject(resource)) {\n      return this.getOne(resource).then((res) => {\n        if (res) {\n          return res.resource.id;\n        }\n      });\n    }\n    return CancelablePromise.resolve(undefined);\n  }\n\n  /**\n   * A fast way to retrieve resource ID for any resource definition.\n   * @param resource - Any available resource definition\n   *\n   * @remarks\n   * Similar with {@link NgwConnector.getResourceId | getResourceId} but rise error if resource is not exist.\n   * To not make one more checks if the resource is definitely exists\n   */\n  getIdOrFail(resource: ResourceDefinition): CancelablePromise<number> {\n    return this.getId(resource).then((resp) => {\n      if (resp === undefined) {\n        throw new Error();\n      }\n      return resp;\n    });\n  }\n\n  getMany(\n    resource: DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem[]> {\n    return this._resourceCacheFilter(resource).then((items) => {\n      if (!items.length) {\n        const query: Record<string, unknown> = {};\n        if (resource.keyname) {\n          query.keyname = resource.keyname;\n        } else {\n          Object.assign(query, resourceToQuery(resource));\n        }\n        return this.connector\n          .get('resource.search', requestOptions, {\n            serialization: 'full',\n            ...query,\n          })\n          .then((resources) => {\n            if (resources) {\n              resources.forEach((x) => {\n                this.cache.add('resource.item', CancelablePromise.resolve(x), {\n                  id: x.resource.id,\n                });\n              });\n            }\n            return resources;\n          });\n      }\n      return items;\n    });\n  }\n\n  getParent(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.connector.getResource(resource).then((child) => {\n      if (child) {\n        return this.connector.getResource(child.resource.parent.id);\n      }\n      return CancelablePromise.resolve(undefined);\n    });\n  }\n\n  getChildrenOf(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.getId(resource).then((parent) => {\n      return this.connector\n        .get(\n          'resource.collection',\n          { cache: true },\n          {\n            parent,\n          },\n        )\n        .then((items) => {\n          for (const i of items) {\n            this.cache.add('resource.item', CancelablePromise.resolve(i), {\n              id: i.resource.id,\n            });\n          }\n          return items;\n        });\n    });\n  }\n\n  update(\n    resource: ResourceDefinition,\n    data: DeepPartial<ResourceItem>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.getId(resource).then((id) => {\n      if (id !== undefined) {\n        return this.cache.add(\n          'resource.item',\n          () => this.connector.put('resource.item', { data }, { id }),\n          { id },\n        );\n      }\n    });\n  }\n\n  /**\n   * Fast way to delete resource from NGW and clean cache.\n   * @param resource - Resource definition\n   */\n  delete(resource: ResourceDefinition): CancelablePromise<void> {\n    return this.getId(resource).then((id) => {\n      if (id !== undefined) {\n        return this.connector.delete('resource.item', null, { id }).then(() => {\n          this.cache.delete('resource.item', { id });\n          return undefined;\n        });\n      }\n    });\n  }\n\n  private _fetchResourceById(\n    id: number,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    const promise = () =>\n      this.connector.get('resource.item', requestOptions, { id });\n\n    return this.cache\n      .add('resource.item', promise, {\n        id,\n      })\n      .catch((er) => {\n        if (!(er instanceof ResourceNotFoundError)) {\n          throw er;\n        }\n        return undefined;\n      });\n  }\n\n  private _fetchResourceBy(\n    resource: DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.getMany(resource, requestOptions).then((resources) => {\n      return resources[0];\n    });\n  }\n\n  private _resourceCacheFilter(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem[]> {\n    return CancelablePromise.all(this.cache.matchAll('resource.item')).then(\n      (resources) => {\n        const items: ResourceItem[] = [];\n        resources.filter((x) => {\n          if (x) {\n            // identical by uniq props\n            if (resource.keyname && x.resource.keyname) {\n              return resource.keyname === x.resource.keyname;\n            }\n            if (defined(resource.id) && defined(x.resource.id)) {\n              return resource.id === x.resource.id;\n            }\n            return resourceCompare(resource, x.resource);\n          }\n        });\n        return items;\n      },\n    );\n  }\n}\n","import { objectDeepEqual } from '@nextgis/utils';\nimport type { DeepPartial } from '@nextgis/utils';\nimport type { Resource } from '../types/ResourceItem';\n\nexport function resourceCompare(\n  res1: DeepPartial<Resource>,\n  res2: DeepPartial<Resource>,\n): boolean {\n  return objectDeepEqual(res1, res2);\n}\n","import CancelablePromise from '@nextgis/cancelable-promise';\nimport { template } from './template';\nimport type { NgwConnector } from '../NgwConnector';\nimport type {\n  RequestItemKeys,\n  RequestItemsParams,\n  RequestOptions,\n} from '../interfaces';\nimport type { RequestItemsParamsMap } from '../types/RequestItemsParamsMap';\n\ninterface ApiRequestOptions<K extends keyof RequestItemsParamsMap> {\n  name: string;\n  connector: NgwConnector;\n  params: RequestItemsParams<K>;\n  requestOptions: RequestOptions;\n}\n\nexport function apiRequest<\n  K extends keyof RequestItemsParamsMap,\n  P extends RequestItemKeys = RequestItemKeys,\n>(opt: ApiRequestOptions<K>): CancelablePromise<P[K]> {\n  const params = opt.params;\n  return new CancelablePromise((resolve, reject) => {\n    opt.connector\n      .connect()\n      .then((apiItems) => {\n        let apiItem = apiItems && apiItems[opt.name];\n        if (apiItem) {\n          apiItem = [...apiItem];\n          let url = apiItem.shift();\n          if (apiItem.length) {\n            const replaceParams: {\n              [num: number]: string;\n            } = {};\n            for (let fry = 0; fry < apiItem.length; fry++) {\n              const arg = apiItem[fry];\n              replaceParams[fry] = '{' + arg + '}';\n              if (params[arg] === undefined) {\n                throw new Error(\n                  '`' + arg + '`' + ' url api argument is not specified',\n                );\n              }\n            }\n            if (url) {\n              url = template(url, replaceParams);\n            }\n          }\n          // Transfer part of the parameters from `params` to the URL string\n          if (params) {\n            const paramArray = [];\n            const paramList = params.paramList;\n            if (Array.isArray(paramList)) {\n              delete params.paramList;\n              paramList.forEach((x) => {\n                paramArray.push(`${x[0]}=${x[1]}`);\n              });\n            }\n            for (const p in params) {\n              if (apiItem.indexOf(p) === -1) {\n                paramArray.push(`${p}=${params[p]}`);\n              }\n            }\n            if (paramArray.length) {\n              url = url + '?' + paramArray.join('&');\n            }\n          }\n          if (url) {\n            resolve(opt.connector.makeQuery(url, params, opt.requestOptions));\n          } else {\n            reject(new Error('request url is not set'));\n          }\n        } else {\n          resolve(undefined);\n        }\n      })\n      .catch((er) => {\n        reject(er);\n      });\n  });\n}\n","import { EventEmitter } from 'events';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { objectRemoveEmpty } from '@nextgis/utils';\nimport { fixUrlStr } from '@nextgis/utils';\nimport Cache from '@nextgis/cache';\n\nimport { loadData } from './utils/loadData';\nimport { template } from './utils/template';\nimport { NgwError } from './errors/NgwError';\nimport { ResourceNotFoundError } from './errors/ResourceNotFoundError';\nimport { InsufficientPermissionsError } from './errors/InsufficientPermissionsError';\nimport {\n  addConnector,\n  findConnector,\n  removeConnector,\n} from './activeConnectors';\nimport { ResourcesControl } from './ResourcesControl';\n\nimport type { DeepPartial } from '@nextgis/utils';\nimport type {\n  DeleteRequestItemsResponseMap,\n  PatchRequestItemsResponseMap,\n  PostRequestItemsResponseMap,\n  GetRequestItemsResponseMap,\n  PutRequestItemsResponseMap,\n  ResourceIdKeynameDef,\n  NgwConnectorOptions,\n  ResourceDefinition,\n  RequestItemsParams,\n  RequestItemKeys,\n  RequestHeaders,\n  RequestOptions,\n  PyramidRoute,\n  Credentials,\n  UserInfo,\n  Params,\n} from './interfaces';\nimport type { RequestItemsParamsMap } from './types/RequestItemsParamsMap';\nimport type { ResourceItem, Resource } from './types/ResourceItem';\nimport { apiRequest } from './utils/apiRequest';\n\nlet ID = 0;\n\nexport class NgwConnector {\n  static errors = {\n    NgwError,\n    ResourceNotFoundError,\n  };\n  id = ID++;\n\n  emitter = new EventEmitter();\n  user?: UserInfo;\n\n  resources!: ResourcesControl;\n\n  private routeStr = '/api/component/pyramid/route';\n\n  constructor(public options: NgwConnectorOptions) {\n    const exist = findConnector(options);\n    if (exist) {\n      return exist;\n    } else {\n      if (this.options.route) {\n        this.routeStr = this.options.route;\n      }\n      this.resources = new ResourcesControl(this);\n      addConnector(this);\n    }\n  }\n\n  static create(options: NgwConnectorOptions): NgwConnector {\n    return new this(options);\n  }\n\n  /**\n   * Fast way to specify the connection address to NextGIS Web.\n   * The current connection will be severed.\n   * @param baseUrl - NGW url\n   */\n  setNgw(baseUrl: string): void {\n    this.logout();\n    this.options.baseUrl = baseUrl;\n    addConnector(this);\n  }\n\n  /**\n   * Establishing a connection with NextGIS Web to fulfill all other requests.\n   * @remarks\n   * This method need not be called manually as it is used when forming a request in {@link NgwConnector.apiRequest | apiRequest}.\n   * Can be used to check connection.\n   * @example\n   * ```javascript\n   * const connector = new NgwConnector({baseUrl: 'https://demo.nextgis.com'});\n   * connector.connect()\n   *   .then(() => console.log('Ok'))\n   *   .catch((er) => console.log('Connection problem', er));\n   * ```\n   */\n  connect(): CancelablePromise<PyramidRoute> {\n    const cache = new Cache();\n    const auth = this.options.auth;\n    const makeConnect = () =>\n      new CancelablePromise((resolve, reject) => {\n        const makeQuery = () => {\n          return this.makeQuery(this.routeStr, {}, {})\n            .then((route: PyramidRoute) => {\n              resolve(route);\n            })\n            .catch((er) => {\n              reject(er);\n            });\n        };\n        if (auth) {\n          const { login, password } = auth;\n          if (login && password) {\n            return this.getUserInfo({ login, password })\n              .then(() => {\n                makeQuery();\n              })\n              .catch((er) => reject(er));\n          }\n        }\n        return makeQuery();\n      });\n    return cache.add('route', makeConnect, {\n      id: this.id,\n      auth,\n      baseUrl: this.options.baseUrl,\n    });\n  }\n\n  /**\n   * Quick way to change NextGIS Web user.\n   * @param credentials - New user credentials\n   */\n  login(credentials: Credentials): CancelablePromise<UserInfo> {\n    this.logout();\n    addConnector(this);\n    return this.getUserInfo(credentials);\n  }\n\n  /**\n   * Disconnecting a user. Aborting all current requests\n   */\n  logout(): void {\n    removeConnector(this);\n    this.options.auth = undefined;\n    this.user = undefined;\n    this.emitter.emit('logout');\n    this.resources.cache.clean();\n  }\n\n  getUserInfo(credentials?: Credentials): CancelablePromise<UserInfo> {\n    if (this.user && this.user.id) {\n      return CancelablePromise.resolve(this.user);\n    }\n    if (credentials) {\n      this.options.auth = credentials;\n    }\n    const options: RequestOptions = {\n      headers: this.getAuthorizationHeaders(credentials),\n      // withCredentials: true\n    };\n\n    // Do not use request('auth.current_user') to avoid circular-references\n    return this.makeQuery('/api/component/auth/current_user', {}, options)\n      .then((data: UserInfo) => {\n        this.user = data;\n        this.emitter.emit('login', data);\n        return data;\n      })\n      .catch((er) => {\n        this.emitter.emit('login:error', er);\n        throw er;\n      });\n  }\n\n  /**\n   * Obtaining the required Headers for authentication of requests in the NGW.\n   */\n  getAuthorizationHeaders(\n    credentials?: Credentials,\n  ): RequestHeaders | undefined {\n    const client = this.makeClientId(credentials);\n    if (client) {\n      return {\n        Authorization: 'Basic ' + client,\n      };\n    }\n  }\n\n  makeClientId(credentials?: Credentials): string | undefined {\n    credentials = credentials || this.options.auth;\n    if (credentials) {\n      const { login, password } = credentials;\n      const str = unescape(encodeURIComponent(`${login}:${password}`));\n      // @ts-ignore\n      if (__BROWSER__) {\n        return window.btoa(str);\n      } else {\n        return Buffer.from(str).toString('base64');\n      }\n    }\n  }\n\n  /**\n   * Send request to NGW api router.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param params - Request item params or query params\n   * @param requestOptions - Request options\n   *\n   * @example\n   * ```javascript\n   *\n   * // there is such an NGW route item\n   * // \"feature_layer.feature.item\": [\n   * //   \"/api/resource/{0}/feature/{1}\",\n   * //   \"id\",\n   * //   \"fid\"\n   * // ],\n   *\n   * const connector = new NgwConnector({ baseUrl: 'https://example.nextgis.com' });\n   * connector.apiRequest('feature_layer.feature.item', {\n   *   // request params for {0} and {1}\n   *   'id': 2011,\n   *   'fid': 101,\n   *   // query params\n   *   'srs': 4326,\n   *   'geom_format': 'geojson',\n   * }, { method: 'GET' });\n   * // send get-request to 'https://example.nextgis.com/api/resource/2011/feature/101?srs=4326&geom_format=geojson'\n   *\n   * ```\n   */\n  apiRequest<\n    K extends keyof RequestItemsParamsMap,\n    P extends RequestItemKeys = RequestItemKeys,\n  >(\n    name: K,\n    params_: RequestItemsParams<K> = {},\n    requestOptions: RequestOptions = {},\n  ): CancelablePromise<P[K]> {\n    const { method, headers, withCredentials, responseType } = requestOptions;\n    const params = objectRemoveEmpty(params_);\n    const makeApiRequest = () =>\n      apiRequest({ name, params, requestOptions, connector: this });\n    if (requestOptions.cache && method === 'GET') {\n      const cache = new Cache<CancelablePromise<P[K]>>();\n      return cache.add(name, makeApiRequest, {\n        params,\n        ...objectRemoveEmpty({\n          headers,\n          withCredentials,\n          responseType,\n          baseUrl: this.options.baseUrl,\n          auth: this.options.auth,\n        }),\n      });\n    }\n    return makeApiRequest();\n  }\n\n  /**\n   * Shortcut method for send POST request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   *\n   * @example\n   * ```javascript\n   * connector.post('resource.collection', { data: POST_PAYLOAD })\n   *   .then((newResource) => console.log(newResource))\n   *   .catch((error) => console.warn(error));\n   * ```\n   */\n  post<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions<'POST'>,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PostRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'POST';\n    return this.apiRequest<K, PostRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send GET request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  get<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions | undefined | null,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<GetRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'GET';\n    return this.apiRequest<K, GetRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send PATCH request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  patch<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PatchRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'PATCH';\n    return this.apiRequest<K, PatchRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send PUT request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  put<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PutRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'PUT';\n    return this.apiRequest<K, PutRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send DELETE request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  delete<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions | undefined | null,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<DeleteRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'DELETE';\n    return this.apiRequest<K, DeleteRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Send request to NGW.\n   * @param url - URL address to NGW\n   * @param params - Query params\n   * @param options - Request options\n   */\n  makeQuery(\n    url: string,\n    params?: Params,\n    options: RequestOptions = {},\n  ): CancelablePromise<any> {\n    url = (this.options.baseUrl ? this.options.baseUrl : '') + url;\n    if (url) {\n      if (params) {\n        url = template(url, params);\n      }\n      // remove double slash\n      url = fixUrlStr(url);\n      return this._loadData(url, options);\n    } else {\n      throw new Error('Empty `url` not allowed');\n    }\n  }\n\n  // -------------------------------------------------------------------------\n  // Resource Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * {@inheritDoc ResourcesControl.getOne}\n   */\n  getResource(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getOneOrFail}\n   */\n  getResourceOrFail(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem> {\n    return this.resources.getOneOrFail(resource);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceBy(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(resource);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceByKeyname(\n    keyname: string,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(keyname);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceById(id: number): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(id);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getId}\n   */\n  getResourceId(\n    resource: ResourceDefinition,\n  ): CancelablePromise<number | undefined> {\n    return this.resources.getId(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getIdOrFail}\n   */\n  getResourceIdOrFail(resource: ResourceDefinition): CancelablePromise<number> {\n    return this.resources.getIdOrFail(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getMany}\n   */\n  getResourcesBy(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.resources.getMany(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getParent}\n   */\n  getResourceParent(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getParent(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getChildrenOf}\n   */\n  getResourceChildren(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.resources.getChildrenOf(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.update}\n   */\n  updateResource(\n    resource: ResourceIdKeynameDef,\n    data: DeepPartial<ResourceItem>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.update(resource, data);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.delete}\n   */\n  deleteResource(resource: ResourceIdKeynameDef): CancelablePromise<void> {\n    return this.resources.delete(resource);\n  }\n\n  /**\n   * @internal\n   */\n  protected _loadData(\n    url: string,\n    options: RequestOptions,\n  ): CancelablePromise<any> {\n    options.responseType = options.responseType || 'json';\n    return new CancelablePromise((resolve, reject, onCancel) => {\n      if (this.user) {\n        options = options || {};\n        // options.withCredentials = true;\n        options.headers = {\n          ...this.getAuthorizationHeaders(),\n          ...options.headers,\n        };\n      }\n      loadData(url, resolve, options, reject, onCancel);\n    }).catch((httpError) => {\n      if (httpError instanceof CancelablePromise.CancelError) {\n        // not need to handle cancel error because onCancel method is used\n      } else {\n        // @ts-ignore\n        if (__DEV__) {\n          console.warn(httpError);\n        }\n        const er = this._handleHttpError(httpError);\n        if (er) {\n          throw er;\n        }\n      }\n    });\n  }\n\n  private _handleHttpError(er: Error) {\n    if (er) {\n      if (er instanceof NgwError) {\n        if (er.exception === 'nextgisweb.resource.exception.ResourceNotFound') {\n          throw new ResourceNotFoundError(er);\n        } else if (\n          er.exception === 'nextgisweb.core.exception.InsufficientPermissions'\n        ) {\n          throw new InsufficientPermissionsError(er);\n        }\n      }\n    }\n    return er;\n  }\n}\n","/**\n * A lightweight HTTP client optimized for use with {@link http://docs.nextgis.ru/docs_ngweb_dev/doc/developer/toc.html | NextGIS Web} API\n *\n * @remarks\n * Make sure CORS is registered in the {@link https://docs.nextgis.com/docs_ngcom/source/CORS.html | NextGIS Web settings } to be able to send requests.\n *\n * @packageDocumentation\n * @module ngw-connector\n */\nimport { NgwConnector } from './NgwConnector';\n\nexport * from './interfaces';\nexport * from './types/ResourceItem';\nexport * from './types/FeatureLayer';\nexport * from './types/RequestItemsParamsMap';\nexport * from './types/ResourceStore';\n\n// export { NgwConnector };\nexport default NgwConnector;\n"],"sourceRoot":""}