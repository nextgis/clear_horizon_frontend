{"version":3,"sources":["webpack://clear_horizon/./@nextgis/packages/icons/src/index.ts","webpack://clear_horizon/./@nextgis/packages/item/src/TreeHelper.ts","webpack://clear_horizon/./@nextgis/packages/item/src/properties/BaseProperty.ts","webpack://clear_horizon/./@nextgis/packages/item/src/properties/CheckProperty.ts","webpack://clear_horizon/./@nextgis/packages/item/src/properties/ItemProperties.ts","webpack://clear_horizon/./@nextgis/packages/item/src/Item.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/BaseAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/utils/utils.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/GeoJsonAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/controls/Attribution.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/controls/createControl.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/layersUtility.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/ImageAdapter/ImageOverlay.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/ImageAdapter/ImageLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/ImageAdapter/ImageAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/RemoteTileLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/TileAdapter/TileLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/TileAdapter/TileAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/WmsAdapter/WmsLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/WmsAdapter/WmsAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/OsmAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/index.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/LeafletMapAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/controls/createButtonControl.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/loadData.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/NgwError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/NetworkError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/template.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/ResourceNotFoundError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/InsufficientPermissionsError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/activeConnectors.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/isObject.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/resourceToQuery.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/resourceCompare.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/ResourcesControl.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/index.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/NgwConnector.ts"],"names":["svgPath","brill","circle","rect","marker","cross","star","triangle","plus","minus","asterisk","getIcon","opt","shape","color","strokeColor","size","anchor","stroke","scale","pathAlias","svg","width","height","content","s","DOMParser","parseFromString","documentElement","insertSvg","fistChild","firstChild","transform","setAttribute","String","type","iconSize","iconAnchor","html","XMLSerializer","serializeToString","item","_children","this","setParent","parent","_parent","addChild","child","push","getParent","getParents","filterFunc","x","tree","getRoot","toReturn","find","getChildren","every","some","all","getDescendants","name","options","emitter","EventEmitter","_blocked","Object","assign","_value","getProperty","call","value","isGroup","length","isBlocked","undefined","parents","parentProp","properties","property","get","set","_prepareValue","update","_fireChangeEvent","getValue","_callOnSet","getContainer","_container","destroy","parentNode","removeChild","_removeEventsListener","onSet","emit","forEach","prop","CheckProperty","bubble","unBlock","propagation","_turnOn","_turnOff","_propagation","getHierarchyValue","turnOff","hierarchy","blockChild","turnOn","unblockChild","block","_block","_unBlock","_blockChild","_unBlockChild","children","fry","label","BaseProperty","propertiesList","_properties","_propertiesList","_setPropertyHandler","bind","add","propOpt","handlers","ItemProperties","handler","list","map","p","ID","id","TreeHelper","initProperties","pane","order","exist","getPane","createPane","style","zIndex","Math","round","addLayer","_options","typeAlias","Point","LineString","MultiPoint","Polygon","MultiLineString","MultiPolygon","GeometryCollection","PAINT","opacity","backAliases","a","layerType","backAlias","findMostFrequentGeomType","arr","counts","maxName","c","maxCount","geometryFilter","geometry","indexOf","convertMapClickEvent","evt","coord","containerPoint","latLng","latlng","lat","lngLat","pixel","left","top","y","source","selected","_layers","_selectedLayers","_filteredLayers","layer","FeatureGroup","paint","selectedPaint","data","addData","select","findFeatureFun","filter","_selectLayer","setPaintEachLayer","unselect","_unSelectLayer","getSelected","feature","getFiltered","fun","_filterFun","_map","remove","filteredLayers","removeLayer","addTo","cleanFilter","getLayers","visible","clearLayer","cb","layerMem","splice","clearLayers","setData","geoJsonOptions","geojson","detectedType","features","f","geometries","g","console","warn","_data","filterGeometries","getGeoJsonOptions","GeoJSON","openPopup","_openPopup","closePopup","_closePopup","updateTooltip","layerDef","_updateTooltip","getExtent","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","lng","labelField","unbindTooltip","message","bindTooltip","permanent","openTooltip","minWidth","autoPan","createPopupContent","target","bindPopup","setTimeout","unbindPopup","eachLayer","l","setPaint","divIcon","createDivIcon","setIcon","setStyle","preparePaint","aliases","radius","to","from","paintProp","defineProperty","enumerable","lopt","pointToLayer","iconOpt","createPaintToLayer","createPaintOptions","onEachFeature","ok","interactive","selectable","selectOnHover","on","e","_onLayerClick","popup","popupOptions","DomEvent","isSelected","unselectOnSecondClick","onLayerClick","event","multiselect","popupOnSelect","index","icon","toLIconOpt","DivIcon","className","iconClassName","geoJsonPoint","Marker","CircleMarker","paintOptions","BaseAdapter","customAttribution","attributions","Array","isArray","addAttribution","Control","createControl","control","onAdd","element","document","createElement","classList","bar","margin","marginBottom","marginTop","marginLeft","marginRight","appendChild","onRemove","callAjax","src","callback","headers","xhr","XMLHttpRequest","h","open","responseType","setRequestHeader","onload","arrayBufferView","Uint8Array","response","blob","Blob","imageUrl","window","URL","webkitURL","createObjectURL","send","abort","_abort","cancelLoad","_initImage","_image","url","defaultWmsParams","service","request","version","layers","styles","format","transparent","crs","uppercase","attribution","isBack","minZoom","maxZoom","viewPortBuffer","setViewDelay","_url","params","opts","Util","wmsParams","setParams","getAttribution","_currentOverlay","_currentUrl","getEvents","moveend","updateWmsParams","getImageUrl","pad","overlay","ImageOverlay","once","setOpacity","bringToBack","bringToFront","setZIndex","getZoom","getSize","factor","ceil","wmsVersion","parseFloat","projectionKey","nw","project","getNorthWest","se","getSouthEast","code","bbox","CRS","join","pstr","Layer","ImageLayer","makeRemote","Base","args","_update","GridLayer","createTile","coords","done","getTileUrl","tile","crossOrigin","alt","_abortLoading","tiles","_tiles","tileZoom","_tileZoom","i","z","el","onerror","complete","DomUtil","TileLayer","urlTemplate","tileLayerOptions","nativeOptions","subdomains","WmsLayer","layerOptions","TileAdapter","layerAdapters","LeafletMapAdapter","controlAdapters","_universalEvents","create","zoom","center","mb","mapAdapterOptions","Map","zoomControl","attributionControl","maxBounds","_addMapListeners","setCursor","cursor","setView","animate","setCenter","panTo","getCenter","setZoom","b","fitBounds","getLayerAdapter","createButtonControl","link","title","href","HTMLElement","innerHTML","onClick","stopPropagation","addEventListener","removeEventListener","addControl","position","replace","removeControl","showLayer","hideLayer","setLayerOpacity","setLayerOrder","onMapClick","converted","locate","events","stop","off","IMAGE","ImageAdapter","TILE","GEOJSON","GeoJsonAdapter","WMS","WmsAdapter","OSM","OsmAdapter","ZOOM","ATTRIBUTION","AttributionControl","loadData","er","setPrototypeOf","NgwError","prototype","Error","NetworkError","location","origin","error","onCancel","method","getResponseText","JSON","parse","responseText","status","forError","processingResponse","upload","onprogress","lengthComputable","percentComplete","loaded","total","onProgress","header","withCredentials","file","FormData","append","d","stringify","templateRe","template","str","key","obj","exception","ResourceNotFoundError","InsufficientPermissionsError","CONNECTORS","addConnector","connector","isObject","val","toString","resourceToQuery","resource","prefix","query","entries","resourceCompare","res1","res2","objectCompare","obj1","obj2","value2","promiseControl","_resourcesCache","getOne","requestOptions","waitFunc","_fetchResourceBy","keyname","_fetchResourceById","getOneOrFail","then","res","getId","getIdOrFail","resp","getMany","items","existId","_resourceCacheFilter","serialization","resources","getChildrenOf","optOrResource","resourceId","collection","put","delete","catch","values","routeStr","route","ResourcesControl","baseUrl","auth","findConnector","setNgw","logout","connect","resolve","reject","makeQuery","login","password","getUserInfo","credentials","user","getAuthorizationHeaders","client","makeClientId","Authorization","unescape","encodeURIComponent","btoa","apiRequest","apiItems","apiItem","shift","replaceParams","arg","paramList","post","patch","_loadData","getResource","getResourceOrFail","getResourceBy","getResourceByKeyname","getResourceById","getResourceId","getResourceIdOrFail","getResourcesBy","getResourceChildren","updateResource","deleteResource","httpError","log","_handleHttpError","errors"],"mappings":"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","file":"main-4aa8b69da224d2b.js","sourcesContent":["// tslint:disable:max-line-length\nimport { IconOptions as WebmapIcoOptions } from '@nextgis/paint';\n\nconst svgPath: { [name: string]: string | GetPathCallback } = {\n  brill: '<path d=\"m6 0-5 6 5 6 5-6z\"/>',\n  circle: '<circle cx=\"6\" cy=\"6\" r=\"6\"/>',\n  rect: '<rect width=\"12\" height=\"12\"/>',\n  marker:\n    '<path d=\"m6 0c-1.85 0-4 1.19-4 4.22 0 2.05 3.08 6.59 4 7.78 0.821-1.19 4-5.62 4-7.78 0-3.03-2.15-4.22-4-4.22z\"/>',\n  cross:\n    '<path d=\"M 2.4,12 6,8.4 9.6,12 12,9.6 8.4,6 12,2.4 9.6,0 6,3.6 2.4,0 0,2.4 3.6,6 0,9.6 Z\"/>',\n  star:\n    '<path d=\"m6 0.25 1.71 4.18 4.29-1.04e-4 -3.43 3.14 0.857 4.18-3.43-3.14-3.43 3.14 0.857-4.18-3.43-3.14 4.29-0.209z\"/>',\n  triangle: '<path d=\"m12 11.7h-12l6-11.2z\"/>',\n  plus: '<path d=\"m7.5 12v-4.5h4.5v-3h-4.5v-4.5h-3v4.5h-4.5v3h4.5v4.5z\"/>',\n  minus: '<path d=\"m12 7.5v-3h-12v3z\"/>',\n  asterisk:\n    '<path d=\"m7.59 12v-3.27l2.83 1.64 1.58-2.74-2.85-1.64 2.83-1.64-1.56-2.74-2.83 1.64v-3.24h-3.17v3.24l-2.85-1.64-1.57 2.74 2.84 1.64-2.84 1.64 1.57 2.74 2.85-1.64v3.27z\"/>',\n};\n\nexport interface IconOptions {\n  shape?:\n    | 'circle'\n    | 'brill'\n    | 'rect'\n    | 'marker'\n    | 'star'\n    | 'asterisk'\n    | 'triangle'\n    | 'plus'\n    | 'minus';\n  color?: string;\n  size?: number;\n  stroke?: number;\n  strokeColor?: string;\n  rotate?: number;\n}\n\nconst STROKE = 0.8;\n\nfunction insertSvg(\n  width: number,\n  height: number,\n  stroke = 0,\n  content?: string,\n) {\n  const s = stroke / 2;\n  const svg = `<svg\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${width}\"\n    height=\"${height}\"\n    viewBox=\"-${s} -${s} ${width + stroke} ${height + stroke}\"\n  >${content}</svg>`;\n  const oParser = new DOMParser();\n  const oDOM = oParser.parseFromString(svg, 'image/svg+xml');\n  return oDOM.documentElement;\n}\n\ntype GetPathCallback = (opt?: IconOptions) => string;\n\nexport function getIcon(opt: IconOptions = {}): WebmapIcoOptions {\n  // default values\n  const shape = opt.shape || 'circle';\n  const color = opt.color || 'blue';\n  const strokeColor = opt.strokeColor || 'white';\n  const size = opt.size || 12;\n\n  const anchor = size / 2;\n  const defSize = 12;\n  const stroke = typeof opt.stroke === 'number' ? opt.stroke : STROKE;\n  const scale = size / defSize;\n\n  const pathAlias = svgPath[shape] || 'circle';\n\n  const path = typeof pathAlias === 'string' ? pathAlias : pathAlias(opt);\n  const svg = insertSvg(size, size, stroke * scale, path);\n  const fistChild = svg.firstChild as SVGElement;\n\n  const transform = `scale(${scale})`;\n\n  fistChild.setAttribute('fill', color);\n  if (stroke) {\n    fistChild.setAttribute('stroke', strokeColor);\n    fistChild.setAttribute('stroke-width', String(stroke));\n  }\n  fistChild.setAttribute('transform', transform);\n  const s = new XMLSerializer();\n\n  return {\n    type: 'icon',\n    iconSize: [size, size],\n    iconAnchor: [anchor, anchor],\n    html: s.serializeToString(svg),\n    svg,\n  };\n}\n","import { treeFind, treeFilter, treeEvery, treeSome } from '@nextgis/tree';\nimport { Item } from './Item';\nimport { ItemOptions } from './interfaces';\n\nexport class TreeHelper {\n  item: Item;\n\n  private _children: Item[] = [];\n  private _parent?: Item;\n\n  constructor(item: Item) {\n    this.item = item;\n  }\n\n  setParent(parent: Item): void {\n    this._parent = parent;\n  }\n\n  addChild(child: Item): void {\n    this._children.push(child);\n  }\n\n  getParent(): Item | undefined {\n    return this._parent;\n  }\n\n  getParents<I extends Item = Item>(filterFunc?: (item: I) => boolean): I[] {\n    const parent = this.getParent() as I;\n    if (parent) {\n      return treeFilter<I>(\n        parent,\n        filterFunc,\n        (x: I) => x.tree.getParent() as I,\n      );\n    }\n    return [];\n  }\n\n  getRoot<I extends Item = Item>(): I | undefined {\n    let parent = this.getParent() as I;\n    let toReturn = parent;\n    while (parent) {\n      parent = parent.tree.getParent() as I;\n      if (parent) {\n        toReturn = parent;\n      }\n    }\n    return toReturn;\n  }\n\n  find(filterFunc?: (item: Item) => boolean): Item<ItemOptions> | undefined {\n    return treeFind(this._children, filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  every<I extends Item = Item>(filterFunc?: (item: I) => boolean): boolean {\n    return treeEvery(this._children as I[], filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  some<I extends Item = Item>(filterFunc?: (item: I) => boolean): boolean {\n    return treeSome(this._children as I[], filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  // getDescendants shortcut\n  all(filterFunc?: (item: Item) => boolean): any[] {\n    return this.getDescendants(filterFunc);\n  }\n\n  getDescendants(filterFunc?: (item: Item) => boolean): any[] {\n    return treeFilter(this._children, filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  getChildren<T extends Item = Item>(): T[] {\n    return this._children as T[];\n  }\n}\n","import { EventEmitter } from 'events';\nimport { Item } from '../Item';\nimport { ItemBasePropertyOptions, ItemOptions } from '../interfaces';\n\n// import StrictEventEmitter from 'strict-event-emitter-types/types/src';\n\n// export interface BasePropertyEvents<V, O> {\n//   'change': {value: V, options: O};\n//   'change-tree': {value: V, options: O, item: Item};\n// }\n\nexport abstract class BaseProperty<\n  V = any,\n  O extends ItemBasePropertyOptions<V> = ItemBasePropertyOptions<V>\n> {\n  options: O;\n\n  // emitter: StrictEventEmitter<EventEmitter, BasePropertyEvents<V, O>> = new EventEmitter();\n  emitter = new EventEmitter();\n  name: string;\n\n  item: Item;\n  protected _blocked = false;\n  protected _container?: HTMLElement;\n  protected _value?: V;\n\n  private _removeEventsListener?: () => void;\n\n  constructor(name: string, item: Item, options: O) {\n    this.item = item;\n    this.options = Object.assign({}, options);\n    this.name = name;\n    this._value = this.getProperty();\n  }\n\n  getProperty(): V | undefined {\n    if (typeof this.options.getProperty === 'function') {\n      return this.options.getProperty.call(this, this.item);\n    }\n    return this.options.value;\n  }\n\n  getParents(): Item[] {\n    return this.item.tree.getParents() || [];\n  }\n\n  getParent(): Item<ItemOptions> | undefined {\n    return this.item.tree.getParent();\n  }\n\n  isGroup(): number {\n    const children = this.item.tree.getDescendants();\n    return children.length;\n  }\n\n  isBlocked(): boolean {\n    if (this._blocked === undefined) {\n      const parents = this.item.tree.getParents();\n      if (parents) {\n        const isBlocked = parents.find((x: Item) => {\n          const parentProp = x.properties && x.properties.property(this.name);\n          if (parentProp) {\n            return !parentProp.get();\n          }\n          return false;\n        });\n        this._blocked = !!isBlocked;\n      } else {\n        this._blocked = false;\n      }\n    }\n    return this._blocked;\n  }\n\n  set(value?: V, options?: O): void {\n    this._value = this._prepareValue(value);\n\n    this.update(this._value, options);\n    this._fireChangeEvent(this._value, options);\n  }\n\n  // shortcut for getValue\n  get(): V | undefined {\n    return this.getValue();\n  }\n\n  update(value?: V, options?: O): void {\n    this._callOnSet(value, options);\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  destroy(): void {\n    if (this._container) {\n      const parentNode = this._container.parentNode;\n      if (parentNode) {\n        parentNode.removeChild(this._container);\n      }\n    }\n    if (this._removeEventsListener) {\n      this._removeEventsListener();\n    }\n  }\n\n  getValue(): V | undefined {\n    return this._value !== undefined ? this._value : this.getProperty();\n  }\n\n  protected _prepareValue(value?: V): V | undefined {\n    return value;\n  }\n\n  protected _callOnSet<W extends V = V>(value?: W, options?: O): void {\n    if (this.options.onSet) {\n      this.options.onSet.call(this, value, options, this.item);\n    }\n  }\n\n  protected _fireChangeEvent(value?: V, options?: O): void {\n    if (this.emitter) {\n      value = value !== undefined ? value : this.getValue();\n      this.emitter.emit('change', { value, options });\n      const parents = this.item.tree.getParents();\n      parents.forEach((x) => {\n        const prop = x.properties && x.properties.property(this.name);\n        if (prop) {\n          prop.emitter.emit('change-tree', {\n            value,\n            options,\n            item: this.item,\n          });\n        }\n      });\n    }\n  }\n}\n","import { BaseProperty } from './BaseProperty';\nimport { Item } from '../Item';\n\nimport { CheckOptions } from '../interfaces';\n\ntype VAL = boolean;\n\ntype PreparedValue = any;\n\nexport class CheckProperty<\n  V extends VAL = VAL,\n  O extends CheckOptions<VAL> = CheckOptions<VAL>\n> extends BaseProperty<VAL, CheckOptions<VAL>> {\n  static options: CheckOptions = {\n    hierarchy: true,\n    bubble: false,\n    propagation: false,\n    label: 'Toggle',\n    // PropertyContainer: IndicatorContainer\n  };\n\n  constructor(name: string, item: Item, options: O) {\n    super(name, item, { ...CheckProperty.options, ...options });\n    this.set(this.get());\n  }\n\n  update(value?: V, options?: O): void {\n    if (value) {\n      const bubble = (options && options.bubble) || this.options.bubble;\n      if (bubble) {\n        this.unBlock(options);\n        const parent = this.getParent();\n        const property =\n          parent && parent.properties && parent.properties.property(this.name);\n        if (property) {\n          property.set(\n            value,\n            Object.assign({}, options, { bubble: true, propagation: false }),\n          );\n        }\n      }\n      if (!this.isBlocked()) {\n        this._turnOn(options);\n      }\n    } else {\n      this._turnOff(options);\n    }\n    const propagation =\n      (options && options.propagation) || this.options.propagation;\n    if (propagation) {\n      this._propagation(value, options);\n    }\n  }\n\n  getHierarchyValue(): boolean | undefined {\n    return (\n      this.get() &&\n      this.getParents().every((x) => {\n        const property = x.properties && x.properties.get(this.name);\n        return property && property.get();\n      })\n    );\n  }\n\n  _prepareValue(value?: PreparedValue): V | undefined {\n    return value;\n  }\n\n  _turnOff(options?: O): void {\n    if (this.options.turnOff) {\n      this.options.turnOff.call(this, options);\n    }\n    this._callOnSet(false, options);\n    if (this.options.hierarchy && this.isGroup()) {\n      this.blockChild(options);\n    }\n  }\n\n  _turnOn(options?: O): void {\n    if (this.options.turnOn) {\n      this.options.turnOn.call(this, options);\n    }\n    this._callOnSet(true, options);\n    if (this.options.hierarchy && this.isGroup()) {\n      this.unblockChild(options);\n    }\n  }\n\n  block(options?: O): void {\n    this._blocked = true;\n    this._block(options);\n  }\n\n  _block(options?: O): void {\n    this._turnOff(options);\n  }\n\n  unBlock(options?: O): void {\n    this._blocked = false;\n    if (this.getValue()) {\n      this._unBlock(options);\n    }\n  }\n\n  _unBlock(options?: O): void {\n    this._turnOn(options);\n  }\n\n  blockChild(options?: O): void {\n    this.item.tree\n      .getDescendants()\n      .forEach((x) => this._blockChild(x, options));\n  }\n\n  unblockChild(options?: O): void {\n    this.item.tree.getChildren().forEach((x) => this._unBlockChild(x, options));\n  }\n\n  _blockChild(item: Item, options?: O): void {\n    const prop =\n      item.properties &&\n      (item.properties.property(this.name) as CheckProperty<V, O>);\n    if (prop && prop.block) {\n      prop.block(options);\n    }\n  }\n\n  _unBlockChild(item: Item, options?: O): void {\n    const prop =\n      item.properties &&\n      (item.properties.property(this.name) as CheckProperty<V, O>);\n    if (prop && prop.unBlock) {\n      prop.unBlock(options);\n    }\n  }\n\n  _propagation(value?: V, options?: O): void {\n    if (this.isGroup()) {\n      const children = this.item.tree.getChildren();\n      for (let fry = 0; fry < children.length; fry++) {\n        const child = children[fry];\n        const property =\n          child.properties &&\n          (child.properties.property(this.name) as CheckProperty<V, O>);\n        if (property) {\n          property.set(value, {\n            ...options,\n            ...{\n              propagation: true,\n              bubble: false,\n            },\n          });\n        }\n      }\n    }\n  }\n}\n","import { BaseProperty } from './BaseProperty';\nimport { CheckProperty } from './CheckProperty';\nimport { Item } from '../Item';\n\nimport {\n  ItemBasePropertyOptions,\n  Type,\n  ItemPropertyConfig,\n  ItemPropertyTypes,\n} from '../interfaces';\n\nexport class ItemProperties {\n  static handlers: { [name: string]: Type<BaseProperty> } = {\n    CheckProperty,\n  };\n\n  options = {};\n\n  private _properties: { [propName: string]: BaseProperty } = {};\n  private _propertiesList: string[];\n\n  constructor(\n    public item: Item,\n    propertiesList?: ItemPropertyConfig<keyof ItemPropertyTypes>[],\n  ) {\n    this._propertiesList = []; // ordered list\n    if (propertiesList) {\n      propertiesList.forEach(this._setPropertyHandler.bind(this));\n    }\n  }\n\n  add(propOpt: ItemPropertyConfig<keyof ItemPropertyTypes>): void {\n    this._setPropertyHandler(propOpt);\n  }\n\n  _setPropertyHandler(\n    propOpt: ItemPropertyConfig<keyof ItemPropertyTypes>,\n  ): void {\n    const handlers = ItemProperties.handlers;\n    let handler = propOpt.handler;\n    if (!handler && propOpt.type) {\n      switch (propOpt.type) {\n        case 'boolean':\n          handler = handlers.CheckProperty;\n          break;\n        case 'string':\n          handler = handlers.BaseProperty;\n          break;\n        default:\n          handler = handlers.BaseProperty;\n      }\n    }\n    if (handler && propOpt.name) {\n      const options = { ...(propOpt || {}) };\n      this._properties[propOpt.name] = new handler(\n        propOpt.name,\n        this.item,\n        options,\n      );\n      this._propertiesList.push(propOpt.name);\n    }\n  }\n\n  update(): void {\n    this.list().forEach((x) => {\n      x.update();\n    });\n  }\n\n  get(name: string): any {\n    const prop = this.property(name);\n    if (prop) {\n      return prop.get();\n    }\n  }\n\n  set<K extends keyof ItemPropertyTypes>(\n    name: string,\n    value: ItemPropertyTypes[K],\n    options?: ItemBasePropertyOptions<ItemPropertyTypes[K]>,\n  ): void {\n    const prop = this.property(name);\n    if (prop) {\n      return prop.set(value, options);\n    }\n  }\n\n  property(name: string): BaseProperty<any, ItemBasePropertyOptions<any>> {\n    return this._properties[name];\n  }\n\n  list(): BaseProperty<any, ItemBasePropertyOptions<any>>[] {\n    return this._propertiesList.map((x) => this._properties[x]);\n  }\n\n  destroy(): void {\n    for (const p in this._properties) {\n      const prop = this.property(p);\n      if (prop && prop.destroy) {\n        prop.destroy();\n      }\n    }\n    this._properties = {};\n    this._propertiesList = [];\n  }\n}\n","import { TreeHelper } from './TreeHelper';\nimport { ItemProperties } from './properties/ItemProperties';\nimport { ItemOptions } from './interfaces';\n\nlet ID = 0;\nexport class Item<O extends ItemOptions = ItemOptions> {\n  options: O = {} as O;\n\n  properties!: ItemProperties;\n  tree: TreeHelper;\n  id = ID;\n\n  constructor(options?: O) {\n    ID += 1;\n    this.options = { ...options } as O;\n    this.tree = new TreeHelper(this);\n  }\n\n  initProperties(): void {\n    this.properties = new ItemProperties(this, this.options.properties);\n  }\n}\n","import { MainLayerAdapter, AdapterOptions } from '@nextgis/webmap';\nimport { Map } from 'leaflet';\n\nexport class BaseAdapter<O extends AdapterOptions = AdapterOptions, L = any>\n  implements MainLayerAdapter<Map, L, O> {\n  layer?: L;\n  protected pane = 'order-0';\n\n  constructor(public map: L.Map, public options: O) {\n    if (options.order !== undefined) {\n      const pane = 'order-' + options.order;\n      let exist = map.getPane(pane);\n      if (!exist) {\n        exist = map.createPane(pane);\n      }\n      exist.style.zIndex = String(Math.round(options.order * 100));\n      this.pane = pane;\n    }\n  }\n\n  addLayer(_options: O): L | Promise<L> | undefined {\n    return undefined;\n  }\n}\n","import { VectorAdapterLayerType, MapClickEvent } from '@nextgis/webmap';\nimport {\n  GeoJsonObject,\n  GeoJsonGeometryTypes,\n  FeatureCollection,\n  Feature,\n  GeometryCollection,\n} from 'geojson';\nimport { LeafletMouseEvent } from 'leaflet';\n\nexport const typeAlias: {\n  [key in GeoJsonGeometryTypes]: VectorAdapterLayerType;\n} = {\n  Point: 'point',\n  LineString: 'line',\n  MultiPoint: 'point',\n  Polygon: 'polygon',\n  MultiLineString: 'line',\n  MultiPolygon: 'polygon',\n  GeometryCollection: 'polygon',\n};\n\nexport const PAINT = {\n  stroke: false,\n  opacity: 1,\n};\n\nexport const backAliases: {\n  [key in VectorAdapterLayerType]?: GeoJsonGeometryTypes[];\n} = {};\n\nfor (const a in typeAlias) {\n  const layerType = typeAlias[a as GeoJsonGeometryTypes];\n  const backAlias = backAliases[layerType] || [];\n  backAlias.push(a as GeoJsonGeometryTypes);\n  backAliases[layerType] = backAlias;\n}\n\nexport function findMostFrequentGeomType(\n  arr: GeoJsonGeometryTypes[],\n): GeoJsonGeometryTypes {\n  const counts: { [x: string]: number } = {};\n  for (let fry = 0; fry < arr.length; fry++) {\n    counts[arr[fry]] = 1 + (counts[arr[fry]] || 0);\n  }\n  let maxName = '';\n  for (const c in counts) {\n    const maxCount = maxName ? counts[maxName] : 0;\n    if (counts[c] > maxCount) {\n      maxName = c;\n    }\n  }\n  return maxName as GeoJsonGeometryTypes;\n}\n\nexport function detectType(geojson: GeoJsonObject): GeoJsonGeometryTypes {\n  let geometry: GeoJsonGeometryTypes;\n  if (geojson.type === 'FeatureCollection') {\n    const featuresTypes = (geojson as FeatureCollection).features.map(\n      (f) => f.geometry.type,\n    );\n    geometry = findMostFrequentGeomType(featuresTypes);\n  } else if (geojson.type === 'GeometryCollection') {\n    const geometryTypes = (geojson as GeometryCollection).geometries.map(\n      (g) => g.type,\n    );\n    geometry = findMostFrequentGeomType(geometryTypes);\n  } else if (geojson.type === 'Feature') {\n    geometry = (geojson as Feature).geometry.type;\n  } else {\n    geometry = geojson.type;\n  }\n  return geometry;\n}\n\nexport function geometryFilter(\n  geometry: GeoJsonGeometryTypes,\n  type: VectorAdapterLayerType,\n): boolean {\n  const geoJsonGeometry = backAliases[type] || [];\n  return geoJsonGeometry.indexOf(geometry) !== -1;\n}\n\nexport function filterGeometries(\n  data: GeoJsonObject,\n  type: VectorAdapterLayerType,\n): GeoJsonObject | false {\n  if (data.type === 'FeatureCollection') {\n    const _data = data as FeatureCollection;\n    _data.features = _data.features.filter((f) =>\n      geometryFilter(f.geometry.type, type),\n    );\n  } else if (data.type === 'Feature') {\n    const allow = geometryFilter((data as Feature).geometry.type, type);\n    if (!allow) {\n      return false;\n    }\n  } else if (data.type === 'GeometryCollection') {\n    const _data = data as GeometryCollection;\n    _data.geometries = _data.geometries.filter((g) =>\n      geometryFilter(g.type, type),\n    );\n  }\n  return data;\n}\n\nexport function convertMapClickEvent(evt: LeafletMouseEvent): MapClickEvent {\n  const coord = evt.containerPoint;\n  const latLng = evt.latlng;\n  const { lat, lng } = latLng;\n  return {\n    latLng,\n    lngLat: [lng, lat],\n    pixel: { left: coord.x, top: coord.y },\n    source: evt,\n  };\n}\n","import {\n  CircleMarker,\n  FeatureGroup,\n  DomEvent,\n  GeoJSON,\n  DivIcon,\n  Marker,\n} from 'leaflet';\nimport { isPaintCallback, isPaint } from '@nextgis/paint';\nimport { BaseAdapter } from './BaseAdapter';\nimport {\n  PAINT,\n  typeAlias,\n  detectType,\n  filterGeometries,\n  convertMapClickEvent,\n} from '../utils/utils';\n\nimport type { GeoJsonObject, Feature, Point } from 'geojson';\nimport type {\n  CircleMarkerOptions,\n  LeafletMouseEvent,\n  LatLngExpression,\n  GeoJSONOptions,\n  PathOptions,\n  LatLng,\n  Layer,\n  Map,\n} from 'leaflet';\nimport type {\n  Paint,\n  IconPaint,\n  PathPaint,\n  VectorAdapterLayerPaint,\n} from '@nextgis/paint';\nimport type {\n  VectorAdapterLayerType,\n  GeoJsonAdapterOptions,\n  VectorLayerAdapter,\n  LngLatBoundsArray,\n  LayerDefinition,\n  DataLayerFilter,\n  PopupOptions,\n} from '@nextgis/webmap';\n\ntype LayerMem = LayerDefinition<Feature>;\n\nexport class GeoJsonAdapter\n  extends BaseAdapter<GeoJsonAdapterOptions>\n  implements VectorLayerAdapter<Map> {\n  layer: FeatureGroup;\n  selected = false;\n\n  private paint?: Paint;\n  private selectedPaint?: Paint;\n  private type?: VectorAdapterLayerType;\n\n  private _layers: LayerMem[] = [];\n  private _selectedLayers: LayerMem[] = [];\n  private _filteredLayers: LayerMem[] = [];\n  private _filterFun?: DataLayerFilter<Feature>;\n\n  constructor(map: L.Map, options: GeoJsonAdapterOptions) {\n    super(map, options);\n    this.layer = new FeatureGroup([], { pane: this.pane });\n  }\n\n  addLayer(options: GeoJsonAdapterOptions): FeatureGroup<any> | undefined {\n    if (options) {\n      this.options = options;\n      this.paint = options.paint;\n\n      this.selectedPaint = options.selectedPaint;\n      options.paint = this.paint;\n\n      if (options.data) {\n        this.addData(options.data);\n      }\n      return this.layer;\n    }\n  }\n\n  select(findFeatureFun?: DataLayerFilter): void {\n    if (findFeatureFun) {\n      const feature = this._layers.filter(findFeatureFun);\n      feature.forEach((x) => {\n        this._selectLayer(x.layer);\n      });\n    } else if (!this.selected) {\n      this.selected = true;\n      if (this.selectedPaint) {\n        this.setPaintEachLayer(this.selectedPaint);\n      }\n    }\n  }\n\n  unselect(findFeatureFun?: DataLayerFilter): void {\n    if (findFeatureFun) {\n      const feature = this._layers.filter(findFeatureFun);\n      feature.forEach((x) => {\n        this._unSelectLayer(x.layer);\n      });\n    } else if (this.selected) {\n      this.selected = false;\n      if (this.paint) {\n        this.setPaintEachLayer(this.paint);\n      }\n    }\n  }\n\n  getSelected(): LayerDefinition<Feature, LayerMem>[] {\n    return this._selectedLayers.map((x) => {\n      return { feature: x.feature, layer: x };\n    });\n  }\n\n  getFiltered(): LayerMem[] {\n    return this._filteredLayers;\n  }\n\n  filter(fun?: DataLayerFilter): LayerMem[] {\n    // Some optimization\n    this._filterFun = fun;\n    // @ts-ignore\n    const _map = this.layer._map;\n    if (_map) {\n      this.layer.remove();\n    }\n    const filteredLayers: LayerMem[] = [];\n    this._layers.forEach(({ feature, layer }) => {\n      if (layer) {\n        const ok = fun ? fun({ feature, layer }) : true;\n        if (ok) {\n          this.layer.addLayer(layer);\n          filteredLayers.push({ feature, layer });\n        } else {\n          this.layer.removeLayer(layer);\n        }\n      }\n    });\n    this._filteredLayers = filteredLayers;\n    if (_map) {\n      this.layer.addTo(_map);\n    }\n    return this._filteredLayers;\n  }\n\n  cleanFilter(): void {\n    this.filter();\n  }\n\n  getLayers(): LayerDefinition<Feature, LayerMem>[] {\n    return this._layers.map(({ layer, feature }) => {\n      // @ts-ignore\n      const visible = layer && layer._map;\n      return {\n        feature,\n        layer,\n        visible,\n      };\n    });\n  }\n\n  clearLayer(cb?: (feature: Feature) => boolean): void {\n    if (cb) {\n      for (let fry = this._layers.length; fry--; ) {\n        const layerMem = this._layers[fry];\n        const exist = layerMem.feature && cb(layerMem.feature);\n        if (exist) {\n          this.layer.removeLayer(layerMem.layer);\n          this._layers.splice(fry, 1);\n        }\n      }\n    } else {\n      this.layer.clearLayers();\n      this._layers = [];\n    }\n  }\n\n  setData(data: GeoJsonObject): void {\n    this.clearLayer();\n    this.addData(data);\n  }\n\n  addData(data: GeoJsonObject | false): void {\n    const options = this.options;\n    let geoJsonOptions: GeoJSONOptions | undefined;\n    if (options) {\n      if (data) {\n        let type: VectorAdapterLayerType;\n\n        if (!options.type) {\n          const detectedType = detectType(data);\n          type = typeAlias[detectedType];\n        } else {\n          type = options.type;\n        }\n        if (this.type && this.type !== type) {\n          console.warn('no other data type than layer can be added');\n          return;\n        }\n        this.type = type;\n\n        data = filterGeometries(data, type);\n        if (data) {\n          geoJsonOptions = this.getGeoJsonOptions(options, type);\n        }\n      }\n      new GeoJSON(data || undefined, geoJsonOptions);\n    }\n  }\n\n  openPopup(findFeatureFun: DataLayerFilter, options?: PopupOptions): void {\n    if (findFeatureFun) {\n      const feature = this._layers.filter(findFeatureFun);\n      feature.forEach((x) => {\n        this._openPopup(x.layer, options);\n      });\n    }\n  }\n\n  closePopup(findFeatureFun?: DataLayerFilter): void {\n    const featuresToClosePopup = findFeatureFun\n      ? this._layers.filter(findFeatureFun)\n      : this._layers;\n\n    featuresToClosePopup.forEach((x) => {\n      this._closePopup(x.layer);\n    });\n  }\n\n  updateTooltip(layerDef?: LayerDefinition): void {\n    if (layerDef) {\n      this._updateTooltip(layerDef);\n    } else {\n      this.getLayers().forEach((x) => this._updateTooltip(x));\n    }\n  }\n\n  getExtent(): LngLatBoundsArray | undefined {\n    const bounds = this.layer.getBounds();\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    if (ne && sw) {\n      return [sw.lng, sw.lat, ne.lng, ne.lat];\n    }\n  }\n\n  private _updateTooltip(layerDef: LayerDefinition) {\n    const { feature, layer } = layerDef;\n    if (this.options.labelField && feature && feature.properties) {\n      layer.unbindTooltip();\n      const message = feature.properties[this.options.labelField];\n      if (message !== undefined) {\n        layer.bindTooltip(String(message), { permanent: true }).openTooltip();\n      }\n    }\n  }\n\n  private async _openPopup(layer: Layer, options?: PopupOptions) {\n    // @ts-ignore\n    const feature = layer.feature;\n    options = options || {};\n    const { minWidth, autoPan } = { minWidth: 300, ...options };\n    const content =\n      options && options.createPopupContent\n        ? await options.createPopupContent({ layer, feature, target: this })\n        : '';\n    if (content) {\n      const popup = layer.bindPopup(content, { minWidth, autoPan });\n      setTimeout(() => {\n        popup.openPopup();\n      }, 0);\n    }\n  }\n\n  private _closePopup(layer: Layer) {\n    layer.closePopup().unbindPopup();\n  }\n\n  private setPaintEachLayer(paint: Paint) {\n    this.layer.eachLayer((l) => {\n      this.setPaint(l, paint);\n    });\n  }\n\n  private setPaint(l: any, paint: Paint) {\n    let style: VectorAdapterLayerPaint | undefined = undefined;\n    if (isPaintCallback(paint)) {\n      style = paint(l.feature);\n    } else if (isPaint(paint)) {\n      style = paint;\n    }\n    if (style) {\n      if (this.type === 'point' && style.type === 'icon') {\n        const marker = l as Marker;\n        const divIcon = this.createDivIcon(style);\n        marker.setIcon(divIcon);\n      } else if ('setStyle' in l) {\n        l.setStyle(this.preparePaint(style));\n      }\n    }\n  }\n\n  private preparePaint(paint: VectorAdapterLayerPaint): PathOptions {\n    if (paint.type !== 'get-paint') {\n      // const path: CircleMarkerOptions | PathOptions = paint as CircleMarkerOptions | PathOptions;\n      // if (path.opacity) {\n      //   path.fillOpacity = path.opacity;\n      // }\n\n      const paintAliases: [keyof PathOptions, keyof PathPaint][] = [\n        // ['color', 'color'],\n        ['color', 'strokeColor'],\n        ['opacity', 'strokeOpacity'],\n        ['stroke', 'stroke'],\n        ['fillColor', 'fillColor'],\n        ['fillOpacity', 'fillOpacity'],\n        ['fill', 'fill'],\n        ['weight', 'weight'],\n      ];\n      const aliases: [keyof PathOptions, keyof PathPaint][] =\n        this.type === 'line'\n          ? [\n              ['color', 'strokeColor'],\n              ['opacity', 'strokeOpacity'],\n              ['weight', 'weight'],\n            ]\n          : paintAliases;\n\n      const readyPaint: PathOptions & CircleMarkerOptions = {};\n\n      if ('radius' in paint && typeof paint.radius === 'number') {\n        readyPaint.radius = paint.radius;\n      }\n      aliases.forEach(([to, from]: [keyof PathOptions, keyof PathPaint]) => {\n        const paintProp = (paint as PathPaint)[from];\n        if (paintProp !== undefined) {\n          Object.defineProperty(readyPaint, to, {\n            enumerable: true,\n            value: paintProp,\n          });\n        }\n      });\n\n      return readyPaint;\n    }\n    return PAINT;\n  }\n\n  private getGeoJsonOptions(\n    options: GeoJsonAdapterOptions,\n    type: VectorAdapterLayerType,\n  ): GeoJSONOptions {\n    const paint = options.paint;\n    let lopt: GeoJSONOptions = {};\n\n    if (typeof paint === 'function') {\n      if (type === 'point') {\n        // TODO: fix types (@geoman-io/leaflet-geoman-free)\n        (lopt as any).pointToLayer = (\n          feature: Feature<Point, any>,\n          latLng: LatLng,\n        ) => {\n          const iconOpt = paint(feature);\n          const pointToLayer = this.createPaintToLayer(iconOpt as IconPaint);\n          return pointToLayer(feature, latLng);\n        };\n      } else {\n        lopt = {\n          style: (feature) => {\n            if (feature) {\n              return this.preparePaint({ ...PAINT, ...paint(feature) });\n            } else {\n              return this.preparePaint({ ...PAINT, type: 'path' });\n            }\n          },\n        };\n      }\n    } else {\n      lopt = this.createPaintOptions(paint as VectorAdapterLayerPaint, type);\n    }\n\n    lopt.onEachFeature = (feature: Feature, layer) => {\n      // @ts-ignore\n      layer.options.pane = this.pane;\n      this._layers.push({ feature, layer });\n      let ok = true;\n      if (this._filterFun) {\n        ok = this._filterFun({ feature, layer });\n      }\n      if (ok) {\n        // @ts-ignore\n        layer.options.interactive =\n          this.options.selectable || this.options.interactive;\n        this.layer.addLayer(layer);\n        if (options.selectable) {\n          if (options.selectOnHover) {\n            layer.on('mouseover', () => {\n              this._selectLayer(layer);\n            });\n            layer.on('mouseout', () => {\n              this._unSelectLayer(layer);\n            });\n          } else {\n            layer.on(\n              'click',\n              (e) => this._onLayerClick(e as LeafletMouseEvent),\n              this,\n            );\n          }\n        }\n        if (this.options.popup) {\n          this._openPopup(layer, this.options.popupOptions);\n        }\n        this._updateTooltip({ layer, feature });\n      }\n    };\n\n    return lopt;\n  }\n\n  private _onLayerClick(e: LeafletMouseEvent) {\n    DomEvent.stopPropagation(e);\n    const layer = e.target;\n    let isSelected = this._selectedLayers.indexOf(layer) !== -1;\n    if (isSelected) {\n      if (this.options && this.options.unselectOnSecondClick) {\n        this._unSelectLayer(layer);\n        isSelected = false;\n      }\n    } else {\n      this._selectLayer(layer);\n      isSelected = true;\n    }\n    if (this.options.onLayerClick) {\n      this.options.onLayerClick({\n        layer: this,\n        feature: layer.feature,\n        selected: isSelected,\n        event: convertMapClickEvent(e),\n        source: e,\n      });\n    }\n  }\n\n  private _selectLayer(layer: any) {\n    if (this.options && !this.options.multiselect) {\n      this._selectedLayers.forEach((x) => this._unSelectLayer(x));\n    }\n    this._selectedLayers.push(layer);\n    this.selected = true;\n    if (this.options) {\n      if (this.options.selectedPaint) {\n        this.setPaint(layer, this.options.selectedPaint);\n      }\n      if (this.options.popupOnSelect) {\n        this._openPopup(layer, this.options.popupOptions);\n      }\n    }\n  }\n\n  private _unSelectLayer(layer: any) {\n    const index = this._selectedLayers.indexOf(layer);\n    if (index !== -1) {\n      this._selectedLayers.splice(index, 1);\n    }\n    this.selected = this._selectedLayers.length > 0;\n    if (this.options) {\n      if (this.options.paint) {\n        this.setPaint(layer, this.options.paint);\n      }\n\n      if (this.options.popupOnSelect) {\n        this._closePopup(layer);\n      }\n    }\n  }\n\n  private createDivIcon(icon: IconPaint) {\n    const { ...toLIconOpt } = icon;\n    return new DivIcon({ className: '', ...toLIconOpt });\n  }\n\n  private createPaintToLayer(icon: IconPaint) {\n    if (icon && icon.type) {\n      if (icon.type === 'icon') {\n        const iconClassName = icon.className;\n        const html = icon.html;\n        if (iconClassName || html) {\n          return (geoJsonPoint: any, latlng: LatLngExpression) => {\n            const divIcon = this.createDivIcon(icon);\n            return new Marker(latlng, { icon: divIcon });\n          };\n        }\n      } else if (icon.type === 'pin') {\n        return (geoJsonPoint: any, latlng: LatLngExpression) => {\n          // const divIcon = this.createDivIcon(icon);\n          return new Marker(latlng);\n        };\n      }\n    }\n    return (geoJsonPoint: any, latlng: LatLngExpression) => {\n      const p: any = PAINT;\n      return new CircleMarker(latlng, this.preparePaint({ ...p, ...icon }));\n    };\n  }\n\n  private createPaintOptions(\n    paintOptions: VectorAdapterLayerPaint,\n    type: VectorAdapterLayerType,\n  ): GeoJSONOptions {\n    const geoJsonOptions: GeoJSONOptions = {};\n    const paint = (paintOptions && this.preparePaint(paintOptions)) || {};\n    if (paintOptions) {\n      geoJsonOptions.style = () => {\n        return paint;\n      };\n    }\n    if (type === 'point') {\n      (geoJsonOptions as any).pointToLayer = this.createPaintToLayer(\n        paintOptions as IconPaint,\n      );\n    } else if (type === 'line') {\n      paint.stroke = true;\n    }\n    return geoJsonOptions;\n  }\n}\n","import { Control, ControlOptions } from 'leaflet';\nimport { AttributionControlOptions } from '@nextgis/webmap';\n\nexport class AttributionControl extends Control.Attribution {\n  // options: AttributionControlOptions\n  constructor(options: AttributionControlOptions & ControlOptions) {\n    super(options);\n    const customAttribution = options && options.customAttribution;\n    if (customAttribution) {\n      let attributions: string[] = [];\n      if (Array.isArray(customAttribution)) {\n        attributions = customAttribution;\n      } else if (customAttribution) {\n        attributions = [customAttribution];\n      }\n      attributions.forEach((x) => this.addAttribution(x));\n    }\n  }\n}\n","import { MapControl, CreateControlOptions } from '@nextgis/webmap';\nimport { Control, DomEvent } from 'leaflet';\n\nexport function createControl(\n  control: MapControl,\n  options: CreateControlOptions = {},\n): Control {\n  const C = Control.extend({\n    onAdd() {\n      const element = document.createElement('div');\n      const content = control.onAdd();\n      element.classList.add('leaflet-control');\n      if (options.bar) {\n        element.classList.add('leaflet-bar');\n      }\n      if (!options.margin && !options.bar) {\n        element.style.marginBottom = '0px';\n        element.style.marginTop = '0px';\n        element.style.marginLeft = '0px';\n        element.style.marginRight = '0px';\n      }\n      if (content) {\n        element.appendChild(content);\n      }\n\n      DomEvent.disableClickPropagation(element);\n\n      return element;\n    },\n    onRemove() {\n      control.onRemove();\n    },\n  });\n  return new C();\n}\n","export function callAjax(\n  src: string,\n  callback: (resp: any) => any,\n  headers: Record<string, any>,\n): () => void {\n  const xhr = new XMLHttpRequest();\n  xhr.open('GET', src);\n  xhr.responseType = 'arraybuffer';\n  for (const h in headers) {\n    xhr.setRequestHeader(h, headers[h]);\n  }\n  xhr.onload = function () {\n    const arrayBufferView = new Uint8Array(this.response);\n    const blob = new Blob([arrayBufferView], { type: 'image/png' });\n    // @ts-ignore for typedoc\n    const urlCreator = window.URL || window.webkitURL;\n    const imageUrl = urlCreator.createObjectURL(blob);\n    callback(imageUrl);\n  };\n  xhr.send();\n  return () => {\n    xhr.abort();\n  };\n}\n","import {\n  ImageOverlay as LImageOverlay,\n  LatLngBoundsExpression,\n  ImageOverlayOptions,\n} from 'leaflet';\nimport { callAjax } from '../layersUtility';\n\ntype IOptions = ImageOverlayOptions & { headers?: any };\n\nexport class ImageOverlay extends LImageOverlay {\n  private _abort: (() => void)[] = [];\n\n  constructor(\n    imageUrl: string,\n    bounds: LatLngBoundsExpression,\n    options?: IOptions,\n  ) {\n    super(imageUrl, bounds, options);\n  }\n\n  cancelLoad(): void {\n    if (this._abort) {\n      this._abort.forEach((x) => x());\n      this._abort = [];\n    }\n  }\n\n  _initImage(): void {\n    // @ts-ignore\n    super._initImage();\n    // @ts-ignore\n    const headers = this.options.headers;\n    if (headers) {\n      // @ts-ignore\n      const img: HTMLImageElement = this._image;\n      const src = img.src;\n      img.src = '';\n      this._abort.push(\n        callAjax(\n          src,\n          (response) => {\n            img.src = response;\n          },\n          headers,\n        ),\n      );\n    }\n  }\n}\n","/*!\n * leaflet.wms.js\n * A collection of Leaflet utilities for working with Web Mapping services.\n * (c) 2014-2016, Houston Engineering, Inc.\n * MIT License\n */\n\nimport { Layer, Util, CRS } from 'leaflet';\nimport { debounce } from '@nextgis/utils';\nimport { ImageOverlay } from './ImageOverlay';\n\ninterface OverlayOptions {\n  crs?: null;\n  uppercase?: boolean;\n  attribution?: string;\n  opacity?: number;\n  isBack?: boolean;\n  minZoom?: number;\n  maxZoom?: number;\n  zIndex?: number;\n  pane?: string;\n  headers?: any;\n  viewPortBuffer?: number;\n  setViewDelay?: number;\n}\n\n/*\n * Overlay:\n * \"Single Tile\" WMS image overlay that updates with map changes.\n * Portions of wms.Overlay are directly extracted from L.TileLayer.WMS.\n * See Leaflet license.\n */\nexport class ImageLayer extends Layer {\n  defaultWmsParams = {\n    service: 'WMS',\n    request: 'GetMap',\n    version: '1.1.1',\n    layers: '',\n    styles: '',\n    format: 'image/jpeg',\n    transparent: false,\n  };\n\n  options: OverlayOptions = {\n    crs: null,\n    uppercase: false,\n    attribution: '',\n    opacity: 1,\n    isBack: false,\n    minZoom: 0,\n    maxZoom: 18,\n    pane: 'tilePane',\n    headers: null,\n    viewPortBuffer: 0,\n    setViewDelay: 100,\n  };\n\n  private wmsParams: any;\n  private _url?: string;\n  private _currentUrl?: string;\n  private _currentOverlay?: ImageOverlay;\n\n  constructor(url: string, options: OverlayOptions) {\n    super(options);\n    this._url = url;\n\n    // Move WMS parameters to params object\n    const params: any = {};\n    const opts: any = {};\n    let opt: keyof OverlayOptions;\n    for (opt in options) {\n      if (opt in this.options) {\n        opts[opt] = options[opt];\n      } else {\n        params[opt] = options[opt];\n      }\n    }\n    Util.setOptions(this, opts);\n    this.wmsParams = Util.extend({}, this.defaultWmsParams, params);\n  }\n\n  setParams(params: Record<string, any>): void {\n    Util.extend(this.wmsParams, params);\n    this.update();\n  }\n\n  getAttribution(): string {\n    return this.options.attribution || '';\n  }\n\n  onAdd(): this {\n    this.update();\n    return this;\n  }\n\n  onRemove(map: L.Map): this {\n    if (this._currentOverlay) {\n      this._currentOverlay.cancelLoad();\n      map.removeLayer(this._currentOverlay);\n      delete this._currentOverlay;\n    }\n    if (this._currentUrl) {\n      delete this._currentUrl;\n    }\n    return this;\n  }\n\n  getEvents(): {\n    moveend: () => void;\n  } {\n    return {\n      moveend: debounce(this.update, this.options.setViewDelay),\n    };\n  }\n\n  update(): void {\n    if (!this._map) {\n      return;\n    }\n    // Determine image URL and whether it has changed since last update\n    this.updateWmsParams();\n    const url = this.getImageUrl();\n    if (this._currentUrl === url) {\n      return;\n    }\n    this._currentUrl = url;\n\n    // Keep current image overlay in place until new one loads\n    // (inspired by esri.leaflet)\n    const viewPortBuffer = this.options.viewPortBuffer || 0;\n    const bounds = this._map.getBounds().pad(viewPortBuffer);\n\n    const overlay = new ImageOverlay(url, bounds, {\n      opacity: 0,\n      pane: this.options.pane,\n      headers: this.options.headers,\n    });\n    overlay.addTo(this._map);\n    if (this._currentOverlay) {\n      this._currentOverlay.cancelLoad();\n    }\n    overlay.once(\n      'load',\n      () => {\n        if (!this._map) {\n          return;\n        }\n        // @ts-ignore\n        if (overlay._url !== this._currentUrl) {\n          this._map.removeLayer(overlay);\n          return;\n        } else if (this._currentOverlay) {\n          this._map.removeLayer(this._currentOverlay);\n        }\n        this._currentOverlay = overlay;\n        overlay.setOpacity(\n          this.options.opacity !== undefined ? this.options.opacity : 1,\n        );\n        if (this.options.isBack === true) {\n          overlay.bringToBack();\n        }\n        if (this.options.isBack === false) {\n          overlay.bringToFront();\n        }\n        if (this.options.zIndex !== undefined) {\n          overlay.setZIndex(this.options.zIndex);\n        }\n      },\n      this,\n    );\n    const { minZoom, maxZoom } = this.options;\n    if (\n      (minZoom && this._map.getZoom() < minZoom) ||\n      (maxZoom && this._map.getZoom() > maxZoom)\n    ) {\n      this._map.removeLayer(overlay);\n    }\n  }\n\n  setOpacity(opacity: number): void {\n    this.options.opacity = opacity;\n    if (this._currentOverlay) {\n      this._currentOverlay.setOpacity(opacity);\n    }\n  }\n\n  bringToBack(): void {\n    this.options.isBack = true;\n    if (this._currentOverlay) {\n      this._currentOverlay.bringToBack();\n    }\n  }\n\n  bringToFront(): void {\n    this.options.isBack = false;\n    if (this._currentOverlay) {\n      this._currentOverlay.bringToFront();\n    }\n  }\n\n  setZIndex(zIndex: number): void {\n    this.options.zIndex = zIndex;\n    if (this._currentOverlay) {\n      this._currentOverlay.setZIndex(zIndex);\n    }\n  }\n\n  // See L.TileLayer.WMS: onAdd() & getTileUrl()\n  updateWmsParams(map?: L.Map): void {\n    if (!map) {\n      map = this._map;\n    }\n    // Compute WMS options\n    const viewPortBuffer = this.options.viewPortBuffer || 0;\n    const bounds = map.getBounds().pad(viewPortBuffer);\n    const size = map.getSize();\n    if (this.options.viewPortBuffer !== 0) {\n      const factor = viewPortBuffer + 1;\n      size.x = Math.ceil(size.x * factor);\n      size.y = Math.ceil(size.y * factor);\n    }\n    const wmsVersion = parseFloat(this.wmsParams.version);\n    const crs = this.options.crs || map.options.crs;\n    const projectionKey = wmsVersion >= 1.3 ? 'crs' : 'srs';\n    if (crs) {\n      const nw = crs.project(bounds.getNorthWest());\n      const se = crs.project(bounds.getSouthEast());\n\n      // Assemble WMS parameter string\n      const params: any = {\n        width: size.x,\n        height: size.y,\n      };\n      params[projectionKey] = crs.code;\n      params.bbox = (wmsVersion >= 1.3 && crs === CRS.EPSG4326\n        ? [se.y, nw.x, nw.y, se.x]\n        : [nw.x, se.y, se.x, nw.y]\n      ).join(',');\n\n      Util.extend(this.wmsParams, params);\n    }\n  }\n\n  getImageUrl(): string {\n    const uppercase = this.options.uppercase || false;\n    const pstr = Util.getParamString(this.wmsParams, this._url, uppercase);\n    return this._url + pstr;\n  }\n}\n","import { MainLayerAdapter, ImageAdapterOptions } from '@nextgis/webmap';\n// @ts-ignore\nimport { ImageLayer } from './ImageLayer';\n\nimport { Map } from 'leaflet';\nimport { BaseAdapter } from '../BaseAdapter';\n\nexport class ImageAdapter\n  extends BaseAdapter<ImageAdapterOptions>\n  implements MainLayerAdapter<Map> {\n  layer: any;\n\n  addLayer(options: ImageAdapterOptions): any {\n    const url = options && options.url;\n    if (url) {\n      options = { transparent: true, ...options };\n      const updateWmsParamsFromOpt = options.updateWmsParams;\n      this.layer = new ImageLayer(url, {\n        pane: this.pane,\n        headers: options.headers,\n        setViewDelay: options.setViewDelay,\n        /**\n         * TODO: safe remove, use only options.params\n         */\n        ...options,\n        ...options.params,\n      });\n      if (updateWmsParamsFromOpt) {\n        const updateWmsParams = this.layer.updateWmsParams;\n        this.layer.updateWmsParams = function (map: Map) {\n          updateWmsParams.call(this, map);\n          this.wmsParams = updateWmsParamsFromOpt(this.wmsParams);\n        };\n      }\n      return this.layer;\n    }\n  }\n}\n","import { DomUtil, GridLayer, Util } from 'leaflet';\nimport { debounce } from '../../../utils/src';\nimport { callAjax } from './layersUtility';\n\n// import type { TileLayerOptionsExtended } from './TileAdapter/TileLayer';\n\ntype Constructor = new (...args: any[]) => any;\n\nexport function makeRemote<\n  TBase extends Constructor\n  // O extends TileLayerOptionsExtended = TileLayerOptionsExtended\n>(Base: TBase): TBase {\n  return class RemoteTileLayer extends Base {\n    constructor(...args: any[]) {\n      super(...args);\n      if (this.options.setViewDelay) {\n        // @ts-ignore\n        this._update = debounce((...a: any[]) => {\n          // @ts-ignore\n          GridLayer.prototype._update.call(this, ...a);\n        }, this.options.setViewDelay);\n      }\n    }\n\n    createTile(\n      coords: Record<string, unknown>,\n      done: (error: any, tile: HTMLImageElement) => void,\n    ): HTMLImageElement {\n      // @ts-ignore\n      const url = this.getTileUrl(coords);\n\n      const tile = document.createElement('img');\n      (tile as any).abort = callAjax(\n        url,\n        (response) => {\n          tile.src = response;\n          done(null, tile);\n        },\n        // @ts-ignore\n        this.options.headers,\n      );\n\n      if (this.options.crossOrigin || this.options.crossOrigin === '') {\n        tile.crossOrigin =\n          this.options.crossOrigin === true ? '' : this.options.crossOrigin;\n      }\n\n      tile.alt = '';\n      tile.setAttribute('role', 'presentation');\n\n      return tile;\n    }\n\n    _abortLoading() {\n      // @ts-ignore\n      const tiles = this._tiles;\n      // @ts-ignore\n      const tileZoom = this._tileZoom;\n      for (const i in tiles) {\n        if (tiles[i].coords.z !== tileZoom) {\n          const tile = tiles[i].el;\n\n          tile.onload = Util.falseFn;\n          tile.onerror = Util.falseFn;\n          if (!tile.complete) {\n            if (tile.abort) {\n              tile.abort();\n            }\n            tile.src = Util.emptyImageUrl;\n            DomUtil.remove(tile);\n            delete tiles[i];\n          }\n        }\n      }\n    }\n  };\n}\n","import { TileLayer as TL, TileLayerOptions } from 'leaflet';\n\nimport { makeRemote } from '../RemoteTileLayer';\n\nexport type TileLayerOptionsExtended = TileLayerOptions & {\n  headers: Record<string, any>;\n  setViewDelay?: number;\n};\n\nclass TileLayerBase extends TL {\n  constructor(urlTemplate: string, options?: TileLayerOptionsExtended) {\n    super(urlTemplate, options);\n    Object.assign(this.options, options);\n  }\n}\n\nexport const TileLayer = makeRemote(TileLayerBase);\n","import { MainLayerAdapter, TileAdapterOptions } from '@nextgis/webmap';\nimport { TileLayer, TileLayerOptions } from 'leaflet';\nimport { TileLayer as TL } from './TileLayer';\nimport { BaseAdapter } from '../BaseAdapter';\n\nexport class TileAdapter\n  extends BaseAdapter<TileAdapterOptions, TileLayer>\n  implements MainLayerAdapter {\n  addLayer(options: TileAdapterOptions): TileLayer | undefined {\n    if (options) {\n      const { url, ...opt } = options;\n      if (url) {\n        const tileLayerOptions: TileLayerOptions = {\n          pane: this.pane,\n          attribution: opt.attribution,\n          minZoom: opt.minZoom,\n          maxZoom: opt.maxZoom,\n\n          ...opt.nativeOptions,\n        };\n        if (opt.subdomains) {\n          tileLayerOptions.subdomains = opt.subdomains;\n        }\n        let layer;\n        if (opt.headers) {\n          layer = new TL(url, {\n            ...tileLayerOptions,\n            headers: opt.headers,\n            setViewDelay: opt.setViewDelay,\n          });\n        } else {\n          layer = new TileLayer(url, tileLayerOptions);\n        }\n        return layer;\n      }\n    }\n  }\n}\n","import { TileLayer as TL, WMSOptions } from 'leaflet';\nimport { makeRemote } from '../RemoteTileLayer';\n\ntype LayerOptions = WMSOptions & { headers: any };\n\nclass WmsLayerBase extends TL.WMS {\n  constructor(urlTemplate: string, options: LayerOptions) {\n    super(urlTemplate, options);\n  }\n}\n\nexport const WmsLayer = makeRemote(WmsLayerBase);\n\n// applyMixins(WmsLayer, [RemoteTileLayer]);\n","import { MainLayerAdapter, WmsAdapterOptions } from '@nextgis/webmap';\nimport { TileLayer, WMSOptions } from 'leaflet';\nimport { WmsLayer as WMS } from './WmsLayer';\nimport { BaseAdapter } from '../BaseAdapter';\n\nexport class WmsAdapter\n  extends BaseAdapter<WmsAdapterOptions, TileLayer.WMS>\n  implements MainLayerAdapter {\n  addLayer(options: WmsAdapterOptions): TileLayer.WMS | undefined {\n    if (options) {\n      const { url, ...opt } = options;\n      if (url) {\n        const layerOptions: WMSOptions = {\n          pane: this.pane,\n          attribution: opt.attribution,\n          minZoom: opt.minZoom,\n          maxZoom: opt.maxZoom,\n          layers: options.layers,\n          format: options.format,\n        };\n        let layer;\n        if (opt.headers) {\n          layer = new WMS(url, { ...layerOptions, headers: opt.headers });\n        } else {\n          layer = new TileLayer.WMS(url, layerOptions);\n        }\n        return layer;\n      }\n    }\n  }\n}\n","import { MainLayerAdapter, TileAdapterOptions } from '@nextgis/webmap';\nimport { TileLayer } from 'leaflet';\n\nimport { TileAdapter } from './TileAdapter/TileAdapter';\n\nexport class OsmAdapter extends TileAdapter implements MainLayerAdapter {\n  addLayer(options: TileAdapterOptions): TileLayer | undefined {\n    return super.addLayer({\n      ...options,\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    });\n  }\n}\n","import { LeafletMapAdapter } from './LeafletMapAdapter';\n\nexport default LeafletMapAdapter;\n","import { EventEmitter } from 'events';\nimport { Map, Control } from 'leaflet';\nimport { GeoJsonAdapter } from './layer-adapters/GeoJsonAdapter';\nimport { AttributionControl } from './controls/Attribution';\nimport { convertMapClickEvent } from './utils/utils';\nimport { createButtonControl } from './controls/createButtonControl';\nimport { createControl } from './controls/createControl';\nimport { ImageAdapter } from './layer-adapters/ImageAdapter/ImageAdapter';\nimport { TileAdapter } from './layer-adapters/TileAdapter/TileAdapter';\nimport { WmsAdapter } from './layer-adapters/WmsAdapter/WmsAdapter';\nimport { OsmAdapter } from './layer-adapters/OsmAdapter';\n\nimport type {\n  CreateControlOptions,\n  ButtonControlOptions,\n  LngLatBoundsArray,\n  LocationEvents,\n  LocateOptions,\n  MainMapEvents,\n  LayerAdapter,\n  LngLatArray,\n  MapAdapter,\n  MapOptions,\n  MapControl,\n  Locate,\n} from '@nextgis/webmap';\nimport type {\n  Layer,\n  GridLayer,\n  ControlPosition,\n  LeafletMouseEvent,\n} from 'leaflet';\n\nexport type Type<T> = new (...args: any[]) => T;\n\nexport class LeafletMapAdapter implements MapAdapter<Map, any, Control> {\n  static layerAdapters: {\n    [name: string]: Type<LayerAdapter<Map, any, any>>;\n  } = {\n    IMAGE: ImageAdapter,\n    TILE: TileAdapter,\n    GEOJSON: GeoJsonAdapter,\n    WMS: WmsAdapter,\n    // // MVT: MvtAdapter,\n    OSM: OsmAdapter,\n  };\n\n  static controlAdapters = {\n    ZOOM: Control.Zoom,\n    ATTRIBUTION: AttributionControl,\n  };\n\n  static Map = Map;\n\n  options: MapOptions = { target: 'map' };\n\n  layerAdapters = LeafletMapAdapter.layerAdapters;\n  controlAdapters = LeafletMapAdapter.controlAdapters;\n  emitter = new EventEmitter();\n  map?: Map;\n\n  private _universalEvents: (keyof MainMapEvents)[] = [\n    'zoomstart',\n    'zoom',\n    'zoomend',\n    'movestart',\n    'move',\n    'moveend',\n  ];\n\n  create(options: MapOptions): void {\n    this.options = { ...options };\n    if (this.options.target) {\n      const {\n        maxZoom,\n        minZoom,\n        zoom,\n        center,\n        maxBounds: mb,\n        mapAdapterOptions,\n      } = this.options;\n      this.map = new Map(this.options.target, {\n        zoomControl: false,\n        attributionControl: false,\n        maxZoom,\n        minZoom,\n        zoom,\n        maxBounds: mb && [\n          [mb[1], mb[0]],\n          [mb[3], mb[2]],\n        ],\n        center: center && [center[1], center[0]],\n        ...mapAdapterOptions,\n      });\n      // create default pane\n      const defPane = this.map.createPane('order-0');\n      defPane.style.zIndex = String(0);\n      this.emitter.emit('create', this);\n      this._addMapListeners();\n    }\n  }\n\n  destroy(): void {\n    if (this.map) {\n      this.map.remove();\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this.map && this.map.getContainer();\n  }\n\n  setCursor(cursor: string): void {\n    if (this.map) {\n      this.map.getContainer().style.cursor = cursor;\n    }\n  }\n\n  setView(lngLat: LngLatArray, zoom?: number): void {\n    const [lng, lat] = lngLat;\n    if (this.map) {\n      if (typeof zoom === 'number') {\n        this.map.setView([lat, lng], zoom, { animate: false });\n      } else {\n        this.setCenter([lng, lat]);\n      }\n    }\n  }\n\n  setCenter(lngLat: LngLatArray): void {\n    const [lng, lat] = lngLat;\n    if (this.map) {\n      this.map.panTo([lat, lng]);\n    }\n  }\n\n  getCenter(): LngLatArray | undefined {\n    const map = this.map;\n    if (map) {\n      const bounds = map.getBounds();\n      const center = bounds.getCenter();\n      return [center.lng, center.lat];\n    }\n  }\n\n  setZoom(zoom: number): void {\n    if (this.map) {\n      this.map.setZoom(zoom);\n    }\n  }\n\n  getZoom(): number | undefined {\n    return (this.map && this.map.getZoom()) || undefined;\n  }\n\n  getBounds(): LngLatBoundsArray | undefined {\n    if (!this.map) return undefined;\n    const b = this.map.getBounds();\n    const sw = b.getSouthWest();\n    const ne = b.getNorthEast();\n    return [sw.lng, sw.lat, ne.lng, ne.lat];\n  }\n\n  // [west, south, east, north]\n  fitBounds(e: LngLatBoundsArray): void {\n    if (this.map) {\n      // top, left, bottom, right\n      this.map.fitBounds([\n        [e[3], e[0]],\n        [e[1], e[2]],\n      ]);\n    }\n  }\n\n  getLayerAdapter(name: string): Type<LayerAdapter<L.Map, any, any>> {\n    return LeafletMapAdapter.layerAdapters[name];\n  }\n\n  createControl(control: MapControl, options: CreateControlOptions): L.Control {\n    return createControl(control, options);\n  }\n\n  createButtonControl(options: ButtonControlOptions): L.Control {\n    return createButtonControl(options);\n  }\n\n  addControl(control: Control, position: string): Control | undefined {\n    control.options.position = position.replace('-', '') as ControlPosition;\n    if (this.map) {\n      this.map.addControl(control);\n      return control;\n    }\n  }\n\n  removeControl(control: Control): void {\n    if (this.map) {\n      this.map.removeControl(control);\n    }\n  }\n\n  removeLayer(layer: Layer): void {\n    layer && layer.remove && layer.remove();\n  }\n\n  showLayer(layer: Layer): void {\n    if (this.map) {\n      layer.addTo(this.map);\n    }\n  }\n\n  hideLayer(layer: Layer): void {\n    layer.remove();\n  }\n\n  setLayerOpacity(layer: GridLayer | Layer, value: number): void {\n    if ('setOpacity' in layer) {\n      layer.setOpacity(value);\n    }\n  }\n\n  setLayerOrder(\n    layer: Layer,\n    order: number,\n    layers: { [x: string]: LayerAdapter },\n  ): void {\n    // const baseLayers: string[] = [];\n    // const orderedLayers = Object.keys(layers).filter((x) => {\n    //   if (layers[x].options.baselayer) {\n    //     baseLayers.push(x);\n    //     return false;\n    //   }\n    //   return true;\n    // }).sort((a, b) => {\n    //   const layerAOrder = layers[a] && layers[a].options.order;\n    //   const layerBOrder = layers[b] && layers[b].options.order;\n    //   if (layerAOrder !== undefined && layerBOrder !== undefined) {\n    //     return layerAOrder - layerBOrder;\n    //   }\n    //   return 0;\n    // });\n    // baseLayers.forEach((x) => {\n    //   layers[x].layer.bringToBack();\n    // });\n    // if (layer.setZIndex) {\n    //   layer.setZIndex(order);\n    // } else {\n    //   for (let fry = 0; fry < orderedLayers.length; fry++) {\n    //     if (layers[orderedLayers[fry]].options.visibility) {\n    //       layers[orderedLayers[fry]].layer.bringToFront();\n    //     }\n    //   }\n    // }\n    // orderedLayers.forEach((x) => {\n    //   const l = layers[x];\n    //   const map = l.layer._map;\n    //   if (l.options.visibility && map) {\n    //     l.layer.remove();\n    //     l.layer.addTo(map);\n    //   }\n    // });\n  }\n\n  onMapClick(evt: LeafletMouseEvent): void {\n    const converted = convertMapClickEvent(evt);\n    this.emitter.emit('preclick', converted);\n    this.emitter.emit('click', converted);\n  }\n\n  locate(opt: LocateOptions, events?: LocationEvents): Locate {\n    const map = this.map;\n    if (map) {\n      map.locate(opt);\n      if (events) {\n        const { locationfound, locationerror } = events;\n        const locationFound = (e: L.LeafletEvent) => {\n          const event = e as L.LocationEvent;\n          const lngLat: [number, number] = [event.latlng.lng, event.latlng.lat];\n          locationfound({ lngLat });\n        };\n        if (locationfound !== undefined) {\n          map.on('locationfound', locationFound, this);\n        }\n        if (locationerror) {\n          map.on('locationerror', locationerror, this);\n        }\n        const stop = () => {\n          if (locationfound !== undefined) {\n            map.off('locationfound', locationFound);\n          }\n          if (locationerror) {\n            map.off('locationerror', locationerror);\n          }\n        };\n        return { stop };\n      }\n    }\n    const stop = () => void 'fake function';\n    return { stop };\n  }\n\n  private _addMapListeners() {\n    const map = this.map;\n    if (map) {\n      map.on('click', (evt) => {\n        this.onMapClick(evt as LeafletMouseEvent);\n      });\n      this._universalEvents.forEach((e) => {\n        map.on(e, () => this.emitter.emit(e, this), map);\n      });\n    }\n  }\n}\n","import { ButtonControlOptions } from '@nextgis/webmap';\nimport { createControl } from './createControl';\nimport { DomEvent, Control } from 'leaflet';\n\nexport function createButtonControl(options: ButtonControlOptions): Control {\n  const link = document.createElement('a');\n\n  const title = options.title || '';\n  link.href = '#';\n  link.title = title;\n\n  link.setAttribute('role', 'button');\n  link.setAttribute('aria-label', title);\n\n  DomEvent.disableClickPropagation(link);\n  DomEvent.on(link, 'click', DomEvent.stop);\n\n  if (options.html instanceof HTMLElement) {\n    link.appendChild(options.html);\n  } else if (typeof options.html === 'string') {\n    link.innerHTML = options.html;\n  }\n\n  const onClick = (e: Event) => {\n    e.stopPropagation();\n    options.onClick();\n  };\n\n  return createControl(\n    {\n      onAdd() {\n        if (options.onClick !== undefined) {\n          link.addEventListener('click', onClick);\n        }\n        return link;\n      },\n      onRemove() {\n        const parent = link.parentNode;\n        if (parent) {\n          parent.removeChild(link);\n        }\n        if (options.onClick !== undefined) {\n          link.removeEventListener('click', onClick);\n        }\n      },\n    },\n    { bar: true },\n  );\n}\n","import {\n  RequestOptions as NgwRequestOptions,\n  RequestMethods,\n} from '../interfaces';\nimport { NgwError } from '../errors/NgwError';\nimport { NetworkError } from '../errors/NetworkError';\n\n// readyState\n// Holds the status of the XMLHttpRequest.\n// 0: request not initialized\n// 1: server connection established\n// 2: request received\n// 3: processing request\n// 4: request finished and response is ready\n\n// status\n// 200: \"OK\"\n// 201 \"Created\"\tThe request has been fulfilled, and a new resource is created\n// 403: \"Forbidden\"\n// 404: \"Page not found\"\n// 500: \"Internal Server Error\"\n// For a complete list go to the Http Messages Reference\n\ntype LoadData = (\n  url: string,\n  callback: (...args: any[]) => any,\n  options: NgwRequestOptions<RequestMethods> | undefined,\n  error: (reason?: any) => void,\n  onCancel: (cancelHandler: () => void) => void,\n) => void;\n\nlet loadData: LoadData;\n// @ts-ignore\nif (__BROWSER__) {\n  loadData = (\n    url: string,\n    callback: (...args: any[]) => any,\n    options: NgwRequestOptions = {},\n    error: (reason?: any) => void,\n    onCancel: (cancelHandler: () => void) => void,\n  ): void => {\n    options.method = options.method || 'GET';\n\n    const xhr = new XMLHttpRequest();\n    xhr.open(options.method || 'GET', url, true); // true for asynchronous\n\n    if (options.responseType === 'blob') {\n      xhr.responseType = options.responseType;\n    }\n    const getResponseText = () => {\n      try {\n        return JSON.parse(xhr.responseText);\n      } catch (er) {\n        return xhr.responseText;\n      }\n    };\n    const processingResponse = (forError = false) => {\n      const cb = forError ? error : callback;\n      if (options.responseType === 'blob') {\n        cb(xhr.response);\n      } else {\n        if (xhr.responseText) {\n          cb(getResponseText());\n        } else {\n          error({ message: '' });\n        }\n      }\n    };\n    xhr.onload = () => {\n      if ([401, 403, 404, 500].indexOf(xhr.status) !== -1) {\n        error(new NgwError(getResponseText()));\n      }\n      processingResponse();\n    };\n\n    // xhr.onreadystatechange = () => {\n    //   if (\n    //     (xhr.readyState === 4 && xhr.status === 200) ||\n    //     (xhr.readyState === 3 && xhr.status === 201)\n    //   ) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 3 && xhr.status === 400) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 4 && xhr.status === 500) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 4 && xhr.status === 401) {\n    //     error(xhr.statusText);\n    //   } else if (xhr.readyState === 4) {\n    //     error('request error');\n    //   }\n    // };\n\n    xhr.onerror = (er) => {\n      if (xhr.status === 0) {\n        error(new NetworkError(url));\n      } else {\n        error(er);\n      }\n    };\n\n    xhr.upload.onprogress = function (e) {\n      if (e.lengthComputable) {\n        const percentComplete = (e.loaded / e.total) * 100;\n        if (options.onProgress) {\n          options.onProgress(percentComplete, e);\n        }\n        // console.log(percentComplete + '% uploaded');\n      }\n    };\n\n    const headers = options.headers;\n    if (headers) {\n      for (const h in headers) {\n        const header = headers[h];\n        if (typeof header === 'string') {\n          xhr.setRequestHeader(h, header);\n        }\n      }\n    }\n    if (options.withCredentials !== undefined) {\n      xhr.withCredentials = options.withCredentials;\n    }\n\n    let data: FormData | any;\n    if (options.file) {\n      data = new FormData();\n      data.append('file', options.file);\n      if (options.data) {\n        for (const d in data) {\n          data.append(d, data[d]);\n        }\n      }\n    } else {\n      data = options.data\n        ? typeof options.data === 'string'\n          ? options.data\n          : JSON.stringify(options.data)\n        : null;\n    }\n    if (onCancel) {\n      onCancel(() => {\n        xhr.abort();\n      });\n    }\n    xhr.send(data);\n  };\n} else {\n  const url = require('url');\n  const http = require('http');\n  const https = require('https');\n\n  const adapterFor = (inputUrl: string) => {\n    const adapters: Record<string, any> = {\n      'http:': http,\n      'https:': https,\n    };\n    const protocol = url.parse(inputUrl).protocol || 'https:';\n    return adapters[protocol];\n  };\n\n  loadData = (\n    url: string,\n    callback: (...args: any[]) => any,\n    options: NgwRequestOptions<RequestMethods> = {},\n    error: (reason?: any) => void,\n    onCancel: (cancelHandler: () => void) => void,\n  ): Promise<unknown> => {\n    const request = new Promise((resolve, reject) => {\n      const adapter = adapterFor(url);\n      if (adapter) {\n        const requestOpt = {\n          headers: options.headers || {},\n          method: options.method,\n        };\n        const body =\n          typeof options.data === 'string'\n            ? options.data\n            : JSON.stringify(options.data);\n        // https://stackoverflow.com/questions/35589109/node-http-delete-request-no-longer-works-after-upgrading-from-0-10-40\n        if (body !== undefined && options.method !== 'POST') {\n          Object.assign(requestOpt.headers, {\n            'Content-Type': 'application/json',\n            'Content-Length': Buffer.byteLength(body),\n          });\n        }\n        const req = adapter.request(url, requestOpt, (resp: any) => {\n          let data = '';\n          resp.on('data', (chunk: any) => {\n            data += chunk;\n          });\n          resp.on('end', () => {\n            if (data) {\n              let json: Record<string, any> | undefined;\n              try {\n                json = JSON.parse(data);\n                if (json && json.status_code && json.status_code) {\n                  throw new Error(json.message);\n                }\n              } catch (er) {\n                reject(er);\n                // throw new Error(er);\n              }\n              if (json !== undefined) {\n                resolve(json);\n              }\n            }\n            reject('no data');\n          });\n        });\n        req.on('error', (err: any) => {\n          reject(err);\n        });\n        if (body) {\n          req.write(body);\n        }\n        onCancel(() => {\n          req.abort();\n        });\n        req.end();\n      } else {\n        throw new Error(`Given URL '${url}' is not correct`);\n      }\n    });\n    return request\n      .then((data) => {\n        if (callback) {\n          callback(data);\n        }\n        return data;\n      })\n      .catch((er) => {\n        if (error) {\n          error(er);\n        } else {\n          throw new Error(er);\n        }\n      });\n  };\n}\n\nexport { loadData };\n","import { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when...\n */\nexport class NgwError extends Error {\n  name = 'NgwError';\n\n  title!: string;\n  message!: string;\n  detail!: string;\n  exception!: NgwExceptions;\n  status_code!: number | 404 | 500;\n  data?: Record<string, any>;\n  guru_meditation!: string;\n\n  constructor(er?: NgwError) {\n    super();\n    Object.assign(this, er);\n    Object.setPrototypeOf(this, NgwError.prototype);\n  }\n}\n","/**\n * Thrown when...\n */\nexport class NetworkError extends Error {\n  name = 'NetworkError';\n\n  constructor(url: string) {\n    super();\n    Object.setPrototypeOf(this, NetworkError.prototype);\n    this.message = `Unable to request ${url}.\n    Possibly invalid NGW URL entered or CORS not configured to get request from ${location.origin}`; // /control-panel/cors\n  }\n}\n","// https://github.com/Leaflet/Leaflet/blob/b507e21c510b53cd704fb8d3f89bb46ea925c8eb/src/core/Util.js#L165\nconst templateRe = /\\{ *([\\w_-]+) *\\}/g;\n\nexport function template(str: string, data: { [param: string]: any }): string {\n  return str.replace(templateRe, (s, key) => {\n    let value = data[key];\n\n    if (value === undefined) {\n      throw new Error('No value provided for letiable ' + s);\n    } else if (typeof value === 'function') {\n      value = value(data);\n    }\n    return value;\n  });\n}\n","import { NgwError } from './NgwError';\nimport { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when ...\n */\nexport class ResourceNotFoundError extends NgwError {\n  name = 'ResourceNotFoundError';\n  exception: NgwExceptions = 'nextgisweb.resource.exception.ResourceNotFound';\n\n  constructor(obj?: ResourceNotFoundError) {\n    super(obj);\n    Object.setPrototypeOf(this, ResourceNotFoundError.prototype);\n  }\n}\n","import { NgwError } from './NgwError';\nimport { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when ...\n */\nexport class InsufficientPermissionsError extends NgwError {\n  name = 'InsufficientPermissionsError';\n  exception: NgwExceptions =\n    'nextgisweb.core.exception.InsufficientPermissions';\n\n  constructor(obj: InsufficientPermissionsError) {\n    super(obj);\n    Object.setPrototypeOf(this, InsufficientPermissionsError.prototype);\n  }\n}\n","import { NgwConnectorOptions } from './interfaces';\nimport { NgwConnector } from './NgwConnector';\nimport { objectDeepEqual } from '@nextgis/utils';\n\nexport const CONNECTORS: NgwConnector[] = [];\n\nexport function addConnector(connector: NgwConnector): void {\n  CONNECTORS.push(connector);\n}\n\nexport function findConnector(\n  options: NgwConnectorOptions,\n): NgwConnector | undefined {\n  return CONNECTORS.find((x) => {\n    if (x.options.baseUrl === options.baseUrl) {\n      if (options.auth) {\n        if (x.options.auth) {\n          return objectDeepEqual(x.options.auth, options.auth);\n        }\n      } else {\n        x.options.auth === undefined;\n      }\n    }\n  });\n}\n\nexport function removeConnector(connector: NgwConnector): void {\n  const index = CONNECTORS.indexOf(connector);\n  if (index !== -1) {\n    CONNECTORS.splice(index, 1);\n  }\n}\n\nexport function findAndRemoveConnector(options: NgwConnectorOptions): void {\n  const exist = findConnector(options);\n  if (exist) {\n    removeConnector(exist);\n  }\n}\n","export function isObject(val: unknown): val is Record<string | number, any> {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n","import { DeepPartial, defined } from '@nextgis/utils';\nimport { Resource } from '../types/ResourceItem';\nimport { isObject } from './isObject';\n\n/**\n * { keyname, parent: { id }} > { keyname, parent__id }\n * @param resource - Any property from NGW resource item\n */\nexport function resourceToQuery(\n  resource: DeepPartial<Resource>,\n  prefix = '',\n): Record<string, unknown> {\n  prefix = prefix ? prefix + '__' : '';\n  const query: Record<string, any> = {};\n  Object.entries(resource).forEach(([key, value]) => {\n    if (isObject(value)) {\n      const children = resourceToQuery(value as DeepPartial<Resource>, key);\n      Object.assign(query, children);\n    } else if (defined(value)) {\n      query[prefix + key] = value;\n    }\n  });\n  return query;\n}\n","import { DeepPartial } from '@nextgis/utils';\nimport { Resource } from '../types/ResourceItem';\n\nexport function resourceCompare(\n  res1: DeepPartial<Resource>,\n  res2: DeepPartial<Resource>,\n): boolean {\n  return objectCompare(res1, res2);\n}\n\nfunction isObject(val: unknown): val is Record<string | number, any> {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\nfunction objectCompare<T = Record<string | number, any>>(\n  obj1: T,\n  obj2: T,\n): boolean {\n  return Object.entries(obj1).every(([key, value]) => {\n    const value2 = obj2[key as keyof T];\n    if (isObject(value)) {\n      if (isObject(value2)) {\n        return objectCompare(value, value2);\n      }\n      return false;\n    } else if (value2 !== undefined) {\n      return value === value2;\n    }\n    return true;\n  });\n}\n","import CancelablePromise from '@nextgis/cancelable-promise';\nimport { defined } from '@nextgis/utils';\n\nimport { resourceToQuery } from './utils/resourceToQuery';\nimport { resourceCompare } from './utils/resourceCompare';\nimport { ResourceNotFoundError } from './errors/ResourceNotFoundError';\n\nimport { isObject } from './utils/isObject';\n\nimport type { DeepPartial } from '@nextgis/utils';\nimport type { NgwConnector } from './NgwConnector';\nimport type { ResourceItem, Resource } from './types/ResourceItem';\nimport type { RequestOptions, ResourceDefinition } from './interfaces';\n\nconst promiseControl = new CancelablePromise.PromiseControl();\n\nexport class ResourcesControl {\n  private _resourcesCache: Record<number, ResourceItem> = {};\n\n  constructor(private connector: NgwConnector) {}\n\n  // -------------------------------------------------------------------------\n  // Resource Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Receive resource from NGW by id, keyname or serch-object parameter.\n   * @param resource - Resource id, keyname or search-object\n   *\n   * @remarks\n   * Fetching resource would be cached to speed up next call\n   */\n  getOne(\n    resource: ResourceDefinition | DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return promiseControl.waitFunc(() => {\n      if (typeof resource === 'string') {\n        return this._fetchResourceBy({ keyname: resource }, requestOptions);\n      } else if (typeof resource === 'number') {\n        return this._fetchResourceById(resource, requestOptions);\n      } else if (isObject(resource)) {\n        return this._fetchResourceBy(resource, requestOptions);\n      }\n      return CancelablePromise.resolve(undefined);\n    }, String(resource));\n  }\n\n  getOneOrFail(\n    resource: ResourceDefinition | DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem> {\n    return this.getOne(resource).then((res) => {\n      if (res) {\n        return res;\n      }\n      throw new ResourceNotFoundError();\n    });\n  }\n\n  /**\n   * A fast way to retrieve resource ID for any resource definition.\n   * @param resource - Any available resource definition\n   *\n   * @remarks\n   * There are situations when exactly the resource id is needed\n   * (for example, to compose the correct request to the api)\n   * then this method will come in handy to facilitate the extraction of the identifier\n   * if the resource is specified through a keyname or other parameters.\n   */\n  getId(\n    resource: ResourceDefinition | DeepPartial<Resource>,\n  ): CancelablePromise<number | undefined> {\n    if (typeof resource === 'number') {\n      return CancelablePromise.resolve(resource);\n    } else if (typeof resource === 'string' || isObject(resource)) {\n      return this.getOne(resource).then((res) => {\n        if (res) {\n          return res.resource.id;\n        }\n      });\n    }\n    return CancelablePromise.resolve(undefined);\n  }\n\n  /**\n   * A fast way to retrieve resource ID for any resource definition.\n   * @param resource - Any available resource definition\n   *\n   * @remarks\n   * Similar with {@link NgwConnector.getResourceId | getResourceId} but rise error if resource is not exist.\n   * To not make one more checks if the resource is definitely exists\n   */\n  getIdOrFail(\n    resource: ResourceDefinition | DeepPartial<Resource>,\n  ): CancelablePromise<number> {\n    return this.getId(resource).then((resp) => {\n      if (resp === undefined) {\n        throw new Error();\n      }\n      return resp;\n    });\n  }\n\n  getMany(\n    resource: DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem[]> {\n    let items: ResourceItem[] = [];\n    if (resource.id) {\n      const existId = this._resourcesCache[resource.id];\n      if (existId) {\n        items.push(existId);\n      }\n    } else {\n      items = this._resourceCacheFilter(resource);\n    }\n    if (!items.length) {\n      const query: Record<string, unknown> = {};\n      if (resource.keyname) {\n        query.keyname = resource.keyname;\n      } else {\n        Object.assign(query, resourceToQuery(resource));\n      }\n      return this.connector\n        .get('resource.search', requestOptions, {\n          serialization: 'full',\n          ...query,\n        })\n        .then((resources) => {\n          if (resources) {\n            resources.forEach((x) => {\n              this._resourcesCache[x.resource.id] = x;\n            });\n          }\n          return resources;\n        });\n    }\n    return CancelablePromise.resolve(items);\n  }\n\n  getChildrenOf(\n    optOrResource:\n      | string\n      | number\n      | {\n          keyname?: string;\n          resourceId?: number;\n          resource?: string | number;\n        },\n  ): CancelablePromise<ResourceItem[]> {\n    let opt: {\n      keyname?: string;\n      resourceId?: number;\n      resource?: string | number;\n    } = {};\n    if (typeof optOrResource === 'string') {\n      opt.keyname = optOrResource;\n    } else if (typeof optOrResource === 'number') {\n      opt.resourceId = optOrResource;\n    } else {\n      opt = optOrResource;\n    }\n    let parent = opt.resourceId;\n    let keyname = opt.keyname;\n    if (!opt.keyname && !defined(opt.resourceId) && !opt.resource) {\n      throw new Error('No keyname or resourceId is set');\n    }\n    if (opt.resource) {\n      if (typeof opt.resource === 'string') {\n        keyname = opt.resource;\n      } else if (typeof opt.resource === 'number') {\n        parent = opt.resource;\n      }\n    }\n    const collection = () =>\n      this.connector.get('resource.collection', null, {\n        parent,\n      });\n    if (keyname) {\n      return this._fetchResourceBy({ keyname }).then((item) => {\n        if (item) {\n          parent = item.resource.id;\n        }\n        return collection();\n      });\n    }\n    return collection();\n  }\n\n  update(\n    resource: ResourceDefinition,\n    data: DeepPartial<ResourceItem>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.getId(resource).then((id) => {\n      if (id !== undefined) {\n        return this.connector\n          .put('resource.item', { data }, { id })\n          .then((res) => {\n            this._resourcesCache[id] = res;\n            return res as ResourceItem;\n          });\n      }\n    });\n  }\n\n  /**\n   * Fast way to delete resource from NGW and clean cache.\n   * @param resource - Resource definition\n   */\n  delete(resource: ResourceDefinition): CancelablePromise<void> {\n    return this.getId(resource).then((id) => {\n      if (id !== undefined) {\n        return this.connector.delete('resource.item', null, { id }).then(() => {\n          delete this._resourcesCache[id];\n          return undefined;\n        });\n      }\n    });\n  }\n\n  private _fetchResourceById(\n    id: number,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    const item: ResourceItem = this._resourcesCache[id];\n    if (!item) {\n      return this.connector\n        .get('resource.item', requestOptions, { id })\n        .then((item) => {\n          if (item) {\n            this._resourcesCache[id] = item;\n          }\n          return item;\n        })\n        .catch((er) => {\n          if (!(er instanceof ResourceNotFoundError)) {\n            throw er;\n          }\n          return undefined;\n        });\n    }\n    return CancelablePromise.resolve(item);\n  }\n\n  private _fetchResourceBy(\n    resource: DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.getMany(resource, requestOptions).then((resources) => {\n      return resources[0];\n    });\n  }\n\n  private _resourceCacheFilter(\n    resource: DeepPartial<Resource>,\n  ): ResourceItem[] {\n    const items: ResourceItem[] = Object.values(this._resourcesCache).filter(\n      (x) => {\n        // identical by uniq props\n        if (resource.keyname && x.resource.keyname) {\n          return resource.keyname === x.resource.keyname;\n        }\n        if (defined(resource.id) && defined(x.resource.id)) {\n          return resource.id === x.resource.id;\n        }\n        return resourceCompare(resource, x.resource);\n      },\n    );\n    return items;\n  }\n}\n","/**\n * A lightweight HTTP client optimized for use with {@link http://docs.nextgis.ru/docs_ngweb_dev/doc/developer/toc.html | NextGIS Web} API\n *\n * @remarks\n * Make sure CORS is registered in the {@link https://docs.nextgis.com/docs_ngcom/source/CORS.html | NextGIS Web settings } to be able to send requests.\n *\n * @packageDocumentation\n */\nimport { NgwConnector } from './NgwConnector';\n\nexport * from './interfaces';\nexport * from './types/ResourceItem';\nexport * from './types/FeatureLayer';\nexport * from './types/RequestItemsParamsMap';\nexport * from './types/ResourceStore';\n\n// export { NgwConnector };\nexport default NgwConnector;\n","import CancelablePromise from '@nextgis/cancelable-promise';\nimport { DeepPartial, fixUrlStr } from '@nextgis/utils';\nimport { EventEmitter } from 'events';\n\nimport { RequestItemsParamsMap } from './types/RequestItemsParamsMap';\nimport { ResourceItem, Resource } from './types/ResourceItem';\n\nimport { loadData } from './utils/loadData';\nimport { template } from './utils/template';\nimport { ResourceNotFoundError } from './errors/ResourceNotFoundError';\nimport { NgwError } from './errors/NgwError';\nimport { InsufficientPermissionsError } from './errors/InsufficientPermissionsError';\nimport {\n  addConnector,\n  findConnector,\n  removeConnector,\n} from './activeConnectors';\nimport { ResourcesControl } from './ResourcesControl';\n\nimport type {\n  DeleteRequestItemsResponseMap,\n  PatchRequestItemsResponseMap,\n  PostRequestItemsResponseMap,\n  GetRequestItemsResponseMap,\n  PutRequestItemsResponseMap,\n  NgwConnectorOptions,\n  RequestItemsParams,\n  ResourceDefinition,\n  RequestItemKeys,\n  RequestHeaders,\n  RequestOptions,\n  PyramidRoute,\n  Credentials,\n  UserInfo,\n  Params,\n} from './interfaces';\n\nexport class NgwConnector {\n  static errors = {\n    NgwError,\n    ResourceNotFoundError,\n  };\n\n  emitter = new EventEmitter();\n  user?: UserInfo;\n\n  resources: ResourcesControl;\n\n  private routeStr = '/api/component/pyramid/route';\n  private route?: PyramidRoute;\n\n  constructor(public options: NgwConnectorOptions) {\n    if (this.options.route) {\n      this.routeStr = this.options.route;\n    }\n    this.resources = new ResourcesControl(this);\n    addConnector(this);\n  }\n\n  static create(options: NgwConnectorOptions): NgwConnector {\n    const exist = findConnector(options);\n    if (exist) {\n      return exist;\n    } else {\n      const connector = new this(options);\n      return connector;\n    }\n  }\n\n  /**\n   * Fast way to specify the connection address to NextGIS Web.\n   * The current connection will be severed.\n   * @param baseUrl - NGW url\n   */\n  setNgw(baseUrl: string): void {\n    this.logout();\n    this.options.baseUrl = baseUrl;\n    addConnector(this);\n  }\n\n  /**\n   * Establishing a connection with NextGIS Web to fulfill all other requests.\n   * @remarks\n   * This method need not be called manually as it is used when forming a request in {@link NgwConnector.apiRequest | apiRequest}.\n   * Can be used to check connection.\n   * @example\n   * ```javascript\n   * const connector = new NgwConnector({baseUrl: 'https://demo.nextgis.com'});\n   * connector.connect()\n   *   .then(() => console.log('Ok'))\n   *   .catch((er) => console.log('Connection problem', er));\n   * ```\n   */\n  connect(): CancelablePromise<PyramidRoute> {\n    return new CancelablePromise((resolve, reject) => {\n      const makeQuery = () => {\n        return this.makeQuery(this.routeStr, {}, {})\n          .then((route: PyramidRoute) => {\n            this.route = route;\n            resolve(route);\n          })\n          .catch((er) => {\n            reject(er);\n          });\n      };\n      if (this.route) {\n        return resolve(this.route);\n      } else {\n        if (this.options.auth) {\n          const { login, password } = this.options.auth;\n          if (login && password) {\n            return this.getUserInfo({ login, password })\n              .then(() => makeQuery())\n              .catch((er) => reject(er));\n          }\n        }\n        return makeQuery();\n      }\n    });\n  }\n\n  /**\n   * Quick way to change NextGIS Web user.\n   * @param credentials - New user credentials\n   */\n  login(credentials: Credentials): CancelablePromise<UserInfo> {\n    this.logout();\n    addConnector(this);\n    return this.getUserInfo(credentials);\n  }\n\n  /**\n   * Disconnecting a user. Aborting all current requests\n   */\n  logout(): void {\n    removeConnector(this);\n    this.options.auth = undefined;\n    this.route = undefined;\n    this.user = undefined;\n    this.emitter.emit('logout');\n  }\n\n  // TODO: rename\n  getUserInfo(credentials?: Credentials): CancelablePromise<UserInfo> {\n    if (this.user && this.user.id) {\n      return CancelablePromise.resolve(this.user);\n    }\n    if (credentials) {\n      this.options.auth = credentials;\n    }\n    const options: RequestOptions = {\n      headers: this.getAuthorizationHeaders(credentials),\n      // withCredentials: true\n    };\n\n    // Do not use request('auth.current_user') to avoid circular-references\n    return this.makeQuery('/api/component/auth/current_user', {}, options)\n      .then((data: UserInfo) => {\n        this.user = data;\n        this.emitter.emit('login', data);\n        return data;\n      })\n      .catch((er) => {\n        this.emitter.emit('login:error', er);\n        throw er;\n      });\n  }\n\n  /**\n   * Obtaining the required Headers for authentication of requests in the NGW.\n   */\n  getAuthorizationHeaders(\n    credentials?: Credentials,\n  ): RequestHeaders | undefined {\n    const client = this.makeClientId(credentials);\n    if (client) {\n      return {\n        Authorization: 'Basic ' + client,\n      };\n    }\n  }\n\n  makeClientId(credentials?: Credentials): string | undefined {\n    credentials = credentials || this.options.auth;\n    if (credentials) {\n      const { login, password } = credentials;\n      const str = unescape(encodeURIComponent(`${login}:${password}`));\n      // @ts-ignore\n      if (__BROWSER__) {\n        return window.btoa(str);\n      } else {\n        return Buffer.from(str).toString('base64');\n      }\n    }\n  }\n\n  /**\n   * Send request to NGW api router.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param params - Request item params or query params\n   * @param options - Request options\n   *\n   * @example\n   * ```javascript\n   *\n   * // there is such an NGW route item\n   * // \"feature_layer.feature.item\": [\n   * //   \"/api/resource/{0}/feature/{1}\",\n   * //   \"id\",\n   * //   \"fid\"\n   * // ],\n   *\n   * const connector = new NgwConnector({ baseUrl: 'https://example.nextgis.com' });\n   * connector.apiRequest('feature_layer.feature.item', {\n   *   // request params for {0} and {1}\n   *   'id': 2011,\n   *   'fid': 101,\n   *   // query params\n   *   'srs': 4326,\n   *   'geom_format': 'geojson',\n   * }, { method: 'GET' });\n   * // send get-request to 'https://example.nextgis.com/api/resource/2011/feature/101?srs=4326&geom_format=geojson'\n   *\n   * ```\n   */\n  apiRequest<\n    K extends keyof RequestItemsParamsMap,\n    P extends RequestItemKeys = RequestItemKeys\n  >(\n    name: K,\n    params: RequestItemsParams<K> = {},\n    options?: RequestOptions,\n  ): CancelablePromise<P[K]> {\n    return new CancelablePromise((resolve, reject) => {\n      this.connect()\n        .then((apiItems) => {\n          let apiItem = apiItems && apiItems[name];\n          if (apiItem) {\n            apiItem = [...apiItem];\n            let url = apiItem.shift();\n            if (apiItem.length) {\n              const replaceParams: {\n                [num: number]: string;\n              } = {};\n              for (let fry = 0; fry < apiItem.length; fry++) {\n                const arg = apiItem[fry];\n                replaceParams[fry] = '{' + arg + '}';\n                if (params[arg] === undefined) {\n                  throw new Error(\n                    '`' + arg + '`' + ' url api argument is not specified',\n                  );\n                }\n              }\n              if (url) {\n                url = template(url, replaceParams);\n              }\n            }\n            // Transfer part of the parameters from `params` to the URL string\n            if (params) {\n              const paramArray = [];\n              const paramList = params.paramList;\n              if (Array.isArray(paramList)) {\n                delete params.paramList;\n                paramList.forEach((x) => {\n                  paramArray.push(`${x[0]}=${x[1]}`);\n                });\n              }\n              for (const p in params) {\n                if (apiItem.indexOf(p) === -1) {\n                  paramArray.push(`${p}=${params[p]}`);\n                }\n              }\n              if (paramArray.length) {\n                url = url + '?' + paramArray.join('&');\n              }\n            }\n            if (url) {\n              resolve(this.makeQuery(url, params, options));\n            } else {\n              reject(new Error('request url is not set'));\n            }\n          } else {\n            resolve(undefined);\n          }\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n\n  /**\n   * Shortcut method for send POST request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   *\n   * @example\n   * ```javascript\n   * connector.post('resource.collection', { data: POST_PAYLOAD })\n   *   .then((newResource) => console.log(newResource))\n   *   .catch((error) => console.warn(error));\n   * ```\n   */\n  post<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions<'POST'>,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PostRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'POST';\n    return this.apiRequest<K, PostRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send GET request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  get<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions | undefined | null,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<GetRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'GET';\n    return this.apiRequest<K, GetRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send PATCH request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  patch<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PatchRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'PATCH';\n    return this.apiRequest<K, PatchRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send PUT request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  put<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PutRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'PUT';\n    return this.apiRequest<K, PutRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send DELETE request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  delete<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions | undefined | null,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<DeleteRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'DELETE';\n    return this.apiRequest<K, DeleteRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Send request to NGW.\n   * @param url - URL address to NGW\n   * @param params - Query params\n   * @param options - Request options\n   */\n  makeQuery(\n    url: string,\n    params?: Params,\n    options: RequestOptions = {},\n  ): CancelablePromise<any> {\n    url = (this.options.baseUrl ? this.options.baseUrl : '') + url;\n    if (url) {\n      if (params) {\n        url = template(url, params);\n      }\n      // remove double slash\n      url = fixUrlStr(url);\n      return this._loadData(url, options);\n    } else {\n      throw new Error('No `url` parameter set for option ' + name);\n    }\n  }\n\n  // -------------------------------------------------------------------------\n  // Resource Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * {@inheritDoc ResourcesControl.getOne}\n   */\n  getResource(\n    resource: ResourceDefinition | DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getOneOrFail}\n   */\n  getResourceOrFail(\n    resource: ResourceDefinition | DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem> {\n    return this.resources.getOneOrFail(resource);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceBy(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(resource);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceByKeyname(\n    keyname: string,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(keyname);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceById(id: number): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(id);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getId}\n   */\n  getResourceId(\n    resource: ResourceDefinition | DeepPartial<Resource>,\n  ): CancelablePromise<number | undefined> {\n    return this.resources.getId(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getIdOrFail}\n   */\n  getResourceIdOrFail(\n    resource: ResourceDefinition | DeepPartial<Resource>,\n  ): CancelablePromise<number> {\n    return this.resources.getIdOrFail(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getMany}\n   */\n  getResourcesBy(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.resources.getMany(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getChildrenOf}\n   */\n  getResourceChildren(\n    optOrResource:\n      | string\n      | number\n      | {\n          keyname?: string;\n          resourceId?: number;\n          resource?: string | number;\n        },\n  ): CancelablePromise<ResourceItem[]> {\n    return this.resources.getChildrenOf(optOrResource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.update}\n   */\n  updateResource(\n    resource: ResourceDefinition,\n    data: DeepPartial<ResourceItem>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.update(resource, data);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.delete}\n   */\n  deleteResource(resource: ResourceDefinition): CancelablePromise<void> {\n    return this.resources.delete(resource);\n  }\n\n  /**\n   * @internal\n   */\n  protected _loadData(\n    url: string,\n    options: RequestOptions,\n  ): CancelablePromise<any> {\n    options.responseType = options.responseType || 'json';\n    return new CancelablePromise((resolve, reject, onCancel) => {\n      if (this.user) {\n        options = options || {};\n        // options.withCredentials = true;\n        options.headers = {\n          ...this.getAuthorizationHeaders(),\n          ...options.headers,\n        };\n      }\n      loadData(url, resolve, options, reject, onCancel);\n    }).catch((httpError) => {\n      if (httpError instanceof CancelablePromise.CancelError) {\n        // not need to handle cancel error because used onCancel\n      } else {\n        // @ts-ignore\n        if (__DEV__) {\n          console.warn(httpError);\n        }\n        console.log(httpError);\n        const er = this._handleHttpError(httpError);\n        if (er) {\n          throw er;\n        }\n      }\n    });\n  }\n\n  private _handleHttpError(er: Error) {\n    if (er) {\n      if (er instanceof NgwError) {\n        if (er.exception === 'nextgisweb.resource.exception.ResourceNotFound') {\n          throw new ResourceNotFoundError(er);\n        } else if (\n          er.exception === 'nextgisweb.core.exception.InsufficientPermissions'\n        ) {\n          throw new InsufficientPermissionsError(er);\n        }\n      }\n    }\n    return er;\n  }\n}\n"],"sourceRoot":""}