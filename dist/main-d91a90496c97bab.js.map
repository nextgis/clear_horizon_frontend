{"version":3,"file":"main-d91a90496c97bab.js","mappings":";+IAAAA,SAASC,iBAAiB,oBAAoB,WAE5C,IAAMC,EAAiBC,MAAMC,UAAUC,MAAMC,KAC3CN,SAASO,iBAAiB,kBAC1B,GAIEL,EAAeM,OAAS,GAE1BN,EAAeO,SAAQ,SAACC,GACtBA,EAAGT,iBAAiB,SAAS,WAE3B,IAAMU,EAASD,EAAGE,QAAQD,OACpBE,EAAUb,SAASc,eAAeH,GAGxCD,EAAGK,UAAUC,OAAO,aAChBH,GACFA,EAAQE,UAAUC,OAAO,YAE7B,GACF,GAEJ,yeCbO,SAASC,EAAeC,GAMmB,IALhDC,EAASD,EAATC,UACAC,EAASF,EAATE,UACAC,EAAQH,EAARG,SACAC,EAAKJ,EAALI,MACAC,EAAGL,EAAHK,IAEMC,EAAiC,CACrCC,UAAWJ,GAETF,IACFK,EAAOE,WAAaP,GAElBC,EACFI,EAAOG,UAAYC,OAAOR,IAEtBE,IACFE,EAAOF,MAAQA,EAAMO,eAEnBN,IACFC,EAAOD,IAAMA,EAAIM,gBAIrB,IAAMC,EAASC,EAAAA,GAEf,OAAOC,MAAM,GAADC,OACPH,EAAM,wBAAAG,OAAuB,IAAIC,gBAAgBV,GAAQW,YAC5D,CACEC,OAAQ,QAEVC,MAAK,SAACC,GACN,OAAOA,EAAKC,MACd,GACF,oPC5CAC,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAvC,UAAAwC,EAAAF,EAAAG,eAAAC,EAAAH,OAAAG,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAP,OAAAG,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,EAAA,KAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,CAAA,WAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAA9D,qBAAAkE,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAjE,WAAAqE,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAvE,KAAAyC,EAAA+B,GAAA,OAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAE,EAAAtC,KAAAgF,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAA9E,UAAAkE,EAAAlE,UAAAuC,OAAA6B,OAAAW,GAAA,SAAAM,EAAArF,GAAA,0BAAAK,SAAA,SAAA2B,GAAAuB,EAAAvD,EAAAgC,GAAA,SAAA0C,GAAA,YAAAY,QAAAtD,EAAA0C,EAAA,gBAAAa,EAAApB,EAAAqB,GAAA,SAAAC,EAAAzD,EAAA0C,EAAAgB,EAAAC,GAAA,IAAAC,EAAApB,EAAAL,EAAAnC,GAAAmC,EAAAO,GAAA,aAAAkB,EAAAjB,KAAA,KAAAkB,EAAAD,EAAAlB,IAAA5B,EAAA+C,EAAA/C,MAAA,OAAAA,GAAA,UAAAgD,EAAAhD,IAAAN,EAAAtC,KAAA4C,EAAA,WAAA0C,EAAAE,QAAA5C,EAAAiD,SAAA9D,MAAA,SAAAa,GAAA2C,EAAA,OAAA3C,EAAA4C,EAAAC,EAAA,aAAAhC,GAAA8B,EAAA,QAAA9B,EAAA+B,EAAAC,EAAA,IAAAH,EAAAE,QAAA5C,GAAAb,MAAA,SAAA+D,GAAAH,EAAA/C,MAAAkD,EAAAN,EAAAG,EAAA,aAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,IAAAA,EAAAC,EAAAlB,IAAA,KAAAwB,EAAAxD,EAAA,gBAAAI,MAAA,SAAAd,EAAA0C,GAAA,SAAAyB,IAAA,WAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAzD,EAAA0C,EAAAgB,EAAAC,EAAA,WAAAO,EAAAA,EAAAA,EAAAjE,KAAAkE,EAAAA,GAAAA,GAAA,aAAA5B,EAAAV,EAAAE,EAAAM,GAAA,IAAA+B,EAAA,iCAAApE,EAAA0C,GAAA,iBAAA0B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAApE,EAAA,MAAA0C,EAAA,OAAA5B,WAAAwD,EAAAC,MAAA,OAAAlC,EAAArC,OAAAA,EAAAqC,EAAAK,IAAAA,IAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,CAAA,cAAApC,EAAArC,OAAAqC,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAArC,OAAA,uBAAAoE,EAAA,MAAAA,EAAA,YAAA/B,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,IAAA,gBAAAL,EAAArC,QAAAqC,EAAAyC,OAAA,SAAAzC,EAAAK,KAAA0B,EAAA,gBAAAR,EAAApB,EAAAX,EAAAE,EAAAM,GAAA,cAAAuB,EAAAjB,KAAA,IAAAyB,EAAA/B,EAAAkC,KAAA,6BAAAX,EAAAlB,MAAAE,EAAA,gBAAA9B,MAAA8C,EAAAlB,IAAA6B,KAAAlC,EAAAkC,KAAA,WAAAX,EAAAjB,OAAAyB,EAAA,YAAA/B,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAA,YAAAgC,EAAAF,EAAAnC,GAAA,IAAA0C,EAAA1C,EAAArC,OAAAA,EAAAwE,EAAAtD,SAAA6D,GAAA,QAAAT,IAAAtE,EAAA,OAAAqC,EAAAmC,SAAA,eAAAO,GAAAP,EAAAtD,SAAA8D,SAAA3C,EAAArC,OAAA,SAAAqC,EAAAK,SAAA4B,EAAAI,EAAAF,EAAAnC,GAAA,UAAAA,EAAArC,SAAA,WAAA+E,IAAA1C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAAF,EAAA,aAAAnC,EAAA,IAAAgB,EAAApB,EAAAxC,EAAAwE,EAAAtD,SAAAmB,EAAAK,KAAA,aAAAkB,EAAAjB,KAAA,OAAAN,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAsC,EAAAtB,EAAAlB,IAAA,OAAAwC,EAAAA,EAAAX,MAAAlC,EAAAmC,EAAAW,YAAAD,EAAApE,MAAAuB,EAAA+C,KAAAZ,EAAAa,QAAA,WAAAhD,EAAArC,SAAAqC,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,GAAAjC,EAAAmC,SAAA,KAAA5B,GAAAsC,GAAA7C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAA5C,EAAAmC,SAAA,KAAA5B,EAAA,UAAA0C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA5B,EAAA4B,EAAAQ,YAAA,GAAApC,EAAAjB,KAAA,gBAAAiB,EAAAlB,IAAA8C,EAAAQ,WAAApC,CAAA,UAAAtB,EAAAN,GAAA,KAAA6D,WAAA,EAAAJ,OAAA,SAAAzD,EAAA3D,QAAAiH,EAAA,WAAAW,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAjI,KAAAgI,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAA9H,QAAA,KAAAiI,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAA9H,QAAA,GAAAoC,EAAAtC,KAAAgI,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAAtE,WAAAwD,EAAAc,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAxF,WAAAwD,EAAAC,MAAA,UAAA1B,EAAA7E,UAAA8E,EAAApC,EAAA0C,EAAA,eAAAtC,MAAAgC,EAAArB,cAAA,IAAAf,EAAAoC,EAAA,eAAAhC,MAAA+B,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAmG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,MAAA,EAAAvG,EAAAwG,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAAzI,UAAAuC,OAAA6B,OAAAgB,GAAAqD,CAAA,EAAApG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAqB,QAAArB,EAAA,EAAAW,EAAAE,EAAAvF,WAAAuD,EAAAgC,EAAAvF,UAAAmD,GAAA,0BAAAd,EAAAkD,cAAAA,EAAAlD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAwB,QAAA,IAAAA,IAAAA,EAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA3B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAwB,GAAA,OAAAnD,EAAAmG,oBAAA1E,GAAAqF,EAAAA,EAAA/B,OAAAnF,MAAA,SAAA4D,GAAA,OAAAA,EAAAU,KAAAV,EAAA/C,MAAAqG,EAAA/B,MAAA,KAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAxG,KAAA0G,EAAAF,EAAAtB,KAAAlF,GAAA,OAAAwG,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAhJ,QAAA,KAAAwC,EAAAwG,EAAAI,MAAA,GAAA5G,KAAA0G,EAAA,OAAAlC,EAAAtE,MAAAF,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAA/E,EAAA8C,OAAAA,EAAAb,EAAAtE,UAAA,CAAA2I,YAAArE,EAAA2D,MAAA,SAAAwB,GAAA,QAAAC,KAAA,OAAAtC,KAAA,OAAAT,KAAA,KAAAC,WAAAN,EAAA,KAAAC,MAAA,OAAAC,SAAA,UAAAxE,OAAA,YAAA0C,SAAA4B,EAAA,KAAAuB,WAAAxH,QAAA0H,IAAA0B,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAAnH,EAAAtC,KAAA,KAAA0I,KAAAR,OAAAQ,EAAA3I,MAAA,WAAA2I,QAAAtC,EAAA,EAAAsD,KAAA,gBAAArD,MAAA,MAAAsD,EAAA,KAAAhC,WAAA,GAAAG,WAAA,aAAA6B,EAAAlF,KAAA,MAAAkF,EAAAnF,IAAA,YAAAoF,IAAA,EAAAjD,kBAAA,SAAAkD,GAAA,QAAAxD,KAAA,MAAAwD,EAAA,IAAA1F,EAAA,cAAA2F,EAAAC,EAAAC,GAAA,OAAAtE,EAAAjB,KAAA,QAAAiB,EAAAlB,IAAAqF,EAAA1F,EAAA+C,KAAA6C,EAAAC,IAAA7F,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,KAAA4D,CAAA,SAAA7B,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAzC,EAAA4B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA,KAAAiC,KAAA,KAAAS,EAAA3H,EAAAtC,KAAAsH,EAAA,YAAA4C,EAAA5H,EAAAtC,KAAAsH,EAAA,iBAAA2C,GAAAC,EAAA,SAAAV,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,WAAAgC,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,SAAAwC,GAAA,QAAAT,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA/D,MAAA,kDAAAqD,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,KAAAb,OAAA,SAAAnC,EAAAD,GAAA,QAAA2D,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAAiC,MAAAlH,EAAAtC,KAAAsH,EAAA,oBAAAkC,KAAAlC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA1F,GAAA,aAAAA,IAAA0F,EAAA5C,QAAA/C,GAAAA,GAAA2F,EAAA1C,aAAA0C,EAAA,UAAAzE,EAAAyE,EAAAA,EAAArC,WAAA,UAAApC,EAAAjB,KAAAA,EAAAiB,EAAAlB,IAAAA,EAAA2F,GAAA,KAAArI,OAAA,YAAAoF,KAAAiD,EAAA1C,WAAA/C,GAAA,KAAA0F,SAAA1E,EAAA,EAAA0E,SAAA,SAAA1E,EAAAgC,GAAA,aAAAhC,EAAAjB,KAAA,MAAAiB,EAAAlB,IAAA,gBAAAkB,EAAAjB,MAAA,aAAAiB,EAAAjB,KAAA,KAAAyC,KAAAxB,EAAAlB,IAAA,WAAAkB,EAAAjB,MAAA,KAAAmF,KAAA,KAAApF,IAAAkB,EAAAlB,IAAA,KAAA1C,OAAA,cAAAoF,KAAA,kBAAAxB,EAAAjB,MAAAiD,IAAA,KAAAR,KAAAQ,GAAAhD,CAAA,EAAA2F,OAAA,SAAA5C,GAAA,QAAAU,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAA2C,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA5C,CAAA,GAAA4F,MAAA,SAAA/C,GAAA,QAAAY,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAQ,WAAA,aAAApC,EAAAjB,KAAA,KAAA8F,EAAA7E,EAAAlB,IAAAqD,EAAAP,EAAA,QAAAiD,CAAA,YAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAArF,SAAA,KAAA0C,SAAA4B,GAAA1B,CAAA,GAAAvC,CAAA,UAAAsI,EAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAAlI,EAAA8B,GAAA,QAAAwC,EAAA0D,EAAAhI,GAAA8B,GAAA5B,EAAAoE,EAAApE,KAAA,OAAAmD,GAAA,YAAAN,EAAAM,EAAA,CAAAiB,EAAAX,KAAAb,EAAA5C,GAAAoG,QAAAxD,QAAA5C,GAAAb,KAAA4I,EAAAC,EAAA,CAWO,SAAeC,EAAwBC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAiE7C,SAAAF,IA5ED,IAAAxG,EA4EC,OA5EDA,EA4ECrC,IAAAyG,MAjEM,SAAAuC,EAAAtK,GAAA,IAAAuK,EAAAC,EAAAC,EAAAtK,EAAAuK,EAAAC,EAAAC,EAAA,OAAAtJ,IAAAwB,MAAA,SAAA+H,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAvE,MAAA,OAIqC,GAH1CkE,EAAOxK,EAAPwK,QAEMC,EAAe3L,SAASgM,cAAc,YAE3BtF,KADXrF,EAA6B,QAArBoK,EAAGC,EAAQO,kBAAU,IAAAR,OAAA,EAAlBA,EAAoBS,OACX,CAAAH,EAAAvE,KAAA,gBAAAuE,EAAAvE,KAAA,EACHvG,EAAgB,CACnCI,SAAAA,EAGAD,UAAW,KAEX,OANU,KAANwK,EAAMG,EAAAhF,MAODvG,OAAQ,CAAFuL,EAAAvE,KAAA,SAGf,OAFMqE,EAAc7L,SAASgM,cAAc,UAC3CJ,EAAOjC,UACPoC,EAAAvE,KAAA,GACM,oHAAgC,eAAAuE,EAAAvE,KAAA,GACd,8DAAuB,QAI/C,IAJQ2E,EAAuCJ,EAAAhF,KAAvCoF,OAIEN,EAAa,CACrBO,KAAM,CACJC,SAJoC,CAAC,KAAM,MAI3BC,KAAI,SAACC,GACnB,MAAO,CACLxH,KAAM,OACNyH,MAAOD,EAGPH,KAAMR,EACHa,QAAO,SAACC,GAAC,OAAKA,EAAEhL,aAAe6K,CAAC,IAChCD,KAAI,SAACK,GAEJ,MAAO,CACLC,EAFQ,IAAIC,KAAKF,EAAIG,UAAUC,UAG/BC,EAAGL,EAAIzJ,MAEX,IAEN,KAEF+J,QAAS,CACPC,OAAQ,CACNN,EAAG,CACD7H,KAAM,OACNoI,KAAM,CACJC,KAAM,aAUhBzB,EAAa0B,YAAYxB,GAAaE,EAAAvE,KAAA,kBAEhCsE,EAAc9L,SAASgM,cAAc,QAC/BsB,UAAY,yBAAHrL,OAA4BZ,EAAQ,sCACzDsK,EAAa0B,YAAYvB,GAAa,eAAAC,EAAA7E,OAAA,SAGnCyE,GAAY,yBAAAI,EAAA/B,OAAA,GAAAwB,EAAA,IACpBH,EA5ED,eAAAlH,EAAA,KAAAoJ,EAAAhC,UAAA,WAAAjC,SAAA,SAAAxD,EAAAC,GAAA,IAAAiF,EAAAnG,EAAAyG,MAAAnH,EAAAoJ,GAAA,SAAAtC,EAAA/H,GAAA6H,EAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,OAAAhI,EAAA,UAAAgI,EAAAnH,GAAAgH,EAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,QAAAnH,EAAA,CAAAkH,OAAAvE,EAAA,KA4EC2E,EAAAC,MAAA,KAAAC,UAAA,8vCC5ED/I,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAvC,UAAAwC,EAAAF,EAAAG,eAAAC,EAAAH,OAAAG,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAP,OAAAG,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,EAAA,KAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,CAAA,WAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAA9D,qBAAAkE,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAjE,WAAAqE,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAvE,KAAAyC,EAAA+B,GAAA,OAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAE,EAAAtC,KAAAgF,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAA9E,UAAAkE,EAAAlE,UAAAuC,OAAA6B,OAAAW,GAAA,SAAAM,EAAArF,GAAA,0BAAAK,SAAA,SAAA2B,GAAAuB,EAAAvD,EAAAgC,GAAA,SAAA0C,GAAA,YAAAY,QAAAtD,EAAA0C,EAAA,gBAAAa,EAAApB,EAAAqB,GAAA,SAAAC,EAAAzD,EAAA0C,EAAAgB,EAAAC,GAAA,IAAAC,EAAApB,EAAAL,EAAAnC,GAAAmC,EAAAO,GAAA,aAAAkB,EAAAjB,KAAA,KAAAkB,EAAAD,EAAAlB,IAAA5B,EAAA+C,EAAA/C,MAAA,OAAAA,GAAA,UAAAgD,EAAAhD,IAAAN,EAAAtC,KAAA4C,EAAA,WAAA0C,EAAAE,QAAA5C,EAAAiD,SAAA9D,MAAA,SAAAa,GAAA2C,EAAA,OAAA3C,EAAA4C,EAAAC,EAAA,aAAAhC,GAAA8B,EAAA,QAAA9B,EAAA+B,EAAAC,EAAA,IAAAH,EAAAE,QAAA5C,GAAAb,MAAA,SAAA+D,GAAAH,EAAA/C,MAAAkD,EAAAN,EAAAG,EAAA,aAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,IAAAA,EAAAC,EAAAlB,IAAA,KAAAwB,EAAAxD,EAAA,gBAAAI,MAAA,SAAAd,EAAA0C,GAAA,SAAAyB,IAAA,WAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAzD,EAAA0C,EAAAgB,EAAAC,EAAA,WAAAO,EAAAA,EAAAA,EAAAjE,KAAAkE,EAAAA,GAAAA,GAAA,aAAA5B,EAAAV,EAAAE,EAAAM,GAAA,IAAA+B,EAAA,iCAAApE,EAAA0C,GAAA,iBAAA0B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAApE,EAAA,MAAA0C,EAAA,OAAA5B,WAAAwD,EAAAC,MAAA,OAAAlC,EAAArC,OAAAA,EAAAqC,EAAAK,IAAAA,IAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,CAAA,cAAApC,EAAArC,OAAAqC,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAArC,OAAA,uBAAAoE,EAAA,MAAAA,EAAA,YAAA/B,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,IAAA,gBAAAL,EAAArC,QAAAqC,EAAAyC,OAAA,SAAAzC,EAAAK,KAAA0B,EAAA,gBAAAR,EAAApB,EAAAX,EAAAE,EAAAM,GAAA,cAAAuB,EAAAjB,KAAA,IAAAyB,EAAA/B,EAAAkC,KAAA,6BAAAX,EAAAlB,MAAAE,EAAA,gBAAA9B,MAAA8C,EAAAlB,IAAA6B,KAAAlC,EAAAkC,KAAA,WAAAX,EAAAjB,OAAAyB,EAAA,YAAA/B,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAA,YAAAgC,EAAAF,EAAAnC,GAAA,IAAA0C,EAAA1C,EAAArC,OAAAA,EAAAwE,EAAAtD,SAAA6D,GAAA,QAAAT,IAAAtE,EAAA,OAAAqC,EAAAmC,SAAA,eAAAO,GAAAP,EAAAtD,SAAA8D,SAAA3C,EAAArC,OAAA,SAAAqC,EAAAK,SAAA4B,EAAAI,EAAAF,EAAAnC,GAAA,UAAAA,EAAArC,SAAA,WAAA+E,IAAA1C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAAF,EAAA,aAAAnC,EAAA,IAAAgB,EAAApB,EAAAxC,EAAAwE,EAAAtD,SAAAmB,EAAAK,KAAA,aAAAkB,EAAAjB,KAAA,OAAAN,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAsC,EAAAtB,EAAAlB,IAAA,OAAAwC,EAAAA,EAAAX,MAAAlC,EAAAmC,EAAAW,YAAAD,EAAApE,MAAAuB,EAAA+C,KAAAZ,EAAAa,QAAA,WAAAhD,EAAArC,SAAAqC,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,GAAAjC,EAAAmC,SAAA,KAAA5B,GAAAsC,GAAA7C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAA5C,EAAAmC,SAAA,KAAA5B,EAAA,UAAA0C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA5B,EAAA4B,EAAAQ,YAAA,GAAApC,EAAAjB,KAAA,gBAAAiB,EAAAlB,IAAA8C,EAAAQ,WAAApC,CAAA,UAAAtB,EAAAN,GAAA,KAAA6D,WAAA,EAAAJ,OAAA,SAAAzD,EAAA3D,QAAAiH,EAAA,WAAAW,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAjI,KAAAgI,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAA9H,QAAA,KAAAiI,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAA9H,QAAA,GAAAoC,EAAAtC,KAAAgI,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAAtE,WAAAwD,EAAAc,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAxF,WAAAwD,EAAAC,MAAA,UAAA1B,EAAA7E,UAAA8E,EAAApC,EAAA0C,EAAA,eAAAtC,MAAAgC,EAAArB,cAAA,IAAAf,EAAAoC,EAAA,eAAAhC,MAAA+B,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAmG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,MAAA,EAAAvG,EAAAwG,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAAzI,UAAAuC,OAAA6B,OAAAgB,GAAAqD,CAAA,EAAApG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAqB,QAAArB,EAAA,EAAAW,EAAAE,EAAAvF,WAAAuD,EAAAgC,EAAAvF,UAAAmD,GAAA,0BAAAd,EAAAkD,cAAAA,EAAAlD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAwB,QAAA,IAAAA,IAAAA,EAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA3B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAwB,GAAA,OAAAnD,EAAAmG,oBAAA1E,GAAAqF,EAAAA,EAAA/B,OAAAnF,MAAA,SAAA4D,GAAA,OAAAA,EAAAU,KAAAV,EAAA/C,MAAAqG,EAAA/B,MAAA,KAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAxG,KAAA0G,EAAAF,EAAAtB,KAAAlF,GAAA,OAAAwG,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAhJ,QAAA,KAAAwC,EAAAwG,EAAAI,MAAA,GAAA5G,KAAA0G,EAAA,OAAAlC,EAAAtE,MAAAF,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAA/E,EAAA8C,OAAAA,EAAAb,EAAAtE,UAAA,CAAA2I,YAAArE,EAAA2D,MAAA,SAAAwB,GAAA,QAAAC,KAAA,OAAAtC,KAAA,OAAAT,KAAA,KAAAC,WAAAN,EAAA,KAAAC,MAAA,OAAAC,SAAA,UAAAxE,OAAA,YAAA0C,SAAA4B,EAAA,KAAAuB,WAAAxH,QAAA0H,IAAA0B,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAAnH,EAAAtC,KAAA,KAAA0I,KAAAR,OAAAQ,EAAA3I,MAAA,WAAA2I,QAAAtC,EAAA,EAAAsD,KAAA,gBAAArD,MAAA,MAAAsD,EAAA,KAAAhC,WAAA,GAAAG,WAAA,aAAA6B,EAAAlF,KAAA,MAAAkF,EAAAnF,IAAA,YAAAoF,IAAA,EAAAjD,kBAAA,SAAAkD,GAAA,QAAAxD,KAAA,MAAAwD,EAAA,IAAA1F,EAAA,cAAA2F,EAAAC,EAAAC,GAAA,OAAAtE,EAAAjB,KAAA,QAAAiB,EAAAlB,IAAAqF,EAAA1F,EAAA+C,KAAA6C,EAAAC,IAAA7F,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,KAAA4D,CAAA,SAAA7B,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAzC,EAAA4B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA,KAAAiC,KAAA,KAAAS,EAAA3H,EAAAtC,KAAAsH,EAAA,YAAA4C,EAAA5H,EAAAtC,KAAAsH,EAAA,iBAAA2C,GAAAC,EAAA,SAAAV,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,WAAAgC,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,SAAAwC,GAAA,QAAAT,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA/D,MAAA,kDAAAqD,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,KAAAb,OAAA,SAAAnC,EAAAD,GAAA,QAAA2D,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAAiC,MAAAlH,EAAAtC,KAAAsH,EAAA,oBAAAkC,KAAAlC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA1F,GAAA,aAAAA,IAAA0F,EAAA5C,QAAA/C,GAAAA,GAAA2F,EAAA1C,aAAA0C,EAAA,UAAAzE,EAAAyE,EAAAA,EAAArC,WAAA,UAAApC,EAAAjB,KAAAA,EAAAiB,EAAAlB,IAAAA,EAAA2F,GAAA,KAAArI,OAAA,YAAAoF,KAAAiD,EAAA1C,WAAA/C,GAAA,KAAA0F,SAAA1E,EAAA,EAAA0E,SAAA,SAAA1E,EAAAgC,GAAA,aAAAhC,EAAAjB,KAAA,MAAAiB,EAAAlB,IAAA,gBAAAkB,EAAAjB,MAAA,aAAAiB,EAAAjB,KAAA,KAAAyC,KAAAxB,EAAAlB,IAAA,WAAAkB,EAAAjB,MAAA,KAAAmF,KAAA,KAAApF,IAAAkB,EAAAlB,IAAA,KAAA1C,OAAA,cAAAoF,KAAA,kBAAAxB,EAAAjB,MAAAiD,IAAA,KAAAR,KAAAQ,GAAAhD,CAAA,EAAA2F,OAAA,SAAA5C,GAAA,QAAAU,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAA2C,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA5C,CAAA,GAAA4F,MAAA,SAAA/C,GAAA,QAAAY,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAQ,WAAA,aAAApC,EAAAjB,KAAA,KAAA8F,EAAA7E,EAAAlB,IAAAqD,EAAAP,EAAA,QAAAiD,CAAA,YAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAArF,SAAA,KAAA0C,SAAA4B,GAAA1B,CAAA,GAAAvC,CAAA,UAAAsI,EAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAAlI,EAAA8B,GAAA,QAAAwC,EAAA0D,EAAAhI,GAAA8B,GAAA5B,EAAAoE,EAAApE,KAAA,OAAAmD,GAAA,YAAAN,EAAAM,EAAA,CAAAiB,EAAAX,KAAAb,EAAA5C,GAAAoG,QAAAxD,QAAA5C,GAAAb,KAAA4I,EAAAC,EAAA,UAAAsC,EAAA3I,GAAA,sBAAAV,EAAA,KAAAoJ,EAAAhC,UAAA,WAAAjC,SAAA,SAAAxD,EAAAC,GAAA,IAAAiF,EAAAnG,EAAAyG,MAAAnH,EAAAoJ,GAAA,SAAAtC,EAAA/H,GAAA6H,EAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,OAAAhI,EAAA,UAAAgI,EAAAnH,GAAAgH,EAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,QAAAnH,EAAA,CAAAkH,OAAAvE,EAAA,cAAA+G,EAAA9M,EAAA+M,GAAA,QAAAjF,EAAA,EAAAA,EAAAiF,EAAAlN,OAAAiI,IAAA,KAAAkF,EAAAD,EAAAjF,GAAAkF,EAAA/J,WAAA+J,EAAA/J,aAAA,EAAA+J,EAAA9J,cAAA,YAAA8J,IAAAA,EAAA7J,UAAA,GAAAnB,OAAAG,eAAAnC,EAAAiN,EAAAD,EAAA3K,KAAA2K,EAAA,WAAAE,EAAA9K,EAAAC,EAAAE,GAAA,OAAAF,EAAA4K,EAAA5K,MAAAD,EAAAJ,OAAAG,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAAE,EAAAH,CAAA,UAAA6K,EAAA9I,GAAA,IAAA9B,EAAA,SAAA8K,EAAAC,GAAA,cAAA7H,EAAA4H,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAA1K,OAAA6K,aAAA,QAAAvH,IAAAsH,EAAA,KAAAE,EAAAF,EAAA1N,KAAAwN,EAAAC,UAAA,cAAA7H,EAAAgI,GAAA,OAAAA,EAAA,UAAA7G,UAAA,uDAAAzF,OAAAkM,EAAA,CAAAK,CAAArJ,GAAA,iBAAAoB,EAAAlD,GAAAA,EAAApB,OAAAoB,EAAA,CAgCO,IAAMoL,EAAK,oBAAAA,KAhClB,SAAAC,EAAAC,GAAA,KAAAD,aAAAC,GAAA,UAAAjH,UAAA,qCAgCkBkH,CAAA,KAAAH,GAAAP,EAAA,sBAAAA,EAAA,sBAEiD,CAAC,EAAC,CAlCrE,IAAAS,EAAAE,EAgLGC,EA/BAC,EAjCAC,EA1EAC,EAgLA,OAtNHN,EAkCqEF,EAlCrEI,EAkCqE,EAAAxL,IAAA,YAAAE,MAEnE,SAAU2L,GACRC,KAAKD,OAASA,CAChB,GAAC,CAAA7L,IAAA,2BAAAE,OAAA0L,EAAApB,EAAAhL,IAAAyG,MAED,SAAAuC,EACEkC,GAAoC,OAAAlL,IAAAwB,MAAA,SAAA+H,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAvE,MAAA,cAAAuE,EAAA7E,OAAA,SAE7BiE,EAAyBuC,IAAM,wBAAA3B,EAAA/B,OAAA,GAAAwB,EAAA,KACvC,SAAAJ,GAAA,OAAAwD,EAAAtD,MAAA,KAAAC,UAAA,KAAAvI,IAAA,qBAAAE,MAED,SAIEwI,EACAqD,EACAC,GAEA,IAAMrD,EAAe3L,SAASgM,cAAc,OACtC0B,EAAQhC,EAAQO,WAChBgD,EAAgBjP,SAASgM,cAAc,OAC7C,GAAI0B,EAAO,CACTuB,EAAcC,UAAY,aAC1B,IAAMC,EAA6BxM,OAAOyM,QAAQ1B,GAAOpB,KACvD,SAAApL,GAAkB,QAAAmO,KAAA,8CAAAnO,6kBAChB,MAAO,CACL8B,IAFCqM,EAAA,GAGDnM,MAHQmM,EAAA,GAKZ,IAEFJ,EAAc3B,UAAYwB,KAAKQ,qBAAqBH,EACtD,CAEA,GAAIJ,EAAY,CACd,IAAMQ,EAAMvP,SAASgM,cAAc,OACnCuD,EAAIlC,YAAY4B,GAChBtD,EAAa2B,UAAY,WACzBwB,KAAKU,qBAAqBD,EAAKR,EAAYrD,GAASrJ,MAAK,WACvDsJ,EAAa2B,UAAY,GACzB3B,EAAa0B,YAAYkC,EAC3B,IACIP,GAAcA,EAAWxO,QAC3BsO,KAAKW,WACH9D,EACAqD,EACAD,EACAW,OAAOhE,EAAQiE,IAGrB,MACEhE,EAAa0B,YAAY4B,GAE3B,OAAOtD,CACT,GAAC,CAAA3I,IAAA,uBAAAE,MAED,SACE+I,GAEA,IAAI2D,EAAO,GAgBX,OAfA3D,EAAWxL,SAAQ,SAAAoP,GAAoB,IAAjB7M,EAAG6M,EAAH7M,IAAKE,EAAK2M,EAAL3M,MACJ,WAAjBgD,EAAOhD,IAAsBA,IAC3B,SAAUA,EACZA,EAAQ,CAACA,EAAM4M,IAAK5M,EAAM6M,MAAO7M,EAAM8M,MAAMC,KAAK,KACzC,SAAU/M,IACnBA,EAAQ,CAACA,EAAMgN,KAAMhN,EAAMiN,QAAQF,KAAK,OAG5CL,GAAQ,sFAAJ3N,OAEkCe,EAAG,wCAAAf,OC9ExC,SAA4BiB,GACjC,MAAqB,iBAAVA,IAdOkN,EAeDlN,EAdD,IAAImN,OAClB,wKAMA,KAEeC,KAAKF,IAMX,YAAPnO,OAAmBiB,EAAK,sBAAAjB,OAAqBiB,EAAK,QAG/CA,EAnBT,IAAoBkN,CAoBpB,CDwE8BG,CAAmBrN,GAAM,+BAGnD,IACO0M,CACT,GAAC,CAAA5M,IAAA,uBAAAE,OAAAyL,EAAAnB,EAAAhL,IAAAyG,MAED,SAAAuH,EAIEC,EACA1B,EACArD,GAAsB,IAAAgF,EAAAC,EAAAC,EAAArB,EAAA,OAAA/M,IAAAwB,MAAA,SAAA6M,GAAA,cAAAA,EAAA/G,KAAA+G,EAAArJ,MAAA,cAAAqJ,EAAArJ,KAAA,EAEHsH,KAAKgC,iBAAiB/B,GAAW,OAqBnD,OArBK2B,EAAIG,EAAA9J,MACDgK,gBACDJ,EAA4B,GAClCD,EAAKK,cAAcC,OAAOvQ,SAAQ,SAACmM,GACjC,GAAIA,EAAEqE,gBAAiB,CACrB,IAAIC,EAAWxF,EAAQO,WAAWW,EAAEuE,SAChCD,IACsB,iBAAbA,IACTA,EAAWA,EAASE,QAAQ,cAAc,SAACC,EAAGC,GAAC,OAC7CD,EAAED,QAAQE,EAAGA,EAAI,IAAI,KAGzBX,EAAczI,KAAK,CAAElF,IAAK4J,EAAE2E,aAAcrO,MAAOgO,IAErD,CACF,IACMN,EAAa9B,KAAKQ,qBAAqBqB,IACvCpB,EAAMkB,EAAQe,uBAAuB,cAAc,MAEvDjC,EAAIjC,UAAYsD,IAEnBC,EAAA3J,OAAA,SACMwJ,GAAI,wBAAAG,EAAA7G,OAAA,GAAAwG,EAAA,UACZ,SAAAiB,EAAAC,EAAAC,GAAA,OAAAhD,EAAArD,MAAA,KAAAC,UAAA,KAAAvI,IAAA,aAAAE,OAAAwL,EAAAlB,EAAAhL,IAAAyG,MAED,SAAA2I,EACEnB,EACAzB,EACAW,EACAkC,GAAW,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5P,IAAAwB,MAAA,SAAAqO,GAAA,cAAAA,EAAAvI,KAAAuI,EAAA7K,MAAA,QAELsK,EAAoB9R,SAASgM,cAAc,QAE/BkD,UAAY,sBAAsB6C,EAAAO,EAClCtD,GAAUqD,EAAAvI,KAAA,EAAAiI,EAAArF,IAAA,WAAAsF,EAAAD,EAAAQ,KAAA5L,KAAE,CAAF0L,EAAA7K,KAAA,SAMW,OAN5ByK,EAAGD,EAAA9O,OAGNgP,EAASlS,SAASgM,cAAc,WAC/BkD,UAAY,YAAHjN,OAHF,IAGsB,KAAAA,OAFrB,KAGfiQ,EAAOM,MAAMC,UAAYC,QACzBR,EAAOM,MAAMG,SAAWC,QAAaP,EAAA7K,KAAA,GACnBsH,KAAK+D,WAAWZ,EAAK,CACrCW,MAPY,IAQZF,OAPa,IAQb/C,GAAAA,EACAkC,IAAAA,IACA,QALIM,EAAGE,EAAAtL,MAMHqL,EAAUpS,SAASgM,cAAc,QAC/BmG,IAAMA,EACdD,EAAO7E,YAAY+E,GACnBN,EAAkBzE,YAAY6E,GAAQ,QAAAG,EAAA7K,KAAA,gBAAA6K,EAAA7K,KAAA,iBAAA6K,EAAAvI,KAAA,GAAAuI,EAAAS,GAAAT,EAAA,SAAAN,EAAAgB,EAAAV,EAAAS,IAAA,eAAAT,EAAAvI,KAAA,GAAAiI,EAAAiB,IAAAX,EAAA1H,OAAA,YAExC8F,EAAQpD,YAAYyE,GACpBmB,IAAAA,OAAqBnB,GAAmB,yBAAAO,EAAArI,OAAA,GAAA4H,EAAA,yBACzC,SAAAsB,EAAAC,EAAAC,EAAAC,GAAA,OAAA3E,EAAApD,MAAA,KAAAC,UAAA,KAAAvI,IAAA,mBAAAE,OAAAuL,EAAAjB,EAAAhL,IAAAyG,MAED,SAAAqK,EAA+BvE,GAAkB,IAAA2B,EAAA,OAAAlO,IAAAwB,MAAA,SAAAuP,GAAA,cAAAA,EAAAzJ,KAAAyJ,EAAA/L,MAAA,UAC1CsH,KAAK0E,eAAezE,GAAa,CAAFwE,EAAA/L,KAAA,eAAA+L,EAAA/L,KAAA,EACfsH,KAAKD,OAAO4E,UAAUC,IAAI,gBAAiB,KAAM,CAClE/D,GAAIZ,IACJ,OAFI2B,EAAI6C,EAAAxM,KAGV+H,KAAK0E,eAAezE,GAAc2B,EAAK,cAAA6C,EAAArM,OAAA,SAElC4H,KAAK0E,eAAezE,IAAW,wBAAAwE,EAAAvJ,OAAA,GAAAsJ,EAAA,UACvC,SAAAK,GAAA,OAAAlF,EAAAnD,MAAA,KAAAC,UAAA,KAAAvI,IAAA,aAAAE,MAED,SACE+O,EACAhF,GACA,IAAA2G,EAAA,KACA,OAAO,IAAItK,SAAgB,SAACxD,EAASC,GACnC,IAAQ6M,EAAkB3F,EAAlB2F,MAAOF,EAAWzF,EAAXyF,OACTmB,EACJ,iBACA5G,EAAQ0C,GACR,YACA1C,EAAQ4E,IAAG,eAAA5P,OACIgQ,EAAItC,GAAE,WACpBiD,GAASF,EAAS,SAAHzQ,OAAY2Q,EAAK,KAAA3Q,OAAIyQ,GAAW,IAClDkB,EAAK/E,OAAO4E,UACTK,UAAgBD,EAAK,CAAC,EAAG,CAAEE,aAAc,SACzC1R,MAAK,SAAC2R,GACL,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,UAAY,WACjBtO,EAAQmO,EAAOhO,OACjB,CACF,IACC2E,OAAM,SAACyJ,GACNtO,EAAOsO,EACT,GACJ,GACF,IAtNF7F,GAAAf,EAAAa,EAAAlO,UAAAoO,GAAA7L,OAAAG,eAAAwL,EAAA,aAAAxK,UAAA,IAsNGsK,CAAA,CAtLe,0QEhClB5L,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAvC,UAAAwC,EAAAF,EAAAG,eAAAC,EAAAH,OAAAG,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAP,OAAAG,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,EAAA,KAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,CAAA,WAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAA9D,qBAAAkE,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAjE,WAAAqE,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAvE,KAAAyC,EAAA+B,GAAA,OAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAE,EAAAtC,KAAAgF,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAA9E,UAAAkE,EAAAlE,UAAAuC,OAAA6B,OAAAW,GAAA,SAAAM,EAAArF,GAAA,0BAAAK,SAAA,SAAA2B,GAAAuB,EAAAvD,EAAAgC,GAAA,SAAA0C,GAAA,YAAAY,QAAAtD,EAAA0C,EAAA,gBAAAa,EAAApB,EAAAqB,GAAA,SAAAC,EAAAzD,EAAA0C,EAAAgB,EAAAC,GAAA,IAAAC,EAAApB,EAAAL,EAAAnC,GAAAmC,EAAAO,GAAA,aAAAkB,EAAAjB,KAAA,KAAAkB,EAAAD,EAAAlB,IAAA5B,EAAA+C,EAAA/C,MAAA,OAAAA,GAAA,UAAAgD,EAAAhD,IAAAN,EAAAtC,KAAA4C,EAAA,WAAA0C,EAAAE,QAAA5C,EAAAiD,SAAA9D,MAAA,SAAAa,GAAA2C,EAAA,OAAA3C,EAAA4C,EAAAC,EAAA,aAAAhC,GAAA8B,EAAA,QAAA9B,EAAA+B,EAAAC,EAAA,IAAAH,EAAAE,QAAA5C,GAAAb,MAAA,SAAA+D,GAAAH,EAAA/C,MAAAkD,EAAAN,EAAAG,EAAA,aAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,IAAAA,EAAAC,EAAAlB,IAAA,KAAAwB,EAAAxD,EAAA,gBAAAI,MAAA,SAAAd,EAAA0C,GAAA,SAAAyB,IAAA,WAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAzD,EAAA0C,EAAAgB,EAAAC,EAAA,WAAAO,EAAAA,EAAAA,EAAAjE,KAAAkE,EAAAA,GAAAA,GAAA,aAAA5B,EAAAV,EAAAE,EAAAM,GAAA,IAAA+B,EAAA,iCAAApE,EAAA0C,GAAA,iBAAA0B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAApE,EAAA,MAAA0C,EAAA,OAAA5B,WAAAwD,EAAAC,MAAA,OAAAlC,EAAArC,OAAAA,EAAAqC,EAAAK,IAAAA,IAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,CAAA,cAAApC,EAAArC,OAAAqC,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAArC,OAAA,uBAAAoE,EAAA,MAAAA,EAAA,YAAA/B,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,IAAA,gBAAAL,EAAArC,QAAAqC,EAAAyC,OAAA,SAAAzC,EAAAK,KAAA0B,EAAA,gBAAAR,EAAApB,EAAAX,EAAAE,EAAAM,GAAA,cAAAuB,EAAAjB,KAAA,IAAAyB,EAAA/B,EAAAkC,KAAA,6BAAAX,EAAAlB,MAAAE,EAAA,gBAAA9B,MAAA8C,EAAAlB,IAAA6B,KAAAlC,EAAAkC,KAAA,WAAAX,EAAAjB,OAAAyB,EAAA,YAAA/B,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAA,YAAAgC,EAAAF,EAAAnC,GAAA,IAAA0C,EAAA1C,EAAArC,OAAAA,EAAAwE,EAAAtD,SAAA6D,GAAA,QAAAT,IAAAtE,EAAA,OAAAqC,EAAAmC,SAAA,eAAAO,GAAAP,EAAAtD,SAAA8D,SAAA3C,EAAArC,OAAA,SAAAqC,EAAAK,SAAA4B,EAAAI,EAAAF,EAAAnC,GAAA,UAAAA,EAAArC,SAAA,WAAA+E,IAAA1C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAAF,EAAA,aAAAnC,EAAA,IAAAgB,EAAApB,EAAAxC,EAAAwE,EAAAtD,SAAAmB,EAAAK,KAAA,aAAAkB,EAAAjB,KAAA,OAAAN,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAsC,EAAAtB,EAAAlB,IAAA,OAAAwC,EAAAA,EAAAX,MAAAlC,EAAAmC,EAAAW,YAAAD,EAAApE,MAAAuB,EAAA+C,KAAAZ,EAAAa,QAAA,WAAAhD,EAAArC,SAAAqC,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,GAAAjC,EAAAmC,SAAA,KAAA5B,GAAAsC,GAAA7C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAA5C,EAAAmC,SAAA,KAAA5B,EAAA,UAAA0C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA5B,EAAA4B,EAAAQ,YAAA,GAAApC,EAAAjB,KAAA,gBAAAiB,EAAAlB,IAAA8C,EAAAQ,WAAApC,CAAA,UAAAtB,EAAAN,GAAA,KAAA6D,WAAA,EAAAJ,OAAA,SAAAzD,EAAA3D,QAAAiH,EAAA,WAAAW,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAjI,KAAAgI,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAA9H,QAAA,KAAAiI,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAA9H,QAAA,GAAAoC,EAAAtC,KAAAgI,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAAtE,WAAAwD,EAAAc,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAxF,WAAAwD,EAAAC,MAAA,UAAA1B,EAAA7E,UAAA8E,EAAApC,EAAA0C,EAAA,eAAAtC,MAAAgC,EAAArB,cAAA,IAAAf,EAAAoC,EAAA,eAAAhC,MAAA+B,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAmG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,MAAA,EAAAvG,EAAAwG,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAAzI,UAAAuC,OAAA6B,OAAAgB,GAAAqD,CAAA,EAAApG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAqB,QAAArB,EAAA,EAAAW,EAAAE,EAAAvF,WAAAuD,EAAAgC,EAAAvF,UAAAmD,GAAA,0BAAAd,EAAAkD,cAAAA,EAAAlD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAwB,QAAA,IAAAA,IAAAA,EAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA3B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAwB,GAAA,OAAAnD,EAAAmG,oBAAA1E,GAAAqF,EAAAA,EAAA/B,OAAAnF,MAAA,SAAA4D,GAAA,OAAAA,EAAAU,KAAAV,EAAA/C,MAAAqG,EAAA/B,MAAA,KAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAxG,KAAA0G,EAAAF,EAAAtB,KAAAlF,GAAA,OAAAwG,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAhJ,QAAA,KAAAwC,EAAAwG,EAAAI,MAAA,GAAA5G,KAAA0G,EAAA,OAAAlC,EAAAtE,MAAAF,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAA/E,EAAA8C,OAAAA,EAAAb,EAAAtE,UAAA,CAAA2I,YAAArE,EAAA2D,MAAA,SAAAwB,GAAA,QAAAC,KAAA,OAAAtC,KAAA,OAAAT,KAAA,KAAAC,WAAAN,EAAA,KAAAC,MAAA,OAAAC,SAAA,UAAAxE,OAAA,YAAA0C,SAAA4B,EAAA,KAAAuB,WAAAxH,QAAA0H,IAAA0B,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAAnH,EAAAtC,KAAA,KAAA0I,KAAAR,OAAAQ,EAAA3I,MAAA,WAAA2I,QAAAtC,EAAA,EAAAsD,KAAA,gBAAArD,MAAA,MAAAsD,EAAA,KAAAhC,WAAA,GAAAG,WAAA,aAAA6B,EAAAlF,KAAA,MAAAkF,EAAAnF,IAAA,YAAAoF,IAAA,EAAAjD,kBAAA,SAAAkD,GAAA,QAAAxD,KAAA,MAAAwD,EAAA,IAAA1F,EAAA,cAAA2F,EAAAC,EAAAC,GAAA,OAAAtE,EAAAjB,KAAA,QAAAiB,EAAAlB,IAAAqF,EAAA1F,EAAA+C,KAAA6C,EAAAC,IAAA7F,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,KAAA4D,CAAA,SAAA7B,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAzC,EAAA4B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA,KAAAiC,KAAA,KAAAS,EAAA3H,EAAAtC,KAAAsH,EAAA,YAAA4C,EAAA5H,EAAAtC,KAAAsH,EAAA,iBAAA2C,GAAAC,EAAA,SAAAV,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,WAAAgC,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,SAAAwC,GAAA,QAAAT,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA/D,MAAA,kDAAAqD,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,KAAAb,OAAA,SAAAnC,EAAAD,GAAA,QAAA2D,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAAiC,MAAAlH,EAAAtC,KAAAsH,EAAA,oBAAAkC,KAAAlC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA1F,GAAA,aAAAA,IAAA0F,EAAA5C,QAAA/C,GAAAA,GAAA2F,EAAA1C,aAAA0C,EAAA,UAAAzE,EAAAyE,EAAAA,EAAArC,WAAA,UAAApC,EAAAjB,KAAAA,EAAAiB,EAAAlB,IAAAA,EAAA2F,GAAA,KAAArI,OAAA,YAAAoF,KAAAiD,EAAA1C,WAAA/C,GAAA,KAAA0F,SAAA1E,EAAA,EAAA0E,SAAA,SAAA1E,EAAAgC,GAAA,aAAAhC,EAAAjB,KAAA,MAAAiB,EAAAlB,IAAA,gBAAAkB,EAAAjB,MAAA,aAAAiB,EAAAjB,KAAA,KAAAyC,KAAAxB,EAAAlB,IAAA,WAAAkB,EAAAjB,MAAA,KAAAmF,KAAA,KAAApF,IAAAkB,EAAAlB,IAAA,KAAA1C,OAAA,cAAAoF,KAAA,kBAAAxB,EAAAjB,MAAAiD,IAAA,KAAAR,KAAAQ,GAAAhD,CAAA,EAAA2F,OAAA,SAAA5C,GAAA,QAAAU,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAA2C,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA5C,CAAA,GAAA4F,MAAA,SAAA/C,GAAA,QAAAY,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAQ,WAAA,aAAApC,EAAAjB,KAAA,KAAA8F,EAAA7E,EAAAlB,IAAAqD,EAAAP,EAAA,QAAAiD,CAAA,YAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAArF,SAAA,KAAA0C,SAAA4B,GAAA1B,CAAA,GAAAvC,CAAA,UAAAsI,EAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAAlI,EAAA8B,GAAA,QAAAwC,EAAA0D,EAAAhI,GAAA8B,GAAA5B,EAAAoE,EAAApE,KAAA,OAAAmD,GAAA,YAAAN,EAAAM,EAAA,CAAAiB,EAAAX,KAAAb,EAAA5C,GAAAoG,QAAAxD,QAAA5C,GAAAb,KAAA4I,EAAAC,EAAA,UAAAuC,EAAA9M,EAAA+M,GAAA,QAAAjF,EAAA,EAAAA,EAAAiF,EAAAlN,OAAAiI,IAAA,KAAAkF,EAAAD,EAAAjF,GAAAkF,EAAA/J,WAAA+J,EAAA/J,aAAA,EAAA+J,EAAA9J,cAAA,YAAA8J,IAAAA,EAAA7J,UAAA,GAAAnB,OAAAG,eAAAnC,EAAAiN,EAAAD,EAAA3K,KAAA2K,EAAA,WAAAE,EAAA9K,EAAAC,EAAAE,GAAA,OAAAF,EAAA4K,EAAA5K,MAAAD,EAAAJ,OAAAG,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAAE,EAAAH,CAAA,UAAA6K,EAAA9I,GAAA,IAAA9B,EAAA,SAAA8K,EAAAC,GAAA,cAAA7H,EAAA4H,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAA1K,OAAA6K,aAAA,QAAAvH,IAAAsH,EAAA,KAAAE,EAAAF,EAAA1N,KAAAwN,EAAAC,UAAA,cAAA7H,EAAAgI,GAAA,OAAAA,EAAA,UAAA7G,UAAA,uDAAAzF,OAAAkM,EAAA,CAAAK,CAAArJ,GAAA,iBAAAoB,EAAAlD,GAAAA,EAAApB,OAAAoB,EAAA,CAGA,IAAMsR,EAAe,qBASRC,EAAgB,WAM3B,SAAAA,EAAoBtH,IAlBtB,SAAAoB,EAAAC,GAAA,KAAAD,aAAAC,GAAA,UAAAjH,UAAA,qCAkBwDkH,CAAA,KAAAgG,GAAA,KAAlCtH,QAAAA,EAAgCY,EAAA,kBALtB7N,SAASgM,cAAc,QAAM6B,EAAA,wBAAAA,EAAA,uBAAAA,EAAA,sBAMzDiB,KAAK0F,YAA+B9N,IAAtBoI,KAAK7B,QAAQwH,MAAqB3F,KAAK7B,QAAQwH,KAC7D3F,KAAK4F,mBACD5F,KAAK7B,QAAQ0H,QACf7F,KAAK7B,QAAQ0H,OAAOtH,YAAYyB,KAAK8F,eAEzC,CAxBF,IAAAtG,EAAAE,EAAA3J,EA0HGgQ,EAaA,OAvIHvG,EAwBGiG,EAxBH/F,EAwBG,EAAAxL,IAAA,eAAAE,MAED,WACE,OAAO4L,KAAKgG,UACd,GAAC,CAAA9R,IAAA,OAAAE,MAED,YAEI4L,KAAKiG,UACHjG,KAAKiG,SAASzH,WAAawB,KAAKiG,SAASzH,YAAcgH,GAEzDxF,KAAKkG,iBAGHlG,KAAKmG,UACPnG,KAAKmG,QAAQ3H,UAAYwB,KAAKoG,qBAAqB,sBAErDpG,KAAK0F,QAAS,CAChB,GAAC,CAAAxR,IAAA,QAAAE,MAED,WACE4L,KAAKqG,gBACDrG,KAAKmG,UACPnG,KAAKmG,QAAQ3H,UAAYwB,KAAKoG,qBAAqB,wBAErDpG,KAAK0F,QAAS,CAChB,GAAC,CAAAxR,IAAA,SAAAE,MAED,WACM4L,KAAK0F,OACP1F,KAAKsG,QAELtG,KAAK2F,MAET,GAAC,CAAAzR,IAAA,uBAAAE,MAED,SAA6BmS,GAC3B,MAAO,wFAAPpT,OAGcoT,EAAI,sCAIpB,GAAC,CAAArS,IAAA,mBAAAE,MAED,WAEE,GADA4L,KAAKgG,WAAWxH,UAAY,GACxBwB,KAAK7B,QAAQqI,MAAO,CACtB,IAAMC,EAASzG,KAAK0G,gBACpB1G,KAAKgG,WAAWzH,YAAYkI,EAC9B,CACA,IAAME,EAAUzV,SAASgM,cAAc,OACvCyJ,EAAQnI,UAAYgH,EACpBmB,EAAQvG,UAAY,gBACpBJ,KAAKiG,SAAWU,EAChB3G,KAAKgG,WAAWzH,YAAYoI,GAExB3G,KAAK0F,OACP1F,KAAK2F,OAEL3F,KAAKsG,OAET,GAAC,CAAApS,IAAA,gBAAAE,MAED,WAAwB,IAAA0Q,EAAA,KAChB2B,EAASvV,SAASgM,cAAc,OACtCuJ,EAAOrG,UAAY,+BAEnB,IAAMwG,EAAY1V,SAASgM,cAAc,OACzC0J,EAAUxG,UAAY,aAEtB,IAAMoG,EAAQtV,SAASgM,cAAc,OACrCsJ,EAAMpG,UAAY,iCAClBoG,EAAMhI,UAAYwB,KAAK7B,QAAQqI,OAAS,GACxCI,EAAUrI,YAAYiI,GAEtB,IAAMK,EAAa3V,SAASgM,cAAc,OAC1C2J,EAAWzG,UAAY,cACvB,IAAMlO,EAAShB,SAASgM,cAAc,OAYtC,OAXAhL,EAAOkO,UAAY,kCACnByG,EAAWtI,YAAYrM,GAEvBA,EAAO4U,QAAU,WACfhC,EAAK5S,QACP,EACA8N,KAAKmG,QAAUjU,EAEfuU,EAAOlI,YAAYqI,GACnBH,EAAOlI,YAAYsI,GAEZJ,CACT,GAAC,CAAAvS,IAAA,gBAAAE,MAED,WACM4L,KAAKiG,WACPjG,KAAKiG,SAASzH,UAAY,GAE9B,GAAC,CAAAtK,IAAA,iBAAAE,OA1HH2B,EA0HGrC,IAAAyG,MAED,SAAAuC,IAAA,IAAAqK,EAAA,OAAArT,IAAAwB,MAAA,SAAA+H,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAvE,MAAA,OACuB,GAArBsH,KAAKqG,iBACDrG,KAAKiG,SAAU,CAAFhJ,EAAAvE,KAAA,YAEmB,mBAAzBsH,KAAK7B,QAAQwI,QAAsB,CAAA1J,EAAAvE,KAAA,eAAAuE,EAAAvE,KAAA,EAChCsH,KAAK7B,QAAQwI,UAAS,OAAA1J,EAAA+G,GAAA/G,EAAAhF,KAAAgF,EAAAvE,KAAA,eAAAuE,EAAA+G,GAC5BhE,KAAK7B,QAAQwI,QAAO,OAHpBI,EAAI9J,EAAA+G,GAKVhE,KAAKiG,SAAS1H,YAAYwI,GAAM,eAAA9J,EAAA7E,OAAA,SAE3B4H,KAAKiG,UAAQ,yBAAAhJ,EAAA/B,OAAA,GAAAwB,EAAA,SAZrBqJ,EA1HH,eAAA1Q,EAAA,KAAAoJ,EAAAhC,UAAA,WAAAjC,SAAA,SAAAxD,EAAAC,GAAA,IAAAiF,EAAAnG,EAAAyG,MAAAnH,EAAAoJ,GAAA,SAAAtC,EAAA/H,GAAA6H,EAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,OAAAhI,EAAA,UAAAgI,EAAAnH,GAAAgH,EAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,QAAAnH,EAAA,CAAAkH,OAAAvE,EAAA,KAuIG,kBAAAmO,EAAAvJ,MAAA,KAAAC,UAAA,KAvIHiD,GAAAf,EAAAa,EAAAlO,UAAAoO,GAAA7L,OAAAG,eAAAwL,EAAA,aAAAxK,UAAA,IAuIGyQ,CAAA,CA3H0B,gsBCTtB,IAAMuB,EAAc,WAGzB,SAAAA,EAAYC,0GAAsBxH,CAAA,KAAAuH,KAAA,8HAChC,IAAME,EAAYlH,KAAKmH,gBAAgBF,GACnCC,IACFlH,KAAKgG,WAAakB,EAEtB,SA+DC,SA/DAF,KAAA,EAAA9S,IAAA,eAAAE,MAED,WACE,OAAO4L,KAAKgG,UACd,GAAC,CAAA9R,IAAA,oBAAAE,MAED,SAA0BgT,GAAyB,IAAAtC,EAAA,KAC3ChE,EAAO5P,SAASgM,cAAc,OAUpC,OATA4D,EAAKV,UAAY,gCACjBgH,EAAOzV,SAAQ,SAACmM,GACd,GAAIA,EAAE8D,KAAM,CACV,IAAMA,EAAOkD,EAAKqC,gBAAgBrJ,GAC9B8D,GACFd,EAAKvC,YAAYqD,EAErB,CACF,IACOd,CACT,GAAC,CAAA5M,IAAA,kBAAAE,MAED,SAAwB6S,GACtB,IAAMrF,EAA8BqF,EAAMrF,KAC1C,IAAKA,EACH,OAAO,EAET,IAAMd,EAAO5P,SAASgM,cAAc,OAEpC,GADA4D,EAAKV,UAAY,uBACbwB,EAAKa,aAAc,CACrB,IAAMzD,EAAQ9N,SAASgM,cAAc,SACrC8B,EAAMqI,aAAa,OAAQ,YAE3B,IAAMC,EAAaL,EAAM9J,WAAWiF,SAClC,cAEFpD,EAAMuI,UAAYD,EAAW1C,MAEzB0C,IACFA,EAAWE,QAAQC,GAAG,UAAU,SAACC,GAC/B1I,EAAMuI,QAAUG,EAAGtT,KACrB,IACA4K,EAAM8H,QAAU,WACdQ,EAAWK,IAAI3I,EAAMuI,QAAS,CAC5BK,YAAaC,EAAAA,GAAAA,KAAAA,QAAoB,SAErC,GAGF,IAAM3N,EAAOhJ,SAASgM,cAAc,QACpChD,EAAKsE,UAAYoD,EAAKa,aAEtB3B,EAAKvC,YAAYS,GACjB8B,EAAKvC,YAAYrE,EACnB,CAEA,GACqB,UAAnB0H,EAAKkG,WACe,SAAnBlG,EAAKkG,WAAwBlG,EAAKmG,SAASrW,OAC5C,CACA,IAAMqW,EAAWd,EAAMe,KAAKC,cACtBC,EAAalI,KAAKmI,kBAAkBJ,EAASlN,WACnDiG,EAAKvC,YAAY2J,EACnB,CACA,OAAOpH,CACT,0EAACkG,CAAA,CAvEwB,kzBCIpB,IAAMoB,EAAiB,WAK5B,SAAAA,EAAoBjK,GAAmC,IAAA2G,EAAA,kGAAArF,CAAA,KAAA2I,GAAA,KAAnCjK,QAAAA,EAAiCY,EAAA,sBAAAA,EAAA,0BAAAA,EAAA,kCACnDiB,KAAKD,OAAS5B,EAAQ4B,OACtBC,KAAKgG,WAAahG,KAAKqI,mBACvBrI,KAAKD,OAAOyH,QAAQC,GAAG,aAAa,SAACxD,GAC/Ba,EAAK/E,OAAOuI,YAAYrE,IAC1Ba,EAAKyD,yBAET,GACF,SAqEC,SArEAH,KAAA,EAAAlU,IAAA,eAAAE,MAED,WACE,OAAO4L,KAAKgG,UACd,GAAC,CAAA9R,IAAA,mBAAAE,MAED,WACE,IAAM8S,EAAYhW,SAASgM,cAAc,OACzCgK,EAAU9G,UAAY,sDAEtB,IAAMoI,EAAWtX,SAASgM,cAAc,OAKxC,OAJAsL,EAASpI,UAAY,gCACrBJ,KAAKyI,mBAAqBD,EAC1BtB,EAAU3I,YAAYiK,GACtBxI,KAAKuI,0BACErB,CACT,GAAC,CAAAhT,IAAA,0BAAAE,MAED,WAAkC,IAAAsU,EAAA,KAC5B1I,KAAKyI,qBACPzI,KAAKyI,mBAAmBjK,UAAY,IAGtCwB,KAAK2I,qBACL3I,KAAKD,OAAO6I,gBAAgBjX,SAAQ,SAACmM,GACnC,IAAMmJ,EAAQyB,EAAK3I,OAAO8I,SAAS/K,GAC/BmJ,GACFyB,EAAKC,mBAAmB1B,EAE5B,GACF,GAAC,CAAA/S,IAAA,qBAAAE,MAED,SAA2B0U,GAAwB,IAAAC,EAAA,KAC3CC,EAAU9X,SAASgM,cAAc,OACvC8L,EAAQ5I,UAAY,UACpB,IAAMU,EAAO5P,SAASgM,cAAc,SACpC4D,EAAKV,UAAY,gCAEjB,IAAMpB,EAAQ9N,SAASgM,cAAc,SACrC8B,EAAMqI,aAAa,OAAQ,SAC3BrI,EAAMqI,aAAa,OAAQ,WAE3BrI,EAAMuI,UAAYuB,GAAW9I,KAAKD,OAAOkJ,eAAeH,GAKxD9J,EAAM8H,QAAU,WACd,GAAIgC,GAAWA,EAAQjI,GACrBkI,EAAKhJ,OAAOmJ,YAAYJ,EAAQjI,GAAI7B,EAAMuI,aACrC,CACL,IAAM4B,EAAkBJ,EAAKhJ,OAAOqJ,qBAChCD,GACFJ,EAAKhJ,OAAOsJ,UAAUF,EAE1B,CACF,EACA,IACMtP,EADYiP,IAAYA,EAAQ5O,MAAQ4O,EAAQ3K,QAAQjE,OAC7B,QAC3BA,EAAOhJ,SAASoY,eAAezP,GAErCiH,EAAKvC,YAAYS,GAEjB8B,EAAKvC,YAAYrE,GAEjB8O,EAAQzK,YAAYuC,GAChBd,KAAKyI,oBACPzI,KAAKyI,mBAAmBlK,YAAYyK,EAExC,0EAACZ,CAAA,CAlF2B,20BCKvB,IAAMmB,GAAkB,WAI7B,SAAAA,EAAoBpL,gGAAoCsB,CAAA,KAAA8J,GAAA,KAApCpL,QAAAA,EAAkCY,EAAA,sBAAAA,EAAA,0BACpDiB,KAAKD,OAAS5B,EAAQ4B,OACtBC,KAAKgG,WAAahG,KAAKqI,kBACzB,SAyDC,SAzDAkB,IAAA,EAAArV,IAAA,eAAAE,MAED,WACE,OAAO4L,KAAKgG,UACd,GAAC,CAAA9R,IAAA,mBAAAE,MAED,WAAgC,IAAA0Q,EAAA,KACxBoC,EAAYhW,SAASgM,cAAc,OACzCgK,EAAU9G,UAAY,gDAEtB,IAAMoJ,EAAqBtY,SAASgM,cAAc,OA4BlD,OA3BAsM,EAAmBpJ,UAAY,iCAC/BJ,KAAK7B,QAAQsL,UAAU9X,SAAQ,SAAC6Q,GAC9BsC,EAAK/E,OAAO4E,UACTC,IAAI,gBAAiB,KAAM,CAAE/D,GAAI2B,EAAE3B,KACnCtN,MAAK,SAACmW,GACL,GAAIA,EAASzH,cAAe,CAC1B,IAAM0H,EAAaD,EAASzH,cAAcC,OAAO0H,MAC/C,SAAC9L,GAAC,OAAKA,EAAE+L,WAAW,IAElBF,GACF7E,EAAK/E,OACF+J,mBAAsC,CAAE7J,WAAYuC,EAAE3B,KACtDtN,MAAK,SAACwW,GACLA,EAAMpY,SAAQ,SAACmM,GACb,IAAMgD,EAAOgE,EAAKkF,oBAChBlM,EACA6L,EAAWtH,SAEb6E,EAAU3I,YAAYuC,EACxB,GACF,GAEN,CACF,GACJ,IACAoG,EAAU3I,YAAYiL,GAEftC,CACT,GAAC,CAAAhT,IAAA,sBAAAE,MAED,SACE6V,GAEa,IAAAvB,EAAA,KADbwB,EAAkBzN,UAAA/K,OAAA,QAAAkG,IAAA6E,UAAA,GAAAA,UAAA,GAAG,OAEfqE,EAAO5P,SAASgM,cAAc,OACpC4D,EAAKV,UAAY,gCACjB,IAAM+J,EAAgBjZ,SAASgM,cAAc,OACvCkN,EAAYH,EAAS/H,OAAOgI,GAQlC,OAPAC,EAAc3L,UAAY1L,OAAOsX,GACjCD,EAAcrD,QAAU,WACtB,IAAMuD,EAAU,IAAIC,EAAAA,QAAQL,EAASM,MAC/BC,EAAO9B,EAAK3I,OAAO0K,WAAWjN,IACpCgN,GAAQA,EAAKE,UAAUL,EAAQM,YACjC,EACA7J,EAAKvC,YAAY4L,GACVrJ,CACT,2EAACyI,CAAA,CAhE4B,GCXxB,SAASqB,GAAWC,GAAkD,IAAxCvM,EAAc7B,UAAA/K,OAAA,QAAAkG,IAAA6E,UAAA,GAAAA,UAAA,GAAG,KAC9CgB,EAAIoN,EAAG5M,UACb,MAAgB,MAATK,EAAeb,EAAI,IAAOoN,EAAG9X,aACtC,+CCFO,SAAS+X,GAAgBC,EAAcC,GAC5C,IAAMC,EAAMD,EAAKA,EAAG/M,UAAYF,KAAKmN,MAErC,MAAO,CADMD,EAAqB,IAAfrK,OAAOmK,GAAe,GAAK,GAChCE,GAAKzN,KAAI,SAACM,GAAC,OAAK,IAAIC,KAAKD,EAAE,GAC3C,CAgBO,SAASqN,GACdJ,EACA9D,EACA+D,GAEA,IAAAI,EAAgCnE,EAAMrI,MAA9ByM,EAAQD,EAARC,SAAUC,EAASF,EAATE,UACZC,EApBD,SACLR,GAGoC,IAFpCzM,EAAc7B,UAAA/K,OAAA,QAAAkG,IAAA6E,UAAA,GAAAA,UAAA,GAAG,IAGjB,OAAOqO,GAAgBC,EAFdtO,UAAA/K,OAAA,EAAA+K,UAAA,QAAA7E,GAEwB4F,KAAI,SAACM,GAAC,MAC5B,QAATQ,EACI,IAAIP,KAAKD,GAAG/K,cACH,MAATuL,EACAkN,KAAKC,KAAK3N,EAAEG,WAAa,IACzBH,EAAEG,SAAS,GAEnB,CAQgByN,CAAsBX,EAAMM,EAAUL,GACpD,OAAOO,EAAM/N,KAAI,SAACM,EAAGnE,GAAC,MAAK,CAAC2R,EAAW3R,EAAI,KAAO,KAAMmE,EAAE,GAC5D,o+DCjBO,IAAM6N,GAAe,WAM1B,SAAAA,EAAsBxN,gGAAYsB,CAAA,KAAAkM,GAAA,KAAZxN,QAAAA,EAAUY,GAAA,sBAAAA,GAAA,0BAC9BiB,KAAKD,OAAS5B,EAAQ4B,OACtBC,KAAKgG,WAAahG,KAAKqI,kBACzB,SA0FC,SA1FAsD,KAAA,EAAAzX,IAAA,eAAAE,MAED,WACE,OAAO4L,KAAKgG,UACd,GAAC,CAAA9R,IAAA,mBAAAE,MAED,WACE,IAAM8S,EAAYhW,SAASgM,cAAc,OACzCgK,EAAU9G,UAAY,4CAEtB,IAAMwL,EAAU1a,SAASgM,cAAc,OACvC0O,EAAQxL,UAAY,6BAA6B,IACd8C,EADcD,+5BAAAO,CACjCxD,KAAK7B,QAAQiJ,QAAM,IAAnC,IAAAnE,EAAArF,MAAAsF,EAAAD,EAAAQ,KAAA5L,MAAqC,KAA1BqM,EAAChB,EAAA9O,MACV4L,KAAK6L,gBAAgB3H,EAAG0H,EAC1B,CAAC,OAAA3W,GAAAgO,EAAAgB,EAAAhP,EAAA,SAAAgO,EAAAiB,GAAA,CAGD,OAFAgD,EAAU3I,YAAYqN,GAEf1E,CACT,GAAC,CAAAhT,IAAA,aAAAE,MAED,SAAqByM,EAAYiL,GAA4C,IAAAhH,EAAA,KACrE/E,EAASC,KAAK7B,QAAQ4B,OACtBkH,EAAQlH,GAAWA,EAAO8I,SAAShI,GACzC,GAAIoG,EACF6E,EAAG7E,OACE,CAOLjH,KAAKD,OAAOyH,QAAQC,GAAG,aANJ,SAAbsE,EAAc9H,GACdA,EAAEpD,KAAOA,IACXiL,EAAG7H,GACHa,EAAK/E,OAAOyH,QAAQwE,IAAI,YAAaD,GAEzC,GAEF,CACF,GAAC,CAAA7X,IAAA,kBAAAE,MAED,SAAwB6X,EAAoB/E,GAA8B,IAAAwB,EAAA,KAClE5H,EAAO5P,SAASgM,cAAc,OACpC4D,EAAKV,UAAY,uBACjB,IAAMS,EAAKoL,EAAKpL,GAChB,IAAKqL,EAAAA,GAAAA,GAAQrL,GAAb,CAEA,IAAMsL,EAAUjb,SAASgM,cAAc,OACvCiP,EAAQ3N,UAAY,cACpB0I,EAAU3I,YAAY4N,GA4BtBnM,KAAK+L,WAAWlL,GAAI,SAACoG,GAAK,OA1BP,SAACmF,GAClB,IAAMxK,EAAOwK,EAAOxK,KAEpB,GADAuK,EAAQ3N,UAAY,GAChBoD,EAAM,CACR,IAAM5C,EAAQ9N,SAASgM,cAAc,SACrC8B,EAAMqI,aAAa,OAAQ,YAE3BrI,EAAMuI,SAAU,EAKhBvI,EAAM8H,QAAU,WACd4B,EAAK3I,OAAOmJ,YAAYrI,EAAI7B,EAAMuI,QACpC,EAEA,IAAMrN,EAAOhJ,SAASgM,cAAc,QAC9BrD,EAAc+H,EAAK8H,SAASjH,aAAa4J,MAAM,MAAM,GAC3DnS,EAAKsE,UAAY3E,EAAYyI,QAAQ,QAAS,IAAIgK,OAClD,IAAMC,EAAS7D,EAAK8D,cAAcP,GAClCnL,EAAKvC,YAAYS,GACjB8B,EAAKvC,YAAYgO,GACjBzL,EAAKvC,YAAYrE,GACjBiS,EAAQ5N,YAAYuC,EACtB,CACF,CAC+B2L,CAAWxF,EAAM,GAhCxB,CAiC1B,GAAC,CAAA/S,IAAA,gBAAAE,MAED,SAAsB6X,GAAiC,IAAAS,EAC/CH,EAASrb,SAASgM,cAAc,QAEtC,GADAqP,EAAOnM,UAAY,cACI,QAAvBsM,EAAIT,EAAKU,sBAAc,IAAAD,GAAnBA,EAAqBE,MAAO,KAAAC,EAC9Bza,EAA0D,QAA1Dya,EAAuCZ,EAAKU,sBAAc,IAAAE,OAAA,EAAnBA,EACnCD,MADIE,EAAK1a,EAAL0a,MAAOC,EAAM3a,EAAN2a,OAAQC,EAAW5a,EAAX4a,YAEF,iBAAVF,IACTP,EAAO7I,MAAMoJ,MAAQA,EACrBP,EAAO7I,MAAMuJ,gBAAkBH,GAE7BC,GAAiC,iBAAhBC,IACnBT,EAAO7I,MAAMwJ,YAAcF,EAE/B,CACA,OAAOT,CACT,2EAACZ,CAAA,CAnGyB,+xECErB,IAAMwB,GAAc,SAAAC,0RAAAC,CAAAF,EAAAC,GAAA,YAAAE,KAAAH,0rBAAA,SAAAA,IAAA,mGAAA1N,CAAA,KAAA0N,GAAAG,EAAA9Q,MAAA,KAAAC,UAAA,CA+ExB,SA/EwB0Q,KAAA,EAAAjZ,IAAA,mBAAAE,MACzB,WACE,IAAM8S,EAASqG,GAAAC,GAAAL,EAAA7b,WAAA,yBAAAE,KAAA,MAETic,EAAkBzN,KAAK0N,kBAE7B,OADAxG,EAAUyG,aAAaF,EAAiBvG,EAAU0G,YAC3C1G,CACT,GAAC,CAAAhT,IAAA,kBAAAE,MAED,WAAuC,IAAA0Q,EAAA,KAC/B2I,EAAkBvc,SAASgM,cAAc,OACzC2Q,EAAQ7N,KAAK7B,QAAQiJ,OAErB0G,EAAuC,GAmB7C,OAlBAD,EAAMlc,SAAQ,SAACmM,GACb,IAAM+C,EAAK/C,EAAE+C,GACb,GAAIA,EAAI,CACN,IAAMkN,EAAU,IAAIvT,SAAyB,SAACxD,GAC5C8N,EAAKiH,WAAWlL,EAAI7J,EACtB,IACA8W,EAAS1U,KAAK2U,EAChB,CACF,IACAvT,QAAQwT,IAAIF,GAAUva,MAAK,SAACsa,GAC1B,IAAMI,EAAQnJ,EAAKoJ,oBACjBL,EACA/I,EAAK3G,QAAQgQ,UACbrJ,EAAK3G,QAAQiQ,kBAEfX,EAAgBlP,YAAY0P,EAC9B,IAEOR,CACT,GAAC,CAAAvZ,IAAA,sBAAAE,MAED,SACEgT,EACAiH,EACAC,GACA,IAAA5F,EAAA,KACA6F,EAAAC,GAAyCH,EAAY,GAA9CI,EAAGF,EAAA,GAAEG,EAAGH,EAAA,GACfI,EAAAH,GAAmDF,EAAY,GAAxDM,EAASD,EAAA,GAAEE,EAAOF,EAAA,GACnBG,EAA6B,CACjCC,UAAW/O,KAAK7B,QAAQ4Q,UACxBC,SAAU,SAAC/K,GAAM,IACOf,EADPD,kmBAAAO,CACC4D,GAAM,IAAtB,IAAAnE,EAAArF,MAAAsF,EAAAD,EAAAQ,KAAA5L,MAAwB,KAAboX,EAAC/L,EAAA9O,MACVhC,EAAiC6c,EAAE9Q,QAAQS,OACzC,CAAC,EADK0M,EAASlZ,EAATkZ,UAAWD,EAAQjZ,EAARiZ,SAEnB,GAAIC,EAAW,CACb,IAAM3N,EAA2B,GAC7BsG,EAAEzR,OACJmL,EAAOvE,KAAK,CAACkS,EAAW,KAAMV,GAAW3G,EAAEzR,MAAO6Y,KAEhDpH,EAAExR,KACJkL,EAAOvE,KAAK,CAACkS,EAAW,KAAMV,GAAW3G,EAAExR,IAAK4Y,KAE9C4D,EAAEC,kBACJD,EAAEC,iBAAiBvR,EAEvB,CACF,CAAC,OAAA1I,GAAAgO,EAAAgB,EAAAhP,EAAA,SAAAgO,EAAAiB,GAAA,CACGwE,EAAKvK,QAAQgR,cACfzG,EAAKvK,QAAQgR,cAEjB,GAcF,OAZIV,IACFK,EAAIM,QAAUX,GAEZG,IACFE,EAAIF,UAAYA,GAEdF,IACFI,EAAIO,QAAUX,GAEZG,IACFC,EAAID,QAAUA,GC5Eb,SAAwB1Q,GAC7B,IAAQ6Q,EAA8D7Q,EAA9D6Q,SAAUK,EAAoDlR,EAApDkR,QAASD,EAA2CjR,EAA3CiR,QAASR,EAAkCzQ,EAAlCyQ,UAAWC,EAAuB1Q,EAAvB0Q,QAASE,EAAc5Q,EAAd4Q,UAClDhI,EAAO7V,SAASgM,cAAc,OACpC6J,EAAK3G,UAAY,sBACjB2G,EAAKvI,UAAY,uUAAHrL,OAUNmc,EAAAA,GAAAA,KAAsB,SAACxR,GACvB,MAAO,WAAP3K,OAAkB4b,IAAcjR,EAAE,GAAK,WAAa,GAAE,WAAA3K,OACpD2K,EAAE,GAAE,KAAA3K,OACF2K,EAAE,GAAE,YACV,IAAE,2HAUR,IAAMyR,EAASxI,EAAKyI,cAAc,iBAC5BC,EAAY1I,EAAKyI,cAAc,qBAC/BE,EAAmB3I,EAAKyI,cAC5B,mBAEIG,EAAkB5I,EAAKyI,cAC3B,kBAEII,EAAQ,IAAI7R,KAEZ8R,GAAiBC,EAAAA,GAAAA,IAAS,SAACC,GAC3BA,EAAKvd,OAASud,EAAKtd,KACrBuc,EAASe,EAEb,IAEMC,EAAcpB,GAAaC,EAAU,CAACD,EAAWC,QAAWjX,EAE5DqY,GAAaC,EAAAA,GAAAA,GAAUT,EAAW,CACtCU,KAAM,QACNC,OAAQC,GAAAA,QACRC,YAAY,EACZjB,QAASA,GAAWO,EACpBR,QAAAA,EACAY,YAAAA,EAEAhB,SAAU,SAAA5c,GAAkB,IAAAmO,EAAAiO,GAAApc,EAAA,GAAhBI,EAAK+N,EAAA,GAAE9N,EAAG8N,EAAA,GACpBgP,EAAOnb,MAAQ,GACfmc,IACAV,EAAe,CAAErd,MAAAA,EAAOC,IAAAA,GAC1B,IAEI8d,EAAwB,WAC5Bb,EAAiBhM,MAAM8M,QACrB5P,OAAO2O,EAAOnb,SAAW2a,EAAY,OAAS,OAClD,EACAwB,IAEA,IAAME,EAAW,SAAC9V,GAChB4V,IACA,IAAkDG,EAAAlC,GAA7B1D,GAAgBnQ,EAAKkU,GAAQ,GAA3Crc,EAAKke,EAAA,GAAEje,EAAGie,EAAA,GACjBT,EAAWU,QAAQ,CAACne,EAAOC,IAC3Bod,EAAe,CAAErd,MAAAA,EAAOC,IAAAA,GAC1B,EAqBA,OApBAkd,EAAgB7I,QAAU,SAAC7C,GACzBA,EAAE2M,kBACF3M,EAAE4M,iBACFZ,EAAWa,OAASb,EAAW3J,QAAU2J,EAAWtK,MACtD,EACA+J,EAAiB5I,QAAU,WACzByI,EAAOnb,MAAQtB,OAAOic,GACtB0B,EAAS1B,EACX,EAEAQ,EAAOwB,SAAW,WAChBR,IACAE,EAAS7P,OAAO2O,EAAOnb,OACzB,EAOO2S,CACT,CDfWiK,CAAelC,EACxB,2EAAC3B,CAAA,CA/EwB,CAASxB,ovEET7B,SAASsF,GAAsB7e,GAMY,IALhDuS,EAASvS,EAATuS,UACAsC,EAAK7U,EAAL6U,MAKMyC,EAAWzC,EAAMyC,SACvB,GAAIzC,GAASyC,GAAY/E,EAAW,KAAAuM,EAAAC,EAC5B7F,GAAgC,QAApB4F,EAAAjK,EAAM0F,sBAAc,IAAAuE,GAAO,QAAPC,EAApBD,EAAsBtS,aAAK,IAAAuS,OAAP,EAApBA,EAA6B7F,YAAa,UAC5D,OAAO3G,EAAUyM,oBAAoB1H,GAAUnW,MAAK,SAAC0M,GACnD,IAAMoR,EAAsC,CAC1CpR,WAAAA,EACAiC,OAAQ,CAACoJ,GACTf,MAAM,EACN5F,UAAAA,EACA2M,MAAO,GAEHC,EAAkB,EACtBzH,EAAAA,GAAAA,GAAkB0H,GAAAA,GAAC,CAAC,EAAIH,GAAa,IAAEI,QAAS,CAACnG,OAGnD,OAAO9Q,QAAQwT,IAAIuD,GAAiBhe,MAAK,SAAAgN,GAAwB,IAAAQ,EAAAyN,GAAAjO,EAAA,GAY/D,MAAO,CAFLiO,GATY,CADkCzN,EAAA,GAASA,EAAA,IACxBvD,KAAI,SAACuM,GACpC,IAiBYc,EAjBNjJ,EAAOmI,GAASA,EAAM,GAC5B,GAAInI,EAAM,CACR,IAAM8P,EAAU9P,EAAKM,OAAOoJ,GAC5B,GAAIoG,EACF,OAaQ7G,EAbY6G,EAczB,IAAI3T,KAAK8M,EAAG3J,KAAM2J,EAAG5J,MAAQ,EAAG4J,EAAG7J,IAZlC,CAEF,IAAE,GATQ,GAUE2Q,EAAAA,GAEd,GACF,GACF,CACA,OAAOnX,QAAQxD,QAAQ,MAACY,OAAWA,GACrC,wPC7CAlE,GAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAvC,UAAAwC,EAAAF,EAAAG,eAAAC,EAAAH,OAAAG,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAP,OAAAG,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,EAAA,KAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,CAAA,WAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAA9D,qBAAAkE,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAjE,WAAAqE,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAvE,KAAAyC,EAAA+B,GAAA,OAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAE,EAAAtC,KAAAgF,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAA9E,UAAAkE,EAAAlE,UAAAuC,OAAA6B,OAAAW,GAAA,SAAAM,EAAArF,GAAA,0BAAAK,SAAA,SAAA2B,GAAAuB,EAAAvD,EAAAgC,GAAA,SAAA0C,GAAA,YAAAY,QAAAtD,EAAA0C,EAAA,gBAAAa,EAAApB,EAAAqB,GAAA,SAAAC,EAAAzD,EAAA0C,EAAAgB,EAAAC,GAAA,IAAAC,EAAApB,EAAAL,EAAAnC,GAAAmC,EAAAO,GAAA,aAAAkB,EAAAjB,KAAA,KAAAkB,EAAAD,EAAAlB,IAAA5B,EAAA+C,EAAA/C,MAAA,OAAAA,GAAA,UAAAgD,GAAAhD,IAAAN,EAAAtC,KAAA4C,EAAA,WAAA0C,EAAAE,QAAA5C,EAAAiD,SAAA9D,MAAA,SAAAa,GAAA2C,EAAA,OAAA3C,EAAA4C,EAAAC,EAAA,aAAAhC,GAAA8B,EAAA,QAAA9B,EAAA+B,EAAAC,EAAA,IAAAH,EAAAE,QAAA5C,GAAAb,MAAA,SAAA+D,GAAAH,EAAA/C,MAAAkD,EAAAN,EAAAG,EAAA,aAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,IAAAA,EAAAC,EAAAlB,IAAA,KAAAwB,EAAAxD,EAAA,gBAAAI,MAAA,SAAAd,EAAA0C,GAAA,SAAAyB,IAAA,WAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAzD,EAAA0C,EAAAgB,EAAAC,EAAA,WAAAO,EAAAA,EAAAA,EAAAjE,KAAAkE,EAAAA,GAAAA,GAAA,aAAA5B,EAAAV,EAAAE,EAAAM,GAAA,IAAA+B,EAAA,iCAAApE,EAAA0C,GAAA,iBAAA0B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAApE,EAAA,MAAA0C,EAAA,OAAA5B,WAAAwD,EAAAC,MAAA,OAAAlC,EAAArC,OAAAA,EAAAqC,EAAAK,IAAAA,IAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,CAAA,cAAApC,EAAArC,OAAAqC,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAArC,OAAA,uBAAAoE,EAAA,MAAAA,EAAA,YAAA/B,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,IAAA,gBAAAL,EAAArC,QAAAqC,EAAAyC,OAAA,SAAAzC,EAAAK,KAAA0B,EAAA,gBAAAR,EAAApB,EAAAX,EAAAE,EAAAM,GAAA,cAAAuB,EAAAjB,KAAA,IAAAyB,EAAA/B,EAAAkC,KAAA,6BAAAX,EAAAlB,MAAAE,EAAA,gBAAA9B,MAAA8C,EAAAlB,IAAA6B,KAAAlC,EAAAkC,KAAA,WAAAX,EAAAjB,OAAAyB,EAAA,YAAA/B,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAA,YAAAgC,EAAAF,EAAAnC,GAAA,IAAA0C,EAAA1C,EAAArC,OAAAA,EAAAwE,EAAAtD,SAAA6D,GAAA,QAAAT,IAAAtE,EAAA,OAAAqC,EAAAmC,SAAA,eAAAO,GAAAP,EAAAtD,SAAA8D,SAAA3C,EAAArC,OAAA,SAAAqC,EAAAK,SAAA4B,EAAAI,EAAAF,EAAAnC,GAAA,UAAAA,EAAArC,SAAA,WAAA+E,IAAA1C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAAF,EAAA,aAAAnC,EAAA,IAAAgB,EAAApB,EAAAxC,EAAAwE,EAAAtD,SAAAmB,EAAAK,KAAA,aAAAkB,EAAAjB,KAAA,OAAAN,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAsC,EAAAtB,EAAAlB,IAAA,OAAAwC,EAAAA,EAAAX,MAAAlC,EAAAmC,EAAAW,YAAAD,EAAApE,MAAAuB,EAAA+C,KAAAZ,EAAAa,QAAA,WAAAhD,EAAArC,SAAAqC,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,GAAAjC,EAAAmC,SAAA,KAAA5B,GAAAsC,GAAA7C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAA5C,EAAAmC,SAAA,KAAA5B,EAAA,UAAA0C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA5B,EAAA4B,EAAAQ,YAAA,GAAApC,EAAAjB,KAAA,gBAAAiB,EAAAlB,IAAA8C,EAAAQ,WAAApC,CAAA,UAAAtB,EAAAN,GAAA,KAAA6D,WAAA,EAAAJ,OAAA,SAAAzD,EAAA3D,QAAAiH,EAAA,WAAAW,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAjI,KAAAgI,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAA9H,QAAA,KAAAiI,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAA9H,QAAA,GAAAoC,EAAAtC,KAAAgI,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAAtE,WAAAwD,EAAAc,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAxF,WAAAwD,EAAAC,MAAA,UAAA1B,EAAA7E,UAAA8E,EAAApC,EAAA0C,EAAA,eAAAtC,MAAAgC,EAAArB,cAAA,IAAAf,EAAAoC,EAAA,eAAAhC,MAAA+B,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAmG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,MAAA,EAAAvG,EAAAwG,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAAzI,UAAAuC,OAAA6B,OAAAgB,GAAAqD,CAAA,EAAApG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAqB,QAAArB,EAAA,EAAAW,EAAAE,EAAAvF,WAAAuD,EAAAgC,EAAAvF,UAAAmD,GAAA,0BAAAd,EAAAkD,cAAAA,EAAAlD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAwB,QAAA,IAAAA,IAAAA,EAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA3B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAwB,GAAA,OAAAnD,EAAAmG,oBAAA1E,GAAAqF,EAAAA,EAAA/B,OAAAnF,MAAA,SAAA4D,GAAA,OAAAA,EAAAU,KAAAV,EAAA/C,MAAAqG,EAAA/B,MAAA,KAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAxG,KAAA0G,EAAAF,EAAAtB,KAAAlF,GAAA,OAAAwG,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAhJ,QAAA,KAAAwC,EAAAwG,EAAAI,MAAA,GAAA5G,KAAA0G,EAAA,OAAAlC,EAAAtE,MAAAF,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAA/E,EAAA8C,OAAAA,EAAAb,EAAAtE,UAAA,CAAA2I,YAAArE,EAAA2D,MAAA,SAAAwB,GAAA,QAAAC,KAAA,OAAAtC,KAAA,OAAAT,KAAA,KAAAC,WAAAN,EAAA,KAAAC,MAAA,OAAAC,SAAA,UAAAxE,OAAA,YAAA0C,SAAA4B,EAAA,KAAAuB,WAAAxH,QAAA0H,IAAA0B,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAAnH,EAAAtC,KAAA,KAAA0I,KAAAR,OAAAQ,EAAA3I,MAAA,WAAA2I,QAAAtC,EAAA,EAAAsD,KAAA,gBAAArD,MAAA,MAAAsD,EAAA,KAAAhC,WAAA,GAAAG,WAAA,aAAA6B,EAAAlF,KAAA,MAAAkF,EAAAnF,IAAA,YAAAoF,IAAA,EAAAjD,kBAAA,SAAAkD,GAAA,QAAAxD,KAAA,MAAAwD,EAAA,IAAA1F,EAAA,cAAA2F,EAAAC,EAAAC,GAAA,OAAAtE,EAAAjB,KAAA,QAAAiB,EAAAlB,IAAAqF,EAAA1F,EAAA+C,KAAA6C,EAAAC,IAAA7F,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,KAAA4D,CAAA,SAAA7B,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAzC,EAAA4B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA,KAAAiC,KAAA,KAAAS,EAAA3H,EAAAtC,KAAAsH,EAAA,YAAA4C,EAAA5H,EAAAtC,KAAAsH,EAAA,iBAAA2C,GAAAC,EAAA,SAAAV,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,WAAAgC,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,SAAAwC,GAAA,QAAAT,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA/D,MAAA,kDAAAqD,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,KAAAb,OAAA,SAAAnC,EAAAD,GAAA,QAAA2D,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAAiC,MAAAlH,EAAAtC,KAAAsH,EAAA,oBAAAkC,KAAAlC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA1F,GAAA,aAAAA,IAAA0F,EAAA5C,QAAA/C,GAAAA,GAAA2F,EAAA1C,aAAA0C,EAAA,UAAAzE,EAAAyE,EAAAA,EAAArC,WAAA,UAAApC,EAAAjB,KAAAA,EAAAiB,EAAAlB,IAAAA,EAAA2F,GAAA,KAAArI,OAAA,YAAAoF,KAAAiD,EAAA1C,WAAA/C,GAAA,KAAA0F,SAAA1E,EAAA,EAAA0E,SAAA,SAAA1E,EAAAgC,GAAA,aAAAhC,EAAAjB,KAAA,MAAAiB,EAAAlB,IAAA,gBAAAkB,EAAAjB,MAAA,aAAAiB,EAAAjB,KAAA,KAAAyC,KAAAxB,EAAAlB,IAAA,WAAAkB,EAAAjB,MAAA,KAAAmF,KAAA,KAAApF,IAAAkB,EAAAlB,IAAA,KAAA1C,OAAA,cAAAoF,KAAA,kBAAAxB,EAAAjB,MAAAiD,IAAA,KAAAR,KAAAQ,GAAAhD,CAAA,EAAA2F,OAAA,SAAA5C,GAAA,QAAAU,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAA2C,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA5C,CAAA,GAAA4F,MAAA,SAAA/C,GAAA,QAAAY,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAQ,WAAA,aAAApC,EAAAjB,KAAA,KAAA8F,EAAA7E,EAAAlB,IAAAqD,EAAAP,EAAA,QAAAiD,CAAA,YAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAArF,SAAA,KAAA0C,SAAA4B,GAAA1B,CAAA,GAAAvC,CAAA,UAAAsI,GAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAAlI,EAAA8B,GAAA,QAAAwC,EAAA0D,EAAAhI,GAAA8B,GAAA5B,EAAAoE,EAAApE,KAAA,OAAAmD,GAAA,YAAAN,EAAAM,EAAA,CAAAiB,EAAAX,KAAAb,EAAA5C,GAAAoG,QAAAxD,QAAA5C,GAAAb,KAAA4I,EAAAC,EAAA,UAAAsC,GAAA3I,GAAA,sBAAAV,EAAA,KAAAoJ,EAAAhC,UAAA,WAAAjC,SAAA,SAAAxD,EAAAC,GAAA,IAAAiF,EAAAnG,EAAAyG,MAAAnH,EAAAoJ,GAAA,SAAAtC,EAAA/H,GAAA6H,GAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,OAAAhI,EAAA,UAAAgI,EAAAnH,GAAAgH,GAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,QAAAnH,EAAA,CAAAkH,OAAAvE,EAAA,cAAAga,GAAAhX,EAAAiX,GAAA,IAAAnX,EAAA7G,OAAA6G,KAAAE,GAAA,GAAA/G,OAAAie,sBAAA,KAAAC,EAAAle,OAAAie,sBAAAlX,GAAAiX,IAAAE,EAAAA,EAAApU,QAAA,SAAAqU,GAAA,OAAAne,OAAAoe,yBAAArX,EAAAoX,GAAAld,UAAA,KAAA4F,EAAAtB,KAAAoD,MAAA9B,EAAAqX,EAAA,QAAArX,CAAA,UAAA8W,GAAA3f,GAAA,QAAA8H,EAAA,EAAAA,EAAA8C,UAAA/K,OAAAiI,IAAA,KAAAuY,EAAA,MAAAzV,UAAA9C,GAAA8C,UAAA9C,GAAA,GAAAA,EAAA,EAAAiY,GAAA/d,OAAAqe,IAAA,GAAAvgB,SAAA,SAAAuC,GAAA6K,GAAAlN,EAAAqC,EAAAge,EAAAhe,GAAA,IAAAL,OAAAse,0BAAAte,OAAAue,iBAAAvgB,EAAAgC,OAAAse,0BAAAD,IAAAN,GAAA/d,OAAAqe,IAAAvgB,SAAA,SAAAuC,GAAAL,OAAAG,eAAAnC,EAAAqC,EAAAL,OAAAoe,yBAAAC,EAAAhe,GAAA,WAAArC,CAAA,UAAA8M,GAAA9M,EAAA+M,GAAA,QAAAjF,EAAA,EAAAA,EAAAiF,EAAAlN,OAAAiI,IAAA,KAAAkF,EAAAD,EAAAjF,GAAAkF,EAAA/J,WAAA+J,EAAA/J,aAAA,EAAA+J,EAAA9J,cAAA,YAAA8J,IAAAA,EAAA7J,UAAA,GAAAnB,OAAAG,eAAAnC,EAAAiN,GAAAD,EAAA3K,KAAA2K,EAAA,WAAAE,GAAA9K,EAAAC,EAAAE,GAAA,OAAAF,EAAA4K,GAAA5K,MAAAD,EAAAJ,OAAAG,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAAE,EAAAH,CAAA,UAAA6K,GAAA9I,GAAA,IAAA9B,EAAA,SAAA8K,EAAAC,GAAA,cAAA7H,GAAA4H,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAA1K,OAAA6K,aAAA,QAAAvH,IAAAsH,EAAA,KAAAE,EAAAF,EAAA1N,KAAAwN,EAAAC,UAAA,cAAA7H,GAAAgI,GAAA,OAAAA,EAAA,UAAA7G,UAAA,uDAAAzF,OAAAkM,EAAA,CAAAK,CAAArJ,GAAA,iBAAAoB,GAAAlD,GAAAA,EAAApB,OAAAoB,EAAA,CAuBA,IAAMme,GAA4C,CAChDxgB,OAAQ,QAIGygB,GAAgB,WAU3B,SAAAA,EAAoBC,EAAsBpU,GAExC,GAxCJ,SAAAoB,EAAAC,GAAA,KAAAD,aAAAC,GAAA,UAAAjH,UAAA,qCAsC8EkH,CAAA,KAAA6S,GAAA,KAAxDC,UAAAA,EAAoBxT,GAAA,uBAAAA,GAAA,uBAAAA,GAAA,0BAAAA,GAAA,uBAAAA,GAAA,yBACtCiB,KAAK7B,QAAOqT,GAAAA,GAAA,GAAQa,IAAYlU,GACG,iBAAxB6B,KAAK7B,QAAQtM,OAAqB,CAC3C,IAAMA,EAASX,SAASc,eAAegO,KAAK7B,QAAQtM,QACpD,IAAIA,EAGF,MAAM,IAAI8F,MAAM,uBAADxE,OACU6M,KAAK7B,QAAQtM,OAAM,iCAH5CmO,KAAKwS,QAAU3gB,CAMnB,KAAO,MAAImO,KAAK7B,QAAQtM,kBAAkB4gB,aAGxC,MAAM,IAAI9a,MAAM,8BAFhBqI,KAAKwS,QAAUxS,KAAK7B,QAAQtM,MAG9B,CACAmO,KAAK0S,QAAU,IAAIC,IAAJ,CAAY3S,KAAKwS,QAAS,CACvCI,aAAa,EACbC,SAAU,OACVC,SAAS,IAGX9S,KAAK0S,QAAQK,MAAM/S,KAAKuS,UAAUxS,OAAO0K,WAAWjN,KAQpDwC,KAAKgT,UAAYhT,KAAK7B,QAAQ6U,UAE9BhT,KAAKgG,WAAahG,KAAKqI,mBAClBrI,KAAK7B,QAAQuH,QAChB1F,KAAKiT,OAEPjT,KAAKwS,SAAWxS,KAAKwS,QAAQjU,YAAYyB,KAAKgG,WAChD,CA3EF,IAAAxG,EAAAE,EAkMGwT,EAtCAC,EA+DA,OA3NH3T,EA2EG8S,EA3EH5S,EA2EG,EAAAxL,IAAA,OAAAE,MAED,WACE4L,KAAKgG,WAAW/T,UAAUmhB,OAAO,UACjCpT,KAAK0S,QAAQW,MACf,GAAC,CAAAnf,IAAA,OAAAE,MAED,WACE4L,KAAK0S,QAAQO,OACbjT,KAAKgG,WAAW/T,UAAUqhB,IAAI,SAChC,GAAC,CAAApf,IAAA,mBAAAE,MAED,WAAwC,IAAA0Q,EAAA,KAChCoC,EAAYhW,SAASgM,cAAc,OAwCzC,OAvCAgK,EAAU9G,UAAY,sBAEKxI,IAAvBoI,KAAK7B,QAAQ2F,QACfoD,EAAUxD,MAAMI,MAAQ9D,KAAK7B,QAAQ2F,MAAQ,OAG3C9D,KAAK7B,QAAQoV,WAAavT,KAAK7B,QAAQqV,QACzC,IAAI/N,EAAiB,CACnBe,MAAO,SACPG,QAAS,kBAAM7B,EAAK2O,uBAAuB,EAC3C5N,OAAQqB,IAGRlH,KAAK7B,QAAQuV,SACf,IAAIjO,EAAiB,CACnBe,MAAO,UACPG,QAAS,kBAAM7B,EAAK6O,wBAAwB,EAC5C9N,OAAQqB,IAGZ,IAAIzB,EAAiB,CACnBe,MAAO,eACPG,QAAS,kBAAM7B,EAAK8O,kBAAkB,EACtCjO,MAAM,EACNE,OAAQqB,IAEV,IAAIzB,EAAiB,CACnBe,MAAO,WACPG,QAAS,kBAAM7B,EAAK+O,0BAA0B,EAC9ClO,MAAM,EACNE,OAAQqB,IAEV,IAAIzB,EAAiB,CACnBe,MAAO,WACPG,QAAS,kBAAM7B,EAAKgP,2BAA2B,EAC/CnO,MAAM,EACNE,OAAQqB,IAGHA,CACT,GAAC,CAAAhT,IAAA,mBAAAE,MAED,WACE,IAAM8S,EAAYhW,SAASgM,cAAc,OAEzC,IAAK,IAAMuG,KADXyD,EAAU9G,UAAY,wBACNJ,KAAKgT,UAAW,CAC9B,IAAMe,EAAW/T,KAAKgT,UAAUvP,GAE1BuQ,EADO,IAAIhN,EAAe+M,EAAS9M,MAAMA,OACpBnB,eACvBkO,GACF9M,EAAU3I,YAAYyV,EAE1B,CACA,OAAO9M,CACT,GAAC,CAAAhT,IAAA,4BAAAE,MAED,WACE,IAAM8S,EAAYhW,SAASgM,cAAc,OACnCuM,EAAYzJ,KAAK7B,QAAQsL,UAC/B,GAAIA,EAAW,CACb,IAAMwK,EAAoB,IAAI1K,GAAmB,CAC/CE,UAAAA,EACA1J,OAAQC,KAAK7B,QAAQ4B,SAEvBmH,EAAU3I,YAAY0V,EAAkBnO,eAC1C,CACA,OAAOoB,CACT,GAAC,CAAAhT,IAAA,wBAAAE,OAAA+e,EAAAzU,GAAAhL,KAAAyG,MAED,SAAAuC,IAAA,IAAAwK,EAAAgN,EAAAV,EAAAD,EAAApF,EAAAN,EAAAkB,EAAAX,EAAA+F,EAAAzL,EAAA,YAAAhV,KAAAwB,MAAA,SAAA+H,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAvE,MAAA,OAMG,GALKwO,EAAYhW,SAASgM,cAAc,OAAMgX,EAClBlU,KAAK7B,QAA1BqV,EAAKU,EAALV,MAAOD,EAASW,EAATX,UACXpF,EAAkD,MACpDvW,OACAA,IAEE4b,IAASD,EAAS,CAAAtW,EAAAvE,KAAA,SAC0B,GAAxCmV,EAAsC,IACxC0F,IAAaA,EAAU1S,GAAE,CAAA5D,EAAAvE,KAAA,SACL,OAAtBmV,EAAMzU,KAAKma,GAAWtW,EAAAvE,KAAA,EACJuY,GAAuB,CACvChK,MAAOsM,EACP5O,UAAW3E,KAAK7B,QAAQ4B,OAAO4E,YAC/B,OAHFwJ,EAASlR,EAAAhF,KAAA,QAKPub,GACFA,EAAM7hB,SAAQ,SAACmM,GAAC,OAAK+P,EAAMzU,KAAK0E,EAAE,IAE9BiR,EAAY/O,KAAKuS,UAAUpU,QAAQ4Q,WAAa,GAChDX,EAAmBtD,GAAgBiE,EAAW4C,EAAAA,IAC9CwC,EAAiB,IAAIhH,GAAe,CACxC/F,OAAQyG,EACR9N,OAAQC,KAAK7B,QAAQ4B,OACrBoO,UAAAA,EACAC,iBAAAA,EACAW,UAAW/O,KAAKuS,UAAUpU,QAAQ4Q,WAAa,GAC/CI,aAAc,WACRzG,EAAKvK,QAAQgR,cACfzG,EAAKvK,QAAQgR,cAEjB,IAEFjI,EAAU3I,YAAY4V,EAAerO,gBAAgB,eAAA7I,EAAA7E,OAAA,SAEhD8O,GAAS,yBAAAjK,EAAA/B,OAAA,GAAAwB,EAAA,UACjB,kBAAAyW,EAAA3W,MAAA,KAAAC,UAAA,KAAAvI,IAAA,yBAAAE,OAAA8e,EAAAxU,GAAAhL,KAAAyG,MAED,SAAAuH,IAAA,IAAAwF,EAAAwM,EAAAS,EAAA,OAAAzgB,KAAAwB,MAAA,SAAA6M,GAAA,cAAAA,EAAA/G,KAAA+G,EAAArJ,MAAA,OASG,OARKwO,EAAYhW,SAASgM,cAAc,QACjCwW,EAAY1T,KAAK7B,QAAjBuV,WAEAS,EAAiB,IAAIxI,GAAgB,CACzCvE,OAAQ,CAACsM,GACT3T,OAAQC,KAAK7B,QAAQ4B,SAEvBmH,EAAU3I,YAAY4V,EAAerO,iBACtC/D,EAAA3J,OAAA,SACM8O,GAAS,wBAAAnF,EAAA7G,OAAA,GAAAwG,EAAA,UACjB,kBAAAwR,EAAA1W,MAAA,KAAAC,UAAA,KAAAvI,IAAA,2BAAAE,MAED,WACE,IAAM8S,EAAYhW,SAASgM,cAAc,OAEzC,GADc8C,KAAK7B,QAAQqV,MAChB,CACT,IAAMY,EAAoB,IAAIhM,EAAkB,CAC9CrI,OAAQC,KAAK7B,QAAQ4B,SAEvBmH,EAAU3I,YAAY6V,EAAkBtO,eAC1C,CACA,OAAOoB,CACT,IA3NFxH,GAAAf,GAAAa,EAAAlO,UAAAoO,GAAA7L,OAAAG,eAAAwL,EAAA,aAAAxK,UAAA,IA2NGsd,CAAA,CA/L0B,g8BCZtB,IAAM+B,GAAyB,WAkBpC,SAAAA,EACU9B,GAER,IAAAzN,EAAA,KADA3G,EAAyC1B,UAAA/K,OAAA,QAAAkG,IAAA6E,UAAA,GAAAA,UAAA,GAAG,CAAC,+FAACgD,CAAA,KAAA4U,GAAA,KADtC9B,UAAAA,EAAoBxT,GAAA,YAlBvB,oDAAkDA,GAAA,aACjD,CACNiN,IAAK,gCACLvE,GAAI,gDACL1I,GAAA,gBAEU,sCAAoCA,GAAA,kBAClC,UAAQA,GAAA,eAEZ,GAAKA,GAAA,eAEJ,IAAIuV,GAAAA,cAAcvV,GAAA,uBAAAA,GAAA,4BAAAA,GAAA,sBAU1BiB,KAAKmG,QAAUhI,EAAQjM,OACvB8N,KAAKuS,UAAUxS,OACZwU,gBAA4B,CAC3B1T,GAAI,wBACJyG,YAAY,EACZsF,MAAO,CAAE4H,OAAQ,GACjBC,OAAO,EACPC,aAAc,CACZC,mBAAoB,SAACC,GACnB,GAAIA,EAAEhY,QACJ,OAAOkI,EAAK+P,oBACVD,EAAEhY,QAAQkY,SAASC,YAAYvX,KAAI,SAACM,GAAC,OAAKA,EAAEkX,QAAQ,EAAE,IAG5D,KAGHzhB,MAAK,SAAC0T,GACDA,IACFnC,EAAKmQ,OAAShO,EAElB,GACJ,SAmEC,SAnEAoN,KAAA,EAAAngB,IAAA,UAAAE,MAED,SAAQsR,GACN1F,KAAKkV,cAAcxP,EACrB,GAAC,CAAAxR,IAAA,OAAAE,MAED,WAAa,IAAAsU,EAAA,KACX1I,KAAKuS,UAAUxS,OAAOoV,UAAU,aAChCnV,KAAKoV,uBACLpV,KAAKqV,aAAe,SAACpR,GAAgB,OAAKyE,EAAK4M,YAAYrR,EAAE,EAC7DjE,KAAKuS,UAAUxS,OAAOyH,QAAQC,GAAG,QAASzH,KAAKqV,aACjD,GAAC,CAAAnhB,IAAA,OAAAE,MAED,WACE4L,KAAKuS,UAAUxS,OAAOoV,UAAU,WAChCnV,KAAKoV,uBACLpV,KAAKuS,UAAUxS,OAAOwV,eAAevV,KAAKiV,OAC5C,GAAC,CAAA/gB,IAAA,uBAAAE,MAED,WACM4L,KAAKqV,eACPrV,KAAKuS,UAAUxS,OAAOyH,QAAQwE,IAAI,QAAShM,KAAKqV,cAChDrV,KAAKqV,kBAAezd,EAExB,GAAC,CAAA1D,IAAA,cAAAE,MAED,SAAoB6P,GAClB,IAAMrH,EAA0B,CAC9B3G,KAAM,UACNkH,WAAY,CAAC,EACb2X,SAAU,CAAE7e,KAAM,QAAS8e,YAAa9Q,EAAEuR,SAE5CxV,KAAKuS,UAAUxS,OAAO0V,aAAazV,KAAKiV,OAAQrY,EAClD,GAAC,CAAA1I,IAAA,gBAAAE,MAED,SAAsBsR,IACpBA,OAAoB9N,IAAX8N,EAAuBA,GAAU1F,KAAK0F,QAE7C1F,KAAKqT,OAELrT,KAAKiT,OAGPjT,KAAK0F,OAASA,EACV1F,KAAKmG,SACPnG,KAAKmG,QAAQT,GAEf1F,KAAKwH,QAAQkO,KAAK,SAAU1V,KAAK0F,OACnC,GAAC,CAAAxR,IAAA,sBAAAE,MAED,SAAAhC,GAAkD,QAAAmO,KAAA,8CAAAnO,02BAArBujB,EAAGpV,EAAA,GAAEqV,EAAGrV,EAAA,GAC7BoG,EAAUzV,SAASgM,cAAc,OACjC2Y,EAAY,GAAH1iB,OAAMyiB,EAAG,MAAAziB,OAAKwiB,GAc7B,OAbAhP,EAAQnI,UAAY,wEAAHrL,OAEc0iB,EAAS,uGAIlBlP,EAAQjE,uBAC5B,qBACA,GACYoE,QAAU,WACtBgP,GAAAA,EAAAA,KAAeD,EACjB,EAEOlP,CACT,2EAAC0N,CAAA,CA/GmC,GCfzB0B,GAAiC,CAC5CC,GAAI,CACFC,kBAAmB,uBACnBC,gBAAiB,mBACjB1jB,MAAO,QACP2jB,MAAO,IACPC,UAAW,KACXC,YAAa,KACbC,iBAAkB,OAEpBC,GAAI,CACFN,kBAAmB,uBACnBC,gBAAiB,oBACjB1jB,MAAO,QACP2jB,MAAO,IACPC,UAAW,KACXC,YAAa,KACbC,iBAAkB,QChBf,SAASE,GAAUC,GACxB,OAAOA,GAAOjL,KAAKkL,GAAK,IAC1B,CACO,SAASC,GAAO7Y,GACrB,OAAO0N,KAAKoL,IAAI9Y,EAAG,EACrB,CACO,SAAS+Y,GACdC,EACAC,GAEA,OAAOD,EAAW,IACdE,GAAaF,EAAU,GAAK,IAAMC,EAASZ,MAC3Ca,GAAaF,EAAW,IAAK,GAAK,IAAMC,EAASX,SACvD,CAoCO,SAASY,GAAaC,GAAsC,IAAtBC,EAAQza,UAAA/K,OAAA,QAAAkG,IAAA6E,UAAA,GAAAA,UAAA,GAAG,EAEhD0a,EAAOF,EAAS,EAAI,IAAM,GAC1BG,EAAM5L,KAAK6L,KAAKJ,GAAU,GAC1BK,EAAUC,SAASH,EAAIpC,QAAQkC,GAAW,IAAM,GAChDM,EAAIF,EAAQ5lB,OAAS,EAAI4lB,EAAQ5lB,OAAS,EAAI,EAEpD,MAAO,CACLylB,EACAK,EAAIF,EAAQG,OAAO,EAAGD,GARH,IAQuB,GAC1CF,EAAQG,OAAOD,GAAGlV,QAAQ,iBAAkB,OAC5C4U,EACI,IACA1L,KAAK6L,IAAID,EAAMxW,OAAO0W,IACnBtC,QAAQkC,GACR3lB,MAAM,GACT,IACJ4P,KAAK,GACT,wsCC3DO,IAAMuW,GAAY,SAAAC,0RAAAtK,CAAAqK,EAAAC,GAAA,YAAArK,KAAAoK,mkBAevB,SAAAA,EAAYvZ,GAA8B,IAAA2G,EAKvC,mGALuCrF,CAAA,KAAAiY,GACzB3Y,GAAA6Y,GAAf9S,EAAAwI,EAAA9b,KAAA,KAAM2M,IAAS,UAfc,CAC7B0Z,OAAQ,KACRlR,QAAS,GACTvG,UAAW,KACZrB,GAAA6Y,GAAA9S,GAAA,eAAA/F,GAAA6Y,GAAA9S,GAAA,UAGiB,IAAIgT,EAAAA,MAAM,EAAG,KAAG/Y,GAAA6Y,GAAA9S,GAAA,qBAAA/F,GAAA6Y,GAAA9S,GAAA,uBAAA/F,GAAA6Y,GAAA9S,GAAA,uBAAA/F,GAAA6Y,GAAA9S,GAAA,2BAAA/F,GAAA6Y,GAAA9S,GAAA,yBAShCiT,EAAAA,KAAAA,WAAeH,GAAA9S,GAAO3G,GAClB2G,EAAK3G,QAAQ6Z,SACflT,EAAKmT,QAAUnT,EAAK3G,QAAQ6Z,QAC7BlT,CACH,CAiFC,SAjFA4S,KAAA,EAAAxjB,IAAA,QAAAE,MACD,SAAMoJ,GAWJ,OAVAwC,KAAKkY,KAAO1a,EACZwC,KAAKgG,YAAchG,KAAKmY,cACpBnY,KAAKgG,YACPxI,EAAI4a,WAAWC,UAAU9Z,YAAYyB,KAAKgG,YAE5CxI,EAAIiK,GAAG,YAAazH,KAAKsY,gBAAiBtY,MACtCuY,EAAAA,QAAAA,OACF/a,EAAIiK,GAAG,WAAYzH,KAAKwY,eAAgBxY,MAE1CA,KAAKyY,UACEzY,IACT,GAAC,CAAA9L,IAAA,QAAAE,MACD,SAAMoJ,GAEJ,OADAA,EAAIkb,SAAS1Y,MACNA,IACT,GAAC,CAAA9L,IAAA,WAAAE,MACD,SAASoJ,GAOP,OANIwC,KAAKgG,YACPxI,EAAI4a,WAAWC,UAAUM,YAAY3Y,KAAKgG,YAE5CxI,EAAIwO,IAAI,YAAahM,KAAKsY,gBAAiBtY,MAC3CxC,EAAIwO,IAAI,WAAYhM,KAAKwY,eAAgBxY,MACxCA,KAAKkY,KAAe,KACdlY,IACT,GAAC,CAAA9L,IAAA,YAAAE,MACD,SAAUyjB,GAGR,OAFA7X,KAAK7B,QAAQ0Z,QAASe,EAAAA,EAAAA,QAAOf,GAC7B7X,KAAKsY,kBACEtY,IACT,GAAC,CAAA9L,IAAA,aAAAE,MACD,SAAWuS,GAGT,OAFA3G,KAAK7B,QAAQwI,QAAUA,EACvB3G,KAAKkG,iBACElG,IACT,GAAC,CAAA9L,IAAA,cAAAE,MACD,WAIE,OAHA4L,KAAK6Y,aAAeC,EAAAA,QAAAA,OAAe,OAAQ,QAAS9Y,KAAKgG,YACzDhG,KAAK6Y,aAAara,UAChB,6HACKwB,KAAK6Y,YACd,GAAC,CAAA3kB,IAAA,cAAAE,MACD,WACE4L,KAAKgG,WAAa8S,EAAAA,QAAAA,OAAe,MAAO9Y,KAAK7B,QAAQiC,WACrDJ,KAAK+Y,aAAeD,EAAAA,QAAAA,OAAe,MAAO,UAAW9Y,KAAKgG,WAC5D,GAAC,CAAA9R,IAAA,UAAAE,MACD,WACE4L,KAAKkY,OAASlY,KAAKkG,iBAAkBlG,KAAKsY,kBAC5C,GAAC,CAAApkB,IAAA,iBAAAE,MACD,WACM4L,KAAK+Y,cAAgB/Y,KAAK7B,QAAQwI,UACD,iBAAxB3G,KAAK7B,QAAQwI,QACtB3G,KAAK+Y,aAAava,UAAYwB,KAAK7B,QAAQwI,SAE3C3G,KAAK+Y,aAAava,UAAY,GAC9BwB,KAAK+Y,aAAaxa,YAAYyB,KAAK7B,QAAQwI,UAGjD,GAAC,CAAAzS,IAAA,kBAAAE,MACD,WACE,GAAI4L,KAAK7B,QAAQ0Z,QAAU7X,KAAKgG,WAAY,CAC1C,IAAMgT,EAAQhZ,KAAKkY,KAAKe,mBAAmBjZ,KAAK7B,QAAQ0Z,QAClDqB,EAAOX,EAAAA,QAAAA,MACPP,EAAShY,KAAKiY,QACpBiB,GAAQJ,EAAAA,QAAAA,YAAoB9Y,KAAKgG,WAAYgT,GAC7ChZ,KAAKmZ,kBAAoBnB,EAAO9Z,GAAKgb,EAAO,EAAIF,EAAM9a,GACtD8B,KAAKoZ,eAAiBpB,EAAOla,GAAKob,EAAO,EAAIF,EAAMlb,GACnDkC,KAAKgG,WAAWtC,MAAM2V,OAASrZ,KAAKmZ,iBAAmB,KACvDnZ,KAAKgG,WAAWtC,MAAM4V,KAAOtZ,KAAKoZ,eAAiB,IACrD,CACF,GAAC,CAAAllB,IAAA,iBAAAE,MACD,SAAuBmO,GACrB,GAAIvC,KAAKgG,WAAY,CACnB,IAAMgT,EAAShZ,KAAKkY,KAAaqB,uBAC/BvZ,KAAK7B,QAAQ0Z,OACbtV,EAAEiX,KACFjX,EAAEkX,QAEJX,EAAAA,QAAAA,YAAoB9Y,KAAKgG,WAAYgT,EACvC,CACF,2EAACtB,CAAA,CAtGsB,CAASgC,EAAAA,qsCCW3B,IAAMC,GAAa,SAAAC,0RAAAvM,CAAAsM,EAAAC,GAAA,YAAAtM,KAAAqM,mkBAkBxB,SAAAA,EAAYnc,EAAUW,GAA+B,IAAA2G,EAKpB,mGALoBrF,CAAA,KAAAka,GACxC5a,GAAA6Y,GAAX9S,EAAAwI,EAAA9b,KAAA,KAAMgM,IAAK,UAlBmB,CAC9BsP,MAAO,UACP+M,MAAO,WACP9C,SAAUhB,GAAAA,KACXhX,GAAA6Y,GAAA9S,GAAA,eAAA/F,GAAA6Y,GAAA9S,GAAA,0BAAA/F,GAAA6Y,GAAA9S,GAAA,oBAAA/F,GAAA6Y,GAAA9S,GAAA,qBAAA/F,GAAA6Y,GAAA9S,GAAA,8BAAA/F,GAAA6Y,GAAA9S,GAAA,qBAAA/F,GAAA6Y,GAAA9S,GAAA,iBAQwB,GAAC/F,GAAA6Y,GAAA9S,GAAA,SACF,CAAEgV,SAAU,GAAIC,OAAQ,KAAIhb,GAAA6Y,GAAA9S,GAAA,sBAAA/F,GAAA6Y,GAAA9S,GAAA,uBAMlDA,EAAKoT,KAAO1a,EACZsH,EAAKkV,gBAAepC,GAAA9S,GACpBA,EAAKmV,WAAY,EACjBlC,EAAAA,KAAAA,WAAeH,GAAA9S,GAAO3G,GAAS2G,CACjC,CAsOC,SAtOA6U,KAAA,EAAAzlB,IAAA,WAAAE,MACD,SAASylB,GAEP,OADA7Z,KAAK7B,QAAQ0b,MAAQA,EACd7Z,IACT,GAAC,CAAA9L,IAAA,WAAAE,MACD,WACE4L,KAAKka,gBACP,GAAC,CAAAhmB,IAAA,cAAAE,MACD,WACE4L,KAAKma,iBACP,GAAC,CAAAjmB,IAAA,iBAAAE,MACD,WACE4L,KAAKga,gBAAgBI,qBACnBpa,KAAKga,gBAAgBK,iBACvBra,KAAKoa,oBAAsBpa,KAAKqa,iBAAmBra,KAAKsa,gBAC1D,GAAC,CAAApmB,IAAA,gBAAAE,MACD,SAAsBmmB,GACpB,IAAM1C,EAAS0C,EAAM1C,QAAU7X,KAAKkY,KAAKsC,mBAAmBD,GAC5D,IAAIva,KAAKya,aAAc5C,EAAO6C,OAAO1a,KAAKya,YAA1C,CAGA,GAAIza,KAAK2a,OAAOZ,OAAOroB,OAAS,EAAG,CACjC,IAAMqoB,EAAS/Z,KAAK2a,OAAOZ,OAC3BA,EAAO3gB,KAAKye,GACZ,IAAMnmB,EAASqoB,EAAOroB,OACtBsO,KAAK4a,iBFrDiBC,EEsDpBd,EAAOroB,EAAS,GFtDqBopB,EEuDrCf,EAAOroB,EAAS,GFrDhBqpB,EAAOvE,GAAUqE,EAAQjF,KAEzBoF,GADAC,EAAOzE,GAAUsE,EAAQlF,MACRmF,EACjBG,EAAU1E,GAAUsE,EAAQnF,IAAMkF,EAAQlF,KAC1CpT,EACJoU,GAAOnL,KAAK2P,IAAIH,EAAU,IAC1BxP,KAAK4P,IAAIL,GAAQvP,KAAK4P,IAAIH,GAAQtE,GAAOnL,KAAK2P,IAAID,EAAU,IACvD,SAAkB1P,KAAK6P,KAAK7P,KAAK8P,KAAK/Y,KEgDzCvC,KAAKub,iBAAiB1D,GACtB7X,KAAKwb,WAAW3D,GACW,SAAvB7X,KAAK7B,QAAQ0b,OACf7Z,KAAKyb,UACH5D,EACAhB,GAAkB7W,KAAK4a,eAAgB5a,KAAK7B,QAAQ4Y,UACpD,wBAGN,MACE/W,KAAK4a,eAAiB,EACtB5a,KAAKub,iBAAiB1D,GACtB7X,KAAKwb,WAAW3D,GACW,SAAvB7X,KAAK7B,QAAQ0b,OACf7Z,KAAKyb,UACH5D,EACA7X,KAAK7B,QAAQ4Y,SAASvkB,MACtB,yBAGJwN,KAAK2a,OAAOZ,OAAO3gB,KAAKye,GF7EvB,IAAqBgD,EAAiBC,EAErCC,EACAE,EACAD,EACAE,EACA3Y,EEyEJvC,KAAKya,WAAa5C,EAClB7X,KAAK0b,YAAa,CAhClB,CAiCF,GAAC,CAAAxnB,IAAA,eAAAE,MACD,SAAqBmmB,GACnB,IAAM1C,EAAS0C,EAAM1C,OACjB7X,KAAK2b,aAAe3b,KAAK2a,OAAOZ,OAAOroB,OAAS,IAC9CsO,KAAK0b,WACP1b,KAAK2b,YAAYC,WAAW5b,KAAK2a,OAAOZ,OAAO5mB,OAAO0kB,KAEtD7X,KAAK2b,YAAYC,WAAW,CAAC/D,IAC7B7X,KAAK0b,YAAa,GAGxB,GAAC,CAAAxnB,IAAA,iBAAAE,MACD,WACE4L,KAAK2a,OAAS,CACZb,SAAU,GACVC,OAAQ,IAEV,IAAMvc,EAAMwC,KAAKkY,KACjBY,EAAAA,QAAAA,SAAiBtb,EAAIsI,eAAgB,uBAErCtI,EAAIqe,aAAere,EAAIqe,YAAYC,UACnC9b,KAAKoa,qBAAsB,EAC3B5c,EAAIiK,GAAG,QAASzH,KAAK+b,cAAe/b,MACpCxC,EAAIiK,GAAG,WAAYzH,KAAKqa,eAAgBra,MACxCxC,EAAIiK,GAAG,cAAezH,KAAKqa,eAAgBra,MAC3CxC,EAAIwe,gBAAgBF,UACpBte,EAAIiK,GAAG,YAAazH,KAAKic,aAAcjc,MACvCxC,EAAIyO,KAAK,gBACX,GAAC,CAAA/X,IAAA,kBAAAE,MACD,WACE,IAAMoJ,EAAMwC,KAAKkY,KACjBY,EAAAA,QAAAA,YAAoBtb,EAAIsI,eAAgB,uBAExCtI,EAAIqe,aAAere,EAAIqe,YAAYK,SACnC1e,EAAIwO,IAAI,QAAShM,KAAK+b,cAAe/b,MACrCxC,EAAIwO,IAAI,WAAYhM,KAAKqa,eAAgBra,MACzCxC,EAAIwO,IAAI,cAAehM,KAAKqa,eAAgBra,MAC5CxC,EAAIwO,IAAI,YAAahM,KAAKic,aAAcjc,MACxCxC,EAAIwe,gBAAgBE,SACpBlc,KAAKoa,oBAAsBpa,KAAK0b,YAAa,EACxC1b,KAAKia,WACRja,KAAKmc,cAAc3qB,KAAKwO,MAE1BxC,EAAIyO,KAAK,eACX,GAAC,CAAA/X,IAAA,iBAAAE,MACD,SAAuBmmB,GFnHlB,IAAuBR,EAAkBhD,EACxCxU,EEmHAvC,KAAK2a,OAAOZ,OAAOroB,OAAS,IAC1BsO,KAAK2a,OAAOZ,OAAOroB,OAAS,IAC1BsO,KAAK2b,aAAiBpB,GAAwB,gBAAfA,EAAMtkB,MACvC+J,KAAK2b,YAAYC,WAAW5b,KAAK2a,OAAOZ,QAEtC/Z,KAAKya,aACoB,SAAvBza,KAAK7B,QAAQ0b,MACf7Z,KAAKyb,UACHzb,KAAKya,YF5HWV,EE6HF/Z,KAAK2a,OAAOZ,OF7HQhD,EE6HA/W,KAAK7B,QAAQ4Y,SF5HrDxU,EAAIiJ,KAAK4Q,MAKV,SAAiBrC,GAMtB,IALA,IAAMsC,EAAc,QAChBC,EAAO,EACLC,EAAMxC,EAAOroB,OACf8qB,EAAKzC,EAAOwC,EAAM,GAAG5G,IACrB8G,EAAK1C,EAAOwC,EAAM,GAAG3G,IAChBjc,EAAI,EAAGA,EAAI4iB,EAAK5iB,IAAK,CAC5B,IAAM+iB,EAAK3C,EAAOpgB,GAAGgc,IACfgH,EAAK5C,EAAOpgB,GAAGic,IACrB0G,GACE9F,GAAUkG,EAAKF,IACd,EAAIhR,KAAK2P,IAAI3E,GAAUiG,IAAOjR,KAAK2P,IAAI3E,GAAUmG,KACpDH,EAAKE,EACLD,EAAKE,CACP,CACA,OAAOnR,KAAK6L,IAAKiF,EAAOD,EAAcA,EAAe,EACvD,CArBuBO,CAAQ7C,IACtBxX,EAAI,IACPyU,GAAazU,EAAG,GAAK,IAAMwU,EAASV,YACpCW,GAAazU,EAAI,IAAK,GAAK,IAAMwU,EAAST,kBE0HlC,yBACA,GAGFtW,KAAKyb,UACHzb,KAAKya,WACL5D,GAAkB7W,KAAK4a,eAAgB5a,KAAK7B,QAAQ4Y,UACpD,yBACA,IAIN/W,KAAK2b,aAAe3b,KAAKkY,KAAK2E,YAAY7c,KAAK2b,aAC/C3b,KAAKia,WAAY,GAEjBja,KAAKmc,cAAc3qB,KAAKwO,OAG5BA,KAAK8b,SACP,GAAC,CAAA5nB,IAAA,mBAAAE,MACD,SAAyByjB,GAErB,IAAIiF,EADD9c,KAAK2b,YAuBR3b,KAAK2b,YAAYoB,UAAUlF,IApBzBiF,EADyB,SAAvB9c,KAAK7B,QAAQ0b,MACF,IAAImD,EAAAA,QAAQ,CAACnF,GAAS,CACjCoF,OAAQ,EACRnQ,MAAO9M,KAAK7B,QAAQ2O,MACpBoQ,UAAW,CAAC,EAAG,GACfC,YAAa,EACbC,aAAa,IAGE,IAAIC,EAAAA,SAAS,CAACxF,GAAS,CACtCoF,OAAQ,EACRnQ,MAAO9M,KAAK7B,QAAQ2O,MACpBoQ,UAAW,CAAC,EAAG,GACfE,aAAa,IAIjBpd,KAAKkY,KAAKQ,SAASoE,GACnB9c,KAAK2a,OAAOb,SAAS1gB,KAAK0jB,GAC1B9c,KAAK2b,YAAcmB,EAIvB,GAAC,CAAA5oB,IAAA,mBAAAE,MACD,SAAyByjB,GAErB,IAAIyF,EADDtd,KAAKud,aAsBRvd,KAAKud,aAAaR,UAAUlF,IAnB1ByF,EADyB,SAAvBtd,KAAK7B,QAAQ0b,MACD,IAAImD,EAAAA,QAAQ,CAACnF,GAAS,CAClCoF,OAAQ,EACRnQ,MAAO9M,KAAK7B,QAAQ2O,MACpB0Q,UAAWxd,KAAK7B,QAAQ2O,MACxBqQ,YAAa,GACbC,aAAa,IAGE,IAAIC,EAAAA,SAAS,CAACxF,GAAS,CACtCoF,OAAQ,EACRnQ,MAAO9M,KAAK7B,QAAQ2O,MACpBsQ,aAAa,IAIjBpd,KAAKkY,KAAKQ,SAAS4E,GACnBtd,KAAK2a,OAAOb,SAAS1gB,KAAKkkB,GAC1Btd,KAAKud,aAAeD,GAItBtd,KAAKyd,iBAAiB5F,EACxB,GAAC,CAAA3jB,IAAA,aAAAE,MACD,SAAmBwkB,GACjB,IAAM8E,EAAS,IAAIC,EAAAA,aAAa/E,EAAQ,CACtC9L,MAAO9M,KAAK7B,QAAQ2O,MACpB8Q,QAAS,EACTX,OAAQ,EACRO,UAAW,UACXK,MAAM,EACNV,YAAa,EACb3I,OAAQ,EACR4I,aAAa,IAEfpd,KAAKkY,KAAKQ,SAASgF,GACnB1d,KAAK2a,OAAOb,SAAS1gB,KAAKskB,EAC5B,GAAC,CAAAxpB,IAAA,YAAAE,MACD,SACEyjB,EACAlR,EACAvG,EACA0d,GACM,IAAApV,EAAA,KACAqV,EAAQ,IAAIrG,GAAa,CAC7BG,OAAAA,EACAlR,QAAAA,EACAvG,UAAAA,IAIF,GAFAJ,KAAKkY,KAAKQ,SAASqF,GACnB/d,KAAK2a,OAAOb,SAAS1gB,KAAK2kB,GACtBD,EAAO,CACT,IAAMlL,EAAcmL,EAAMC,cAC1BC,EAAAA,SAAAA,GACErL,EACA,SACA,SAAC3O,GACCga,EAAAA,SAAAA,gBAAyBha,GACzByE,EAAKyT,eACP,GACAnc,KAEJ,CACF,GAAC,CAAA9L,IAAA,gBAAAE,MACD,WACE,IAEE1C,EAFIooB,EAAW9Z,KAAK2a,OAAOb,SACzBngB,EAAI,EAER,IAAKjI,EAASooB,EAASpoB,OAAQiI,EAAIjI,EAAQiI,IACzCqG,KAAKkY,KAAK2E,YAAY/C,EAASngB,GAEnC,2EAACggB,CAAA,CA9PuB,CAASuE,EAAAA,2wDCf5B,IAAMC,GAAO,SAAAC,0RAAA/Q,CAAA8Q,EAAAC,GAAA,YAAA9Q,KAAA6Q,mkBAgBlB,SAAAA,EAAYhgB,GAAkC,IAAA2G,+FAAArF,CAAA,KAAA0e,GAC7Bpf,GAAA6Y,GAAf9S,EAAAwI,EAAA9b,KAAA,KAAM2M,IAAS,UAhBS,CACxB0U,SAAU,WACVrM,MAAO,cACP6X,WAAW,EACXvR,MAAO,UACPsD,OAAQ,KACR2G,SAAUhB,GAAAA,KACXhX,GAAA6Y,GAAA9S,GAAA,eAAA/F,GAAA6Y,GAAA9S,GAAA,qBAAA/F,GAAA6Y,GAAA9S,GAAA,gBAAA/F,GAAA6Y,GAAA9S,GAAA,oBAAA/F,GAAA6Y,GAAA9S,GAAA,0BAUCiT,EAAAA,KAAAA,WAAeH,GAAA9S,GAAO3G,GACtB,IAAMiS,EAASjS,EAAQiS,OACvB,GAAIA,GAAqB,OAAXA,EAAiB,CAC7B,IAAM2G,EAAWhB,GAAK3F,GAClB2G,EACFjS,EAAK3G,QAAQ4Y,SAAQvF,GAAAA,GAAA,GAAQuE,IAASgB,GAEtCuH,QAAQ/mB,MACN,uCACEuN,EAAK3G,QAAQiS,OACb,UAGR,CAAC,OAAAtL,CACH,CAkHC,SAlHAqZ,KAAA,EAAAjqB,IAAA,QAAAE,MACD,SAAMoJ,GAEJ,OADAwC,KAAKkY,KAAO1a,EACLwC,KAAKgG,YAAchG,KAAKmY,aACjC,GAAC,CAAAjkB,IAAA,iBAAAE,MACD,WACM4L,KAAKga,kBACPha,KAAKga,gBAAgB8B,UACrB9b,KAAKga,qBAAkBpiB,EAE3B,GAAC,CAAA1D,IAAA,kBAAAE,MACD,WAsBE,OArBA4L,KAAKgG,WAAa8S,EAAAA,QAAAA,OAChB,MACA,uDAGF9Y,KAAKue,UAAYzF,EAAAA,QAAAA,OACf,MACA,2BACA9Y,KAAKgG,YAGPhG,KAAKwe,MAAQ1F,EAAAA,QAAAA,OAAe,IAAK,yBAA0B9Y,KAAKgG,YAChEhG,KAAKwe,MAAMhY,MAAQxG,KAAK7B,QAAQqI,OAAS,cACzCxG,KAAKwe,MAAMC,KAAO,IAOlBze,KAAK0e,cACE1e,KAAKgG,UACd,GAAC,CAAA9R,IAAA,cAAAE,MACD,WACE,IAAMuqB,EAAS7F,EAAAA,QAAAA,OACb,KACA,0BACA9Y,KAAKue,WAEHK,EAAS9F,EAAAA,QAAAA,OAAe,KAAM,yBAA0B6F,GACtDE,EAAgB/F,EAAAA,QAAAA,OAAe,IAAK,QAAS8F,GACnDC,EAAcC,UAAY9e,KAAK7B,QAAQ4Y,SAASd,kBAChD4I,EAAcJ,KAAO,IACrBR,EAAAA,SAAAA,wBAAiCY,GACjCZ,EAAAA,SAAAA,GAAYY,EAAe,QAAS7e,KAAK+e,mBAAoB/e,MAE7D4e,EAAS9F,EAAAA,QAAAA,OAAe,KAAM,yBAA0B6F,GACxD,IAAMK,EAAgBlG,EAAAA,QAAAA,OACpB,IACA,+BACA8F,GAEFI,EAAcF,UAAY9e,KAAK7B,QAAQ4Y,SAASb,gBAChD8I,EAAcP,KAAO,IACrBR,EAAAA,SAAAA,wBAAiCe,GACjCf,EAAAA,SAAAA,GAAYe,EAAe,QAAShf,KAAKif,mBAAoBjf,KAC/D,GAAC,CAAA9L,IAAA,cAAAE,MACD,WACE,IAAM8S,EAAYlH,KAAKkf,kBAevB,OAdAjB,EAAAA,SAAAA,wBAAiC/W,GACjC+W,EAAAA,SAAAA,yBAAkC/W,GAC9BlH,KAAK7B,QAAQkgB,UACfJ,EAAAA,SAAAA,GACE/W,EACA,CACEiY,WAAYnf,KAAKof,QACjBC,WAAYrf,KAAKsf,WAEnBtf,MAGFA,KAAKof,UAEAlY,CACT,GAAC,CAAAhT,IAAA,qBAAAE,MACD,SAA2BsT,GACzBuW,EAAAA,SAAAA,gBAAyBvW,GACzB1H,KAAKuf,iBACDvf,KAAKkY,OACPlY,KAAKga,gBAAkB,IAAIL,GAAc3Z,KAAKkY,KAAM,CAClD2B,MAAO,WACP/M,MAAO9M,KAAK7B,QAAQ2O,MACpBiK,SAAU/W,KAAK7B,QAAQ4Y,WAEzB/W,KAAKga,gBAAgBkC,SAEzB,GAAC,CAAAhoB,IAAA,qBAAAE,MACD,SAA2BsT,GACzBuW,EAAAA,SAAAA,gBAAyBvW,GACzB1H,KAAKuf,iBACDvf,KAAKkY,OACPlY,KAAKga,gBAAkB,IAAIL,GAAc3Z,KAAKkY,KAAM,CAClD2B,MAAO,OACP/M,MAAO9M,KAAK7B,QAAQ2O,MACpBiK,SAAU/W,KAAK7B,QAAQ4Y,WAEzB/W,KAAKga,gBAAgBkC,SAEzB,GAAC,CAAAhoB,IAAA,UAAAE,MACD,WAKE,OAJI4L,KAAKwe,OAASxe,KAAKgG,aACrBhG,KAAKwe,MAAM9a,MAAM8M,QAAU,OAC3BsI,EAAAA,QAAAA,SAAiB9Y,KAAKgG,WAAY,6BAE7BhG,IACT,GAAC,CAAA9L,IAAA,YAAAE,MACD,WAKE,OAJI4L,KAAKwe,OAASxe,KAAKgG,aACrBhG,KAAKwe,MAAM9a,MAAM8M,QAAU,QAC3BsI,EAAAA,QAAAA,YAAoB9Y,KAAKgG,WAAY,6BAEhChG,IACT,2EAACme,CAAA,CAlJiB,CAASqB,EAAAA,SCPhBC,GAGR,GAEE,SAASC,GAAqBxlB,EAAcgB,GACjDukB,GAAqBrmB,KAAK,CAAEc,KAAAA,EAAMgB,KAAAA,GACpC,CAEO,SAASykB,GAAsBC,GACpCH,GAAqB9tB,SAAQ,SAACmM,GACxBA,EAAE5D,OAAS0lB,GACb9hB,EAAE5C,MAEN,GACF,CCRO,SAAS2kB,GAAqB9f,GAEnC,IAAMiJ,EAAU,IAAImV,GAAQ,CAAE/N,OAAQ,OACtCrQ,EAAO+f,WAAW9W,EAAS,YAE3BjJ,EAAOggB,SAASxsB,MAAK,WACnB,IAAMiK,EAAMuC,EAAO0K,WAAWjN,IAC1BA,IACFA,EAAIiK,GAAG,iBAAiB,WACtBkY,GAAsB,WACtB5f,EAAOigB,kBACT,IACAxiB,EAAIiK,GAAG,gBAAgB,WACrB1H,EAAOoV,UAAU,WACjBpV,EAAOkgB,iBACT,KAEFP,GAAqB,WAAW,WAC9B1W,EAAQuW,gBACV,GACF,GACF,mwCC3BA7rB,GAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAvC,UAAAwC,EAAAF,EAAAG,eAAAC,EAAAH,OAAAG,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAP,OAAAG,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,EAAA,KAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,CAAA,WAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAA9D,qBAAAkE,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAjE,WAAAqE,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAvE,KAAAyC,EAAA+B,GAAA,OAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAE,EAAAtC,KAAAgF,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAA9E,UAAAkE,EAAAlE,UAAAuC,OAAA6B,OAAAW,GAAA,SAAAM,EAAArF,GAAA,0BAAAK,SAAA,SAAA2B,GAAAuB,EAAAvD,EAAAgC,GAAA,SAAA0C,GAAA,YAAAY,QAAAtD,EAAA0C,EAAA,gBAAAa,EAAApB,EAAAqB,GAAA,SAAAC,EAAAzD,EAAA0C,EAAAgB,EAAAC,GAAA,IAAAC,EAAApB,EAAAL,EAAAnC,GAAAmC,EAAAO,GAAA,aAAAkB,EAAAjB,KAAA,KAAAkB,EAAAD,EAAAlB,IAAA5B,EAAA+C,EAAA/C,MAAA,OAAAA,GAAA,UAAAgD,GAAAhD,IAAAN,EAAAtC,KAAA4C,EAAA,WAAA0C,EAAAE,QAAA5C,EAAAiD,SAAA9D,MAAA,SAAAa,GAAA2C,EAAA,OAAA3C,EAAA4C,EAAAC,EAAA,aAAAhC,GAAA8B,EAAA,QAAA9B,EAAA+B,EAAAC,EAAA,IAAAH,EAAAE,QAAA5C,GAAAb,MAAA,SAAA+D,GAAAH,EAAA/C,MAAAkD,EAAAN,EAAAG,EAAA,aAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,IAAAA,EAAAC,EAAAlB,IAAA,KAAAwB,EAAAxD,EAAA,gBAAAI,MAAA,SAAAd,EAAA0C,GAAA,SAAAyB,IAAA,WAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAzD,EAAA0C,EAAAgB,EAAAC,EAAA,WAAAO,EAAAA,EAAAA,EAAAjE,KAAAkE,EAAAA,GAAAA,GAAA,aAAA5B,EAAAV,EAAAE,EAAAM,GAAA,IAAA+B,EAAA,iCAAApE,EAAA0C,GAAA,iBAAA0B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAApE,EAAA,MAAA0C,EAAA,OAAA5B,WAAAwD,EAAAC,MAAA,OAAAlC,EAAArC,OAAAA,EAAAqC,EAAAK,IAAAA,IAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,CAAA,cAAApC,EAAArC,OAAAqC,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAArC,OAAA,uBAAAoE,EAAA,MAAAA,EAAA,YAAA/B,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,IAAA,gBAAAL,EAAArC,QAAAqC,EAAAyC,OAAA,SAAAzC,EAAAK,KAAA0B,EAAA,gBAAAR,EAAApB,EAAAX,EAAAE,EAAAM,GAAA,cAAAuB,EAAAjB,KAAA,IAAAyB,EAAA/B,EAAAkC,KAAA,6BAAAX,EAAAlB,MAAAE,EAAA,gBAAA9B,MAAA8C,EAAAlB,IAAA6B,KAAAlC,EAAAkC,KAAA,WAAAX,EAAAjB,OAAAyB,EAAA,YAAA/B,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAA,YAAAgC,EAAAF,EAAAnC,GAAA,IAAA0C,EAAA1C,EAAArC,OAAAA,EAAAwE,EAAAtD,SAAA6D,GAAA,QAAAT,IAAAtE,EAAA,OAAAqC,EAAAmC,SAAA,eAAAO,GAAAP,EAAAtD,SAAA8D,SAAA3C,EAAArC,OAAA,SAAAqC,EAAAK,SAAA4B,EAAAI,EAAAF,EAAAnC,GAAA,UAAAA,EAAArC,SAAA,WAAA+E,IAAA1C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAAF,EAAA,aAAAnC,EAAA,IAAAgB,EAAApB,EAAAxC,EAAAwE,EAAAtD,SAAAmB,EAAAK,KAAA,aAAAkB,EAAAjB,KAAA,OAAAN,EAAArC,OAAA,QAAAqC,EAAAK,IAAAkB,EAAAlB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAsC,EAAAtB,EAAAlB,IAAA,OAAAwC,EAAAA,EAAAX,MAAAlC,EAAAmC,EAAAW,YAAAD,EAAApE,MAAAuB,EAAA+C,KAAAZ,EAAAa,QAAA,WAAAhD,EAAArC,SAAAqC,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,GAAAjC,EAAAmC,SAAA,KAAA5B,GAAAsC,GAAA7C,EAAArC,OAAA,QAAAqC,EAAAK,IAAA,IAAAuC,UAAA,oCAAA5C,EAAAmC,SAAA,KAAA5B,EAAA,UAAA0C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA5B,EAAA4B,EAAAQ,YAAA,GAAApC,EAAAjB,KAAA,gBAAAiB,EAAAlB,IAAA8C,EAAAQ,WAAApC,CAAA,UAAAtB,EAAAN,GAAA,KAAA6D,WAAA,EAAAJ,OAAA,SAAAzD,EAAA3D,QAAAiH,EAAA,WAAAW,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAjI,KAAAgI,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAA9H,QAAA,KAAAiI,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAA9H,QAAA,GAAAoC,EAAAtC,KAAAgI,EAAAG,GAAA,OAAAjB,EAAAtE,MAAAoF,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAAtE,WAAAwD,EAAAc,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAxF,WAAAwD,EAAAC,MAAA,UAAA1B,EAAA7E,UAAA8E,EAAApC,EAAA0C,EAAA,eAAAtC,MAAAgC,EAAArB,cAAA,IAAAf,EAAAoC,EAAA,eAAAhC,MAAA+B,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAmG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,MAAA,EAAAvG,EAAAwG,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAAzI,UAAAuC,OAAA6B,OAAAgB,GAAAqD,CAAA,EAAApG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAqB,QAAArB,EAAA,EAAAW,EAAAE,EAAAvF,WAAAuD,EAAAgC,EAAAvF,UAAAmD,GAAA,0BAAAd,EAAAkD,cAAAA,EAAAlD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAwB,QAAA,IAAAA,IAAAA,EAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA3B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAwB,GAAA,OAAAnD,EAAAmG,oBAAA1E,GAAAqF,EAAAA,EAAA/B,OAAAnF,MAAA,SAAA4D,GAAA,OAAAA,EAAAU,KAAAV,EAAA/C,MAAAqG,EAAA/B,MAAA,KAAA/B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAxG,KAAA0G,EAAAF,EAAAtB,KAAAlF,GAAA,OAAAwG,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAhJ,QAAA,KAAAwC,EAAAwG,EAAAI,MAAA,GAAA5G,KAAA0G,EAAA,OAAAlC,EAAAtE,MAAAF,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAA/E,EAAA8C,OAAAA,EAAAb,EAAAtE,UAAA,CAAA2I,YAAArE,EAAA2D,MAAA,SAAAwB,GAAA,QAAAC,KAAA,OAAAtC,KAAA,OAAAT,KAAA,KAAAC,WAAAN,EAAA,KAAAC,MAAA,OAAAC,SAAA,UAAAxE,OAAA,YAAA0C,SAAA4B,EAAA,KAAAuB,WAAAxH,QAAA0H,IAAA0B,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAAnH,EAAAtC,KAAA,KAAA0I,KAAAR,OAAAQ,EAAA3I,MAAA,WAAA2I,QAAAtC,EAAA,EAAAsD,KAAA,gBAAArD,MAAA,MAAAsD,EAAA,KAAAhC,WAAA,GAAAG,WAAA,aAAA6B,EAAAlF,KAAA,MAAAkF,EAAAnF,IAAA,YAAAoF,IAAA,EAAAjD,kBAAA,SAAAkD,GAAA,QAAAxD,KAAA,MAAAwD,EAAA,IAAA1F,EAAA,cAAA2F,EAAAC,EAAAC,GAAA,OAAAtE,EAAAjB,KAAA,QAAAiB,EAAAlB,IAAAqF,EAAA1F,EAAA+C,KAAA6C,EAAAC,IAAA7F,EAAArC,OAAA,OAAAqC,EAAAK,SAAA4B,KAAA4D,CAAA,SAAA7B,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAzC,EAAA4B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA,KAAAiC,KAAA,KAAAS,EAAA3H,EAAAtC,KAAAsH,EAAA,YAAA4C,EAAA5H,EAAAtC,KAAAsH,EAAA,iBAAA2C,GAAAC,EAAA,SAAAV,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,WAAAgC,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,SAAAwC,GAAA,QAAAT,KAAAlC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA/D,MAAA,kDAAAqD,KAAAlC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,WAAA,KAAAb,OAAA,SAAAnC,EAAAD,GAAA,QAAA2D,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAAiC,MAAAlH,EAAAtC,KAAAsH,EAAA,oBAAAkC,KAAAlC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA1F,GAAA,aAAAA,IAAA0F,EAAA5C,QAAA/C,GAAAA,GAAA2F,EAAA1C,aAAA0C,EAAA,UAAAzE,EAAAyE,EAAAA,EAAArC,WAAA,UAAApC,EAAAjB,KAAAA,EAAAiB,EAAAlB,IAAAA,EAAA2F,GAAA,KAAArI,OAAA,YAAAoF,KAAAiD,EAAA1C,WAAA/C,GAAA,KAAA0F,SAAA1E,EAAA,EAAA0E,SAAA,SAAA1E,EAAAgC,GAAA,aAAAhC,EAAAjB,KAAA,MAAAiB,EAAAlB,IAAA,gBAAAkB,EAAAjB,MAAA,aAAAiB,EAAAjB,KAAA,KAAAyC,KAAAxB,EAAAlB,IAAA,WAAAkB,EAAAjB,MAAA,KAAAmF,KAAA,KAAApF,IAAAkB,EAAAlB,IAAA,KAAA1C,OAAA,cAAAoF,KAAA,kBAAAxB,EAAAjB,MAAAiD,IAAA,KAAAR,KAAAQ,GAAAhD,CAAA,EAAA2F,OAAA,SAAA5C,GAAA,QAAAU,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAA2C,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA5C,CAAA,GAAA4F,MAAA,SAAA/C,GAAA,QAAAY,EAAA,KAAAR,WAAAzH,OAAA,EAAAiI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAQ,WAAA,aAAApC,EAAAjB,KAAA,KAAA8F,EAAA7E,EAAAlB,IAAAqD,EAAAP,EAAA,QAAAiD,CAAA,YAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAtD,SAAAiC,EAAA+C,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAArF,SAAA,KAAA0C,SAAA4B,GAAA1B,CAAA,GAAAvC,CAAA,UAAAie,GAAAhX,EAAAiX,GAAA,IAAAnX,EAAA7G,OAAA6G,KAAAE,GAAA,GAAA/G,OAAAie,sBAAA,KAAAC,EAAAle,OAAAie,sBAAAlX,GAAAiX,IAAAE,EAAAA,EAAApU,QAAA,SAAAqU,GAAA,OAAAne,OAAAoe,yBAAArX,EAAAoX,GAAAld,UAAA,KAAA4F,EAAAtB,KAAAoD,MAAA9B,EAAAqX,EAAA,QAAArX,CAAA,UAAA8W,GAAA3f,GAAA,QAAA8H,EAAA,EAAAA,EAAA8C,UAAA/K,OAAAiI,IAAA,KAAAuY,EAAA,MAAAzV,UAAA9C,GAAA8C,UAAA9C,GAAA,GAAAA,EAAA,EAAAiY,GAAA/d,OAAAqe,IAAA,GAAAvgB,SAAA,SAAAuC,GAAA6K,GAAAlN,EAAAqC,EAAAge,EAAAhe,GAAA,IAAAL,OAAAse,0BAAAte,OAAAue,iBAAAvgB,EAAAgC,OAAAse,0BAAAD,IAAAN,GAAA/d,OAAAqe,IAAAvgB,SAAA,SAAAuC,GAAAL,OAAAG,eAAAnC,EAAAqC,EAAAL,OAAAoe,yBAAAC,EAAAhe,GAAA,WAAArC,CAAA,UAAAoK,GAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAAlI,EAAA8B,GAAA,QAAAwC,EAAA0D,EAAAhI,GAAA8B,GAAA5B,EAAAoE,EAAApE,KAAA,OAAAmD,GAAA,YAAAN,EAAAM,EAAA,CAAAiB,EAAAX,KAAAb,EAAA5C,GAAAoG,QAAAxD,QAAA5C,GAAAb,KAAA4I,EAAAC,EAAA,UAAAsC,GAAA3I,GAAA,sBAAAV,EAAA,KAAAoJ,EAAAhC,UAAA,WAAAjC,SAAA,SAAAxD,EAAAC,GAAA,IAAAiF,EAAAnG,EAAAyG,MAAAnH,EAAAoJ,GAAA,SAAAtC,EAAA/H,GAAA6H,GAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,OAAAhI,EAAA,UAAAgI,EAAAnH,GAAAgH,GAAAC,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAA,QAAAnH,EAAA,CAAAkH,OAAAvE,EAAA,cAAA+G,GAAA9M,EAAA+M,GAAA,QAAAjF,EAAA,EAAAA,EAAAiF,EAAAlN,OAAAiI,IAAA,KAAAkF,EAAAD,EAAAjF,GAAAkF,EAAA/J,WAAA+J,EAAA/J,aAAA,EAAA+J,EAAA9J,cAAA,YAAA8J,IAAAA,EAAA7J,UAAA,GAAAnB,OAAAG,eAAAnC,EAAAiN,GAAAD,EAAA3K,KAAA2K,EAAA,WAAAE,GAAA9K,EAAAC,EAAAE,GAAA,OAAAF,EAAA4K,GAAA5K,MAAAD,EAAAJ,OAAAG,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAAE,EAAAH,CAAA,UAAA6K,GAAA9I,GAAA,IAAA9B,EAAA,SAAA8K,EAAAC,GAAA,cAAA7H,GAAA4H,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAA1K,OAAA6K,aAAA,QAAAvH,IAAAsH,EAAA,KAAAE,EAAAF,EAAA1N,KAAAwN,EAAAC,UAAA,cAAA7H,GAAAgI,GAAA,OAAAA,EAAA,UAAA7G,UAAA,uDAAAzF,OAAAkM,EAAA,CAAAK,CAAArJ,GAAA,iBAAAoB,GAAAlD,GAAAA,EAAApB,OAAAoB,EAAA,CA0CO,IAAMgsB,GAAS,WAWpB,SAAAA,EAAmB/hB,IArDrB,SAAAoB,EAAAC,GAAA,KAAAD,aAAAC,GAAA,UAAAjH,UAAA,qCAqDmDkH,CAAA,KAAAygB,GAAA,KAA9B/hB,QAAAA,EAA4BY,GAAA,sBAAAA,GAAA,oBAAAA,GAAA,2BAAAA,GAAA,2BAAAA,GAAA,qBAAAA,GAAA,iBAFiB,CAAC,GAG/DiB,KAAKyU,MAAQ,IAAInV,CACnB,CAvDF,IAAAE,EAAAE,EAiSGygB,EAJAC,EARAC,EAlCAC,EAhDAC,EA5IAC,EAsVA,OA7YHhhB,EAuDG0gB,EAvDHxgB,EAuDG,EAAAxL,IAAA,SAAAE,OAAAosB,EAAA9hB,GAAAhL,KAAAyG,MAED,SAAAuC,EAAaoS,GAAwB,IAAA2R,EAAAjY,EAAAgL,EAAAD,EAAAG,EAAA3T,EAAAiT,EAAAvJ,EAAA,OAAA/V,KAAAwB,MAAA,SAAA+H,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAvE,MAAA,OA+CnC,OA7CM+nB,EAAMjP,GAAA,GAAQ1C,EAAI4R,YAQhBlY,EAAwCsG,EAAxCtG,SAAUgL,EAA8B1E,EAA9B0E,MAAOD,EAAuBzE,EAAvByE,UAAWG,EAAY5E,EAAZ4E,QAE9B3T,EAAS,IAAI4gB,EAAAA,GAAMnP,GAAA,CACvB/G,WAAY,IAAImW,EAAAA,EAChBC,SAAU,GACVC,QAAS,EACTC,cAAe,CAAC,IAAIC,EAAAA,IACjBP,IAGLzgB,KAAKD,OAASA,EAEdA,EAAOoV,UAAU,WACjBnV,KAAKyU,MAAMwM,UAAUlhB,GAEjByI,GACFzI,EAAOggB,SAASxsB,MAAK,kBACnBiV,EAAS7W,SAAQ,SAACmM,EAAGnE,GACnBoG,EAAOmhB,aAAqC,MAAK1P,GAAAA,GAAA,GAC5C1T,GAAC,IACJwJ,WAAkB,IAAN3N,IAEhB,GAAE,IAGNoG,EAAOohB,kBAAoB,CAAEC,KAAMC,EAAAA,GAEnCthB,EAAO+f,WAAW,OAAQ,YAC1B9f,KAAKshB,uBACLvhB,EAAO+f,WAAW,cAAe,eAAgB,CAC/CyB,kBAAmB,CACjB,gEAGJ1B,GAAqB9f,GACrBC,KAAKwhB,sBAELvkB,EAAAvE,KAAA,GAEwBqH,EAAO0hB,eAAc,QAU1C,OAVGzO,EAAS/V,EAAAhF,KACTwR,EAAiC,GACvC5V,OAAO4C,OAAOuc,GAAWrhB,SAAQ,SAACmM,GAChC,IAAMmM,EACJnM,EAAEmJ,MAAMrF,MACR9D,EAAEmJ,MAAMrF,KAAK8f,QACb5jB,EAAEmJ,MAAMrF,KAAK8f,OAAOC,kBAClB1X,GACFR,EAAUrQ,KAAK6Q,EAEnB,IAAGhN,EAAAvE,KAAA,GAEGsH,KAAK4hB,cAAc9S,EAAIyE,WAAU,eAAAtW,EAAAvE,KAAA,GACjCsH,KAAK6hB,UAAU/S,EAAI0E,OAAM,eAAAvW,EAAAvE,KAAA,GACzBsH,KAAK8hB,YAAYhT,EAAI4E,SAAQ,QACnC1T,KAAK+hB,8BAEL/hB,KAAKgiB,gBAAgB,CACnBhP,UAAAA,EACAQ,MAAAA,EACAE,QAAAA,EACAH,UAAAA,EACA9J,UAAAA,IAGFzJ,KAAKiiB,sBAAsB,yBAAAhlB,EAAA/B,OAAA,GAAAwB,EAAA,UAC5B,SAAAJ,GAAA,OAAAkkB,EAAAhkB,MAAA,KAAAC,UAAA,KAAAvI,IAAA,UAAAE,MAED,WAAkB,IAAA0Q,EAAA,KAUhB9E,KAAKD,OAAOmiB,OAAO,CAAEC,SAAS,GAAS,CAAEC,cATnB,SAACne,GAAqB,IAAAoe,EACpC7M,EAASvR,EAAEuR,OAEjB1Q,EAAK/E,OAAOoiB,QACV3M,EACAhK,KAAKkD,IAAGlS,MAARgP,KAAY,CAAsB,QAAtB6W,EAACvd,EAAK/E,OAAOuiB,iBAAS,IAAAD,EAAAA,EAAI,EAAG,KAE7C,GAGF,GAgBA,CAAAnuB,IAAA,sBAAAE,MAEA,WAA8B,IAAAsU,EAAA,KACtB6Z,EAAarxB,SAASwR,uBAAuB,YAAY,GACzD8f,EAAgBtxB,SAASwR,uBAAuB,kBAAkB,GAClE+f,EAAoBvxB,SAASwR,uBACjC,0BACA,GACIggB,EAAaxxB,SAASwR,uBAC1B,kBACA,GAaF8f,EAAcrxB,iBAAiB,SAAS,WAHtCsxB,EAAkBjkB,UAAY,GAC9B+jB,EAAWtwB,UAAUmhB,OAAO,YAI9B,IAEA,IAAMuP,EAAe3iB,KAAKD,OAAO6iB,oBAAoB,CACnD7b,KAAM,qDACN8b,QAAO,WAlBS,IACVpE,EACA1X,EADA0X,EAAOqE,SAASrE,KAChB1X,EAAO2B,EAAKqa,yBAAyBtE,GAC3CiE,EAAWtuB,MAAQqqB,EACnBgE,EAAkBjkB,UAAYuI,EAC9Bic,IAAAA,SACAT,EAAWtwB,UAAUqhB,IAAI,YAczB,IAEFtT,KAAKD,OAAO+f,WAAW6C,EAAc,eACvC,GAAC,CAAAzuB,IAAA,8BAAAE,OAAAmsB,EAAA7hB,GAAAhL,KAAAyG,MAED,SAAAuH,IAAA,IAAAsH,EAAAkM,EAAAnM,EAAA,YAAArV,KAAAwB,MAAA,SAAA6M,GAAA,cAAAA,EAAA/G,KAAA+G,EAAArJ,MAAA,OAUI,OATIsQ,EAAU,IAAIqL,GAA0BrU,KAAM,CAClD9N,OAAQ,SAACwT,GACHA,GACFia,GAAsB,cACtB5W,EAAKhJ,OAAOigB,oBAEZjX,EAAKhJ,OAAOkgB,iBAEhB,IACAle,EAAArJ,KAAA,EAC0BsH,KAAKD,OAAOkjB,oBAAoBja,GAAQ,OAA9DkM,EAAanT,EAAA9J,KACnB+H,KAAKD,OAAO+f,WAAW5K,EAAe,YACtCwK,GAAqB,cAAc,kBAAMxK,EAAc2N,SAAQ,EAAM,IAAE,wBAAA9gB,EAAA7G,OAAA,GAAAwG,EAAA,UACxE,kBAAA6e,EAAA/jB,MAAA,KAAAC,UAAA,KAAAvI,IAAA,uBAAAE,MAED,WAA+B,IAAA8uB,EAAA,KAEvBC,EAAgBnjB,KAAKD,OAAO6iB,oBAAoB,CACpD7b,KAAM,yDACNP,MAAO,sBACPqc,QAJc,WAAH,OAASK,EAAKE,SAAS,IAMpCpjB,KAAKD,OAAO+f,WAAWqD,EAAe,WACxC,GAAC,CAAAjvB,IAAA,2BAAAE,MAED,SAAiC2Q,GAmB/B,MAZa,yDAAH5R,OAA4D4R,EAAG,yCAAA5R,OAN1D,CACb,CAAE0N,GAAI,KAAM3G,KAAM,UAAWqM,KAAM,kBACnC,CAAE1F,GAAI,KAAM3G,KAAM,KAAMqM,KAAM,aAC9B,CAAE1F,GAAI,KAAM3G,KAAM,WAAYqM,KAAM,2BAKjC/I,KACC,SAACM,GAAC,+CAAA3K,OAA8C2K,EAAE+C,GAAE,mFAAA1N,OAE1B2K,EAAEyI,KAAI,mEAAApT,OAEd2K,EAAE5D,KAAI,oCAGzBiH,KAAK,IAAG,eAGf,GAAC,CAAAjN,IAAA,gBAAAE,OAAAksB,EAAA5hB,GAAAhL,KAAAyG,MAED,SAAA2I,EACEhF,EACA6O,GAAqC,IAAAC,EAAA,OAAAlZ,KAAAwB,MAAA,SAAAqO,GAAA,cAAAA,EAAAvI,KAAAuI,EAAA7K,MAAA,WAEjCoF,EAAG,CAAFyF,EAAA7K,KAAA,QAIK,OAHFkU,EACJ9O,EAAE6O,gBAAkB7O,EAAE6O,eAAeC,MAChC9O,EAAE6O,eAAeC,MAClB,CAAC,EAACrJ,EAAAnL,OAAA,SACD4H,KAAKD,OAAOsjB,YAAY,CAC7B3Z,SAAU5L,EAAE4L,SACZ7I,GAAI/C,EAAE+C,GACN8L,eAAc6E,GAAAA,GAAAA,GAAA,GACT1T,EAAE6O,gBAAc,IACnBC,MAAK4E,GAAAA,GAAA,GACA5E,GAAK,IACR4H,OAAQ,IAEV8O,YAAY,EACZC,cAAa/R,GAAAA,GAAA,GACR5E,GAAK,IACR4H,OAAQ,KAEP7H,GAAc,IACjBuC,iBAAkB/D,GAChBnL,KAAK7B,QAAQ4Q,WAAa,GAC1BjR,EAAE6O,eACFgF,EAAAA,SAGJ,wBAAApO,EAAArI,OAAA,GAAA4H,EAAA,UAEL,SAAAH,EAAAC,GAAA,OAAA0d,EAAA9jB,MAAA,KAAAC,UAAA,KAAAvI,IAAA,YAAAE,OAAAisB,EAAA3hB,GAAAhL,KAAAyG,MAED,SAAAqK,EAAwBqJ,GAA2B,IAAA5K,EAAAC,EAAApF,EAAA,OAAApK,KAAAwB,MAAA,SAAAuP,GAAA,cAAAA,EAAAzJ,KAAAyJ,EAAA/L,MAAA,WAC7CmV,EAAO,CAAFpJ,EAAA/L,KAAA,SAAAuK,EAAAO,GACSqK,GAAKpJ,EAAAzJ,KAAA,EAAAiI,EAAArF,IAAA,WAAAsF,EAAAD,EAAAQ,KAAA5L,KAAE,CAAF4M,EAAA/L,KAAA,SAAT,OAADoF,EAACoF,EAAA9O,MAAAqQ,EAAA/L,KAAA,EACJsH,KAAK4hB,cAAc9jB,GAAE,OAAA2G,EAAA/L,KAAA,gBAAA+L,EAAA/L,KAAA,iBAAA+L,EAAAzJ,KAAA,GAAAyJ,EAAAT,GAAAS,EAAA,SAAAxB,EAAAgB,EAAAQ,EAAAT,IAAA,eAAAS,EAAAzJ,KAAA,GAAAiI,EAAAiB,IAAAO,EAAA5I,OAAA,6BAAA4I,EAAAvJ,OAAA,GAAAsJ,EAAA,yBAGhC,SAAA3B,GAAA,OAAAwd,EAAA7jB,MAAA,KAAAC,UAAA,KAAAvI,IAAA,cAAAE,OAAAgsB,EAAA1hB,GAAAhL,KAAAyG,MAED,SAAAqpB,EAA0B1mB,GAA2B,OAAApJ,KAAAwB,MAAA,SAAAuuB,GAAA,cAAAA,EAAAzoB,KAAAyoB,EAAA/qB,MAAA,cAAA+qB,EAAArrB,OAAA,SAC5C0E,GAAUkD,KAAKD,OAAOsjB,YAAYvmB,IAAO,wBAAA2mB,EAAAvoB,OAAA,GAAAsoB,EAAA,UACjD,SAAApf,GAAA,OAAAgc,EAAA5jB,MAAA,KAAAC,UAAA,KAAAvI,IAAA,kBAAAE,OAAA+rB,EAAAzhB,GAAAhL,KAAAyG,MAED,SAAAupB,EAA8B5U,GAM7B,IAAA6U,EAAAC,EAAAC,EAAAC,EAAA5xB,EAAA6xB,EAAA,YAAArwB,KAAAwB,MAAA,SAAA8uB,GAAA,cAAAA,EAAAhpB,KAAAgpB,EAAAtrB,MAAA,OAMiD,OAL1CirB,EAAmBzyB,SAASwR,uBAAuB,cAAc,GAEjEkhB,EAAW,WAAH,OAASD,EAAiB1xB,UAAUgyB,SAAS,YAAY,EACjEJ,EAAiB,WAAH,OAASF,EAAiB1xB,UAAUqhB,IAAI,YAAY,EAClEwQ,EAAmB,WAAH,OACpBH,EAAiB1xB,UAAUmhB,OAAO,YAAY,EAAA4Q,EAAAtrB,KAAA,EAE1CsH,KAAKD,OAAOggB,SAAQ,OAE1B/f,KAAKgI,KAAO,IAAIsK,GAAiBtS,KAAIwR,GAAAA,GAAA,GAChC1C,GAAG,IACNK,aAAc,WACZ4U,EAAKG,iBACP,EACAnkB,OAAQC,KAAKD,UAGT7N,EAAS,SAACwT,IACdA,OAAoB9N,IAAX8N,EAAuBA,EAASke,MAEvCjE,GAAsB,QACtBoE,EAAK/b,MAAQ+b,EAAK/b,KAAKqL,OACvBwQ,MAEAE,EAAK/b,MAAQ+b,EAAK/b,KAAKiL,OACvB6Q,IAEJ,EACAH,EAAiBxyB,iBAAiB,SAAS,WACzCe,GACF,IACAiyB,YAAW,WACTjyB,GACF,GAAG,KACHwtB,GAAqB,QAAQ,kBAAMxtB,GAAO,EAAM,IAAE,yBAAA8xB,EAAA9oB,OAAA,GAAAwoB,EAAA,UACnD,SAAArf,GAAA,OAAA8b,EAAA3jB,MAAA,KAAAC,UAAA,KAAAvI,IAAA,kBAAAE,MAED,WACM4L,KAAKokB,UAAUC,6BAA6BC,EAAAA,GAC9CtkB,KAAKokB,UAAUC,kBAAkBE,SAEnCvkB,KAAKD,OAAO8c,YAAY,YAC1B,GAAC,CAAA3oB,IAAA,oBAAAE,MAED,SAA0BuF,GAAqB,IAAA6qB,EAAA,KAC7CxkB,KAAKkkB,kBACL,IAAMO,EAAa9qB,EAAE+qB,mBACfC,EAAaF,EAAWA,EAAW/yB,OAAS,GAClD,GAAIizB,EAAY,CACd,IAAMC,EACJ5kB,KAAK7B,QAAQuV,SACbiR,EAAWE,UAAY7kB,KAAK7B,QAAQuV,QAAQhK,SAE9Cib,EAAWG,WAAWvxB,MAAK,SAACqO,GACtBA,GACFA,EAAKmjB,YAAYxxB,MAAK,SAACqJ,GACrB4nB,EAAKzkB,OAAO2Y,SAAS,UAAW,CAC9B7X,GAAI,YACJvD,KAAMV,EACNgQ,MAAO,CAAEE,MAAO,QAASC,QAAQ,EAAMoQ,YAAa,OACpD1I,OAAO,EACPC,aAAc,CACZ7Q,SAAU,IACV8Q,mBAAoB,SAAC1Q,GAKnB,GAJAA,EAAE+gB,SAAQ,WACRR,EAAKN,kBACLM,EAAKzkB,OAAOklB,gBACd,IACIhhB,EAAErH,QACJ,OAAIgoB,EAKKJ,EAAK/P,MAAMpY,yBAAyB,CACzCO,QAAAA,IAGK4nB,EAAK/P,MAAME,mBAChB/X,EACA+nB,EAAWE,QACXjjB,EAAKsjB,WAAWhlB,WAIxB,IAGN,GAEJ,GACF,CACF,GAAC,CAAAhM,IAAA,sBAAAE,MAED,WAA8B,IAAA+wB,EAAA,KAC5BnlB,KAAKD,OAAOyH,QAAQC,GAAG,SAAS,WAC9B0d,EAAKplB,OAAOqlB,eAAe,WAAY,SACzC,IACAplB,KAAKD,OAAOyH,QAAQC,GAAG,cAAc,SAACxD,GAAC,OAAKA,GAAKkhB,EAAKE,kBAAkBphB,EAAE,GAC5E,IA7YFvE,GAAAf,GAAAa,EAAAlO,UAAAoO,GAAA7L,OAAAG,eAAAwL,EAAA,aAAAxK,UAAA,IA6YGkrB,CAAA,CAnWmB,0MC3Cf,IAAM5Q,EAAoD,CAC/D,CAAC,GAAI,UACL,CAAC,GAAI,SACL,CAAC,GAAI,SACL,CAAC,GAAI,SACL,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,WAGKgW,EAAc,WACdC,EAAW,QACXC,EAAW,QACXC,EAAY,SAEZxyB,EAAyByyB,6BAE3B/T,EAAM,IAAI5T,KAGrB4nB,aAAY,WACVhU,EAAM,IAAI5T,IACZ,GAAG,25CClBH,IAAM6nB,EAA2C,CAC/CtU,MAAO,IACP1S,MAAO,CAAE0M,UAAW,YAAaD,SAAU,MAGvC0B,EAAsB,CAC1BA,QAAQ,EACRC,YAAa,UACb6Y,cAAe,EACfjI,QAAS,GAiEX,EA9D4B,CAC1B8C,WAAY,CACV7uB,OAAQ,MACRi0B,OAAQ,CAAC,MAAO,OAAQ,OAAQ,QAChCC,QAAS,oCACTC,UAAW,CACT,CACEtc,SAAU,EACVuc,KAAK,EACLtZ,eAAgB,CAAE2W,YAAY,MAIpCvU,UAAW,GACXvG,SAAU,CACR,CACE0d,MAAO,OAMX3S,UAAW,CACT7J,SAAU,iBACV7I,GAAIykB,EAAAA,GACJ3Y,eAAgB,CACdC,MAAK4E,EAAA,CAAI1E,MAAO,kBAAqBC,GACrCnO,MAAO,CAAE0M,UAAW,UAAWD,SAAU,SAG7CqI,QAAS,CACPhK,SAAU,IACV7I,GAAI4kB,EAAAA,GACJ9Y,eAAgB,CACd2W,YAAY,EACZ1W,MAAK4E,EAAA,CACH1E,MAAO,UACP0H,OAAQ,GACLzH,KAITyG,MAAO,CACL,CACE9J,SAAU,IACV7I,GAAI0kB,EAAAA,GACJ5Y,eAAc6E,EAAA,CACZ5E,MAAK4E,EAAA,CAAI1E,MAAO,OAAUC,IACvB6Y,IAGP,CACElc,SAAU,IACV7I,GAAI2kB,EAAAA,GACJ7Y,eAAc6E,EAAA,CACZ5E,MAAK4E,EAAA,CAAI1E,MAAO,UAAaC,IAC1B6Y,MCjEC,IAAIO,EAAAA,EAAIC,GAEhB1wB","sources":["webpack://clear_horizon/./src/bulma.ts","webpack://clear_horizon/./src/utils/fetchSensorData.ts","webpack://clear_horizon/./src/utils/createSensorPopupContent.ts","webpack://clear_horizon/./src/components/Popup.ts","webpack://clear_horizon/./src/utils/index.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/CollapsiblePanel.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/WebmapTreeItem.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BaseMapsContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BookmarksContainer.ts","webpack://clear_horizon/./src/utils/formatTime.ts","webpack://clear_horizon/./src/utils/daysBehindRange.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/LayersContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/FiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/createCalendar.ts","webpack://clear_horizon/./src/utils/layerTimestampExtremum.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/MapSettingsPanel.ts","webpack://clear_horizon/./src/components/GetCoordinateControl/GetCoordinateControl.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/i18n.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/utils.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureLabel.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureAction.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/Measure.ts","webpack://clear_horizon/./src/components/ToggleControl.ts","webpack://clear_horizon/./src/components/createMeasureControl.ts","webpack://clear_horizon/./src/components/ActionMap.ts","webpack://clear_horizon/./src/constants.ts","webpack://clear_horizon/./src/config.ts","webpack://clear_horizon/./src/main.ts"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(\n    document.querySelectorAll('.navbar-burger'),\n    0,\n  );\n\n  // Check if there are any navbar burgers\n  if ($navbarBurgers.length > 0) {\n    // Add a click event on each of them\n    $navbarBurgers.forEach((el) => {\n      el.addEventListener('click', () => {\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target);\n\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n        el.classList.toggle('is-active');\n        if ($target) {\n          $target.classList.toggle('is-active');\n        }\n      });\n    });\n  }\n});\n","import { SENSOR_MEASUREMENT_API } from '../constants';\nimport type { SensorMeasureItem, SensorMeasureValueType } from '../interfaces';\n\nexport interface FetchSensorData {\n  sensorId: string;\n  valueType?: SensorMeasureValueType;\n  lastHours?: number;\n  start?: Date;\n  end?: Date;\n}\n\nexport function fetchSensorData({\n  valueType,\n  lastHours,\n  sensorId,\n  start,\n  end,\n}: FetchSensorData): Promise<SensorMeasureItem[]> {\n  const params: Record<string, string> = {\n    sensor_id: sensorId,\n  };\n  if (valueType) {\n    params.value_type = valueType;\n  }\n  if (lastHours) {\n    params.lasthours = String(lastHours);\n  } else {\n    if (start) {\n      params.start = start.toISOString();\n    }\n    if (end) {\n      params.end = end.toISOString();\n    }\n  }\n\n  const apiUrl = SENSOR_MEASUREMENT_API;\n\n  return fetch(\n    `${apiUrl}api/v1/measurements?${new URLSearchParams(params).toString()}`,\n    {\n      method: 'GET',\n    },\n  ).then((resp) => {\n    return resp.json();\n  });\n}\n","import { fetchSensorData } from './fetchSensorData';\n\nimport type { Feature } from 'geojson';\n\nimport type { SensorMeasureValueType } from '../interfaces';\n\nexport interface CreateExportPopupContentProps {\n  feature: Feature;\n  end?: Date;\n  start?: Date;\n}\n\nexport async function createSensorPopupContent({\n  feature,\n}: CreateExportPopupContentProps): Promise<HTMLElement> {\n  const popupElement = document.createElement('div');\n  const sensorId = feature.properties?.SID_T;\n  if (sensorId !== undefined) {\n    const sensor = await fetchSensorData({\n      sensorId,\n      // end,\n      // start,\n      lastHours: 24,\n      // valueType: 'P1',\n    });\n    if (sensor.length) {\n      const chartCanvas = document.createElement('canvas');\n      sensor.reverse();\n      // @ts-ignore\n      await import('chartjs-adapter-moment');\n      const { Chart } = await import('chart.js/auto');\n\n      const types: SensorMeasureValueType[] = ['P1', 'P2'];\n\n      new Chart(chartCanvas, {\n        data: {\n          datasets: types.map((t) => {\n            return {\n              type: 'line',\n              label: t,\n              // pointRadius: 0,\n\n              data: sensor\n                .filter((s) => s.value_type === t)\n                .map((row) => {\n                  const x = new Date(row.datetime).getTime();\n                  return {\n                    x,\n                    y: row.value,\n                  };\n                }),\n            };\n          }),\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                unit: 'hour',\n                // displayFormats: {\n                //   day: 'MMM YYYY',\n                // },\n              },\n            },\n          },\n        },\n      });\n\n      popupElement.appendChild(chartCanvas);\n    } else {\n      const notFoundDiv = document.createElement('div');\n      notFoundDiv.innerHTML = `Данные для приёмника #${sensorId} за последние '24 часа' не найдены`;\n      popupElement.appendChild(notFoundDiv);\n    }\n  }\n  return popupElement;\n}\n","// @ts-ignore\nimport bulmaCarousel from 'bulma-carousel';\n\nimport type {\n  FeatureItemAttachment,\n  ResourceItem,\n} from '@nextgis/ngw-connector';\nimport type { Feature, Geometry } from 'geojson';\n\nimport { prepareColumnValue } from '../utils';\nimport { createSensorPopupContent } from '../utils/createSensorPopupContent';\n\nimport type { NgwMap } from '@nextgis/ngw-map';\n\nimport type { CreateExportPopupContentProps } from '../utils/createSensorPopupContent';\ninterface CollectorDate {\n  year: number;\n  month: number;\n  day: number;\n}\ninterface CollectorTime {\n  hour: number;\n  minute: number;\n  second: number;\n}\n\ninterface KeyValue {\n  key: string;\n  value: any;\n}\n\ntype CollectorProperty = string | number | CollectorDate | CollectorTime;\n\nexport class Popup {\n  private ngwMap!: NgwMap;\n  private _resourceItems: { [resourceId: number]: ResourceItem } = {};\n\n  setNgwMap(ngwMap: NgwMap): void {\n    this.ngwMap = ngwMap;\n  }\n\n  async createSensorPopupContent(\n    props: CreateExportPopupContentProps,\n  ): Promise<HTMLElement> {\n    return createSensorPopupContent(props);\n  }\n\n  createPopupContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(\n    feature: Feature<G, P>,\n    resourceId?: number,\n    attachment?: FeatureItemAttachment[],\n  ): HTMLElement {\n    const popupElement = document.createElement('div');\n    const props = feature.properties;\n    const propContainer = document.createElement('div');\n    if (props) {\n      propContainer.className = 'properties';\n      const propertiesList: KeyValue[] = Object.entries(props).map(\n        ([key, value]) => {\n          return {\n            key,\n            value,\n          };\n        },\n      );\n      propContainer.innerHTML = this.createPropertiesHtml(propertiesList);\n    }\n\n    if (resourceId) {\n      const pre = document.createElement('div');\n      pre.appendChild(propContainer);\n      popupElement.innerHTML = 'Загрузка';\n      this.updateElementContent(pre, resourceId, feature).then(() => {\n        popupElement.innerHTML = '';\n        popupElement.appendChild(pre);\n      });\n      if (attachment && attachment.length) {\n        this._addPhotos(\n          popupElement,\n          attachment,\n          resourceId,\n          Number(feature.id),\n        );\n      }\n    } else {\n      popupElement.appendChild(propContainer);\n    }\n    return popupElement;\n  }\n\n  createPropertiesHtml(\n    properties: Array<{ key: string; value: CollectorProperty }>,\n  ): string {\n    let elem = '';\n    properties.forEach(({ key, value }) => {\n      if (typeof value === 'object' && value) {\n        if ('year' in value) {\n          value = [value.day, value.month, value.year].join('.');\n        } else if ('hour' in value) {\n          value = [value.hour, value.minute].join(':');\n        }\n      }\n      elem += `\n      <div class=\"columns is-mobile\">\n        <div class=\"column is-two-fifths\">${key}</div>\n        <div class=\"column\">${prepareColumnValue(value)}</div>\n      </div>\n      `;\n    });\n    return elem;\n  }\n\n  async updateElementContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(\n    element: HTMLElement,\n    resourceId: number,\n    feature: Feature<G, P>,\n  ): Promise<ResourceItem> {\n    const item = await this._getResourceItem(resourceId);\n    if (item.feature_layer) {\n      const newProperties: KeyValue[] = [];\n      item.feature_layer.fields.forEach((x) => {\n        if (x.grid_visibility) {\n          let property = feature.properties[x.keyname];\n          if (property) {\n            if (typeof property === 'string') {\n              property = property.replace(/\\w+(;)\\w+/g, (a, b) =>\n                a.replace(b, b + ' '),\n              );\n            }\n            newProperties.push({ key: x.display_name, value: property });\n          }\n        }\n      });\n      const newContent = this.createPropertiesHtml(newProperties);\n      const pre = element.getElementsByClassName('properties')[0];\n      if (pre) {\n        pre.innerHTML = newContent;\n      }\n    }\n    return item;\n  }\n\n  async _addPhotos(\n    element: HTMLElement,\n    attachment: FeatureItemAttachment[],\n    id: number,\n    fid: number,\n  ): Promise<void> {\n    const attachmentElement = document.createElement('div');\n\n    attachmentElement.className = 'carousel attachment';\n    for (const img of attachment) {\n      const width = 300;\n      const height = 300;\n      const figure = document.createElement('figure');\n      figure.className = `image is-${width}x${height}`;\n      figure.style.maxHeight = height + 'px';\n      figure.style.maxWidth = width + 'px';\n      const src = await this._loadImage(img, {\n        width,\n        height,\n        id,\n        fid,\n      });\n      const imgElem = document.createElement('img');\n      imgElem.src = src;\n      figure.appendChild(imgElem);\n      attachmentElement.appendChild(figure);\n    }\n    element.appendChild(attachmentElement);\n    bulmaCarousel.attach(attachmentElement);\n  }\n\n  private async _getResourceItem(resourceId: number) {\n    if (!this._resourceItems[resourceId]) {\n      const item = await this.ngwMap.connector.get('resource.item', null, {\n        id: resourceId,\n      });\n      this._resourceItems[resourceId] = item;\n    }\n    return this._resourceItems[resourceId];\n  }\n\n  private _loadImage(\n    img: FeatureItemAttachment,\n    options: { id: number; fid: number; width?: number; height?: number },\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const { width, height } = options;\n      const url =\n        '/api/resource/' +\n        options.id +\n        '/feature/' +\n        options.fid +\n        `/attachment/${img.id}/image` +\n        (width && height ? `?size=${width}x${height}` : '');\n      this.ngwMap.connector\n        .makeQuery<Blob>(url, {}, { responseType: 'blob' })\n        .then((blob) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            resolve(reader.result as string);\n          };\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n}\n","export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function objToUrlStr(obj: { [param: string]: any }): string {\n  let str = '';\n  for (const key in obj) {\n    if (str !== '') {\n      str += '&';\n    }\n    str += key + '=' + encodeURIComponent(obj[key]);\n  }\n  return str;\n}\n\nfunction isValidUrl(str: string): boolean {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function prepareColumnValue(value: unknown): unknown | string {\n  if (typeof value === 'string') {\n    if (isValidUrl(value)) {\n      return `<a href=\"${value}\" target=\"_blank\">${value}</a>`;\n    }\n  }\n  return value;\n}\n","import './CollapsiblePanel.css';\n\ntype GetHTML = () => HTMLElement | Promise<HTMLElement>;\n\nconst LOADING_TEXT = 'Загрузка данных...';\n\nexport interface CollapsiblePanelOptions {\n  title?: string;\n  content: HTMLElement | GetHTML;\n  open?: boolean;\n  parent?: HTMLElement;\n}\n\nexport class CollapsiblePanel {\n  private readonly _container = document.createElement('div');\n  private _content?: HTMLElement;\n  private _toggle?: HTMLElement;\n  private status: boolean;\n\n  constructor(private options: CollapsiblePanelOptions) {\n    this.status = this.options.open !== undefined ? this.options.open : true;\n    this._updateContainer();\n    if (this.options.parent) {\n      this.options.parent.appendChild(this.getContainer());\n    }\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  open(): void {\n    if (\n      this._content &&\n      (!this._content.innerHTML || this._content.innerHTML === LOADING_TEXT)\n    ) {\n      this._updateContent();\n    }\n    // this._container.appendChild(this._content);\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-up');\n    }\n    this.status = true;\n  }\n\n  close(): void {\n    this._cleanContent();\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-down');\n    }\n    this.status = false;\n  }\n\n  toggle(): void {\n    if (this.status) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _getToggleButtonHtml(icon?: string) {\n    return `\n    <a class=\"button is-small\">\n    <span class=\"icon is-small\">\n      <i class=\"${icon}\"></i>\n    </span>\n    </a>\n    `;\n  }\n\n  private _updateContainer() {\n    this._container.innerHTML = '';\n    if (this.options.title) {\n      const header = this._createHeader();\n      this._container.appendChild(header);\n    }\n    const content = document.createElement('div');\n    content.innerHTML = LOADING_TEXT;\n    content.className = 'panel-content';\n    this._content = content;\n    this._container.appendChild(content);\n\n    if (this.status) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  private _createHeader() {\n    const header = document.createElement('div');\n    header.className = 'level is-mobile panel-header';\n\n    const leftLevel = document.createElement('div');\n    leftLevel.className = 'level-left';\n\n    const title = document.createElement('div');\n    title.className = 'level-item panel-header__title';\n    title.innerHTML = this.options.title || '';\n    leftLevel.appendChild(title);\n\n    const rightLevel = document.createElement('div');\n    rightLevel.className = 'level-right';\n    const toggle = document.createElement('div');\n    toggle.className = 'level-item panel-header__toggle';\n    rightLevel.appendChild(toggle);\n\n    toggle.onclick = () => {\n      this.toggle();\n    };\n    this._toggle = toggle;\n\n    header.appendChild(leftLevel);\n    header.appendChild(rightLevel);\n\n    return header;\n  }\n\n  private _cleanContent() {\n    if (this._content) {\n      this._content.innerHTML = '';\n    }\n  }\n\n  private async _updateContent() {\n    this._cleanContent();\n    if (this._content) {\n      const html =\n        typeof this.options.content === 'function'\n          ? await this.options.content()\n          : this.options.content;\n\n      this._content.appendChild(html);\n    }\n    return this._content;\n  }\n}\n","import { WebMap } from '@nextgis/webmap';\nimport { CheckProperty, ChangeEvent } from '@nextgis/item';\nimport { NgwWebmapItem, TreeGroup, TreeLayer } from '@nextgis/ngw-kit';\n\nexport class WebmapTreeItem {\n  private _container?: HTMLElement;\n\n  constructor(layer: NgwWebmapItem) {\n    const container = this._createTreeItem(layer);\n    if (container) {\n      this._container = container;\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  private _createTreeBranch(layers: NgwWebmapItem[]) {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item-children';\n    layers.forEach((x) => {\n      if (x.item) {\n        const item = this._createTreeItem(x);\n        if (item) {\n          elem.appendChild(item);\n        }\n      }\n    });\n    return elem;\n  }\n\n  private _createTreeItem(layer: NgwWebmapItem) {\n    const item: TreeGroup | TreeLayer = layer.item;\n    if (!item) {\n      return false;\n    }\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    if (item.display_name) {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'checkbox');\n      // const value = item.item_type === 'layer' ? item.layer_enabled : true;\n      const visibility = layer.properties.property(\n        'visibility',\n      ) as CheckProperty;\n      input.checked = !!visibility.get();\n\n      if (visibility) {\n        visibility.emitter.on('change', (ev: ChangeEvent) => {\n          input.checked = ev.value;\n        });\n        input.onclick = () => {\n          visibility.set(input.checked, {\n            propagation: WebMap.keys.pressed('ctrl'),\n          });\n        };\n      }\n\n      const name = document.createElement('span');\n      name.innerHTML = item.display_name;\n\n      elem.appendChild(input);\n      elem.appendChild(name);\n    }\n\n    if (\n      item.item_type === 'group' ||\n      (item.item_type === 'root' && item.children.length)\n    ) {\n      const children = layer.tree.getChildren() as NgwWebmapItem[];\n      const treeBranch = this._createTreeBranch(children.reverse());\n      elem.appendChild(treeBranch);\n    }\n    return elem;\n  }\n}\n","import './BaseMapsContainer.css';\n\nimport { NgwMap, LayerAdapter } from '@nextgis/ngw-map';\n\nexport interface BaseMapsContainerOptions {\n  ngwMap: NgwMap;\n}\n\nexport class BaseMapsContainer {\n  private readonly ngwMap: NgwMap;\n  private _container: HTMLElement;\n  private _baseMapsContainer?: HTMLElement;\n\n  constructor(private options: BaseMapsContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n    this.ngwMap.emitter.on('layer:add', (e) => {\n      if (this.ngwMap.isBaseLayer(e)) {\n        this._updateBaseMapContainer();\n      }\n    });\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  private _createContainer() {\n    const container = document.createElement('div');\n    container.className = 'basemaps-contentainer panel-content-padding control';\n\n    const basemaps = document.createElement('div');\n    basemaps.className = 'basemaps-contentainer__layers';\n    this._baseMapsContainer = basemaps;\n    container.appendChild(basemaps);\n    this._updateBaseMapContainer();\n    return container;\n  }\n\n  private _updateBaseMapContainer() {\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.innerHTML = '';\n    }\n    // first checkbox to remove any basemap\n    this._createBaseMapItem();\n    this.ngwMap.getBaseLayers().forEach((x) => {\n      const layer = this.ngwMap.getLayer(x);\n      if (layer) {\n        this._createBaseMapItem(layer);\n      }\n    });\n  }\n\n  private _createBaseMapItem(baseMap?: LayerAdapter) {\n    const control = document.createElement('div');\n    control.className = 'control';\n    const elem = document.createElement('label');\n    elem.className = 'radio basemap-container__item';\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'radio');\n    input.setAttribute('name', 'basemap');\n\n    input.checked = !!baseMap && this.ngwMap.isLayerVisible(baseMap);\n\n    // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n    //   input.checked = ev.value;\n    // });\n    input.onclick = () => {\n      if (baseMap && baseMap.id) {\n        this.ngwMap.toggleLayer(baseMap.id, input.checked);\n      } else {\n        const activeBaseLayer = this.ngwMap.getActiveBaseLayer();\n        if (activeBaseLayer) {\n          this.ngwMap.hideLayer(activeBaseLayer);\n        }\n      }\n    };\n    const layerName = baseMap && (baseMap.name || baseMap.options.name);\n    const displayName = layerName || 'Blank';\n    const name = document.createTextNode(displayName);\n\n    elem.appendChild(input);\n\n    elem.appendChild(name);\n\n    control.appendChild(elem);\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.appendChild(control);\n    }\n  }\n}\n","import './BookmarksContainer.css';\n\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { ResourceHierarchy, FeatureItem } from '@nextgis/ngw-connector';\nimport { GeoJSON, Map } from 'leaflet';\nimport { Polygon } from 'geojson';\nimport { Bookmark } from '../../interfaces';\n\nexport interface BookmarksContainerOptions {\n  ngwMap: NgwMap<Map>;\n  bookmarks: ResourceHierarchy[];\n}\n\nexport class BookmarksContainer {\n  private readonly ngwMap: NgwMap<Map>;\n  private _container: HTMLElement;\n\n  constructor(private options: BookmarksContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'bookmarks-contentainer panel-content-padding ';\n\n    const bookmarksContainer = document.createElement('div');\n    bookmarksContainer.className = 'bookmarks-contentainer__layers';\n    this.options.bookmarks.forEach((b) => {\n      this.ngwMap.connector\n        .get('resource.item', null, { id: b.id })\n        .then((resource) => {\n          if (resource.feature_layer) {\n            const labelField = resource.feature_layer.fields.find(\n              (x) => x.label_field,\n            );\n            if (labelField) {\n              this.ngwMap\n                .fetchNgwLayerItems<Bookmark, Polygon>({ resourceId: b.id })\n                .then((items) => {\n                  items.forEach((x) => {\n                    const elem = this._createBookmarkItem(\n                      x,\n                      labelField.keyname as keyof Bookmark,\n                    );\n                    container.appendChild(elem);\n                  });\n                });\n            }\n          }\n        });\n    });\n    container.appendChild(bookmarksContainer);\n\n    return container;\n  }\n\n  _createBookmarkItem<B extends Bookmark = Bookmark>(\n    bookmark: FeatureItem<B, Polygon>,\n    nameField: keyof B = 'name',\n  ): HTMLElement {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item bookmark';\n    const bookmarkBlock = document.createElement('div');\n    const nameValue = bookmark.fields[nameField];\n    bookmarkBlock.innerHTML = String(nameValue);\n    bookmarkBlock.onclick = () => {\n      const geoJson = new GeoJSON(bookmark.geom);\n      const lMap = this.ngwMap.mapAdapter.map;\n      lMap && lMap.fitBounds(geoJson.getBounds());\n    };\n    elem.appendChild(bookmarkBlock);\n    return elem;\n  }\n}\n","import type { TimeUnit } from '../interfaces';\n\nexport function formatTime(dt: Date, unit: TimeUnit = 'ms'): number | string {\n  const t = dt.getTime();\n  return unit === 's' ? t / 1000 : dt.toISOString();\n}\n","import type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { FiresAdapterOptions, TimeUnit } from '../interfaces';\n\nexport function daysBehindRange(days: number, to?: Date): [Date, Date] {\n  const to_ = to ? to.getTime() : Date.now();\n  const from = to_ - Number(days) * 1000 * 60 * 60;\n  return [from, to_].map((x) => new Date(x)) as [Date, Date];\n}\n\nexport function daysBehindRangeFormat(\n  days: number,\n  unit: TimeUnit = 's',\n  to?: Date,\n): [number | string, number | string] {\n  return daysBehindRange(days, to).map((x) =>\n    unit === 'ISO'\n      ? new Date(x).toISOString()\n      : unit === 's'\n      ? Math.ceil(x.getTime()) / 1000\n      : x.getTime(),\n  ) as [number | string, number | string];\n}\n\nexport function daysBehindFilter(\n  days: number,\n  layer: FiresAdapterOptions,\n  to?: Date,\n): PropertiesFilter {\n  const { timeUnit, dateField } = layer.props;\n  const range = daysBehindRangeFormat(days, timeUnit, to);\n  return range.map((x, i) => [dateField, i ? 'le' : 'ge', x]);\n}\n","import './FiresContainer.css';\n\nimport { defined } from '@nextgis/utils';\n\nimport type { LayerAdapter, NgwMap } from '@nextgis/ngw-map';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { ResourceAdapter, NgwLayerOptions } from '@nextgis/ngw-kit';\nimport { FireResource } from '../../interfaces';\n\nexport interface LayersContainerOptions {\n  ngwMap: NgwMap;\n  layers: NgwLayerOptions<'GEOJSON'>[];\n}\n\nexport class LayersContainer<\n  O extends LayersContainerOptions = LayersContainerOptions,\n> {\n  protected readonly ngwMap: NgwMap;\n  protected _container: HTMLElement;\n\n  constructor(protected options: O) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  protected _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'fires-contentainer panel-content-padding ';\n\n    const firesEl = document.createElement('div');\n    firesEl.className = 'fires-contentainer__layers';\n    for (const f of this.options.layers) {\n      this._createFireItem(f, firesEl);\n    }\n    container.appendChild(firesEl);\n\n    return container;\n  }\n\n  protected onLayerAdd(id: string, cb: (layer: ResourceAdapter) => void): void {\n    const ngwMap = this.options.ngwMap;\n    const layer = ngwMap && (ngwMap.getLayer(id) as ResourceAdapter);\n    if (layer) {\n      cb(layer);\n    } else {\n      const onLayerAdd = (e: LayerAdapter) => {\n        if (e.id === id) {\n          cb(e as ResourceAdapter);\n          this.ngwMap.emitter.off('layer:add', onLayerAdd);\n        }\n      };\n      this.ngwMap.emitter.on('layer:add', onLayerAdd);\n    }\n  }\n\n  private _createFireItem(fire: FireResource, container: HTMLElement): void {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    const id = fire.id;\n    if (!defined(id)) return;\n\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = 'загрузка...';\n    container.appendChild(wrapper);\n\n    const createItem = (layer_: ResourceAdapter): void => {\n      const item = layer_.item;\n      wrapper.innerHTML = '';\n      if (item) {\n        const input = document.createElement('input');\n        input.setAttribute('type', 'checkbox');\n\n        input.checked = true;\n\n        // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n        //   input.checked = ev.value;\n        // });\n        input.onclick = () => {\n          this.ngwMap.toggleLayer(id, input.checked);\n        };\n\n        const name = document.createElement('span');\n        const displayName = item.resource.display_name.split('__')[0];\n        name.innerHTML = displayName.replace('fires', '').trim();\n        const symbol = this._createSymbol(fire);\n        elem.appendChild(input);\n        elem.appendChild(symbol);\n        elem.appendChild(name);\n        wrapper.appendChild(elem);\n      }\n    };\n    this.onLayerAdd(id, (layer) => createItem(layer));\n  }\n\n  private _createSymbol(fire: FireResource): HTMLElement {\n    const symbol = document.createElement('span');\n    symbol.className = 'item-symbol';\n    if (fire.adapterOptions?.paint) {\n      const { color, stroke, strokeColor } = fire.adapterOptions\n        ?.paint as CirclePaint;\n      if (typeof color === 'string') {\n        symbol.style.color = color;\n        symbol.style.backgroundColor = color;\n      }\n      if (stroke && typeof strokeColor === 'string') {\n        symbol.style.borderColor = strokeColor;\n      }\n    }\n    return symbol;\n  }\n}\n","import { formatTime } from '../../utils/formatTime';\nimport { createCalendar } from './createCalendar';\nimport { LayersContainer, LayersContainerOptions } from './LayersContainer';\n\nimport type { ResourceAdapter } from '@nextgis/ngw-kit';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { CreateCalendarOptions } from './createCalendar';\nimport type { FiresLayerProps } from '../../interfaces';\n\nexport interface FiresContainerOptions extends LayersContainerOptions {\n  dateRange: [Date | undefined, Date | undefined];\n  defaultDateRange: [Date | undefined, Date | undefined];\n  timedelta: number;\n  onDateChange?: () => void;\n}\n\nexport class FiresContainer extends LayersContainer<FiresContainerOptions> {\n  protected _createContainer(): HTMLElement {\n    const container = super._createContainer();\n\n    const calendarWrapper = this._createCalendar();\n    container.insertBefore(calendarWrapper, container.firstChild);\n    return container;\n  }\n\n  private _createCalendar(): HTMLElement {\n    const calendarWrapper = document.createElement('div');\n    const fires = this.options.layers;\n\n    const promises: Promise<ResourceAdapter>[] = [];\n    fires.forEach((x) => {\n      const id = x.id;\n      if (id) {\n        const promise = new Promise<ResourceAdapter>((resolve) => {\n          this.onLayerAdd(id, resolve);\n        });\n        promises.push(promise);\n      }\n    });\n    Promise.all(promises).then((fires) => {\n      const block = this._buildCalendarBlock(\n        fires,\n        this.options.dateRange,\n        this.options.defaultDateRange,\n      );\n      calendarWrapper.appendChild(block);\n    });\n\n    return calendarWrapper;\n  }\n\n  private _buildCalendarBlock(\n    layers: ResourceAdapter[],\n    extremeItems: [Date?, Date?],\n    defaultItems: [Date?, Date?],\n  ) {\n    const [min, max]: (Date | undefined)[] = extremeItems;\n    const [startDate, endDate]: (Date | undefined)[] = defaultItems;\n    const opt: CreateCalendarOptions = {\n      timedelta: this.options.timedelta,\n      onChange: (e) => {\n        for (const l of layers) {\n          const { dateField, timeUnit } = (l.options.props ||\n            {}) as FiresLayerProps;\n          if (dateField) {\n            const filter: PropertiesFilter = [];\n            if (e.start) {\n              filter.push([dateField, 'ge', formatTime(e.start, timeUnit)]);\n            }\n            if (e.end) {\n              filter.push([dateField, 'le', formatTime(e.end, timeUnit)]);\n            }\n            if (l.propertiesFilter) {\n              l.propertiesFilter(filter);\n            }\n          }\n        }\n        if (this.options.onDateChange) {\n          this.options.onDateChange();\n        }\n      },\n    };\n    if (min) {\n      opt.minDate = min;\n    }\n    if (startDate) {\n      opt.startDate = startDate;\n    }\n    if (max) {\n      opt.maxDate = max;\n    }\n    if (endDate) {\n      opt.endDate = endDate;\n    }\n    return createCalendar(opt);\n  }\n}\n","import 'flatpickr/dist/flatpickr.min.css';\nimport flatpickr from 'flatpickr';\n// import rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\nimport { Russian } from 'flatpickr/dist/l10n/ru.js';\nimport { DATE_RANGE_SELECT } from '../../constants';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { debounce } from '../../../@nextgis/packages/utils/src';\nexport interface CreateCalendarOptions {\n  maxDate?: Date;\n  minDate?: Date;\n  startDate?: Date;\n  endDate?: Date;\n  timedelta: number;\n  onChange: (val: { start?: Date; end?: Date }) => void;\n}\n\nexport function createCalendar(options: CreateCalendarOptions): HTMLElement {\n  const { onChange, maxDate, minDate, startDate, endDate, timedelta } = options;\n  const html = document.createElement('div');\n  html.className = 'field is-horizontal';\n  html.innerHTML = `\n  <button class=\"button calendar-open calendar-control-btn is-small\">\n    <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n  </button>\n    <div class=\"field\">\n        <input class=\"input input-from is-small\" type=\"text\" >\n    </div>\n\n    <div class=\"select is-small\">\n      <select class=\"select-input\">\n        ${DATE_RANGE_SELECT.map((x) => {\n          return `<option ${timedelta === x[0] ? 'selected' : ''} value=${\n            x[0]\n          }>${x[1]}</option>`;\n        })}\n      </select>\n    </div>\n    <button class=\"button calendar-clean calendar-control-btn is-small\">✖</button>\n    `;\n\n  // <div class=\"field\">\n  //     <input class=\"input input-to is-small\" type=\"text\" >\n  // </div>\n\n  const select = html.querySelector('.select-input') as HTMLSelectElement;\n  const inputFrom = html.querySelector('.input.input-from') as HTMLInputElement;\n  const calendarCleanBtn = html.querySelector(\n    '.calendar-clean',\n  ) as HTMLButtonElement;\n  const calendarOpenBtn = html.querySelector(\n    '.calendar-open',\n  ) as HTMLButtonElement;\n  const today = new Date();\n\n  const changeFunction = debounce((prop: { start: Date; end: Date }) => {\n    if (prop.start && prop.end) {\n      onChange(prop);\n    }\n  });\n\n  const defaultDate = startDate && endDate ? [startDate, endDate] : undefined;\n\n  const datepicker = flatpickr(inputFrom, {\n    mode: 'range',\n    locale: Russian,\n    allowInput: true,\n    maxDate: maxDate || today,\n    minDate,\n    defaultDate,\n    // plugins: [rangePlugin({ input: inputTo })],\n    onChange: ([start, end]) => {\n      select.value = '';\n      updateCleanBtnDisplay();\n      changeFunction({ start, end });\n    },\n  });\n  const updateCleanBtnDisplay = () => {\n    calendarCleanBtn.style.display =\n      Number(select.value) === timedelta ? 'none' : 'block';\n  };\n  updateCleanBtnDisplay();\n\n  const setRange = (val: number) => {\n    updateCleanBtnDisplay();\n    const [start, end] = daysBehindRange(val, endDate);\n    datepicker.setDate([start, end]);\n    changeFunction({ start, end });\n  };\n  calendarOpenBtn.onclick = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    datepicker.isOpen ? datepicker.close() : datepicker.open();\n  };\n  calendarCleanBtn.onclick = () => {\n    select.value = String(timedelta);\n    setRange(timedelta);\n  };\n\n  select.onchange = () => {\n    updateCleanBtnDisplay();\n    setRange(Number(select.value));\n  };\n\n  // calendar.on('select', () => {\n  //   // const val = calendar.value(); // string - string\n  //   onChange({ ...calendar.date });\n  // });\n\n  return html;\n}\n","import { fetchNgwLayerItems } from '@nextgis/ngw-kit';\nimport { NgwDateFormat } from '@nextgis/ngw-connector';\nimport { NOW } from '../constants';\n\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { FetchNgwItemsOptions, NgwLayerOptions } from '@nextgis/ngw-kit';\n\nexport function layerTimestampExtremum({\n  connector,\n  layer,\n}: {\n  connector: NgwConnector;\n  layer: NgwLayerOptions<'GEOJSON'>;\n}): Promise<[Date | undefined, Date | undefined]> {\n  const resource = layer.resource;\n  if (layer && resource && connector) {\n    const dateField = layer.adapterOptions?.props?.dateField || 'field_9';\n    return connector.getResourceIdOrFail(resource).then((resourceId) => {\n      const extremeReqOpt: FetchNgwItemsOptions = {\n        resourceId,\n        fields: [dateField],\n        geom: false,\n        connector,\n        limit: 1,\n      };\n      const extremePromises = [\n        fetchNgwLayerItems({ ...extremeReqOpt, orderBy: [dateField] }),\n        // fetchNgwLayerItems({ ...extremeReqOpt, orderBy: ['-' + dateField] }),\n      ];\n      return Promise.all(extremePromises).then(([minItem, maxItem]) => {\n        const [min] = [minItem, maxItem].map((items) => {\n          const item = items && items[0];\n          if (item) {\n            const ngwDate = item.fields[dateField] as NgwDateFormat;\n            if (ngwDate) {\n              return parseNgwDate(ngwDate);\n            }\n          }\n          return undefined;\n        });\n        const max = NOW;\n        return [min, max];\n      });\n    });\n  }\n  return Promise.resolve([undefined, undefined]);\n}\n\nfunction parseNgwDate(dt: NgwDateFormat): Date {\n  return new Date(dt.year, dt.month - 1, dt.day);\n}\n","import './MapSettingsPanel.css';\n// @ts-ignore\nimport Sidebar from 'leaflet-sidebar';\nimport 'leaflet-sidebar/src/L.Control.Sidebar.css';\n// import Sidebar from '../../assets/SidebarControl';\n// import '../../assets/SidebarControl/SidebarControl.scss';\nimport '../../assets/SidebarControl/SidebarControlLeaflet.scss';\n\nimport { NgwLayers } from '@nextgis/ngw-map';\n\nimport { ActionMap } from '../ActionMap';\nimport { CollapsiblePanel } from './CollapsiblePanel';\nimport { WebmapTreeItem } from './WebmapTreeItem';\nimport { BaseMapsContainer } from './BaseMapsContainer';\nimport { BookmarksContainer } from './BookmarksContainer';\nimport { FiresContainer } from './FiresContainer';\n\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type { MapSettingsPanelOptions } from './interfaces';\nimport { layerTimestampExtremum } from '../../utils/layerTimestampExtremum';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { NOW } from '../../constants';\nimport { LayersContainer } from './LayersContainer';\n\nconst OPTIONS: Partial<MapSettingsPanelOptions> = {\n  target: 'tree',\n  // width: 300\n};\n\nexport class MapSettingsPanel {\n  options: MapSettingsPanelOptions;\n\n  sidebar: Sidebar;\n\n  private _container: HTMLElement;\n  private _target: HTMLElement;\n\n  private ngwLayers!: NgwLayers;\n\n  constructor(private actionMap: ActionMap, options: MapSettingsPanelOptions) {\n    this.options = { ...OPTIONS, ...options };\n    if (typeof this.options.target === 'string') {\n      const target = document.getElementById(this.options.target);\n      if (target) {\n        this._target = target;\n      } else {\n        throw new Error(\n          `No element with ID #${this.options.target} in document for webmap tree`,\n        );\n      }\n    } else if (this.options.target instanceof HTMLElement) {\n      this._target = this.options.target;\n    } else {\n      throw new Error('`target` option is not set');\n    }\n    this.sidebar = new Sidebar(this._target, {\n      closeButton: false,\n      position: 'left',\n      autoPan: false,\n    });\n\n    this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n    // this.actionMap.ngwMap.createControl(this.sidebar).then((x) => {\n    //   x.onAdd(this.actionMap.ngwMap.mapAdapter);\n    // });\n\n    // this.actionMap.ngwMap.addControl(sidebarControl, 'top-left');\n    // this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n\n    this.ngwLayers = this.options.ngwLayers;\n\n    this._container = this._createContainer();\n    if (!this.options.status) {\n      this.hide();\n    }\n    this._target && this._target.appendChild(this._container);\n  }\n\n  show(): void {\n    this._container.classList.remove('hidden');\n    this.sidebar.show();\n  }\n\n  hide(): void {\n    this.sidebar.hide();\n    this._container.classList.add('hidden');\n  }\n\n  private _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'tree-container';\n\n    if (this.options.width !== undefined) {\n      container.style.width = this.options.width + 'px';\n    }\n\n    if (this.options.userFires || this.options.firms) {\n      new CollapsiblePanel({\n        title: 'Пожары',\n        content: () => this._createFiresContainer(),\n        parent: container,\n      });\n    }\n    if (this.options.sensors) {\n      new CollapsiblePanel({\n        title: 'Датчики',\n        content: () => this._createSensorContainer(),\n        parent: container,\n      });\n    }\n    new CollapsiblePanel({\n      title: 'Базовые слои',\n      content: () => this._createNgwLayers(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Подложки',\n      content: () => this._createBasemapsContainer(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Закладки',\n      content: () => this._createBookmarksContainer(),\n      open: false,\n      parent: container,\n    });\n\n    return container;\n  }\n\n  private _createNgwLayers() {\n    const container = document.createElement('div');\n    container.className = 'webmap-tree-container';\n    for (const n in this.ngwLayers) {\n      const ngwLayer = this.ngwLayers[n];\n      const tree = new WebmapTreeItem(ngwLayer.layer.layer);\n      const treeContainer = tree.getContainer();\n      if (treeContainer) {\n        container.appendChild(treeContainer);\n      }\n    }\n    return container;\n  }\n\n  private _createBookmarksContainer() {\n    const container = document.createElement('div');\n    const bookmarks = this.options.bookmarks;\n    if (bookmarks) {\n      const bookmarkContainer = new BookmarksContainer({\n        bookmarks,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(bookmarkContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createFiresContainer() {\n    const container = document.createElement('div');\n    const { firms, userFires } = this.options;\n    let dateRange: [Date | undefined, Date | undefined] = [\n      undefined,\n      undefined,\n    ];\n    if (firms || userFires) {\n      const fires: NgwLayerOptions<'GEOJSON'>[] = [];\n      if (userFires && userFires.id) {\n        fires.push(userFires);\n        dateRange = await layerTimestampExtremum({\n          layer: userFires,\n          connector: this.options.ngwMap.connector,\n        });\n      }\n      if (firms) {\n        firms.forEach((x) => fires.push(x));\n      }\n      const timedelta = this.actionMap.options.timedelta || 24;\n      const defaultDateRange = daysBehindRange(timedelta, NOW);\n      const firesContainer = new FiresContainer({\n        layers: fires,\n        ngwMap: this.options.ngwMap,\n        dateRange,\n        defaultDateRange,\n        timedelta: this.actionMap.options.timedelta || 72,\n        onDateChange: () => {\n          if (this.options.onDateChange) {\n            this.options.onDateChange();\n          }\n        },\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createSensorContainer() {\n    const container = document.createElement('div');\n    const { sensors } = this.options;\n    if (sensors) {\n      const firesContainer = new LayersContainer({\n        layers: [sensors],\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createBasemapsContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.firms;\n    if (fires) {\n      const baseMapsContainer = new BaseMapsContainer({\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(baseMapsContainer.getContainer());\n    }\n    return container;\n  }\n}\n","import './GetCoordinateControl.css';\nimport '../ToggleControl.css';\nimport { ActionMap } from '../ActionMap';\nimport { Clipboard } from '@nextgis/utils';\nimport { EventEmitter } from 'events';\n\nimport type { Feature, Point } from 'geojson';\nimport type {\n  MapClickEvent,\n  VectorLayerAdapter,\n  ToggleControlOptions,\n} from '@nextgis/ngw-map';\n\nexport interface GetCoordinatePanelControlOptions {\n  toggle?: (status: boolean) => void;\n}\n\nexport class GetCoordinatePanelControl implements ToggleControlOptions {\n  html = '<i class=\"fas fa-map-pin btn-control-icon \"></i>';\n  title = {\n    off: 'Полученить координаты с карты',\n    on: 'Выключить режим получения координат с карты',\n  };\n\n  addClass = 'toggle-control webmap-tree-control';\n  addClassOn = 'active';\n\n  status = false;\n\n  emitter = new EventEmitter();\n\n  private _toggle?: (status: boolean) => void;\n  private __onMapClick?: (e: MapClickEvent) => void;\n  private _layer!: VectorLayerAdapter;\n\n  constructor(\n    private actionMap: ActionMap,\n    options: GetCoordinatePanelControlOptions = {},\n  ) {\n    this._toggle = options.toggle;\n    this.actionMap.ngwMap\n      .addFeatureLayer<any, Point>({\n        id: 'show-coordinate-click',\n        visibility: true,\n        paint: { radius: 6 },\n        popup: true,\n        popupOptions: {\n          createPopupContent: (d) => {\n            if (d.feature) {\n              return this._createPopupContent(\n                d.feature.geometry.coordinates.map((x) => x.toFixed(5)),\n              );\n            }\n          },\n        },\n      })\n      .then((layer) => {\n        if (layer) {\n          this._layer = layer;\n        }\n      });\n  }\n\n  onClick(status?: boolean): void {\n    this.toggleControl(status);\n  }\n\n  show(): void {\n    this.actionMap.ngwMap.setCursor('crosshair');\n    this._removeClickListener();\n    this.__onMapClick = (e: MapClickEvent) => this._onMapClick(e);\n    this.actionMap.ngwMap.emitter.on('click', this.__onMapClick);\n  }\n\n  hide(): void {\n    this.actionMap.ngwMap.setCursor('default');\n    this._removeClickListener();\n    this.actionMap.ngwMap.clearLayerData(this._layer);\n  }\n\n  private _removeClickListener() {\n    if (this.__onMapClick) {\n      this.actionMap.ngwMap.emitter.off('click', this.__onMapClick);\n      this.__onMapClick = undefined;\n    }\n  }\n\n  private _onMapClick(e: MapClickEvent) {\n    const feature: Feature<Point> = {\n      type: 'Feature',\n      properties: {},\n      geometry: { type: 'Point', coordinates: e.lngLat },\n    };\n    this.actionMap.ngwMap.setLayerData(this._layer, feature);\n  }\n\n  private toggleControl(status?: boolean) {\n    status = status !== undefined ? status : !this.status;\n    if (status) {\n      this.show();\n    } else {\n      this.hide();\n    }\n\n    this.status = status;\n    if (this._toggle) {\n      this._toggle(status);\n    }\n    this.emitter.emit('status', this.status);\n  }\n\n  private _createPopupContent([lng, lat]: string[]) {\n    const content = document.createElement('div');\n    const latLngStr = `${lat}, ${lng}`;\n    content.innerHTML = `\n    <span>Широта/Долгота:</span>\n    <span class=\"lat-lng-coord\"> ${latLngStr}</span>\n    <a href=\"#\" class=\"copy-to-clipboard\">\n    <i class=\"far fa-clipboard\"></i>\n    </a>`;\n    const clipBoardLink = content.getElementsByClassName(\n      'copy-to-clipboard',\n    )[0] as HTMLLinkElement;\n    clipBoardLink.onclick = () => {\n      Clipboard.copy(latLngStr);\n    };\n\n    return content;\n  }\n}\n","import type { Messages } from './interfaces';\n\nexport const I18N: Record<string, Messages> = {\n  en: {\n    linearMeasurement: 'Distance measurement',\n    areaMeasurement: 'Area measurement',\n    start: 'Start',\n    meter: 'm',\n    kilometer: 'km',\n    squareMeter: 'm²',\n    squareKilometers: 'km²',\n  },\n  ru: {\n    linearMeasurement: 'Измерение расстояния',\n    areaMeasurement: 'Измерение площади',\n    start: 'Старт',\n    meter: 'м',\n    kilometer: 'км',\n    squareMeter: 'м²',\n    squareKilometers: 'км²',\n  },\n};\n","import type { LatLng } from 'leaflet';\nimport type { Messages } from './interfaces';\n\nexport function toRadians(deg: number): number {\n  return deg * (Math.PI / 180);\n}\nexport function square(x: number): number {\n  return Math.pow(x, 2);\n}\nexport function getDistanceString(\n  distance: number,\n  messages: { meter: string; kilometer: string },\n): string {\n  return distance < 1e3\n    ? numberFormat(distance, 0) + ' ' + messages.meter\n    : numberFormat(distance / 1e3, 2) + ' ' + messages.kilometer;\n}\n\nexport function getDistance(latlng1: LatLng, latlng2: LatLng): number {\n  const earthRadius = 6378137; // radius of the earth in meter\n  const lat1 = toRadians(latlng1.lat);\n  const lat2 = toRadians(latlng2.lat);\n  const lat_dif = lat2 - lat1;\n  const lng_dif = toRadians(latlng2.lng - latlng1.lng);\n  const a =\n    square(Math.sin(lat_dif / 2)) +\n    Math.cos(lat1) * Math.cos(lat2) * square(Math.sin(lng_dif / 2));\n  return 2 * earthRadius * Math.asin(Math.sqrt(a));\n}\nexport function getAreaString(points: LatLng[], messages: Messages): string {\n  const a = Math.round(getArea(points));\n  return a < 1e6\n    ? numberFormat(a, 0) + ' ' + messages.squareMeter\n    : numberFormat(a / 1e6, 2) + ' ' + messages.squareKilometers;\n}\nexport function getArea(points: LatLng[]): number {\n  const earthRadius = 6378137;\n  let area = 0;\n  const len = points.length;\n  let x1 = points[len - 1].lng;\n  let y1 = points[len - 1].lat;\n  for (let i = 0; i < len; i++) {\n    const x2 = points[i].lng;\n    const y2 = points[i].lat;\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return Math.abs((area * earthRadius * earthRadius) / 2.0);\n}\nexport function numberFormat(number: number, decimals = 2): string {\n  const thousandsSep = ',';\n  const sign = number < 0 ? '-' : '';\n  const num = Math.abs(+number || 0);\n  const intPart = parseInt(num.toFixed(decimals), 10) + '';\n  const j = intPart.length > 3 ? intPart.length % 3 : 0;\n\n  return [\n    sign,\n    j ? intPart.substr(0, j) + thousandsSep : '',\n    intPart.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSep),\n    decimals\n      ? '.' +\n        Math.abs(num - Number(intPart))\n          .toFixed(decimals)\n          .slice(2)\n      : '',\n  ].join('');\n}\n","import { Layer, Point, Util, Browser, DomUtil, latLng } from 'leaflet';\n\nimport type { Map, LayerOptions, LatLng, ZoomAnimEvent } from 'leaflet';\n\nexport interface MeasureLabelOptions extends LayerOptions {\n  offset?: Point;\n  latlng: null | LatLng;\n  content: string;\n  className: string;\n}\n\nexport class MeasureLabel extends Layer {\n  options: MeasureLabelOptions = {\n    latlng: null,\n    content: '',\n    className: '',\n  };\n\n  protected _map!: Map;\n  private _offset = new Point(0, 30);\n  private _container?: HTMLElement;\n  private _contentNode?: HTMLElement;\n  private _closeButton?: HTMLElement;\n  private _containerBottom?: number;\n  private _containerLeft?: number;\n\n  constructor(options: MeasureLabelOptions) {\n    super(options);\n    Util.setOptions(this, options);\n    if (this.options.offset) {\n      this._offset = this.options.offset;\n    }\n  }\n  onAdd(map: Map): this {\n    this._map = map;\n    this._container || this._initLayout();\n    if (this._container) {\n      map.getPanes().popupPane.appendChild(this._container);\n    }\n    map.on('viewreset', this._updatePosition, this);\n    if (Browser.any3d) {\n      map.on('zoomanim', this._zoomAnimation, this);\n    }\n    this._update();\n    return this;\n  }\n  addTo(map: Map): this {\n    map.addLayer(this);\n    return this;\n  }\n  onRemove(map: Map): this {\n    if (this._container) {\n      map.getPanes().popupPane.removeChild(this._container);\n    }\n    map.off('viewreset', this._updatePosition, this);\n    map.off('zoomanim', this._zoomAnimation, this);\n    (this._map as any) = null;\n    return this;\n  }\n  setLatLng(latlng: LatLng): this {\n    this.options.latlng = latLng(latlng);\n    this._updatePosition();\n    return this;\n  }\n  setContent(content: string): this {\n    this.options.content = content;\n    this._updateContent();\n    return this;\n  }\n  enableClose(): HTMLElement {\n    this._closeButton = DomUtil.create('span', 'close', this._container);\n    this._closeButton.innerHTML =\n      '<svg class=\"icon\" viewBox=\"0 0 40 40\"><path stroke=\"#FF0000\" stroke-width=\"3\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" /></svg>';\n    return this._closeButton;\n  }\n  private _initLayout(): void {\n    this._container = DomUtil.create('div', this.options.className);\n    this._contentNode = DomUtil.create('div', 'content', this._container);\n  }\n  private _update(): void {\n    this._map && (this._updateContent(), this._updatePosition());\n  }\n  private _updateContent(): void {\n    if (this._contentNode && this.options.content) {\n      if (typeof this.options.content == 'string') {\n        this._contentNode.innerHTML = this.options.content;\n      } else {\n        this._contentNode.innerHTML = '';\n        this._contentNode.appendChild(this.options.content);\n      }\n    }\n  }\n  private _updatePosition(): void {\n    if (this.options.latlng && this._container) {\n      const point = this._map.latLngToLayerPoint(this.options.latlng);\n      const is3D = Browser.any3d;\n      const offset = this._offset;\n      is3D && DomUtil.setPosition(this._container, point);\n      this._containerBottom = -offset.y - (is3D ? 0 : point.y);\n      this._containerLeft = offset.x + (is3D ? 0 : point.x);\n      this._container.style.bottom = this._containerBottom + 'px';\n      this._container.style.left = this._containerLeft + 'px';\n    }\n  }\n  private _zoomAnimation(a: ZoomAnimEvent): void {\n    if (this._container) {\n      const point = (this._map as any)._latLngToNewLayerPoint(\n        this.options.latlng,\n        a.zoom,\n        a.center,\n      ) as Point;\n      DomUtil.setPosition(this._container, point);\n    }\n  }\n}\n","import {\n  Handler,\n  Util,\n  DomUtil,\n  DomEvent,\n  Polygon,\n  Polyline,\n  CircleMarker,\n} from 'leaflet';\n\nimport { I18N } from './i18n';\nimport { getAreaString, getDistance, getDistanceString } from './utils';\nimport { MeasureLabel } from './MeasureLabel';\n\nimport type { Map, LatLng, LeafletMouseEvent } from 'leaflet';\nimport {\n  DirectPath,\n  MeasureActionOptions,\n  MeasureModel,\n  Trail,\n} from './interfaces';\n\nexport class MeasureAction extends Handler {\n  options: MeasureActionOptions = {\n    color: '#FF0080',\n    model: 'distance',\n    messages: I18N['en'],\n  };\n\n  private _map: Map;\n  private _measureHandler: this;\n  private _finished: boolean;\n  private _startMove?: boolean;\n  private _measurementStarted?: boolean;\n  private _lastPoint?: LatLng;\n  private _totalDistance = 0;\n  private _trail: Trail = { overlays: [], points: [] };\n  private _directPath?: DirectPath;\n  private _measurePath?: DirectPath;\n\n  constructor(map: Map, options: MeasureActionOptions) {\n    super(map);\n    this._map = map;\n    this._measureHandler = this;\n    this._finished = false;\n    Util.setOptions(this, options);\n  }\n  setModel(model: MeasureModel): this {\n    this.options.model = model;\n    return this;\n  }\n  addHooks(): void {\n    this._activeMeasure();\n  }\n  removeHooks(): void {\n    this._disableMeasure();\n  }\n  private _activeMeasure(): void {\n    this._measureHandler._measurementStarted &&\n      this._measureHandler._finishMeasure();\n    this._measurementStarted ? this._finishMeasure() : this._enableMeasure();\n  }\n  private _onMouseClick(event: LeafletMouseEvent): void {\n    const latlng = event.latlng || this._map.mouseEventToLatLng(event as any);\n    if (this._lastPoint && latlng.equals(this._lastPoint)) {\n      return;\n    }\n    if (this._trail.points.length > 0) {\n      const points = this._trail.points;\n      points.push(latlng);\n      const length = points.length;\n      this._totalDistance += getDistance(\n        points[length - 2],\n        points[length - 1],\n      );\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          getDistanceString(this._totalDistance, this.options.messages),\n          'leaflet-measure-label',\n        );\n      }\n    } else {\n      this._totalDistance = 0;\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          this.options.messages.start,\n          'leaflet-measure-label',\n        );\n      }\n      this._trail.points.push(latlng);\n    }\n    this._lastPoint = latlng;\n    this._startMove = false;\n  }\n  private _onMouseMove(event: LeafletMouseEvent): void {\n    const latlng = event.latlng;\n    if (this._directPath && this._trail.points.length > 0) {\n      if (this._startMove) {\n        this._directPath.setLatLngs(this._trail.points.concat(latlng));\n      } else {\n        this._directPath.setLatLngs([latlng]);\n        this._startMove = true;\n      }\n    }\n  }\n  private _enableMeasure(): void {\n    this._trail = {\n      overlays: [],\n      points: [],\n    };\n    const map = this._map;\n    DomUtil.addClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.disable();\n    this._measurementStarted = true;\n    map.on('click', this._onMouseClick, this);\n    map.on('dblclick', this._finishMeasure, this);\n    map.on('contextmenu', this._finishMeasure, this);\n    map.doubleClickZoom.disable();\n    map.on('mousemove', this._onMouseMove, this);\n    map.fire('measure:start');\n  }\n  private _disableMeasure(): void {\n    const map = this._map;\n    DomUtil.removeClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.enable();\n    map.off('click', this._onMouseClick, this);\n    map.off('dblclick', this._finishMeasure, this);\n    map.off('contextmenu', this._finishMeasure, this);\n    map.off('mousemove', this._onMouseMove, this);\n    map.doubleClickZoom.enable();\n    this._measurementStarted = this._startMove = false;\n    if (!this._finished) {\n      this._clearOverlay.call(this);\n    }\n    map.fire('measure:stop');\n  }\n  private _finishMeasure(event?: LeafletMouseEvent): void {\n    if (this._trail.points.length > 0) {\n      if (this._trail.points.length > 1) {\n        if (this._directPath && (!event || event.type === 'contextmenu')) {\n          this._directPath.setLatLngs(this._trail.points);\n        }\n        if (this._lastPoint) {\n          if (this.options.model === 'area') {\n            this._addLable(\n              this._lastPoint,\n              getAreaString(this._trail.points, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          } else {\n            this._addLable(\n              this._lastPoint,\n              getDistanceString(this._totalDistance, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          }\n        }\n        this._directPath && this._map.removeLayer(this._directPath);\n        this._finished = true;\n      } else {\n        this._clearOverlay.call(this);\n      }\n    }\n    this.disable();\n  }\n  private _resetDirectPath(latlng: LatLng): void {\n    if (!this._directPath) {\n      let directPath: DirectPath;\n      if (this.options.model === 'area') {\n        directPath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          fillOpacity: 0,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          interactive: false,\n        });\n        directPath = polyline;\n      }\n      this._map.addLayer(directPath);\n      this._trail.overlays.push(directPath);\n      this._directPath = directPath;\n    } else {\n      this._directPath.addLatLng(latlng);\n    }\n  }\n  private _addMeasurePoint(latlng: LatLng): void {\n    if (!this._measurePath) {\n      let measurePath: DirectPath;\n      if (this.options.model === 'area') {\n        measurePath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          fillColor: this.options.color,\n          fillOpacity: 0.5,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          interactive: false,\n        });\n        measurePath = polyline;\n      }\n      this._map.addLayer(measurePath);\n      this._trail.overlays.push(measurePath);\n      this._measurePath = measurePath;\n    } else {\n      this._measurePath.addLatLng(latlng);\n    }\n    this._resetDirectPath(latlng);\n  }\n  private _addMarker(latLng: LatLng): void {\n    const marker = new CircleMarker(latLng, {\n      color: this.options.color,\n      opacity: 1,\n      weight: 1,\n      fillColor: '#FFFFFF',\n      fill: true,\n      fillOpacity: 1,\n      radius: 3,\n      interactive: false,\n    });\n    this._map.addLayer(marker);\n    this._trail.overlays.push(marker);\n  }\n  private _addLable(\n    latlng: LatLng,\n    content: string,\n    className: string,\n    ended?: boolean,\n  ): void {\n    const lable = new MeasureLabel({\n      latlng,\n      content,\n      className,\n    });\n    this._map.addLayer(lable);\n    this._trail.overlays.push(lable);\n    if (ended) {\n      const closeButton = lable.enableClose();\n      DomEvent.on(\n        closeButton,\n        'click',\n        (e) => {\n          DomEvent.stopPropagation(e);\n          this._clearOverlay();\n        },\n        this,\n      );\n    }\n  }\n  private _clearOverlay(): void {\n    const overlays = this._trail.overlays;\n    let i = 0,\n      length;\n    for (length = overlays.length; i < length; i++) {\n      this._map.removeLayer(overlays[i]);\n    }\n  }\n}\n","import { Control, DomUtil, DomEvent, Util } from 'leaflet';\nimport { I18N } from './i18n';\nimport { MeasureAction } from './MeasureAction';\n\nimport type { Map, Handler } from 'leaflet';\nimport type { MeasureOptions } from './interfaces';\n\nexport class Measure extends Control {\n  options: MeasureOptions = {\n    position: 'topright',\n    title: 'Measurement',\n    collapsed: true,\n    color: '#FF0080',\n    locale: 'en',\n    messages: I18N['en'],\n  };\n\n  private _map?: Map;\n  private _container?: HTMLElement;\n  private _link?: HTMLAnchorElement;\n  private _contents?: HTMLElement;\n  private _measureHandler?: Handler;\n\n  constructor(options: Partial<MeasureOptions>) {\n    super(options);\n    Util.setOptions(this, options);\n    const locale = options.locale;\n    if (locale && locale !== 'en') {\n      const messages = I18N[locale];\n      if (messages) {\n        this.options.messages = { ...I18N, ...messages };\n      } else {\n        console.error(\n          'Measure control has no messages for ' +\n            this.options.locale +\n            ' locale',\n        );\n      }\n    }\n  }\n  onAdd(map: Map): HTMLElement {\n    this._map = map;\n    return this._container || this._initLayout();\n  }\n  disableMeasure(): void {\n    if (this._measureHandler) {\n      this._measureHandler.disable();\n      this._measureHandler = undefined;\n    }\n  }\n  private _buildContainer(): HTMLElement {\n    this._container = DomUtil.create(\n      'div',\n      'leaflet-control-measure leaflet-bar leaflet-control',\n    );\n\n    this._contents = DomUtil.create(\n      'div',\n      'leaflet-measure-contents',\n      this._container,\n    );\n\n    this._link = DomUtil.create('a', 'leaflet-measure-toggle', this._container);\n    this._link.title = this.options.title || 'Measurement';\n    this._link.href = '#';\n\n    // if (this.options.title) {\n    //   var title = DomUtil.create('h3', '', this._contents);\n    //   title.innerText = this.options.title;\n    // }\n\n    this._buildItems();\n    return this._container;\n  }\n  private _buildItems(): void {\n    const ele_ul = DomUtil.create(\n      'ul',\n      'leaflet-measure-actions',\n      this._contents,\n    );\n    let ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_line = DomUtil.create('a', 'start', ele_li);\n    ele_link_line.innerText = this.options.messages.linearMeasurement;\n    ele_link_line.href = '#';\n    DomEvent.disableClickPropagation(ele_link_line);\n    DomEvent.on(ele_link_line, 'click', this._enableMeasureLine, this);\n\n    ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_area = DomUtil.create(\n      'a',\n      'leaflet-measure-action start',\n      ele_li,\n    );\n    ele_link_area.innerText = this.options.messages.areaMeasurement;\n    ele_link_area.href = '#';\n    DomEvent.disableClickPropagation(ele_link_area);\n    DomEvent.on(ele_link_area, 'click', this._enableMeasureArea, this);\n  }\n  private _initLayout(): HTMLElement {\n    const container = this._buildContainer();\n    DomEvent.disableClickPropagation(container);\n    DomEvent.disableScrollPropagation(container);\n    if (this.options.collapsed) {\n      DomEvent.on(\n        container,\n        {\n          mouseenter: this._expand,\n          mouseleave: this._collapse,\n        },\n        this,\n      );\n    } else {\n      this._expand();\n    }\n    return container;\n  }\n  private _enableMeasureLine(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'distance',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _enableMeasureArea(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'area',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _expand(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'none';\n      DomUtil.addClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n  private _collapse(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'block';\n      DomUtil.removeClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n}\n","export const StopToggleControlsCb: Array<{\n  name: string;\n  stop: () => void;\n}> = [];\n\nexport function addStopToggleControl(name: string, stop: () => void): void {\n  StopToggleControlsCb.push({ name, stop });\n}\n\nexport function stopToggleControlsFor(excludeControlName?: string): void {\n  StopToggleControlsCb.forEach((x) => {\n    if (x.name !== excludeControlName) {\n      x.stop();\n    }\n  });\n}\n","import { Measure } from '../assets/Leaflet.Measure-master/src';\nimport '../assets/Leaflet.Measure-master/src/leaflet.measure.css';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nimport type { Map } from 'leaflet';\n\nexport function createMeasureControl(ngwMap: NgwMap): void {\n  // @ts-ignore\n  const control = new Measure({ locale: 'ru' });\n  ngwMap.addControl(control, 'top-left');\n\n  ngwMap.onLoad().then(() => {\n    const map = ngwMap.mapAdapter.map as Map;\n    if (map) {\n      map.on('measure:start', () => {\n        stopToggleControlsFor('measure');\n        ngwMap.disableSelection();\n      });\n      map.on('measure:stop', () => {\n        ngwMap.setCursor('default');\n        ngwMap.enableSelection();\n      });\n    }\n    addStopToggleControl('measure', () => {\n      control.disableMeasure();\n    });\n  });\n}\n","import 'leaflet/dist/leaflet.css';\n// import 'ol/ol.css';\nimport './ActionMap.css';\n\n// @ts-ignore\nimport ShareButtons from 'share-buttons/dist/share-buttons';\n\nimport {\n  NgwMap,\n  NgwLayers,\n  LocationEvent,\n  ToggleControl,\n  NgwIdentifyEvent,\n  VectorAdapterOptions,\n} from '@nextgis/ngw-map';\nimport { CirclePaint } from '@nextgis/paint';\nimport { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport { getIcon } from '@nextgis/icons';\nimport MapAdapter from '@nextgis/leaflet-map-adapter';\n// import MapAdapter from '@nextgis/ol-map-adapter';\nimport UrlRuntimeParams from '@nextgis/url-runtime-params';\nimport { QmsAdapterOptions } from '@nextgis/qms-kit';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { ResourceHierarchy } from '@nextgis/ngw-connector';\n\nimport { Popup } from './Popup';\nimport { MapSettingsPanel } from './MapSettingsPanel/MapSettingsPanel';\nimport { GetCoordinatePanelControl } from './GetCoordinateControl/GetCoordinateControl';\nimport { createMeasureControl } from './createMeasureControl';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\nimport { daysBehindFilter } from '../utils/daysBehindRange';\n\nimport { NOW } from '../constants';\n\nimport type { Control, Map, Layer } from 'leaflet';\nimport type {\n  AppOptions,\n  FiresAdapterOptions,\n  FirmsLayerOptions,\n  SensorLayerOptions,\n  UserFiresLayerOptions,\n} from '../interfaces';\n\nexport class ActionMap {\n  ngwMap!: NgwMap<Map, Layer, any>;\n\n  tree?: MapSettingsPanel;\n  treeControl?: Control & ToggleControl;\n\n  authControl?: Control & ToggleControl;\n  popup: Popup;\n\n  private _promises: { [name: string]: CancelablePromise<any> } = {};\n\n  constructor(public options: Partial<AppOptions>) {\n    this.popup = new Popup();\n  }\n\n  async create(opt: Partial<AppOptions>): Promise<void> {\n    // const auth = new Auth(opt.mapOptions);\n    const mapOpt = { ...opt.mapOptions };\n    // try {\n    //   await auth.login();\n    //   mapOpt.connector = auth.connector;\n    // } catch (er) {\n    //   // cancel login\n    // }\n\n    const { basemaps, firms, userFires, sensors } = opt;\n\n    const ngwMap = new NgwMap<Map, Layer>({\n      mapAdapter: new MapAdapter(),\n      controls: [],\n      minZoom: 4,\n      runtimeParams: [new UrlRuntimeParams()],\n      ...mapOpt,\n    });\n\n    this.ngwMap = ngwMap;\n\n    ngwMap.setCursor('default');\n    this.popup.setNgwMap(ngwMap);\n\n    if (basemaps) {\n      ngwMap.onLoad().then(() =>\n        basemaps.forEach((x, i) => {\n          ngwMap.addBaseLayer<any, QmsAdapterOptions>('QMS', {\n            ...x,\n            visibility: i === 0,\n          });\n        }),\n      );\n    }\n    ngwMap.getPaintFunctions = { base: getIcon };\n\n    ngwMap.addControl('ZOOM', 'top-left');\n    this._createLocateControl();\n    ngwMap.addControl('ATTRIBUTION', 'bottom-right', {\n      customAttribution: [\n        '<a href=\"https://nextgis.com\" target=\"_blank\">©NextGIS</a>',\n      ],\n    });\n    createMeasureControl(ngwMap);\n    this._createShareControl();\n    // await this._createAuthControl(auth);\n    // this.ngwMap.addControl(this.authControl, 'top-right');\n\n    const ngwLayers = await ngwMap.getNgwLayers();\n    const bookmarks: ResourceHierarchy[] = [];\n    Object.values(ngwLayers).forEach((x) => {\n      const bookmark =\n        x.layer.item &&\n        x.layer.item.webmap &&\n        x.layer.item.webmap.bookmark_resource;\n      if (bookmark) {\n        bookmarks.push(bookmark);\n      }\n    });\n\n    await this._addFireLayer(opt.userFires);\n    await this._addFirms(opt.firms);\n    await this._addSensors(opt.sensors);\n    this._createGetCoordinateControl();\n\n    this._addTreeControl({\n      ngwLayers,\n      firms,\n      sensors,\n      userFires,\n      bookmarks,\n    });\n\n    this._addEventsListeners();\n  }\n\n  private _locate() {\n    const locationfound = (e: LocationEvent) => {\n      const lngLat = e.lngLat;\n\n      this.ngwMap.setView(\n        lngLat,\n        Math.max(...[this.ngwMap.getZoom() ?? 0, 16]),\n      );\n    };\n\n    this.ngwMap.locate({ setView: false }, { locationfound });\n  }\n\n  // private async _createAuthControl(auth: Auth) {\n  //   const authBtn = document.getElementsByClassName(\n  //     'js-auth-btn',\n  //   )[0] as HTMLElement;\n  //   const getStatus = () => {\n  //     return !!(this.ngwMap.connector && this.ngwMap.connector.user);\n  //   };\n  //   const onClick = () => {\n  //     auth.logout();\n  //     window.location.reload();\n  //   };\n  //   authBtn.innerHTML = getStatus() ? 'Выйти' : 'Войти';\n  //   authBtn.style.display = 'block';\n  //   authBtn.addEventListener('click', onClick);\n  // }\n\n  private _createShareControl() {\n    const shareModal = document.getElementsByClassName('js-modal')[0];\n    const closeModalBtn = document.getElementsByClassName('js-modal-close')[0];\n    const shareModalContent = document.getElementsByClassName(\n      'js-share-modal-content',\n    )[0];\n    const shareInput = document.getElementsByClassName(\n      'js-share-input',\n    )[0] as HTMLInputElement;\n    const showModal = () => {\n      const href = location.href;\n      const html = this._createShareModalContent(href);\n      shareInput.value = href;\n      shareModalContent.innerHTML = html;\n      ShareButtons.update();\n      shareModal.classList.add('is-active');\n    };\n    const closeModal = () => {\n      shareModalContent.innerHTML = '';\n      shareModal.classList.remove('is-active');\n    };\n    closeModalBtn.addEventListener('click', () => {\n      closeModal();\n    });\n\n    const shareControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-share-alt btn-control-icon \"></i>',\n      onClick() {\n        showModal();\n      },\n    });\n    this.ngwMap.addControl(shareControl, 'bottom-right');\n  }\n\n  private async _createGetCoordinateControl() {\n    const control = new GetCoordinatePanelControl(this, {\n      toggle: (status) => {\n        if (status) {\n          stopToggleControlsFor('coordinate');\n          this.ngwMap.disableSelection();\n        } else {\n          this.ngwMap.enableSelection();\n        }\n      },\n    });\n    const toggleControl = await this.ngwMap.createToggleControl(control);\n    this.ngwMap.addControl(toggleControl, 'top-left');\n    addStopToggleControl('coordinate', () => toggleControl.onClick(false));\n  }\n\n  private _createLocateControl() {\n    const onClick = () => this._locate();\n    const locateControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-location-arrow btn-control-icon\"></i>',\n      title: 'Найти меня на карте',\n      onClick,\n    });\n    this.ngwMap.addControl(locateControl, 'top-left');\n  }\n\n  private _createShareModalContent(url: string) {\n    const social = [\n      { id: 'tw', name: 'Twitter', icon: 'fab fa-twitter' },\n      { id: 'vk', name: 'VK', icon: 'fab fa-vk' },\n      { id: 'fb', name: 'Facebook', icon: 'fab fa-facebook-square' },\n    ];\n\n    const html = `<div class=\"buttons share-btn js-share-btn\" data-url=\"${url}\" data-title=\"\" data-desc=\"\">\n      ${social\n        .map(\n          (x) => `<a class=\"button is-primary\" data-id=\"${x.id}\">\n                    <span class=\"icon\">\n                        <i class=\"${x.icon}\"></i>\n                    </span>\n                    <span>${x.name}</span>\n                </a>`,\n        )\n        .join('')}\n    </div>`;\n    return html;\n  }\n\n  private async _addFireLayer(\n    x?: NgwLayerOptions<'GEOJSON'>,\n    adapterOptions?: VectorAdapterOptions,\n  ) {\n    if (x) {\n      const paint =\n        x.adapterOptions && x.adapterOptions.paint\n          ? (x.adapterOptions.paint as CirclePaint)\n          : {};\n      return this.ngwMap.addNgwLayer({\n        resource: x.resource,\n        id: x.id,\n        adapterOptions: {\n          ...x.adapterOptions,\n          paint: {\n            ...paint,\n            radius: 5,\n          },\n          selectable: true,\n          selectedPaint: {\n            ...paint,\n            radius: 7,\n          },\n          ...adapterOptions,\n          propertiesFilter: daysBehindFilter(\n            this.options.timedelta || 24,\n            x.adapterOptions as FiresAdapterOptions,\n            NOW,\n          ),\n        },\n      });\n    }\n  }\n\n  private async _addFirms(fires?: FirmsLayerOptions[]) {\n    if (fires) {\n      for (const x of fires) {\n        await this._addFireLayer(x);\n      }\n    }\n  }\n\n  private async _addSensors(sensor?: SensorLayerOptions) {\n    return sensor && this.ngwMap.addNgwLayer(sensor);\n  }\n\n  private async _addTreeControl(opt: {\n    ngwLayers: NgwLayers;\n    firms?: FirmsLayerOptions[];\n    userFires?: UserFiresLayerOptions;\n    sensors?: SensorLayerOptions;\n    bookmarks?: ResourceHierarchy[];\n  }) {\n    const sidebarToggleBtn = document.getElementsByClassName('js-sidebar')[0];\n\n    const isActive = () => sidebarToggleBtn.classList.contains('is-active');\n    const activateBurger = () => sidebarToggleBtn.classList.add('is-active');\n    const deactivateBurger = () =>\n      sidebarToggleBtn.classList.remove('is-active');\n\n    await this.ngwMap.onLoad();\n\n    this.tree = new MapSettingsPanel(this, {\n      ...opt,\n      onDateChange: () => {\n        this._cleanSelection();\n      },\n      ngwMap: this.ngwMap,\n    });\n\n    const toggle = (status?: boolean) => {\n      status = status !== undefined ? status : isActive();\n      if (status) {\n        stopToggleControlsFor('tree');\n        this.tree && this.tree.show();\n        activateBurger();\n      } else {\n        this.tree && this.tree.hide();\n        deactivateBurger();\n      }\n    };\n    sidebarToggleBtn.addEventListener('click', () => {\n      toggle();\n    });\n    setTimeout(() => {\n      toggle();\n    }, 500);\n    addStopToggleControl('tree', () => toggle(false));\n  }\n\n  private _cleanSelection() {\n    if (this._promises.getFeaturePromise instanceof CancelablePromise) {\n      this._promises.getFeaturePromise.cancel();\n    }\n    this.ngwMap.removeLayer('highlight');\n  }\n\n  private _highlighNgwLayer(i: NgwIdentifyEvent) {\n    this._cleanSelection();\n    const paramsList = i.getIdentifyItems();\n    const paramsLast = paramsList[paramsList.length - 1];\n    if (paramsLast) {\n      const isSensor =\n        this.options.sensors &&\n        paramsLast.layerId === this.options.sensors.resource;\n      // const resourceId = params.resourceId;\n      paramsLast.identify().then((item) => {\n        if (item) {\n          item.toGeojson().then((feature) => {\n            this.ngwMap.addLayer('GEOJSON', {\n              id: 'highlight',\n              data: feature,\n              paint: { color: 'green', stroke: true, fillOpacity: '0.8' },\n              popup: true,\n              popupOptions: {\n                maxWidth: 300,\n                createPopupContent: (e) => {\n                  e.onClose(() => {\n                    this._cleanSelection();\n                    this.ngwMap.unSelectLayers();\n                  });\n                  if (e.feature) {\n                    if (isSensor) {\n                      // const range = daysBehindRange(\n                      //   this.options.timedelta || 24,\n                      //   NOW,\n                      // );\n                      return this.popup.createSensorPopupContent({\n                        feature,\n                      });\n                    } else {\n                      return this.popup.createPopupContent(\n                        feature,\n                        paramsLast.layerId,\n                        item.extensions.attachment,\n                      );\n                    }\n                  }\n                },\n              },\n            });\n          });\n        }\n      });\n    }\n  }\n\n  private _addEventsListeners() {\n    this.ngwMap.emitter.on('click', () => {\n      this.ngwMap.cancelPromises('identify', 'select');\n    });\n    this.ngwMap.emitter.on('ngw:select', (e) => e && this._highlighNgwLayer(e));\n  }\n}\n","export const DATE_RANGE_SELECT: [days: number, text: string][] = [\n  [24, '1 день'],\n  [48, '2 дня'],\n  [72, '3 дня'],\n  [96, '4 дня'],\n  [120, '5 дней'],\n  [144, '6 дней'],\n  [168, 'неделя'],\n];\n\nexport const USERFIRE_ID = 'USERFIRE';\nexport const MODIS_ID = 'MODIS';\nexport const VIIRS_ID = 'VIIRS';\nexport const SENSOR_ID = 'SENSOR';\n\nexport const SENSOR_MEASUREMENT_API = process.env.SENSOR_MEASUREMENT_API;\n\nexport let NOW = new Date();\n\n// update global NOW each hour for long session\nsetInterval(() => {\n  NOW = new Date();\n}, 60 * 60 * 1000);\n","import { MODIS_ID, SENSOR_ID, USERFIRE_ID, VIIRS_ID } from './constants';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { AppOptions, FiresAdapterOptions } from './interfaces';\n\nconst firmsAdapterOptions: FiresAdapterOptions = {\n  limit: 2000,\n  props: { dateField: 'timestamp', timeUnit: 's' },\n};\n\nconst stroke: CirclePaint = {\n  stroke: true,\n  strokeColor: '#ffffff',\n  strokeOpacity: 1,\n  opacity: 1,\n};\n\nconst options: AppOptions = {\n  mapOptions: {\n    target: 'map',\n    bounds: [36.59, 43.385, 49.374, 50.214],\n    baseUrl: 'https://clear-horizon.nextgis.com',\n    resources: [\n      {\n        resource: 1,\n        fit: true,\n        adapterOptions: { selectable: true },\n      },\n    ],\n  },\n  timedelta: 72,\n  basemaps: [\n    {\n      qmsId: 1135,\n    },\n    // {\n    //   qmsId: 487,\n    // },\n  ],\n  userFires: {\n    resource: 'userfirepoints',\n    id: USERFIRE_ID,\n    adapterOptions: {\n      paint: { color: 'rgb(100,20,40)', ...stroke },\n      props: { dateField: 'field_9', timeUnit: 'ISO' },\n    },\n  },\n  sensors: {\n    resource: 446,\n    id: SENSOR_ID,\n    adapterOptions: {\n      selectable: true,\n      paint: {\n        color: '#0000ff',\n        radius: 5,\n        ...stroke,\n      },\n    },\n  },\n  firms: [\n    {\n      resource: 103,\n      id: MODIS_ID,\n      adapterOptions: {\n        paint: { color: 'red', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n    {\n      resource: 105,\n      id: VIIRS_ID,\n      adapterOptions: {\n        paint: { color: 'orange', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n  ],\n};\n\nexport default options;\n","import 'regenerator-runtime/runtime';\n\nimport { App } from './App';\nimport config from './config';\n\nimport './style/style.scss';\n\nconst app = new App(config);\n\napp.create();\n"],"names":["document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","target","dataset","$target","getElementById","classList","toggle","fetchSensorData","_ref","valueType","lastHours","sensorId","start","end","params","sensor_id","value_type","lasthours","String","toISOString","apiUrl","SENSOR_MEASUREMENT_API","fetch","concat","URLSearchParams","toString","method","then","resp","json","_regeneratorRuntime","exports","Op","Object","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","createSensorPopupContent","_x","_createSensorPopupContent","apply","arguments","_callee","_feature$properties","feature","popupElement","sensor","chartCanvas","notFoundDiv","_context","createElement","properties","SID_T","Chart","data","datasets","map","t","label","filter","s","row","x","Date","datetime","getTime","y","options","scales","time","unit","appendChild","innerHTML","args","_asyncToGenerator","_defineProperties","props","descriptor","_toPropertyKey","_defineProperty","input","hint","prim","toPrimitive","res","_toPrimitive","Popup","instance","Constructor","_classCallCheck","protoProps","_getResourceItem2","_addPhotos2","_updateElementContent","_createSensorPopupContent2","ngwMap","this","resourceId","attachment","propContainer","className","propertiesList","entries","_ref2","createPropertiesHtml","pre","updateElementContent","_addPhotos","Number","id","elem","_ref3","day","month","year","join","hour","minute","str","RegExp","test","prepareColumnValue","_callee2","element","item","newProperties","newContent","_context2","_getResourceItem","feature_layer","fields","grid_visibility","property","keyname","replace","a","b","display_name","getElementsByClassName","_x2","_x3","_x4","_callee3","fid","attachmentElement","_iterator","_step","img","figure","src","imgElem","_context3","_createForOfIteratorHelper","n","style","maxHeight","height","maxWidth","width","_loadImage","t0","e","f","bulmaCarousel","_x5","_x6","_x7","_x8","_callee4","_context4","_resourceItems","connector","get","_x9","_this","url","makeQuery","responseType","blob","reader","FileReader","readAsDataURL","onloadend","er","LOADING_TEXT","CollapsiblePanel","status","open","_updateContainer","parent","getContainer","_updateContent2","_container","_content","_updateContent","_toggle","_getToggleButtonHtml","_cleanContent","close","icon","title","header","_createHeader","content","leftLevel","rightLevel","onclick","html","WebmapTreeItem","layer","container","_createTreeItem","layers","setAttribute","visibility","checked","emitter","on","ev","set","propagation","WebMap","item_type","children","tree","getChildren","treeBranch","_createTreeBranch","BaseMapsContainer","_createContainer","isBaseLayer","_updateBaseMapContainer","basemaps","_baseMapsContainer","_this2","_createBaseMapItem","getBaseLayers","getLayer","baseMap","_this3","control","isLayerVisible","toggleLayer","activeBaseLayer","getActiveBaseLayer","hideLayer","createTextNode","BookmarksContainer","bookmarksContainer","bookmarks","resource","labelField","find","label_field","fetchNgwLayerItems","items","_createBookmarkItem","bookmark","nameField","bookmarkBlock","nameValue","geoJson","GeoJSON","geom","lMap","mapAdapter","fitBounds","getBounds","formatTime","dt","daysBehindRange","days","to","to_","now","daysBehindFilter","_layer$props","timeUnit","dateField","range","Math","ceil","daysBehindRangeFormat","LayersContainer","firesEl","_createFireItem","cb","onLayerAdd","off","fire","defined","wrapper","layer_","split","trim","symbol","_createSymbol","createItem","_fire$adapterOptions","adapterOptions","paint","_fire$adapterOptions2","color","stroke","strokeColor","backgroundColor","borderColor","FiresContainer","_LayersContainer","_inherits","_super","_get","_getPrototypeOf","calendarWrapper","_createCalendar","insertBefore","firstChild","fires","promises","promise","all","block","_buildCalendarBlock","dateRange","defaultDateRange","extremeItems","defaultItems","_extremeItems","_slicedToArray","min","max","_defaultItems","startDate","endDate","opt","timedelta","onChange","l","propertiesFilter","onDateChange","minDate","maxDate","DATE_RANGE_SELECT","select","querySelector","inputFrom","calendarCleanBtn","calendarOpenBtn","today","changeFunction","debounce","prop","defaultDate","datepicker","flatpickr","mode","locale","Russian","allowInput","updateCleanBtnDisplay","display","setRange","_daysBehindRange2","setDate","stopPropagation","preventDefault","isOpen","onchange","createCalendar","layerTimestampExtremum","_layer$adapterOptions","_layer$adapterOptions2","getResourceIdOrFail","extremeReqOpt","limit","extremePromises","_objectSpread","orderBy","ngwDate","NOW","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","source","getOwnPropertyDescriptors","defineProperties","OPTIONS","MapSettingsPanel","actionMap","_target","HTMLElement","sidebar","Sidebar","closeButton","position","autoPan","addTo","ngwLayers","hide","_createSensorContainer2","_createFiresContainer2","remove","show","add","userFires","firms","_createFiresContainer","sensors","_createSensorContainer","_createNgwLayers","_createBasemapsContainer","_createBookmarksContainer","ngwLayer","treeContainer","bookmarkContainer","_this$options","firesContainer","baseMapsContainer","GetCoordinatePanelControl","EventEmitter","addFeatureLayer","radius","popup","popupOptions","createPopupContent","d","_createPopupContent","geometry","coordinates","toFixed","_layer","toggleControl","setCursor","_removeClickListener","__onMapClick","_onMapClick","clearLayerData","lngLat","setLayerData","emit","lng","lat","latLngStr","Clipboard","I18N","en","linearMeasurement","areaMeasurement","meter","kilometer","squareMeter","squareKilometers","ru","toRadians","deg","PI","square","pow","getDistanceString","distance","messages","numberFormat","number","decimals","sign","num","abs","intPart","parseInt","j","substr","MeasureLabel","_Layer","_assertThisInitialized","latlng","Point","Util","offset","_offset","_map","_initLayout","getPanes","popupPane","_updatePosition","Browser","_zoomAnimation","_update","addLayer","removeChild","latLng","_closeButton","DomUtil","_contentNode","point","latLngToLayerPoint","is3D","_containerBottom","_containerLeft","bottom","left","_latLngToNewLayerPoint","zoom","center","Layer","MeasureAction","_Handler","model","overlays","points","_measureHandler","_finished","_activeMeasure","_disableMeasure","_measurementStarted","_finishMeasure","_enableMeasure","event","mouseEventToLatLng","_lastPoint","equals","_trail","_totalDistance","latlng1","latlng2","lat1","lat_dif","lat2","lng_dif","sin","cos","asin","sqrt","_addMeasurePoint","_addMarker","_addLable","_startMove","_directPath","setLatLngs","contextMenu","disable","_onMouseClick","doubleClickZoom","_onMouseMove","enable","_clearOverlay","round","earthRadius","area","len","x1","y1","x2","y2","getArea","removeLayer","directPath","addLatLng","Polygon","weight","dashArray","fillOpacity","interactive","Polyline","measurePath","_measurePath","fillColor","_resetDirectPath","marker","CircleMarker","opacity","fill","ended","lable","enableClose","DomEvent","Handler","Measure","_Control","collapsed","console","_contents","_link","href","_buildItems","ele_ul","ele_li","ele_link_line","innerText","_enableMeasureLine","ele_link_area","_enableMeasureArea","_buildContainer","mouseenter","_expand","mouseleave","_collapse","disableMeasure","Control","StopToggleControlsCb","addStopToggleControl","stopToggleControlsFor","excludeControlName","createMeasureControl","addControl","onLoad","disableSelection","enableSelection","ActionMap","_addTreeControl2","_addSensors2","_addFirms2","_addFireLayer2","_createGetCoordinateControl2","_create","mapOpt","mapOptions","NgwMap","MapAdapter","controls","minZoom","runtimeParams","UrlRuntimeParams","setNgwMap","addBaseLayer","getPaintFunctions","base","getIcon","_createLocateControl","customAttribution","_createShareControl","getNgwLayers","webmap","bookmark_resource","_addFireLayer","_addFirms","_addSensors","_createGetCoordinateControl","_addTreeControl","_addEventsListeners","locate","setView","locationfound","_this$ngwMap$getZoom","getZoom","shareModal","closeModalBtn","shareModalContent","shareInput","shareControl","createButtonControl","onClick","location","_createShareModalContent","ShareButtons","createToggleControl","_this4","locateControl","_locate","addNgwLayer","selectable","selectedPaint","_callee5","_context5","_callee6","sidebarToggleBtn","isActive","activateBurger","deactivateBurger","_this5","_context6","contains","_cleanSelection","setTimeout","_promises","getFeaturePromise","CancelablePromise","cancel","_this6","paramsList","getIdentifyItems","paramsLast","isSensor","layerId","identify","toGeojson","onClose","unSelectLayers","extensions","_this7","cancelPromises","_highlighNgwLayer","USERFIRE_ID","MODIS_ID","VIIRS_ID","SENSOR_ID","process","setInterval","firmsAdapterOptions","strokeOpacity","bounds","baseUrl","resources","fit","qmsId","App","config"],"sourceRoot":""}