{"version":3,"file":"main-4f064d564a578ff.js","mappings":"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","sources":["webpack://clear_horizon/./src/bulma.ts","webpack://clear_horizon/./src/constants.ts","webpack://clear_horizon/./src/utils/daysBehindRange.ts","webpack://clear_horizon/./src/components/GetCoordinateControl/GetCoordinateControl.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BaseMapsContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BookmarksContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/CollapsiblePanel.ts","webpack://clear_horizon/./src/utils/formatTime.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/LayersContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/FiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/createCalendar.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/WebmapTreeItem.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/MapSettingsPanel.ts","webpack://clear_horizon/./src/utils/layerTimestampExtremum.ts","webpack://clear_horizon/./src/utils/createSensorPopupContent.ts","webpack://clear_horizon/./src/components/Popup.ts","webpack://clear_horizon/./src/utils/fetchSensorsData.ts","webpack://clear_horizon/./src/utils/index.ts","webpack://clear_horizon/./src/components/ToggleControl.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureLabel.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/i18n.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/utils.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureAction.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/Measure.ts","webpack://clear_horizon/./src/components/ActionMap.ts","webpack://clear_horizon/./src/components/createMeasureControl.ts","webpack://clear_horizon/./src/config.ts","webpack://clear_horizon/./src/main.ts","webpack://clear_horizon/./src/App.ts"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(\n    document.querySelectorAll('.navbar-burger'),\n    0,\n  );\n\n  // Check if there are any navbar burgers\n  if ($navbarBurgers.length > 0) {\n    // Add a click event on each of them\n    $navbarBurgers.forEach((el) => {\n      el.addEventListener('click', () => {\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target);\n\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n        el.classList.toggle('is-active');\n        if ($target) {\n          $target.classList.toggle('is-active');\n        }\n      });\n    });\n  }\n});\n","export const DATE_RANGE_SELECT: [days: number, text: string][] = [\n  [24, '1 день'],\n  [48, '2 дня'],\n  [72, '3 дня'],\n  [96, '4 дня'],\n  [120, '5 дней'],\n  [144, '6 дней'],\n  [168, 'неделя'],\n];\n\nexport const USERFIRE_ID = 'USERFIRE';\nexport const MODIS_ID = 'MODIS';\nexport const VIIRS_ID = 'VIIRS';\nexport const SENSOR_ID = 'SENSOR';\n\nexport const SENSOR_MEASUREMENT_API = process.env.SENSOR_MEASUREMENT_API;\n\nexport let NOW = new Date();\n\n// update global NOW each hour for long session\nsetInterval(\n  () => {\n    NOW = new Date();\n  },\n  60 * 60 * 1000,\n);\n","import type { FiresAdapterOptions, TimeUnit } from '../interfaces';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\n\nexport function daysBehindRange(days: number, to?: Date): [Date, Date] {\n  const to_ = to ? to.getTime() : Date.now();\n  const from = to_ - Number(days) * 1000 * 60 * 60;\n  return [from, to_].map((x) => new Date(x)) as [Date, Date];\n}\n\nexport function daysBehindRangeFormat(\n  days: number,\n  unit: TimeUnit = 's',\n  to?: Date,\n): [number | string, number | string] {\n  return daysBehindRange(days, to).map((x) =>\n    unit === 'ISO'\n      ? new Date(x).toISOString()\n      : unit === 's'\n        ? Math.ceil(x.getTime()) / 1000\n        : x.getTime(),\n  ) as [number | string, number | string];\n}\n\nexport function daysBehindFilter(\n  days: number,\n  layer: FiresAdapterOptions,\n  to?: Date,\n): PropertiesFilter {\n  const { timeUnit, dateField } = layer.props;\n  const range = daysBehindRangeFormat(days, timeUnit, to);\n  return range.map((x, i) => [dateField, i ? 'le' : 'ge', x]);\n}\n","import './GetCoordinateControl.css';\nimport '../ToggleControl.css';\nimport { EventEmitter } from 'events';\n\nimport { Clipboard } from '@nextgis/utils';\n\nimport type { ActionMap } from '../ActionMap';\nimport type {\n  MapClickEvent,\n  ToggleControlOptions,\n  VectorLayerAdapter,\n} from '@nextgis/ngw-map';\nimport type { Feature, Point } from 'geojson';\n\nexport interface GetCoordinatePanelControlOptions {\n  toggle?: (status: boolean) => void;\n}\n\nexport class GetCoordinatePanelControl implements ToggleControlOptions {\n  html = '<i class=\"fas fa-map-pin btn-control-icon \"></i>';\n  title = {\n    off: 'Полученить координаты с карты',\n    on: 'Выключить режим получения координат с карты',\n  };\n\n  addClass = 'toggle-control webmap-tree-control';\n  addClassOn = 'active';\n\n  status = false;\n\n  emitter = new EventEmitter();\n\n  private _toggle?: (status: boolean) => void;\n  private __onMapClick?: (e: MapClickEvent) => void;\n  private _layer!: VectorLayerAdapter;\n\n  constructor(\n    private actionMap: ActionMap,\n    options: GetCoordinatePanelControlOptions = {},\n  ) {\n    this._toggle = options.toggle;\n    this.actionMap.ngwMap\n      .addFeatureLayer<any, Point>({\n        id: 'show-coordinate-click',\n        visibility: true,\n        paint: { radius: 6 },\n        popup: true,\n        popupOptions: {\n          createPopupContent: (d) => {\n            if (d.feature) {\n              return this._createPopupContent(\n                d.feature.geometry.coordinates.map((x) => x.toFixed(5)),\n              );\n            }\n          },\n        },\n      })\n      .then((layer) => {\n        if (layer) {\n          this._layer = layer;\n        }\n      });\n  }\n\n  onClick(status?: boolean): void {\n    this.toggleControl(status);\n  }\n\n  show(): void {\n    this.actionMap.ngwMap.setCursor('crosshair');\n    this._removeClickListener();\n    this.__onMapClick = (e: MapClickEvent) => this._onMapClick(e);\n    this.actionMap.ngwMap.emitter.on('click', this.__onMapClick);\n  }\n\n  hide(): void {\n    this.actionMap.ngwMap.setCursor('default');\n    this._removeClickListener();\n    this.actionMap.ngwMap.clearLayerData(this._layer);\n  }\n\n  private _removeClickListener() {\n    if (this.__onMapClick) {\n      this.actionMap.ngwMap.emitter.off('click', this.__onMapClick);\n      this.__onMapClick = undefined;\n    }\n  }\n\n  private _onMapClick(e: MapClickEvent) {\n    const feature: Feature<Point> = {\n      type: 'Feature',\n      properties: {},\n      geometry: { type: 'Point', coordinates: e.lngLat },\n    };\n    this.actionMap.ngwMap.setLayerData(this._layer, feature);\n  }\n\n  private toggleControl(status?: boolean) {\n    status = status !== undefined ? status : !this.status;\n    if (status) {\n      this.show();\n    } else {\n      this.hide();\n    }\n\n    this.status = status;\n    if (this._toggle) {\n      this._toggle(status);\n    }\n    this.emitter.emit('status', this.status);\n  }\n\n  private _createPopupContent([lng, lat]: string[]) {\n    const content = document.createElement('div');\n    const latLngStr = `${lat}, ${lng}`;\n    content.innerHTML = `\n    <span>Широта/Долгота:</span>\n    <span class=\"lat-lng-coord\"> ${latLngStr}</span>\n    <a href=\"#\" class=\"copy-to-clipboard\">\n    <i class=\"far fa-clipboard\"></i>\n    </a>`;\n    const clipBoardLink = content.getElementsByClassName(\n      'copy-to-clipboard',\n    )[0] as HTMLLinkElement;\n    clipBoardLink.onclick = () => {\n      Clipboard.copy(latLngStr);\n    };\n\n    return content;\n  }\n}\n","import './BaseMapsContainer.css';\n\nimport type { LayerAdapter, NgwMap } from '@nextgis/ngw-map';\n\nexport interface BaseMapsContainerOptions {\n  ngwMap: NgwMap;\n}\n\nexport class BaseMapsContainer {\n  private readonly ngwMap: NgwMap;\n  private _container: HTMLElement;\n  private _baseMapsContainer?: HTMLElement;\n\n  constructor(private options: BaseMapsContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n    this.ngwMap.emitter.on('layer:add', (e) => {\n      if (this.ngwMap.isBaseLayer(e)) {\n        this._updateBaseMapContainer();\n      }\n    });\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  private _createContainer() {\n    const container = document.createElement('div');\n    container.className = 'basemaps-contentainer panel-content-padding control';\n\n    const basemaps = document.createElement('div');\n    basemaps.className = 'basemaps-contentainer__layers';\n    this._baseMapsContainer = basemaps;\n    container.appendChild(basemaps);\n    this._updateBaseMapContainer();\n    return container;\n  }\n\n  private _updateBaseMapContainer() {\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.innerHTML = '';\n    }\n    // first checkbox to remove any basemap\n    this._createBaseMapItem();\n    this.ngwMap.getBaseLayers().forEach((x) => {\n      const layer = this.ngwMap.getLayer(x);\n      if (layer) {\n        this._createBaseMapItem(layer);\n      }\n    });\n  }\n\n  private _createBaseMapItem(baseMap?: LayerAdapter) {\n    const control = document.createElement('div');\n    control.className = 'control';\n    const elem = document.createElement('label');\n    elem.className = 'radio basemap-container__item';\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'radio');\n    input.setAttribute('name', 'basemap');\n\n    input.checked = !!baseMap && this.ngwMap.isLayerVisible(baseMap);\n\n    // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n    //   input.checked = ev.value;\n    // });\n    input.onclick = () => {\n      if (baseMap && baseMap.id) {\n        this.ngwMap.toggleLayer(baseMap.id, input.checked);\n      } else {\n        const activeBaseLayer = this.ngwMap.getActiveBaseLayer();\n        if (activeBaseLayer) {\n          this.ngwMap.hideLayer(activeBaseLayer);\n        }\n      }\n    };\n    const layerName = baseMap && (baseMap.name || baseMap.options.name);\n    const displayName = layerName || 'Blank';\n    const name = document.createTextNode(displayName);\n\n    elem.appendChild(input);\n\n    elem.appendChild(name);\n\n    control.appendChild(elem);\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.appendChild(control);\n    }\n  }\n}\n","import './BookmarksContainer.css';\n\nimport { GeoJSON } from 'leaflet';\n\nimport type { Bookmark } from '../../interfaces';\nimport type { FeatureItem, ResourceHierarchy } from '@nextgis/ngw-connector';\nimport type { NgwMap } from '@nextgis/ngw-map';\nimport type { Polygon } from 'geojson';\nimport type { Map } from 'leaflet';\n\nexport interface BookmarksContainerOptions {\n  ngwMap: NgwMap<Map>;\n  bookmarks: ResourceHierarchy[];\n}\n\nexport class BookmarksContainer {\n  private readonly ngwMap: NgwMap<Map>;\n  private _container: HTMLElement;\n\n  constructor(private options: BookmarksContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'bookmarks-contentainer panel-content-padding ';\n\n    const bookmarksContainer = document.createElement('div');\n    bookmarksContainer.className = 'bookmarks-contentainer__layers';\n    this.options.bookmarks.forEach((b) => {\n      this.ngwMap.connector\n        .get('resource.item', null, { id: b.id })\n        .then((resource) => {\n          if (resource.feature_layer) {\n            const labelField = resource.feature_layer.fields.find(\n              (x) => x.label_field,\n            );\n            if (labelField) {\n              this.ngwMap\n                .fetchNgwLayerItems<Bookmark, Polygon>({ resourceId: b.id })\n                .then((items) => {\n                  items.forEach((x) => {\n                    const elem = this._createBookmarkItem(\n                      x,\n                      labelField.keyname as keyof Bookmark,\n                    );\n                    container.appendChild(elem);\n                  });\n                });\n            }\n          }\n        });\n    });\n    container.appendChild(bookmarksContainer);\n\n    return container;\n  }\n\n  _createBookmarkItem<B extends Bookmark = Bookmark>(\n    bookmark: FeatureItem<B, Polygon>,\n    nameField: keyof B = 'name',\n  ): HTMLElement {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item bookmark';\n    const bookmarkBlock = document.createElement('div');\n    const nameValue = bookmark.fields[nameField];\n    bookmarkBlock.innerHTML = String(nameValue);\n    bookmarkBlock.onclick = () => {\n      const geoJson = new GeoJSON(bookmark.geom);\n      const lMap = this.ngwMap.mapAdapter.map;\n      lMap && lMap.fitBounds(geoJson.getBounds());\n    };\n    elem.appendChild(bookmarkBlock);\n    return elem;\n  }\n}\n","import './CollapsiblePanel.css';\n\ntype GetHTML = () => HTMLElement | Promise<HTMLElement>;\n\nconst LOADING_TEXT = 'Загрузка данных...';\n\nexport interface CollapsiblePanelOptions {\n  title?: string;\n  content: HTMLElement | GetHTML;\n  open?: boolean;\n  parent?: HTMLElement;\n}\n\nexport class CollapsiblePanel {\n  private readonly _container = document.createElement('div');\n  private _content?: HTMLElement;\n  private _toggle?: HTMLElement;\n  private status: boolean;\n\n  constructor(private options: CollapsiblePanelOptions) {\n    this.status = this.options.open !== undefined ? this.options.open : true;\n    this._updateContainer();\n    if (this.options.parent) {\n      this.options.parent.appendChild(this.getContainer());\n    }\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  open(): void {\n    if (\n      this._content &&\n      (!this._content.innerHTML || this._content.innerHTML === LOADING_TEXT)\n    ) {\n      this._updateContent();\n    }\n    // this._container.appendChild(this._content);\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-up');\n    }\n    this.status = true;\n  }\n\n  close(): void {\n    this._cleanContent();\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-down');\n    }\n    this.status = false;\n  }\n\n  toggle(): void {\n    if (this.status) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _getToggleButtonHtml(icon?: string) {\n    return `\n    <a class=\"button is-small\">\n    <span class=\"icon is-small\">\n      <i class=\"${icon}\"></i>\n    </span>\n    </a>\n    `;\n  }\n\n  private _updateContainer() {\n    this._container.innerHTML = '';\n    if (this.options.title) {\n      const header = this._createHeader();\n      this._container.appendChild(header);\n    }\n    const content = document.createElement('div');\n    content.innerHTML = LOADING_TEXT;\n    content.className = 'panel-content';\n    this._content = content;\n    this._container.appendChild(content);\n\n    if (this.status) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  private _createHeader() {\n    const header = document.createElement('div');\n    header.className = 'level is-mobile panel-header';\n\n    const leftLevel = document.createElement('div');\n    leftLevel.className = 'level-left';\n\n    const title = document.createElement('div');\n    title.className = 'level-item panel-header__title';\n    title.innerHTML = this.options.title || '';\n    leftLevel.appendChild(title);\n\n    const rightLevel = document.createElement('div');\n    rightLevel.className = 'level-right';\n    const toggle = document.createElement('div');\n    toggle.className = 'level-item panel-header__toggle';\n    rightLevel.appendChild(toggle);\n\n    toggle.onclick = () => {\n      this.toggle();\n    };\n    this._toggle = toggle;\n\n    header.appendChild(leftLevel);\n    header.appendChild(rightLevel);\n\n    return header;\n  }\n\n  private _cleanContent() {\n    if (this._content) {\n      this._content.innerHTML = '';\n    }\n  }\n\n  private async _updateContent() {\n    this._cleanContent();\n    if (this._content) {\n      const html =\n        typeof this.options.content === 'function'\n          ? await this.options.content()\n          : this.options.content;\n\n      this._content.appendChild(html);\n    }\n    return this._content;\n  }\n}\n","import type { TimeUnit } from '../interfaces';\n\nexport function formatTime(dt: Date, unit: TimeUnit = 'ms'): number | string {\n  const t = dt.getTime();\n  return unit === 's' ? t / 1000 : dt.toISOString();\n}\n","import './FiresContainer.css';\n\nimport { defined } from '@nextgis/utils';\n\nimport type { FireResource } from '../../interfaces';\nimport type { NgwLayerOptions, ResourceAdapter } from '@nextgis/ngw-kit';\nimport type { LayerAdapter, NgwMap } from '@nextgis/ngw-map';\nimport type { CirclePaint } from '@nextgis/paint';\n\nexport interface LayersContainerOptions {\n  ngwMap: NgwMap;\n  layers: NgwLayerOptions<'GEOJSON'>[];\n}\n\nexport class LayersContainer<\n  O extends LayersContainerOptions = LayersContainerOptions,\n> {\n  protected readonly ngwMap: NgwMap;\n  protected _container: HTMLElement;\n\n  constructor(protected options: O) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  protected _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'fires-contentainer panel-content-padding ';\n\n    const firesEl = document.createElement('div');\n    firesEl.className = 'fires-contentainer__layers';\n    for (const f of this.options.layers) {\n      this._createFireItem(f, firesEl);\n    }\n    container.appendChild(firesEl);\n\n    return container;\n  }\n\n  protected onLayerAdd(id: string, cb: (layer: ResourceAdapter) => void): void {\n    const ngwMap = this.options.ngwMap;\n    const layer = ngwMap && (ngwMap.getLayer(id) as ResourceAdapter);\n    if (layer) {\n      cb(layer);\n    } else {\n      const onLayerAdd = (e: LayerAdapter) => {\n        if (e.id === id) {\n          cb(e as ResourceAdapter);\n          this.ngwMap.emitter.off('layer:add', onLayerAdd);\n        }\n      };\n      this.ngwMap.emitter.on('layer:add', onLayerAdd);\n    }\n  }\n\n  private _createFireItem(fire: FireResource, container: HTMLElement): void {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    const id = fire.id;\n    if (!defined(id)) return;\n\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = 'загрузка...';\n    container.appendChild(wrapper);\n\n    const createItem = (layer_: ResourceAdapter): void => {\n      const item = layer_.item;\n      wrapper.innerHTML = '';\n      if (item) {\n        const input = document.createElement('input');\n        input.setAttribute('type', 'checkbox');\n\n        input.checked = true;\n\n        // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n        //   input.checked = ev.value;\n        // });\n        input.onclick = () => {\n          this.ngwMap.toggleLayer(id, input.checked);\n        };\n\n        const name = document.createElement('span');\n        const displayName = item.resource.display_name.split('__')[0];\n        name.innerHTML = displayName.replace('fires', '').trim();\n        const symbol = this._createSymbol(fire);\n        elem.appendChild(input);\n        elem.appendChild(symbol);\n        elem.appendChild(name);\n        wrapper.appendChild(elem);\n      }\n    };\n    this.onLayerAdd(id, (layer) => createItem(layer));\n  }\n\n  private _createSymbol(fire: FireResource): HTMLElement {\n    const symbol = document.createElement('span');\n    symbol.className = 'item-symbol';\n    if (fire.adapterOptions?.paint) {\n      const { color, stroke, strokeColor } = fire.adapterOptions\n        ?.paint as CirclePaint;\n      if (typeof color === 'string') {\n        symbol.style.color = color;\n        symbol.style.backgroundColor = color;\n      }\n      if (stroke && typeof strokeColor === 'string') {\n        symbol.style.borderColor = strokeColor;\n      }\n    }\n    return symbol;\n  }\n}\n","import { formatTime } from '../../utils/formatTime';\n\nimport { LayersContainer } from './LayersContainer';\nimport { createCalendar } from './createCalendar';\n\nimport type { LayersContainerOptions } from './LayersContainer';\nimport type { CreateCalendarOptions } from './createCalendar';\nimport type { FiresLayerProps } from '../../interfaces';\nimport type { ResourceAdapter } from '@nextgis/ngw-kit';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\n\nexport interface FiresContainerOptions extends LayersContainerOptions {\n  dateRange: [Date | undefined, Date | undefined];\n  defaultDateRange: [Date | undefined, Date | undefined];\n  timedelta: number;\n  onDateChange?: () => void;\n}\n\nexport class FiresContainer extends LayersContainer<FiresContainerOptions> {\n  protected _createContainer(): HTMLElement {\n    const container = super._createContainer();\n\n    const calendarWrapper = this._createCalendar();\n    container.insertBefore(calendarWrapper, container.firstChild);\n    return container;\n  }\n\n  private _createCalendar(): HTMLElement {\n    const calendarWrapper = document.createElement('div');\n    const fires = this.options.layers;\n\n    const promises: Promise<ResourceAdapter>[] = [];\n    fires.forEach((x) => {\n      const id = x.id;\n      if (id) {\n        const promise = new Promise<ResourceAdapter>((resolve) => {\n          this.onLayerAdd(id, resolve);\n        });\n        promises.push(promise);\n      }\n    });\n    Promise.all(promises).then((fires) => {\n      const block = this._buildCalendarBlock(\n        fires,\n        this.options.dateRange,\n        this.options.defaultDateRange,\n      );\n      calendarWrapper.appendChild(block);\n    });\n\n    return calendarWrapper;\n  }\n\n  private _buildCalendarBlock(\n    layers: ResourceAdapter[],\n    extremeItems: [Date?, Date?],\n    defaultItems: [Date?, Date?],\n  ) {\n    const [min, max]: (Date | undefined)[] = extremeItems;\n    const [startDate, endDate]: (Date | undefined)[] = defaultItems;\n    const opt: CreateCalendarOptions = {\n      timedelta: this.options.timedelta,\n      onChange: (e) => {\n        for (const l of layers) {\n          const { dateField, timeUnit } = (l.options.props ||\n            {}) as FiresLayerProps;\n          if (dateField) {\n            const filter: PropertiesFilter = [];\n            if (e.start) {\n              filter.push([dateField, 'ge', formatTime(e.start, timeUnit)]);\n            }\n            if (e.end) {\n              filter.push([dateField, 'le', formatTime(e.end, timeUnit)]);\n            }\n            if (l.propertiesFilter) {\n              l.propertiesFilter(filter);\n            }\n          }\n        }\n        if (this.options.onDateChange) {\n          this.options.onDateChange();\n        }\n      },\n    };\n    if (min) {\n      opt.minDate = min;\n    }\n    if (startDate) {\n      opt.startDate = startDate;\n    }\n    if (max) {\n      opt.maxDate = max;\n    }\n    if (endDate) {\n      opt.endDate = endDate;\n    }\n    return createCalendar(opt);\n  }\n}\n","import 'flatpickr/dist/flatpickr.min.css';\nimport { debounce } from '@nextgis/utils';\nimport flatpickr from 'flatpickr';\n// import rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\nimport { Russian } from 'flatpickr/dist/l10n/ru.js';\n\nimport { DATE_RANGE_SELECT } from '../../constants';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\n\nexport interface CreateCalendarOptions {\n  maxDate?: Date;\n  minDate?: Date;\n  startDate?: Date;\n  endDate?: Date;\n  timedelta: number;\n  onChange: (val: { start?: Date; end?: Date }) => void;\n}\n\nexport function createCalendar(options: CreateCalendarOptions): HTMLElement {\n  const { onChange, maxDate, minDate, startDate, endDate, timedelta } = options;\n  const html = document.createElement('div');\n  html.className = 'field is-horizontal';\n  html.innerHTML = `\n  <button class=\"button calendar-open calendar-control-btn is-small\">\n    <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n  </button>\n    <div class=\"field\">\n        <input class=\"input input-from is-small\" type=\"text\" >\n    </div>\n\n    <div class=\"select is-small\">\n      <select class=\"select-input\">\n        ${DATE_RANGE_SELECT.map((x) => {\n          return `<option ${timedelta === x[0] ? 'selected' : ''} value=${\n            x[0]\n          }>${x[1]}</option>`;\n        })}\n      </select>\n    </div>\n    <button class=\"button calendar-clean calendar-control-btn is-small\">✖</button>\n    `;\n\n  // <div class=\"field\">\n  //     <input class=\"input input-to is-small\" type=\"text\" >\n  // </div>\n\n  const select = html.querySelector('.select-input') as HTMLSelectElement;\n  const inputFrom = html.querySelector('.input.input-from') as HTMLInputElement;\n  const calendarCleanBtn = html.querySelector(\n    '.calendar-clean',\n  ) as HTMLButtonElement;\n  const calendarOpenBtn = html.querySelector(\n    '.calendar-open',\n  ) as HTMLButtonElement;\n  const today = new Date();\n\n  const changeFunction = debounce((prop: { start: Date; end: Date }) => {\n    if (prop.start && prop.end) {\n      onChange(prop);\n    }\n  });\n\n  const defaultDate = startDate && endDate ? [startDate, endDate] : undefined;\n\n  const datepicker = flatpickr(inputFrom, {\n    mode: 'range',\n    locale: Russian,\n    allowInput: true,\n    maxDate: maxDate || today,\n    minDate,\n    defaultDate,\n    // plugins: [rangePlugin({ input: inputTo })],\n    onChange: ([start, end]) => {\n      select.value = '';\n      updateCleanBtnDisplay();\n      changeFunction({ start, end });\n    },\n  });\n  const updateCleanBtnDisplay = () => {\n    calendarCleanBtn.style.display =\n      Number(select.value) === timedelta ? 'none' : 'block';\n  };\n  updateCleanBtnDisplay();\n\n  const setRange = (val: number) => {\n    updateCleanBtnDisplay();\n    const [start, end] = daysBehindRange(val, endDate);\n    datepicker.setDate([start, end]);\n    changeFunction({ start, end });\n  };\n  calendarOpenBtn.onclick = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    datepicker.isOpen ? datepicker.close() : datepicker.open();\n  };\n  calendarCleanBtn.onclick = () => {\n    select.value = String(timedelta);\n    setRange(timedelta);\n  };\n\n  select.onchange = () => {\n    updateCleanBtnDisplay();\n    setRange(Number(select.value));\n  };\n\n  // calendar.on('select', () => {\n  //   // const val = calendar.value(); // string - string\n  //   onChange({ ...calendar.date });\n  // });\n\n  return html;\n}\n","import { WebMap } from '@nextgis/webmap';\n\nimport type { ChangeEvent, CheckProperty } from '@nextgis/item';\nimport type { NgwWebmapItem, TreeGroup, TreeLayer } from '@nextgis/ngw-kit';\n\nexport class WebmapTreeItem {\n  private _container?: HTMLElement;\n\n  constructor(layer: NgwWebmapItem) {\n    const container = this._createTreeItem(layer);\n    if (container) {\n      this._container = container;\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  private _createTreeBranch(layers: NgwWebmapItem[]) {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item-children';\n    layers.forEach((x) => {\n      if (x.item) {\n        const item = this._createTreeItem(x);\n        if (item) {\n          elem.appendChild(item);\n        }\n      }\n    });\n    return elem;\n  }\n\n  private _createTreeItem(layer: NgwWebmapItem) {\n    const item: TreeGroup | TreeLayer = layer.item;\n    if (!item) {\n      return false;\n    }\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    if (item.display_name) {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'checkbox');\n      // const value = item.item_type === 'layer' ? item.layer_enabled : true;\n      const visibility = layer.properties.property(\n        'visibility',\n      ) as CheckProperty;\n      input.checked = !!visibility.get();\n\n      if (visibility) {\n        visibility.emitter.on('change', (ev: ChangeEvent) => {\n          input.checked = ev.value;\n        });\n        input.onclick = () => {\n          visibility.set(input.checked, {\n            propagation: WebMap.keys.pressed('ctrl'),\n          });\n        };\n      }\n\n      const name = document.createElement('span');\n      name.innerHTML = item.display_name;\n\n      elem.appendChild(input);\n      elem.appendChild(name);\n    }\n\n    if (\n      item.item_type === 'group' ||\n      (item.item_type === 'root' && item.children.length)\n    ) {\n      const children = layer.tree.getChildren() as NgwWebmapItem[];\n      const treeBranch = this._createTreeBranch(children.reverse());\n      elem.appendChild(treeBranch);\n    }\n    return elem;\n  }\n}\n","import './MapSettingsPanel.css';\n// @ts-ignore\nimport Sidebar from 'leaflet-sidebar';\nimport 'leaflet-sidebar/src/L.Control.Sidebar.css';\n// import Sidebar from '../../assets/SidebarControl';\n// import '../../assets/SidebarControl/SidebarControl.scss';\nimport '../../assets/SidebarControl/SidebarControlLeaflet.scss';\n\nimport { NOW } from '../../constants';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { layerTimestampExtremum } from '../../utils/layerTimestampExtremum';\n\nimport { BaseMapsContainer } from './BaseMapsContainer';\nimport { BookmarksContainer } from './BookmarksContainer';\nimport { CollapsiblePanel } from './CollapsiblePanel';\nimport { FiresContainer } from './FiresContainer';\nimport { LayersContainer } from './LayersContainer';\nimport { WebmapTreeItem } from './WebmapTreeItem';\n\nimport type { MapSettingsPanelOptions } from './interfaces';\nimport type { ActionMap } from '../ActionMap';\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type { NgwLayers } from '@nextgis/ngw-map';\n\nconst OPTIONS: Partial<MapSettingsPanelOptions> = {\n  target: 'tree',\n  // width: 300\n};\n\nexport class MapSettingsPanel {\n  options: MapSettingsPanelOptions;\n\n  sidebar: Sidebar;\n\n  private _container: HTMLElement;\n  private _target: HTMLElement;\n\n  private ngwLayers!: NgwLayers;\n\n  constructor(\n    private actionMap: ActionMap,\n    options: MapSettingsPanelOptions,\n  ) {\n    this.options = { ...OPTIONS, ...options };\n    if (typeof this.options.target === 'string') {\n      const target = document.getElementById(this.options.target);\n      if (target) {\n        this._target = target;\n      } else {\n        throw new Error(\n          `No element with ID #${this.options.target} in document for webmap tree`,\n        );\n      }\n    } else if (this.options.target instanceof HTMLElement) {\n      this._target = this.options.target;\n    } else {\n      throw new Error('`target` option is not set');\n    }\n    this.sidebar = new Sidebar(this._target, {\n      closeButton: false,\n      position: 'left',\n      autoPan: false,\n    });\n\n    this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n    // this.actionMap.ngwMap.createControl(this.sidebar).then((x) => {\n    //   x.onAdd(this.actionMap.ngwMap.mapAdapter);\n    // });\n\n    // this.actionMap.ngwMap.addControl(sidebarControl, 'top-left');\n    // this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n\n    this.ngwLayers = this.options.ngwLayers;\n\n    this._container = this._createContainer();\n    if (!this.options.status) {\n      this.hide();\n    }\n    this._target && this._target.appendChild(this._container);\n  }\n\n  show(): void {\n    this._container.classList.remove('hidden');\n    this.sidebar.show();\n  }\n\n  hide(): void {\n    this.sidebar.hide();\n    this._container.classList.add('hidden');\n  }\n\n  private _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'tree-container';\n\n    if (this.options.width !== undefined) {\n      container.style.width = this.options.width + 'px';\n    }\n\n    if (this.options.userFires || this.options.firms) {\n      new CollapsiblePanel({\n        title: 'Пожары',\n        content: () => this._createFiresContainer(),\n        parent: container,\n      });\n    }\n    if (this.options.sensors) {\n      new CollapsiblePanel({\n        title: 'Датчики',\n        content: () => this._createSensorContainer(),\n        parent: container,\n      });\n    }\n    new CollapsiblePanel({\n      title: 'Базовые слои',\n      content: () => this._createNgwLayers(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Подложки',\n      content: () => this._createBasemapsContainer(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Закладки',\n      content: () => this._createBookmarksContainer(),\n      open: false,\n      parent: container,\n    });\n\n    return container;\n  }\n\n  private _createNgwLayers() {\n    const container = document.createElement('div');\n    container.className = 'webmap-tree-container';\n    for (const n in this.ngwLayers) {\n      const ngwLayer = this.ngwLayers[n];\n      const tree = new WebmapTreeItem(ngwLayer.layer.layer);\n      const treeContainer = tree.getContainer();\n      if (treeContainer) {\n        container.appendChild(treeContainer);\n      }\n    }\n    return container;\n  }\n\n  private _createBookmarksContainer() {\n    const container = document.createElement('div');\n    const bookmarks = this.options.bookmarks;\n    if (bookmarks) {\n      const bookmarkContainer = new BookmarksContainer({\n        bookmarks,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(bookmarkContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createFiresContainer() {\n    const container = document.createElement('div');\n    const { firms, userFires } = this.options;\n    let dateRange: [Date | undefined, Date | undefined] = [\n      undefined,\n      undefined,\n    ];\n    if (firms || userFires) {\n      const fires: NgwLayerOptions<'GEOJSON'>[] = [];\n      if (userFires && userFires.id) {\n        fires.push(userFires);\n        dateRange = await layerTimestampExtremum({\n          layer: userFires,\n          connector: this.options.ngwMap.connector,\n        });\n      }\n      if (firms) {\n        firms.forEach((x) => fires.push(x));\n      }\n      const timedelta = this.actionMap.options.timedelta || 24;\n      const defaultDateRange = daysBehindRange(timedelta, NOW);\n      const firesContainer = new FiresContainer({\n        layers: fires,\n        ngwMap: this.options.ngwMap,\n        dateRange,\n        defaultDateRange,\n        timedelta: this.actionMap.options.timedelta || 72,\n        onDateChange: () => {\n          if (this.options.onDateChange) {\n            this.options.onDateChange();\n          }\n        },\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createSensorContainer() {\n    const container = document.createElement('div');\n    const { sensors } = this.options;\n    if (sensors) {\n      const firesContainer = new LayersContainer({\n        layers: [sensors],\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createBasemapsContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.firms;\n    if (fires) {\n      const baseMapsContainer = new BaseMapsContainer({\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(baseMapsContainer.getContainer());\n    }\n    return container;\n  }\n}\n","import { fetchNgwLayerItems } from '@nextgis/ngw-kit';\n\nimport { NOW } from '../constants';\n\nimport type { NgwDateFormat } from '@nextgis/ngw-connector';\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { FetchNgwItemsOptions, NgwLayerOptions } from '@nextgis/ngw-kit';\n\nexport function layerTimestampExtremum({\n  connector,\n  layer,\n}: {\n  connector: NgwConnector;\n  layer: NgwLayerOptions<'GEOJSON'>;\n}): Promise<[Date | undefined, Date | undefined]> {\n  const resource = layer.resource;\n  if (layer && resource && connector) {\n    const dateField = layer.adapterOptions?.props?.dateField || 'field_9';\n    return connector.getResourceIdOrFail(resource).then((resourceId) => {\n      const extremeReqOpt: FetchNgwItemsOptions = {\n        resourceId,\n        fields: [dateField],\n        geom: false,\n        connector,\n        limit: 1,\n      };\n      const extremePromises = [\n        fetchNgwLayerItems({ ...extremeReqOpt, orderBy: [dateField] }),\n        // fetchNgwLayerItems({ ...extremeReqOpt, orderBy: ['-' + dateField] }),\n      ];\n      return Promise.all(extremePromises).then(([minItem, maxItem]) => {\n        const [min] = [minItem, maxItem].map((items) => {\n          const item = items && items[0];\n          if (item) {\n            const ngwDate = item.fields[dateField] as NgwDateFormat;\n            if (ngwDate) {\n              return parseNgwDate(ngwDate);\n            }\n          }\n          return undefined;\n        });\n        const max = NOW;\n        return [min, max];\n      });\n    });\n  }\n  return Promise.resolve([undefined, undefined]);\n}\n\nfunction parseNgwDate(dt: NgwDateFormat): Date {\n  return new Date(dt.year, dt.month - 1, dt.day);\n}\n","import { Chart } from 'chart.js/auto';\nimport annotationPlugin from 'chartjs-plugin-annotation';\n\nimport { fetchSensorsData } from './fetchSensorsData';\n\nimport type { SensorMeasureItem, SensorMeasureValueType } from '../interfaces';\nimport type { ChartDataset, PluginOptionsByType } from 'chart.js';\nimport type { AnnotationOptions } from 'chartjs-plugin-annotation';\nimport type { Feature } from 'geojson';\n\nimport 'chartjs-adapter-moment';\n\nimport './createSensorPopupContent.css';\n\nChart.register(annotationPlugin);\n\nexport interface CreateExportPopupContentProps {\n  feature: Feature;\n  end?: Date;\n  start?: Date;\n  signal?: AbortSignal;\n}\n\ninterface Threshold {\n  value: number;\n  options?: Partial<AnnotationOptions<'line'>>;\n}\n\ntype ChartType = {\n  options?: { height?: number; units?: string };\n  charts: Partial<\n    Record<\n      SensorMeasureValueType,\n      Partial<ChartDataset<'line'>> & {\n        threshold?: Partial<Threshold>;\n      }\n    >\n  >;\n};\n\nfunction createPmAnnotationThreshold({\n  value,\n  color,\n  label,\n}: {\n  value: number;\n  color: string;\n  label: string;\n}): Partial<Threshold> {\n  return {\n    value,\n    options: {\n      borderColor: color,\n      borderWidth: 3,\n      borderDash: [5, 5],\n      label: {\n        display: false,\n        backgroundColor: color,\n        drawTime: 'afterDatasetsDraw',\n        content: [`Порог СанПиН для ${label}`, `(${value} мкг/м3)`],\n      },\n      enter({ element }) {\n        if (element.label) {\n          element.label.options.display = true;\n        }\n        return true;\n      },\n      leave({ element }, event) {\n        if (element.label) {\n          element.label.options.display = false;\n        }\n        return true;\n      },\n    },\n  };\n}\n\nconst types: ChartType[] = [\n  {\n    options: { height: 200, units: 'мкг/м3' },\n    charts: {\n      P1: {\n        label: 'PM 10',\n        backgroundColor: '#1b9224',\n        borderColor: '#1b9224',\n        borderWidth: 1,\n        threshold: createPmAnnotationThreshold({\n          value: 60,\n          color: '#1b9224',\n          label: 'PM10',\n        }),\n      },\n      P2: {\n        label: 'PM 2.5',\n        backgroundColor: '#08dddf',\n        borderColor: '#08dddf',\n        borderWidth: 1,\n        threshold: createPmAnnotationThreshold({\n          value: 35,\n          color: '#08dddf',\n          label: 'PM2.5',\n        }),\n      },\n    },\n  },\n  {\n    options: { height: 100, units: '%' },\n    charts: {\n      humidity: {\n        label: 'Влажность',\n        backgroundColor: '#ee9602',\n        borderColor: '#ee9602',\n      },\n    },\n  },\n  {\n    options: { height: 100, units: '°C' },\n    charts: {\n      temperature: {\n        label: 'Температура',\n        backgroundColor: '#e1014a',\n        borderColor: '#e1014a',\n      },\n    },\n  },\n];\n\nexport async function createSensorPopupContent({\n  feature,\n  signal,\n}: CreateExportPopupContentProps): Promise<HTMLElement> {\n  const popupElement = document.createElement('div');\n  const { SID_T, PLACE } = feature.properties || {};\n\n  const sensorIds = [SID_T, PLACE].filter(Boolean);\n  if (sensorIds.length === 0) return popupElement;\n\n  popupElement.innerHTML = 'Загрузка...';\n  updatePopupWithCharts({ signal, popupElement, sensorIds });\n\n  return popupElement;\n}\n\nasync function updatePopupWithCharts({\n  signal,\n  sensorIds,\n  popupElement,\n}: {\n  signal?: AbortSignal;\n  sensorIds: string[];\n  popupElement: HTMLElement;\n}) {\n  try {\n    const sensorsData = await fetchSensorsData({\n      sensorIds,\n      lastHours: 24,\n      signal,\n    });\n    if (sensorsData.length === 0) {\n      popupElement.innerHTML = `Данные для ${sensorIds.length > 1 ? 'приёмников' : 'приёмника'} #${sensorIds} за последние 24 часа не найдены`;\n      return popupElement;\n    }\n    sensorsData.reverse();\n    popupElement.innerHTML = '';\n    for (const [index, t] of types.entries()) {\n      const chartElement = createChart({\n        types: t,\n        sensorsData,\n        showXAxis: index >= types.length - 1,\n      });\n      popupElement.appendChild(chartElement);\n    }\n  } catch {\n    popupElement.innerHTML = 'Ошибка загрузки';\n  }\n}\n\nfunction getAnnotationPluginOptions(\n  types: ChartType['charts'],\n): Partial<PluginOptionsByType<'line'>> {\n  const annotations: AnnotationOptions<'line'>[] = [];\n\n  Object.entries(types).forEach(([type, params]) => {\n    if (params.threshold) {\n      const { value, options } = params.threshold;\n      annotations.push({\n        type: 'line',\n        yMin: value,\n        yMax: value,\n        borderColor: 'rgb(255, 99, 132)',\n        borderWidth: 2,\n        ...options,\n      });\n    }\n  });\n  const pluginOptions: Partial<PluginOptionsByType<'line'>> = {\n    annotation: { annotations },\n  };\n  return pluginOptions;\n}\n\nfunction createChart({\n  types,\n  showXAxis,\n  sensorsData,\n}: {\n  types: ChartType;\n  plugins?: PluginOptionsByType<'line'>;\n  showXAxis: boolean;\n  sensorsData: SensorMeasureItem[];\n}) {\n  const { charts, options } = types;\n  const { height, units } = options || {};\n  const pluginOptions = getAnnotationPluginOptions(charts);\n  const chartCanvas = document.createElement('canvas');\n  chartCanvas.height = height || 200;\n  console.log(chartCanvas.style.height);\n  chartCanvas.className = 'sensor-char';\n  new Chart(chartCanvas, {\n    data: {\n      datasets: Object.entries(charts)\n        .filter(([t]) => sensorsData.some((s) => s.value_type === t))\n        .map(([type, params]) => ({\n          type: 'line',\n          label: type,\n          pointRadius: 1,\n          ...params,\n\n          data: sensorsData\n            .filter((s) => s.value_type === type)\n            .map((row) => ({\n              x: new Date(row.datetime).getTime(),\n              y: row.value,\n            })),\n        })),\n    },\n    options: {\n      responsive: true,\n      plugins: {\n        ...pluginOptions,\n        legend: {\n          labels: {\n            usePointStyle: true,\n            generateLabels: (chart) => {\n              return chart.data.datasets.map(function (dataset, i) {\n                return {\n                  text: dataset.label || '',\n                  lineCap: 'round',\n                  lineDash: [],\n                  lineDashOffset: 0,\n                  lineJoin: 'round',\n                  lineWidth: 2,\n                  strokeStyle: String(dataset.borderColor),\n                  fillStyle: String(dataset.backgroundColor),\n                  pointStyle: 'line',\n                  rotation: 0,\n                  hidden: !chart.isDatasetVisible(i),\n                  datasetIndex: i,\n                };\n              });\n            },\n          },\n        },\n      },\n      scales: {\n        x: {\n          grid: {\n            display: true,\n          },\n          ticks: {\n            display: showXAxis,\n            autoSkip: true,\n\n            maxTicksLimit: 12,\n          },\n          type: 'time',\n          time: {\n            unit: 'hour',\n            displayFormats: { hour: 'HH:mm' },\n          },\n        },\n        y: {\n          afterFit: (scaleInstance) => {\n            scaleInstance.width = 30;\n          },\n          title: {\n            display: !!units,\n            text: units,\n            align: 'center',\n            padding: { top: 20, bottom: 0 },\n          },\n        },\n      },\n    },\n  });\n  return chartCanvas;\n}\n","// @ts-ignore\nimport bulmaCarousel from 'bulma-carousel';\n\nimport { prepareColumnValue } from '../utils';\nimport { createSensorPopupContent } from '../utils/createSensorPopupContent';\n\nimport type { CreateExportPopupContentProps } from '../utils/createSensorPopupContent';\nimport type {\n  FeatureItemAttachment,\n  ResourceItem,\n} from '@nextgis/ngw-connector';\nimport type { NgwMap } from '@nextgis/ngw-map';\nimport type { Feature, Geometry } from 'geojson';\n\ninterface CollectorDate {\n  year: number;\n  month: number;\n  day: number;\n}\ninterface CollectorTime {\n  hour: number;\n  minute: number;\n  second: number;\n}\n\ninterface KeyValue {\n  key: string;\n  value: any;\n}\n\ntype CollectorProperty = string | number | CollectorDate | CollectorTime;\n\nexport class Popup {\n  private ngwMap!: NgwMap;\n  private _resourceItems: { [resourceId: number]: ResourceItem } = {};\n\n  setNgwMap(ngwMap: NgwMap): void {\n    this.ngwMap = ngwMap;\n  }\n\n  async createSensorPopupContent(\n    props: CreateExportPopupContentProps,\n  ): Promise<HTMLElement> {\n    return createSensorPopupContent(props);\n  }\n\n  createPopupContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(\n    feature: Feature<G, P>,\n    resourceId?: number,\n    attachment?: FeatureItemAttachment[],\n  ): HTMLElement {\n    const popupElement = document.createElement('div');\n    const props = feature.properties;\n    const propContainer = document.createElement('div');\n    if (props) {\n      propContainer.className = 'properties';\n      const propertiesList: KeyValue[] = Object.entries(props).map(\n        ([key, value]) => {\n          return {\n            key,\n            value,\n          };\n        },\n      );\n      propContainer.innerHTML = this.createPropertiesHtml(propertiesList);\n    }\n\n    if (resourceId) {\n      const pre = document.createElement('div');\n      pre.appendChild(propContainer);\n      popupElement.innerHTML = 'Загрузка...';\n      this.updateElementContent(pre, resourceId, feature).then(() => {\n        popupElement.innerHTML = '';\n        popupElement.appendChild(pre);\n      });\n      if (attachment && attachment.length) {\n        this._addPhotos(\n          popupElement,\n          attachment,\n          resourceId,\n          Number(feature.id),\n        );\n      }\n    } else {\n      popupElement.appendChild(propContainer);\n    }\n    return popupElement;\n  }\n\n  createPropertiesHtml(\n    properties: Array<{ key: string; value: CollectorProperty }>,\n  ): string {\n    let elem = '';\n    properties.forEach(({ key, value }) => {\n      if (typeof value === 'object' && value) {\n        if ('year' in value) {\n          value = [value.day, value.month, value.year].join('.');\n        } else if ('hour' in value) {\n          value = [value.hour, value.minute].join(':');\n        }\n      }\n      elem += `\n      <div class=\"columns is-mobile\">\n        <div class=\"column is-two-fifths\">${key}</div>\n        <div class=\"column\">${prepareColumnValue(value)}</div>\n      </div>\n      `;\n    });\n    return elem;\n  }\n\n  async updateElementContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(\n    element: HTMLElement,\n    resourceId: number,\n    feature: Feature<G, P>,\n  ): Promise<ResourceItem> {\n    const item = await this._getResourceItem(resourceId);\n    if (item.feature_layer) {\n      const newProperties: KeyValue[] = [];\n      item.feature_layer.fields.forEach((x) => {\n        if (x.grid_visibility) {\n          let property = feature.properties[x.keyname];\n          if (property) {\n            if (typeof property === 'string') {\n              property = property.replace(/\\w+(;)\\w+/g, (a, b) =>\n                a.replace(b, b + ' '),\n              );\n            }\n            newProperties.push({ key: x.display_name, value: property });\n          }\n        }\n      });\n      const newContent = this.createPropertiesHtml(newProperties);\n      const pre = element.getElementsByClassName('properties')[0];\n      if (pre) {\n        pre.innerHTML = newContent;\n      }\n    }\n    return item;\n  }\n\n  async _addPhotos(\n    element: HTMLElement,\n    attachment: FeatureItemAttachment[],\n    id: number,\n    fid: number,\n  ): Promise<void> {\n    const attachmentElement = document.createElement('div');\n\n    attachmentElement.className = 'carousel attachment';\n    for (const img of attachment) {\n      const width = 300;\n      const height = 300;\n      const figure = document.createElement('figure');\n      figure.className = `image is-${width}x${height}`;\n      figure.style.maxHeight = height + 'px';\n      figure.style.maxWidth = width + 'px';\n      const src = await this._loadImage(img, {\n        width,\n        height,\n        id,\n        fid,\n      });\n      const imgElem = document.createElement('img');\n      imgElem.src = src;\n      figure.appendChild(imgElem);\n      attachmentElement.appendChild(figure);\n    }\n    element.appendChild(attachmentElement);\n    bulmaCarousel.attach(attachmentElement);\n  }\n\n  private async _getResourceItem(resourceId: number) {\n    if (!this._resourceItems[resourceId]) {\n      const item = await this.ngwMap.connector.get('resource.item', null, {\n        id: resourceId,\n      });\n      this._resourceItems[resourceId] = item;\n    }\n    return this._resourceItems[resourceId];\n  }\n\n  private _loadImage(\n    img: FeatureItemAttachment,\n    options: { id: number; fid: number; width?: number; height?: number },\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const { width, height } = options;\n      const url =\n        '/api/resource/' +\n        options.id +\n        '/feature/' +\n        options.fid +\n        `/attachment/${img.id}/image` +\n        (width && height ? `?size=${width}x${height}` : '');\n      this.ngwMap.connector\n        .makeQuery<Blob>(url, {}, { responseType: 'blob' })\n        .then((blob) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            resolve(reader.result as string);\n          };\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n}\n","import { SENSOR_MEASUREMENT_API } from '../constants';\n\nimport type { SensorMeasureItem, SensorMeasureValueType } from '../interfaces';\n\nexport interface FetchSensorData {\n  sensorIds: string[];\n  valueType?: SensorMeasureValueType;\n  lastHours?: number;\n  start?: Date;\n  end?: Date;\n  signal?: AbortSignal;\n}\n\nexport async function fetchSensorsData({\n  valueType,\n  lastHours,\n  sensorIds,\n  signal,\n  start,\n  end,\n}: FetchSensorData): Promise<SensorMeasureItem[]> {\n  const promises: Promise<SensorMeasureItem[]>[] = [];\n\n  for (const sensorId of sensorIds) {\n    const params: Record<string, string> = {\n      sensor_id: sensorId,\n    };\n    if (valueType) {\n      params.value_type = valueType;\n    }\n    if (lastHours) {\n      params.lasthours = String(lastHours);\n    } else {\n      if (start) {\n        params.start = start.toISOString();\n      }\n      if (end) {\n        params.end = end.toISOString();\n      }\n    }\n\n    const apiUrl = SENSOR_MEASUREMENT_API;\n\n    promises.push(\n      fetch(\n        `${apiUrl}api/v1/measurements?${new URLSearchParams(params).toString()}`,\n        {\n          method: 'GET',\n          signal,\n        },\n      ).then((resp) => {\n        return resp.json();\n      }),\n    );\n  }\n  return Promise.all(promises).then((results) => results.flat());\n}\n","export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function objToUrlStr(obj: { [param: string]: any }): string {\n  let str = '';\n  for (const key in obj) {\n    if (str !== '') {\n      str += '&';\n    }\n    str += key + '=' + encodeURIComponent(obj[key]);\n  }\n  return str;\n}\n\nfunction isValidUrl(str: string): boolean {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function prepareColumnValue(value: unknown): unknown | string {\n  if (typeof value === 'string') {\n    if (isValidUrl(value)) {\n      return `<a href=\"${value}\" target=\"_blank\">${value}</a>`;\n    }\n  }\n  return value;\n}\n","export const StopToggleControlsCb: Array<{\n  name: string;\n  stop: () => void;\n}> = [];\n\nexport function addStopToggleControl(name: string, stop: () => void): void {\n  StopToggleControlsCb.push({ name, stop });\n}\n\nexport function stopToggleControlsFor(excludeControlName?: string): void {\n  StopToggleControlsCb.forEach((x) => {\n    if (x.name !== excludeControlName) {\n      x.stop();\n    }\n  });\n}\n","import { Browser, DomUtil, Layer, Point, Util, latLng } from 'leaflet';\n\nimport type { LatLng, LayerOptions, Map, ZoomAnimEvent } from 'leaflet';\n\nexport interface MeasureLabelOptions extends LayerOptions {\n  offset?: Point;\n  latlng: null | LatLng;\n  content: string;\n  className: string;\n}\n\nexport class MeasureLabel extends Layer {\n  options: MeasureLabelOptions = {\n    latlng: null,\n    content: '',\n    className: '',\n  };\n\n  protected _map!: Map;\n  private _offset = new Point(0, 30);\n  private _container?: HTMLElement;\n  private _contentNode?: HTMLElement;\n  private _closeButton?: HTMLElement;\n  private _containerBottom?: number;\n  private _containerLeft?: number;\n\n  constructor(options: MeasureLabelOptions) {\n    super(options);\n    Util.setOptions(this, options);\n    if (this.options.offset) {\n      this._offset = this.options.offset;\n    }\n  }\n  onAdd(map: Map): this {\n    this._map = map;\n    this._container || this._initLayout();\n    if (this._container) {\n      map.getPanes().popupPane.appendChild(this._container);\n    }\n    map.on('viewreset', this._updatePosition, this);\n    if (Browser.any3d) {\n      map.on('zoomanim', this._zoomAnimation, this);\n    }\n    this._update();\n    return this;\n  }\n  addTo(map: Map): this {\n    map.addLayer(this);\n    return this;\n  }\n  onRemove(map: Map): this {\n    if (this._container) {\n      map.getPanes().popupPane.removeChild(this._container);\n    }\n    map.off('viewreset', this._updatePosition, this);\n    map.off('zoomanim', this._zoomAnimation, this);\n    (this._map as any) = null;\n    return this;\n  }\n  setLatLng(latlng: LatLng): this {\n    this.options.latlng = latLng(latlng);\n    this._updatePosition();\n    return this;\n  }\n  setContent(content: string): this {\n    this.options.content = content;\n    this._updateContent();\n    return this;\n  }\n  enableClose(): HTMLElement {\n    this._closeButton = DomUtil.create('span', 'close', this._container);\n    this._closeButton.innerHTML =\n      '<svg class=\"icon\" viewBox=\"0 0 40 40\"><path stroke=\"#FF0000\" stroke-width=\"3\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" /></svg>';\n    return this._closeButton;\n  }\n  private _initLayout(): void {\n    this._container = DomUtil.create('div', this.options.className);\n    this._contentNode = DomUtil.create('div', 'content', this._container);\n  }\n  private _update(): void {\n    this._map && (this._updateContent(), this._updatePosition());\n  }\n  private _updateContent(): void {\n    if (this._contentNode && this.options.content) {\n      if (typeof this.options.content == 'string') {\n        this._contentNode.innerHTML = this.options.content;\n      } else {\n        this._contentNode.innerHTML = '';\n        this._contentNode.appendChild(this.options.content);\n      }\n    }\n  }\n  private _updatePosition(): void {\n    if (this.options.latlng && this._container) {\n      const point = this._map.latLngToLayerPoint(this.options.latlng);\n      const is3D = Browser.any3d;\n      const offset = this._offset;\n      is3D && DomUtil.setPosition(this._container, point);\n      this._containerBottom = -offset.y - (is3D ? 0 : point.y);\n      this._containerLeft = offset.x + (is3D ? 0 : point.x);\n      this._container.style.bottom = this._containerBottom + 'px';\n      this._container.style.left = this._containerLeft + 'px';\n    }\n  }\n  private _zoomAnimation(a: ZoomAnimEvent): void {\n    if (this._container) {\n      const point = (this._map as any)._latLngToNewLayerPoint(\n        this.options.latlng,\n        a.zoom,\n        a.center,\n      ) as Point;\n      DomUtil.setPosition(this._container, point);\n    }\n  }\n}\n","import type { Messages } from './interfaces';\n\nexport const I18N: Record<string, Messages> = {\n  en: {\n    linearMeasurement: 'Distance measurement',\n    areaMeasurement: 'Area measurement',\n    start: 'Start',\n    meter: 'm',\n    kilometer: 'km',\n    squareMeter: 'm²',\n    squareKilometers: 'km²',\n  },\n  ru: {\n    linearMeasurement: 'Измерение расстояния',\n    areaMeasurement: 'Измерение площади',\n    start: 'Старт',\n    meter: 'м',\n    kilometer: 'км',\n    squareMeter: 'м²',\n    squareKilometers: 'км²',\n  },\n};\n","import type { Messages } from './interfaces';\nimport type { LatLng } from 'leaflet';\n\nexport function toRadians(deg: number): number {\n  return deg * (Math.PI / 180);\n}\nexport function square(x: number): number {\n  return Math.pow(x, 2);\n}\nexport function getDistanceString(\n  distance: number,\n  messages: { meter: string; kilometer: string },\n): string {\n  return distance < 1e3\n    ? numberFormat(distance, 0) + ' ' + messages.meter\n    : numberFormat(distance / 1e3, 2) + ' ' + messages.kilometer;\n}\n\nexport function getDistance(latlng1: LatLng, latlng2: LatLng): number {\n  const earthRadius = 6378137; // radius of the earth in meter\n  const lat1 = toRadians(latlng1.lat);\n  const lat2 = toRadians(latlng2.lat);\n  const lat_dif = lat2 - lat1;\n  const lng_dif = toRadians(latlng2.lng - latlng1.lng);\n  const a =\n    square(Math.sin(lat_dif / 2)) +\n    Math.cos(lat1) * Math.cos(lat2) * square(Math.sin(lng_dif / 2));\n  return 2 * earthRadius * Math.asin(Math.sqrt(a));\n}\nexport function getAreaString(points: LatLng[], messages: Messages): string {\n  const a = Math.round(getArea(points));\n  return a < 1e6\n    ? numberFormat(a, 0) + ' ' + messages.squareMeter\n    : numberFormat(a / 1e6, 2) + ' ' + messages.squareKilometers;\n}\nexport function getArea(points: LatLng[]): number {\n  const earthRadius = 6378137;\n  let area = 0;\n  const len = points.length;\n  let x1 = points[len - 1].lng;\n  let y1 = points[len - 1].lat;\n  for (let i = 0; i < len; i++) {\n    const x2 = points[i].lng;\n    const y2 = points[i].lat;\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return Math.abs((area * earthRadius * earthRadius) / 2.0);\n}\nexport function numberFormat(number: number, decimals = 2): string {\n  const thousandsSep = ',';\n  const sign = number < 0 ? '-' : '';\n  const num = Math.abs(+number || 0);\n  const intPart = parseInt(num.toFixed(decimals), 10) + '';\n  const j = intPart.length > 3 ? intPart.length % 3 : 0;\n\n  return [\n    sign,\n    j ? intPart.substr(0, j) + thousandsSep : '',\n    intPart.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSep),\n    decimals\n      ? '.' +\n        Math.abs(num - Number(intPart))\n          .toFixed(decimals)\n          .slice(2)\n      : '',\n  ].join('');\n}\n","import {\n  CircleMarker,\n  DomEvent,\n  DomUtil,\n  Handler,\n  Polygon,\n  Polyline,\n  Util,\n} from 'leaflet';\n\nimport { MeasureLabel } from './MeasureLabel';\nimport { I18N } from './i18n';\nimport { getAreaString, getDistance, getDistanceString } from './utils';\n\nimport type {\n  DirectPath,\n  MeasureActionOptions,\n  MeasureModel,\n  Trail,\n} from './interfaces';\nimport type { LatLng, LeafletMouseEvent, Map } from 'leaflet';\n\nexport class MeasureAction extends Handler {\n  options: MeasureActionOptions = {\n    color: '#FF0080',\n    model: 'distance',\n    messages: I18N['en'],\n  };\n\n  private _map: Map;\n  private _measureHandler: this;\n  private _finished: boolean;\n  private _startMove?: boolean;\n  private _measurementStarted?: boolean;\n  private _lastPoint?: LatLng;\n  private _totalDistance = 0;\n  private _trail: Trail = { overlays: [], points: [] };\n  private _directPath?: DirectPath;\n  private _measurePath?: DirectPath;\n\n  constructor(map: Map, options: MeasureActionOptions) {\n    super(map);\n    this._map = map;\n    this._measureHandler = this;\n    this._finished = false;\n    Util.setOptions(this, options);\n  }\n  setModel(model: MeasureModel): this {\n    this.options.model = model;\n    return this;\n  }\n  addHooks(): void {\n    this._activeMeasure();\n  }\n  removeHooks(): void {\n    this._disableMeasure();\n  }\n  private _activeMeasure(): void {\n    this._measureHandler._measurementStarted &&\n      this._measureHandler._finishMeasure();\n    this._measurementStarted ? this._finishMeasure() : this._enableMeasure();\n  }\n  private _onMouseClick(event: LeafletMouseEvent): void {\n    const latlng = event.latlng || this._map.mouseEventToLatLng(event as any);\n    if (this._lastPoint && latlng.equals(this._lastPoint)) {\n      return;\n    }\n    if (this._trail.points.length > 0) {\n      const points = this._trail.points;\n      points.push(latlng);\n      const length = points.length;\n      this._totalDistance += getDistance(\n        points[length - 2],\n        points[length - 1],\n      );\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          getDistanceString(this._totalDistance, this.options.messages),\n          'leaflet-measure-label',\n        );\n      }\n    } else {\n      this._totalDistance = 0;\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          this.options.messages.start,\n          'leaflet-measure-label',\n        );\n      }\n      this._trail.points.push(latlng);\n    }\n    this._lastPoint = latlng;\n    this._startMove = false;\n  }\n  private _onMouseMove(event: LeafletMouseEvent): void {\n    const latlng = event.latlng;\n    if (this._directPath && this._trail.points.length > 0) {\n      if (this._startMove) {\n        this._directPath.setLatLngs(this._trail.points.concat(latlng));\n      } else {\n        this._directPath.setLatLngs([latlng]);\n        this._startMove = true;\n      }\n    }\n  }\n  private _enableMeasure(): void {\n    this._trail = {\n      overlays: [],\n      points: [],\n    };\n    const map = this._map;\n    DomUtil.addClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.disable();\n    this._measurementStarted = true;\n    map.on('click', this._onMouseClick, this);\n    map.on('dblclick', this._finishMeasure, this);\n    map.on('contextmenu', this._finishMeasure, this);\n    map.doubleClickZoom.disable();\n    map.on('mousemove', this._onMouseMove, this);\n    map.fire('measure:start');\n  }\n  private _disableMeasure(): void {\n    const map = this._map;\n    DomUtil.removeClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.enable();\n    map.off('click', this._onMouseClick, this);\n    map.off('dblclick', this._finishMeasure, this);\n    map.off('contextmenu', this._finishMeasure, this);\n    map.off('mousemove', this._onMouseMove, this);\n    map.doubleClickZoom.enable();\n    this._measurementStarted = this._startMove = false;\n    if (!this._finished) {\n      this._clearOverlay.call(this);\n    }\n    map.fire('measure:stop');\n  }\n  private _finishMeasure(event?: LeafletMouseEvent): void {\n    if (this._trail.points.length > 0) {\n      if (this._trail.points.length > 1) {\n        if (this._directPath && (!event || event.type === 'contextmenu')) {\n          this._directPath.setLatLngs(this._trail.points);\n        }\n        if (this._lastPoint) {\n          if (this.options.model === 'area') {\n            this._addLable(\n              this._lastPoint,\n              getAreaString(this._trail.points, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          } else {\n            this._addLable(\n              this._lastPoint,\n              getDistanceString(this._totalDistance, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          }\n        }\n        this._directPath && this._map.removeLayer(this._directPath);\n        this._finished = true;\n      } else {\n        this._clearOverlay.call(this);\n      }\n    }\n    this.disable();\n  }\n  private _resetDirectPath(latlng: LatLng): void {\n    if (!this._directPath) {\n      let directPath: DirectPath;\n      if (this.options.model === 'area') {\n        directPath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          fillOpacity: 0,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          interactive: false,\n        });\n        directPath = polyline;\n      }\n      this._map.addLayer(directPath);\n      this._trail.overlays.push(directPath);\n      this._directPath = directPath;\n    } else {\n      this._directPath.addLatLng(latlng);\n    }\n  }\n  private _addMeasurePoint(latlng: LatLng): void {\n    if (!this._measurePath) {\n      let measurePath: DirectPath;\n      if (this.options.model === 'area') {\n        measurePath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          fillColor: this.options.color,\n          fillOpacity: 0.5,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          interactive: false,\n        });\n        measurePath = polyline;\n      }\n      this._map.addLayer(measurePath);\n      this._trail.overlays.push(measurePath);\n      this._measurePath = measurePath;\n    } else {\n      this._measurePath.addLatLng(latlng);\n    }\n    this._resetDirectPath(latlng);\n  }\n  private _addMarker(latLng: LatLng): void {\n    const marker = new CircleMarker(latLng, {\n      color: this.options.color,\n      opacity: 1,\n      weight: 1,\n      fillColor: '#FFFFFF',\n      fill: true,\n      fillOpacity: 1,\n      radius: 3,\n      interactive: false,\n    });\n    this._map.addLayer(marker);\n    this._trail.overlays.push(marker);\n  }\n  private _addLable(\n    latlng: LatLng,\n    content: string,\n    className: string,\n    ended?: boolean,\n  ): void {\n    const lable = new MeasureLabel({\n      latlng,\n      content,\n      className,\n    });\n    this._map.addLayer(lable);\n    this._trail.overlays.push(lable);\n    if (ended) {\n      const closeButton = lable.enableClose();\n      DomEvent.on(\n        closeButton,\n        'click',\n        (e) => {\n          DomEvent.stopPropagation(e);\n          this._clearOverlay();\n        },\n        this,\n      );\n    }\n  }\n  private _clearOverlay(): void {\n    const overlays = this._trail.overlays;\n    let i = 0,\n      length;\n    for (length = overlays.length; i < length; i++) {\n      this._map.removeLayer(overlays[i]);\n    }\n  }\n}\n","import { Control, DomEvent, DomUtil, Util } from 'leaflet';\n\nimport { MeasureAction } from './MeasureAction';\nimport { I18N } from './i18n';\n\nimport type { MeasureOptions } from './interfaces';\nimport type { Handler, Map } from 'leaflet';\n\nexport class Measure extends Control {\n  options: MeasureOptions = {\n    position: 'topright',\n    title: 'Measurement',\n    collapsed: true,\n    color: '#FF0080',\n    locale: 'en',\n    messages: I18N['en'],\n  };\n\n  private _map?: Map;\n  private _container?: HTMLElement;\n  private _link?: HTMLAnchorElement;\n  private _contents?: HTMLElement;\n  private _measureHandler?: Handler;\n\n  constructor(options: Partial<MeasureOptions>) {\n    super(options);\n    Util.setOptions(this, options);\n    const locale = options.locale;\n    if (locale && locale !== 'en') {\n      const messages = I18N[locale];\n      if (messages) {\n        this.options.messages = { ...I18N, ...messages };\n      } else {\n        console.error(\n          'Measure control has no messages for ' +\n            this.options.locale +\n            ' locale',\n        );\n      }\n    }\n  }\n  onAdd(map: Map): HTMLElement {\n    this._map = map;\n    return this._container || this._initLayout();\n  }\n  disableMeasure(): void {\n    if (this._measureHandler) {\n      this._measureHandler.disable();\n      this._measureHandler = undefined;\n    }\n  }\n  private _buildContainer(): HTMLElement {\n    this._container = DomUtil.create(\n      'div',\n      'leaflet-control-measure leaflet-bar leaflet-control',\n    );\n\n    this._contents = DomUtil.create(\n      'div',\n      'leaflet-measure-contents',\n      this._container,\n    );\n\n    this._link = DomUtil.create('a', 'leaflet-measure-toggle', this._container);\n    this._link.title = this.options.title || 'Measurement';\n    this._link.href = '#';\n\n    // if (this.options.title) {\n    //   var title = DomUtil.create('h3', '', this._contents);\n    //   title.innerText = this.options.title;\n    // }\n\n    this._buildItems();\n    return this._container;\n  }\n  private _buildItems(): void {\n    const ele_ul = DomUtil.create(\n      'ul',\n      'leaflet-measure-actions',\n      this._contents,\n    );\n    let ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_line = DomUtil.create('a', 'start', ele_li);\n    ele_link_line.innerText = this.options.messages.linearMeasurement;\n    ele_link_line.href = '#';\n    DomEvent.disableClickPropagation(ele_link_line);\n    DomEvent.on(ele_link_line, 'click', this._enableMeasureLine, this);\n\n    ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_area = DomUtil.create(\n      'a',\n      'leaflet-measure-action start',\n      ele_li,\n    );\n    ele_link_area.innerText = this.options.messages.areaMeasurement;\n    ele_link_area.href = '#';\n    DomEvent.disableClickPropagation(ele_link_area);\n    DomEvent.on(ele_link_area, 'click', this._enableMeasureArea, this);\n  }\n  private _initLayout(): HTMLElement {\n    const container = this._buildContainer();\n    DomEvent.disableClickPropagation(container);\n    DomEvent.disableScrollPropagation(container);\n    if (this.options.collapsed) {\n      DomEvent.on(\n        container,\n        {\n          mouseenter: this._expand,\n          mouseleave: this._collapse,\n        },\n        this,\n      );\n    } else {\n      this._expand();\n    }\n    return container;\n  }\n  private _enableMeasureLine(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'distance',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _enableMeasureArea(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'area',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _expand(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'none';\n      DomUtil.addClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n  private _collapse(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'block';\n      DomUtil.removeClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n}\n","import 'leaflet/dist/leaflet.css';\n// import 'ol/ol.css';\nimport './ActionMap.css';\n\n// @ts-ignore\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { getIcon } from '@nextgis/icons';\nimport MapAdapter from '@nextgis/leaflet-map-adapter';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport UrlRuntimeParams from '@nextgis/url-runtime-params';\n// @ts-ignore\nimport ShareButtons from 'share-buttons/dist/share-buttons';\n\nimport { NOW } from '../constants';\nimport { daysBehindFilter } from '../utils/daysBehindRange';\n\nimport { GetCoordinatePanelControl } from './GetCoordinateControl/GetCoordinateControl';\nimport { MapSettingsPanel } from './MapSettingsPanel/MapSettingsPanel';\nimport { Popup } from './Popup';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\nimport { createMeasureControl } from './createMeasureControl';\n\nimport type {\n  AppOptions,\n  FiresAdapterOptions,\n  FirmsLayerOptions,\n  SensorLayerOptions,\n  UserFiresLayerOptions,\n} from '../interfaces';\nimport type { ResourceHierarchy } from '@nextgis/ngw-connector';\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type {\n  LocationEvent,\n  NgwIdentifyEvent,\n  NgwLayers,\n  ToggleControl,\n  VectorAdapterOptions,\n} from '@nextgis/ngw-map';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { QmsAdapterOptions } from '@nextgis/qms-kit';\nimport type { Control, Layer, Map } from 'leaflet';\n\nexport class ActionMap {\n  ngwMap!: NgwMap<Map, Layer, any>;\n\n  tree?: MapSettingsPanel;\n  treeControl?: Control & ToggleControl;\n\n  authControl?: Control & ToggleControl;\n  popup: Popup;\n\n  private _promises: { [name: string]: CancelablePromise<any> } = {};\n  private _popupAbortController?: AbortController;\n\n  constructor(public options: Partial<AppOptions>) {\n    this.popup = new Popup();\n  }\n\n  async create(opt: Partial<AppOptions>): Promise<void> {\n    // const auth = new Auth(opt.mapOptions);\n    const mapOpt = { ...opt.mapOptions };\n    // try {\n    //   await auth.login();\n    //   mapOpt.connector = auth.connector;\n    // } catch (er) {\n    //   // cancel login\n    // }\n\n    const { basemaps, firms, userFires, sensors } = opt;\n\n    const ngwMap = new NgwMap<Map, Layer>({\n      mapAdapter: new MapAdapter(),\n      controls: [],\n      minZoom: 4,\n      runtimeParams: [new UrlRuntimeParams()],\n      ...mapOpt,\n    });\n\n    this.ngwMap = ngwMap;\n\n    ngwMap.setCursor('default');\n    this.popup.setNgwMap(ngwMap);\n\n    if (basemaps) {\n      ngwMap.onLoad().then(() =>\n        basemaps.forEach((x, i) => {\n          ngwMap.addBaseLayer<any, QmsAdapterOptions>('QMS', {\n            ...x,\n            visibility: i === 0,\n          });\n        }),\n      );\n    }\n    ngwMap.getPaintFunctions = { base: getIcon };\n\n    ngwMap.addControl('ZOOM', 'top-left');\n    this._createLocateControl();\n    ngwMap.addControl('ATTRIBUTION', 'bottom-right', {\n      customAttribution: [\n        '<a href=\"https://nextgis.com\" target=\"_blank\">©NextGIS</a>',\n      ],\n    });\n    createMeasureControl(ngwMap);\n    this._createShareControl();\n    // await this._createAuthControl(auth);\n    // this.ngwMap.addControl(this.authControl, 'top-right');\n\n    const ngwLayers = await ngwMap.getNgwLayers();\n    const bookmarks: ResourceHierarchy[] = [];\n    Object.values(ngwLayers).forEach((x) => {\n      const bookmark =\n        x.layer.item &&\n        x.layer.item.webmap &&\n        x.layer.item.webmap.bookmark_resource;\n      if (bookmark) {\n        bookmarks.push(bookmark);\n      }\n    });\n\n    await this._addFireLayer(opt.userFires);\n    await this._addFirms(opt.firms);\n    await this._addSensors(opt.sensors);\n    this._createGetCoordinateControl();\n\n    this._addTreeControl({\n      ngwLayers,\n      firms,\n      sensors,\n      userFires,\n      bookmarks,\n    });\n\n    this._addEventsListeners();\n  }\n\n  private _locate() {\n    const locationfound = (e: LocationEvent) => {\n      const lngLat = e.lngLat;\n\n      this.ngwMap.setView(\n        lngLat,\n        Math.max(...[this.ngwMap.getZoom() ?? 0, 16]),\n      );\n    };\n\n    this.ngwMap.locate({ setView: false }, { locationfound });\n  }\n\n  // private async _createAuthControl(auth: Auth) {\n  //   const authBtn = document.getElementsByClassName(\n  //     'js-auth-btn',\n  //   )[0] as HTMLElement;\n  //   const getStatus = () => {\n  //     return !!(this.ngwMap.connector && this.ngwMap.connector.user);\n  //   };\n  //   const onClick = () => {\n  //     auth.logout();\n  //     window.location.reload();\n  //   };\n  //   authBtn.innerHTML = getStatus() ? 'Выйти' : 'Войти';\n  //   authBtn.style.display = 'block';\n  //   authBtn.addEventListener('click', onClick);\n  // }\n\n  private _createShareControl() {\n    const shareModal = document.getElementsByClassName('js-modal')[0];\n    const closeModalBtn = document.getElementsByClassName('js-modal-close')[0];\n    const shareModalContent = document.getElementsByClassName(\n      'js-share-modal-content',\n    )[0];\n    const shareInput = document.getElementsByClassName(\n      'js-share-input',\n    )[0] as HTMLInputElement;\n    const showModal = () => {\n      const href = location.href;\n      const html = this._createShareModalContent(href);\n      shareInput.value = href;\n      shareModalContent.innerHTML = html;\n      ShareButtons.update();\n      shareModal.classList.add('is-active');\n    };\n    const closeModal = () => {\n      shareModalContent.innerHTML = '';\n      shareModal.classList.remove('is-active');\n    };\n    closeModalBtn.addEventListener('click', () => {\n      closeModal();\n    });\n\n    const shareControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-share-alt btn-control-icon \"></i>',\n      onClick() {\n        showModal();\n      },\n    });\n    this.ngwMap.addControl(shareControl, 'bottom-right');\n  }\n\n  private async _createGetCoordinateControl() {\n    const control = new GetCoordinatePanelControl(this, {\n      toggle: (status) => {\n        if (status) {\n          stopToggleControlsFor('coordinate');\n          this.ngwMap.disableSelection();\n        } else {\n          this.ngwMap.enableSelection();\n        }\n      },\n    });\n    const toggleControl = await this.ngwMap.createToggleControl(control);\n    this.ngwMap.addControl(toggleControl, 'top-left');\n    addStopToggleControl('coordinate', () => toggleControl.onClick(false));\n  }\n\n  private _createLocateControl() {\n    const onClick = () => this._locate();\n    const locateControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-location-arrow btn-control-icon\"></i>',\n      title: 'Найти меня на карте',\n      onClick,\n    });\n    this.ngwMap.addControl(locateControl, 'top-left');\n  }\n\n  private _createShareModalContent(url: string) {\n    const social = [\n      { id: 'tw', name: 'Twitter', icon: 'fab fa-twitter' },\n      { id: 'vk', name: 'VK', icon: 'fab fa-vk' },\n      { id: 'fb', name: 'Facebook', icon: 'fab fa-facebook-square' },\n    ];\n\n    const html = `<div class=\"buttons share-btn js-share-btn\" data-url=\"${url}\" data-title=\"\" data-desc=\"\">\n      ${social\n        .map(\n          (x) => `<a class=\"button is-primary\" data-id=\"${x.id}\">\n                    <span class=\"icon\">\n                        <i class=\"${x.icon}\"></i>\n                    </span>\n                    <span>${x.name}</span>\n                </a>`,\n        )\n        .join('')}\n    </div>`;\n    return html;\n  }\n\n  private async _addFireLayer(\n    x?: NgwLayerOptions<'GEOJSON'>,\n    adapterOptions?: VectorAdapterOptions,\n  ) {\n    if (x) {\n      const paint =\n        x.adapterOptions && x.adapterOptions.paint\n          ? (x.adapterOptions.paint as CirclePaint)\n          : {};\n      return this.ngwMap.addNgwLayer({\n        resource: x.resource,\n        id: x.id,\n        adapterOptions: {\n          ...x.adapterOptions,\n          paint: {\n            ...paint,\n            radius: 5,\n          },\n          selectable: true,\n          selectedPaint: {\n            ...paint,\n            radius: 7,\n          },\n          ...adapterOptions,\n          propertiesFilter: daysBehindFilter(\n            this.options.timedelta || 24,\n            x.adapterOptions as FiresAdapterOptions,\n            NOW,\n          ),\n        },\n      });\n    }\n  }\n\n  private async _addFirms(fires?: FirmsLayerOptions[]) {\n    if (fires) {\n      for (const x of fires) {\n        await this._addFireLayer(x);\n      }\n    }\n  }\n\n  private async _addSensors(sensor?: SensorLayerOptions) {\n    return sensor && this.ngwMap.addNgwLayer(sensor);\n  }\n\n  private async _addTreeControl(opt: {\n    ngwLayers: NgwLayers;\n    firms?: FirmsLayerOptions[];\n    userFires?: UserFiresLayerOptions;\n    sensors?: SensorLayerOptions;\n    bookmarks?: ResourceHierarchy[];\n  }) {\n    const sidebarToggleBtn = document.getElementsByClassName('js-sidebar')[0];\n\n    const isActive = () => sidebarToggleBtn.classList.contains('is-active');\n    const activateBurger = () => sidebarToggleBtn.classList.add('is-active');\n    const deactivateBurger = () =>\n      sidebarToggleBtn.classList.remove('is-active');\n\n    await this.ngwMap.onLoad();\n\n    this.tree = new MapSettingsPanel(this, {\n      ...opt,\n      onDateChange: () => {\n        this._cleanSelection();\n      },\n      ngwMap: this.ngwMap,\n    });\n\n    const toggle = (status?: boolean) => {\n      status = status !== undefined ? status : isActive();\n      if (status) {\n        stopToggleControlsFor('tree');\n        this.tree && this.tree.show();\n        activateBurger();\n      } else {\n        this.tree && this.tree.hide();\n        deactivateBurger();\n      }\n    };\n    sidebarToggleBtn.addEventListener('click', () => {\n      toggle();\n    });\n    setTimeout(() => {\n      toggle();\n    }, 500);\n    addStopToggleControl('tree', () => toggle(false));\n  }\n\n  private _abortPopup() {\n    if (this._popupAbortController) {\n      this._popupAbortController.abort();\n    }\n    this._popupAbortController = undefined;\n  }\n\n  private _cleanSelection() {\n    if (this._promises.getFeaturePromise instanceof CancelablePromise) {\n      this._promises.getFeaturePromise.cancel();\n    }\n    this.ngwMap.removeLayer('highlight');\n  }\n\n  private _highlighNgwLayer(i: NgwIdentifyEvent) {\n    this._cleanSelection();\n    const paramsList = i.getIdentifyItems();\n    const paramsLast = paramsList[paramsList.length - 1];\n    if (paramsLast) {\n      const isSensor =\n        this.options.sensors &&\n        paramsLast.layerId === this.options.sensors.resource;\n      // const resourceId = params.resourceId;\n      paramsLast.identify().then((item) => {\n        if (item) {\n          item.toGeojson().then((feature) => {\n            this.ngwMap.addLayer('GEOJSON', {\n              id: 'highlight',\n              data: feature,\n              paint: { color: 'green', stroke: true, fillOpacity: '0.8' },\n              popup: true,\n              popupOptions: {\n                maxWidth: 500,\n                minWidth: 400,\n                createPopupContent: (e) => {\n                  this._abortPopup();\n                  e.onClose(() => {\n                    this._abortPopup();\n                    this._cleanSelection();\n                    this.ngwMap.unSelectLayers();\n                  });\n                  if (e.feature) {\n                    if (isSensor) {\n                      const popupAbortController = new AbortController();\n                      this._popupAbortController = popupAbortController;\n                      return this.popup.createSensorPopupContent({\n                        feature,\n                        signal: popupAbortController.signal,\n                      });\n                    } else {\n                      return this.popup.createPopupContent(\n                        feature,\n                        paramsLast.layerId,\n                        item.extensions.attachment,\n                      );\n                    }\n                  }\n                },\n              },\n            });\n          });\n        }\n      });\n    }\n  }\n\n  private _addEventsListeners() {\n    this.ngwMap.emitter.on('click', () => {\n      this.ngwMap.cancelPromises('identify', 'select');\n    });\n    this.ngwMap.emitter.on('ngw:select', (e) => e && this._highlighNgwLayer(e));\n  }\n}\n","import { Measure } from '../assets/Leaflet.Measure-master/src';\n\nimport '../assets/Leaflet.Measure-master/src/leaflet.measure.css';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nimport type { NgwMap } from '@nextgis/ngw-map';\nimport type { Map } from 'leaflet';\n\nexport function createMeasureControl(ngwMap: NgwMap): void {\n  // @ts-ignore\n  const control = new Measure({ locale: 'ru' });\n  ngwMap.addControl(control, 'top-left');\n\n  ngwMap.onLoad().then(() => {\n    const map = ngwMap.mapAdapter.map as Map;\n    if (map) {\n      map.on('measure:start', () => {\n        stopToggleControlsFor('measure');\n        ngwMap.disableSelection();\n      });\n      map.on('measure:stop', () => {\n        ngwMap.setCursor('default');\n        ngwMap.enableSelection();\n      });\n    }\n    addStopToggleControl('measure', () => {\n      control.disableMeasure();\n    });\n  });\n}\n","import { MODIS_ID, SENSOR_ID, USERFIRE_ID, VIIRS_ID } from './constants';\n\nimport type { AppOptions, FiresAdapterOptions } from './interfaces';\nimport type { CirclePaint } from '@nextgis/paint';\n\nconst firmsAdapterOptions: FiresAdapterOptions = {\n  limit: 2000,\n  props: { dateField: 'timestamp', timeUnit: 's' },\n};\n\nconst stroke: CirclePaint = {\n  stroke: true,\n  strokeColor: '#ffffff',\n  strokeOpacity: 1,\n  opacity: 1,\n};\n\nconst options: AppOptions = {\n  mapOptions: {\n    target: 'map',\n    bounds: [36.59, 43.385, 49.374, 50.214],\n    baseUrl: 'https://clear-horizon.nextgis.com',\n    resources: [\n      {\n        resource: 1,\n        fit: true,\n        adapterOptions: { selectable: true },\n      },\n    ],\n  },\n  timedelta: 72,\n  basemaps: [\n    {\n      qmsId: 1135,\n    },\n    // {\n    //   qmsId: 487,\n    // },\n  ],\n  userFires: {\n    resource: 'userfirepoints',\n    id: USERFIRE_ID,\n    adapterOptions: {\n      paint: { color: 'rgb(100,20,40)', ...stroke },\n      props: { dateField: 'field_9', timeUnit: 'ISO' },\n    },\n  },\n  sensors: {\n    resource: 446,\n    id: SENSOR_ID,\n    adapterOptions: {\n      selectable: true,\n      paint: {\n        color: '#0000ff',\n        radius: 5,\n        ...stroke,\n      },\n    },\n  },\n  firms: [\n    {\n      resource: 103,\n      id: MODIS_ID,\n      adapterOptions: {\n        paint: { color: 'red', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n    {\n      resource: 105,\n      id: VIIRS_ID,\n      adapterOptions: {\n        paint: { color: 'orange', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n  ],\n};\n\nexport default options;\n","import 'regenerator-runtime/runtime';\n\nimport { App } from './App';\nimport config from './config';\n\nimport './style/style.scss';\n\nconst app = new App(config);\n\napp.create();\n","import { ActionMap } from './components/ActionMap';\n\nimport './bulma';\nimport type { AppOptions } from './interfaces';\n\nexport class App {\n  actionMap: ActionMap;\n\n  constructor(public options: Partial<AppOptions> = {}) {\n    this.actionMap = new ActionMap(options);\n  }\n\n  async create(options?: AppOptions): Promise<void> {\n    this.options = { ...this.options, ...options };\n    // show app html after js and css loading and before map drawing start\n    this.showContent();\n    await this.actionMap.create(this.options);\n  }\n\n  showContent(): void {\n    const appContent = document.getElementById('app');\n    const appLoadingContent = document.getElementById('app-loading');\n    if (appLoadingContent) {\n      appLoadingContent.style.display = 'none';\n    }\n    if (appContent) {\n      appContent.style.display = 'block';\n    }\n  }\n}\n"],"names":["document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","target","dataset","$target","getElementById","classList","toggle","DATE_RANGE_SELECT","NOW","Date","daysBehindRange","days","to","to_","getTime","now","Number","map","x","daysBehindFilter","layer","timeUnit","dateField","props","range","unit","arguments","undefined","toISOString","Math","ceil","daysBehindRangeFormat","i","setInterval","GetCoordinatePanelControl","constructor","actionMap","options","_defineProperty","off","on","EventEmitter","this","_toggle","ngwMap","addFeatureLayer","id","visibility","paint","radius","popup","popupOptions","createPopupContent","d","feature","_createPopupContent","geometry","coordinates","toFixed","then","_layer","onClick","status","toggleControl","show","setCursor","_removeClickListener","__onMapClick","e","_onMapClick","emitter","hide","clearLayerData","type","properties","lngLat","setLayerData","emit","_ref","lng","lat","content","createElement","latLngStr","concat","innerHTML","getElementsByClassName","onclick","Clipboard","copy","BaseMapsContainer","_container","_createContainer","isBaseLayer","_updateBaseMapContainer","getContainer","container","className","basemaps","_baseMapsContainer","appendChild","_createBaseMapItem","getBaseLayers","getLayer","baseMap","control","elem","input","setAttribute","checked","isLayerVisible","toggleLayer","activeBaseLayer","getActiveBaseLayer","hideLayer","displayName","name","createTextNode","BookmarksContainer","bookmarksContainer","bookmarks","b","connector","get","resource","feature_layer","labelField","fields","find","label_field","fetchNgwLayerItems","resourceId","items","_createBookmarkItem","keyname","bookmark","nameField","bookmarkBlock","nameValue","String","geoJson","GeoJSON","geom","lMap","mapAdapter","fitBounds","getBounds","LOADING_TEXT","CollapsiblePanel","open","_updateContainer","parent","_content","_updateContent","_getToggleButtonHtml","close","_cleanContent","icon","title","header","_createHeader","leftLevel","rightLevel","html","formatTime","dt","t","LayersContainer","firesEl","f","layers","_createFireItem","onLayerAdd","cb","fire","defined","wrapper","createItem","layer_","item","display_name","split","replace","trim","symbol","_createSymbol","_fire$adapterOptions","adapterOptions","_fire$adapterOptions2","color","stroke","strokeColor","style","backgroundColor","borderColor","FiresContainer","super","calendarWrapper","_createCalendar","insertBefore","firstChild","fires","promises","promise","Promise","resolve","push","all","block","_buildCalendarBlock","dateRange","defaultDateRange","extremeItems","defaultItems","min","max","startDate","endDate","opt","timedelta","onChange","l","filter","start","end","propertiesFilter","onDateChange","minDate","maxDate","select","querySelector","inputFrom","calendarCleanBtn","calendarOpenBtn","today","changeFunction","debounce","prop","defaultDate","datepicker","flatpickr","mode","locale","Russian","allowInput","value","updateCleanBtnDisplay","display","setRange","val","setDate","stopPropagation","preventDefault","isOpen","onchange","createCalendar","WebmapTreeItem","_createTreeItem","_createTreeBranch","property","ev","set","propagation","WebMap","keys","pressed","item_type","children","tree","getChildren","treeBranch","reverse","OPTIONS","MapSettingsPanel","Error","_target","HTMLElement","sidebar","Sidebar","closeButton","position","autoPan","addTo","ngwLayers","remove","add","width","userFires","firms","_createFiresContainer","sensors","_createSensorContainer","_createNgwLayers","_createBasemapsContainer","_createBookmarksContainer","n","ngwLayer","treeContainer","bookmarkContainer","_layer$adapterOptions","getResourceIdOrFail","extremeReqOpt","limit","extremePromises","orderBy","_ref2","minItem","maxItem","ngwDate","year","month","day","layerTimestampExtremum","firesContainer","baseMapsContainer","createPmAnnotationThreshold","label","borderWidth","borderDash","drawTime","enter","element","leave","_ref3","event","Chart","register","annotationPlugin","types","height","units","charts","P1","threshold","P2","humidity","temperature","createChart","_ref7","showXAxis","sensorsData","pluginOptions","annotations","Object","entries","_ref6","params","yMin","yMax","annotation","getAnnotationPluginOptions","chartCanvas","console","log","data","datasets","_ref8","some","s","value_type","_ref9","pointRadius","row","datetime","y","responsive","plugins","legend","labels","usePointStyle","generateLabels","chart","text","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","strokeStyle","fillStyle","pointStyle","rotation","hidden","isDatasetVisible","datasetIndex","scales","grid","ticks","autoSkip","maxTicksLimit","time","displayFormats","hour","afterFit","scaleInstance","align","padding","top","bottom","Popup","setNgwMap","async","_ref4","signal","popupElement","SID_T","PLACE","sensorIds","Boolean","_ref5","valueType","lastHours","sensorId","sensor_id","lasthours","apiUrl","process","fetch","URLSearchParams","toString","method","resp","json","results","flat","fetchSensorsData","index","chartElement","updatePopupWithCharts","createSensorPopupContent","attachment","propContainer","propertiesList","key","createPropertiesHtml","pre","updateElementContent","_addPhotos","join","minute","str","RegExp","test","prepareColumnValue","_getResourceItem","newProperties","grid_visibility","a","newContent","fid","attachmentElement","img","figure","maxHeight","maxWidth","src","_loadImage","imgElem","bulmaCarousel","_resourceItems","reject","url","makeQuery","responseType","blob","reader","FileReader","readAsDataURL","onloadend","result","catch","er","StopToggleControlsCb","addStopToggleControl","stop","stopToggleControlsFor","excludeControlName","MeasureLabel","Layer","latlng","Point","Util","setOptions","offset","_offset","onAdd","_map","_initLayout","getPanes","popupPane","_updatePosition","Browser","any3d","_zoomAnimation","_update","addLayer","onRemove","removeChild","setLatLng","latLng","setContent","enableClose","_closeButton","DomUtil","create","_contentNode","point","latLngToLayerPoint","is3D","setPosition","_containerBottom","_containerLeft","left","_latLngToNewLayerPoint","zoom","center","I18N","en","linearMeasurement","areaMeasurement","meter","kilometer","squareMeter","squareKilometers","ru","toRadians","deg","PI","square","pow","getDistanceString","distance","messages","numberFormat","number","decimals","sign","num","abs","intPart","parseInt","j","substr","MeasureAction","Handler","model","overlays","points","_measureHandler","_finished","setModel","addHooks","_activeMeasure","removeHooks","_disableMeasure","_measurementStarted","_finishMeasure","_enableMeasure","_onMouseClick","mouseEventToLatLng","_lastPoint","equals","_trail","_totalDistance","latlng1","latlng2","lat1","lat2","lat_dif","lng_dif","sin","cos","asin","sqrt","getDistance","_addMeasurePoint","_addMarker","_addLable","_startMove","_onMouseMove","_directPath","setLatLngs","addClass","contextMenu","disable","doubleClickZoom","removeClass","enable","_clearOverlay","round","earthRadius","area","len","x1","y1","x2","y2","getArea","getAreaString","removeLayer","_resetDirectPath","addLatLng","directPath","Polygon","weight","dashArray","fillOpacity","interactive","Polyline","_measurePath","measurePath","fillColor","marker","CircleMarker","opacity","fill","ended","lable","DomEvent","Measure","Control","collapsed","error","disableMeasure","_buildContainer","_contents","_link","href","_buildItems","ele_ul","ele_li","ele_link_line","innerText","disableClickPropagation","_enableMeasureLine","ele_link_area","_enableMeasureArea","disableScrollPropagation","mouseenter","_expand","mouseleave","_collapse","ActionMap","mapOpt","mapOptions","NgwMap","MapAdapter","controls","minZoom","runtimeParams","UrlRuntimeParams","onLoad","addBaseLayer","getPaintFunctions","base","getIcon","addControl","_createLocateControl","customAttribution","disableSelection","enableSelection","createMeasureControl","_createShareControl","getNgwLayers","values","webmap","bookmark_resource","_addFireLayer","_addFirms","_addSensors","_createGetCoordinateControl","_addTreeControl","_addEventsListeners","_locate","locate","setView","locationfound","_this$ngwMap$getZoom","getZoom","shareModal","closeModalBtn","shareModalContent","shareInput","showModal","location","_createShareModalContent","ShareButtons","shareControl","createButtonControl","createToggleControl","locateControl","addNgwLayer","selectable","selectedPaint","sensor","sidebarToggleBtn","_cleanSelection","contains","setTimeout","_abortPopup","_popupAbortController","abort","_promises","getFeaturePromise","CancelablePromise","cancel","_highlighNgwLayer","paramsList","getIdentifyItems","paramsLast","isSensor","layerId","identify","toGeojson","minWidth","onClose","unSelectLayers","popupAbortController","AbortController","extensions","cancelPromises","firmsAdapterOptions","strokeOpacity","bounds","baseUrl","resources","fit","qmsId","showContent","appContent","appLoadingContent","config"],"sourceRoot":""}