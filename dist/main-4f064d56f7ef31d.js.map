{"version":3,"file":"main-4f064d56f7ef31d.js","mappings":"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","sources":["webpack://clear_horizon/./src/components/Popup.ts","webpack://clear_horizon/./src/utils/index.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/CollapsiblePanel.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/WebmapTreeItem.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BaseMapsContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BookmarksContainer.ts","webpack://clear_horizon/./src/utils/formatTime.ts","webpack://clear_horizon/./src/constants.ts","webpack://clear_horizon/./src/utils/daysBehindRange.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/LayersContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/FiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/createCalendar.ts","webpack://clear_horizon/./src/utils/layerTimestampExtremum.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/MapSettingsPanel.ts","webpack://clear_horizon/./src/components/GetCoordinateControl/GetCoordinateControl.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/i18n.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/utils.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureLabel.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureAction.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/Measure.ts","webpack://clear_horizon/./src/components/ToggleControl.ts","webpack://clear_horizon/./src/components/createMeasureControl.ts","webpack://clear_horizon/./src/components/ActionMap.ts","webpack://clear_horizon/./src/bulma.ts","webpack://clear_horizon/./src/config.ts","webpack://clear_horizon/./src/main.ts","webpack://clear_horizon/./src/App.ts"],"sourcesContent":["// @ts-ignore\nimport bulmaCarousel from 'bulma-carousel';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { Feature, Geometry } from 'geojson';\nimport { FeatureItemAttachment, ResourceItem } from '@nextgis/ngw-connector';\nimport { prepareColumnValue } from '../utils';\n\ninterface CollectorDate {\n  year: number;\n  month: number;\n  day: number;\n}\ninterface CollectorTime {\n  hour: number;\n  minute: number;\n  second: number;\n}\n\ninterface KeyValue {\n  key: string;\n  value: any;\n}\n\ntype CollectorProperty = string | number | CollectorDate | CollectorTime;\n\nexport class Popup {\n  private ngwMap!: NgwMap;\n  private _resourceItems: { [resourceId: number]: ResourceItem } = {};\n\n  setNgwMap(ngwMap: NgwMap): void {\n    this.ngwMap = ngwMap;\n  }\n\n  createPopupContent<G extends Geometry = any, P = Record<string, any>>(\n    feature: Feature<G, P>,\n    resourceId?: number,\n    attachment?: FeatureItemAttachment[],\n  ): HTMLElement {\n    const popupElement = document.createElement('div');\n    const properties = document.createElement('div');\n    properties.className = 'properties';\n    const propertiesList: KeyValue[] = Object.entries(feature.properties).map(\n      ([key, value]) => {\n        return {\n          key,\n          value,\n        };\n      },\n    );\n    properties.innerHTML = this.createPropertiesHtml(propertiesList);\n\n    if (resourceId) {\n      const pre = document.createElement('div');\n      pre.appendChild(properties);\n      popupElement.innerHTML = 'Загрузка';\n      this.updateElementContent(pre, resourceId, feature).then(() => {\n        popupElement.innerHTML = '';\n        popupElement.appendChild(pre);\n      });\n      if (attachment && attachment.length) {\n        this._addPhotos(\n          popupElement,\n          attachment,\n          resourceId,\n          Number(feature.id),\n        );\n      }\n    } else {\n      popupElement.appendChild(properties);\n    }\n    return popupElement;\n  }\n\n  createPropertiesHtml(\n    properties: Array<{ key: string; value: CollectorProperty }>,\n  ): string {\n    let elem = '';\n    properties.forEach(({ key, value }) => {\n      if (typeof value === 'object' && value) {\n        if ('year' in value) {\n          value = [value.day, value.month, value.year].join('.');\n        } else if ('hour' in value) {\n          value = [value.hour, value.minute].join(':');\n        }\n      }\n      elem += `\n      <div class=\"columns is-mobile\">\n        <div class=\"column is-two-fifths\">${key}</div>\n        <div class=\"column\">${prepareColumnValue(value)}</div>\n      </div>\n      `;\n    });\n    return elem;\n  }\n\n  async updateElementContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(\n    element: HTMLElement,\n    resourceId: number,\n    feature: Feature<G, P>,\n  ): Promise<ResourceItem> {\n    const item = await this._getResourceItem(resourceId);\n    if (item.feature_layer) {\n      const newProperties: KeyValue[] = [];\n      item.feature_layer.fields.forEach((x) => {\n        if (x.grid_visibility) {\n          let property = feature.properties[x.keyname];\n          if (property) {\n            if (typeof property === 'string') {\n              property = property.replace(/\\w+(;)\\w+/g, (a, b) =>\n                a.replace(b, b + ' '),\n              );\n            }\n            newProperties.push({ key: x.display_name, value: property });\n          }\n        }\n      });\n      const newContent = this.createPropertiesHtml(newProperties);\n      const pre = element.getElementsByClassName('properties')[0];\n      if (pre) {\n        pre.innerHTML = newContent;\n      }\n    }\n    return item;\n  }\n\n  async _addPhotos(\n    element: HTMLElement,\n    attachment: FeatureItemAttachment[],\n    id: number,\n    fid: number,\n  ): Promise<void> {\n    const attachmentElement = document.createElement('div');\n\n    attachmentElement.className = 'carousel attachment';\n    for (const img of attachment) {\n      const width = 300;\n      const height = 300;\n      const figure = document.createElement('figure');\n      figure.className = `image is-${width}x${height}`;\n      figure.style.maxHeight = height + 'px';\n      figure.style.maxWidth = width + 'px';\n      const src = await this._loadImage(img, {\n        width,\n        height,\n        id,\n        fid,\n      });\n      const imgElem = document.createElement('img');\n      imgElem.src = src;\n      figure.appendChild(imgElem);\n      attachmentElement.appendChild(figure);\n    }\n    element.appendChild(attachmentElement);\n    bulmaCarousel.attach(attachmentElement);\n  }\n\n  private async _getResourceItem(resourceId: number) {\n    if (!this._resourceItems[resourceId]) {\n      const item = await this.ngwMap.connector.get('resource.item', null, {\n        id: resourceId,\n      });\n      this._resourceItems[resourceId] = item;\n    }\n    return this._resourceItems[resourceId];\n  }\n\n  private _loadImage(\n    img: FeatureItemAttachment,\n    options: { id: number; fid: number; width?: number; height?: number },\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const { width, height } = options;\n      const url =\n        '/api/resource/' +\n        options.id +\n        '/feature/' +\n        options.fid +\n        `/attachment/${img.id}/image` +\n        (width && height ? `?size=${width}x${height}` : '');\n      this.ngwMap.connector\n        .makeQuery(url, {}, { responseType: 'blob' })\n        .then((blob) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            resolve(reader.result as string);\n          };\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n}\n","export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function objToUrlStr(obj: { [param: string]: any }): string {\n  let str = '';\n  for (const key in obj) {\n    if (str !== '') {\n      str += '&';\n    }\n    str += key + '=' + encodeURIComponent(obj[key]);\n  }\n  return str;\n}\n\nfunction isValidUrl(str: string): boolean {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function prepareColumnValue(value: unknown): unknown | string {\n  if (typeof value === 'string') {\n    if (isValidUrl(value)) {\n      return `<a href=\"${value}\" target=\"_blank\">${value}</a>`;\n    }\n  }\n  return value;\n}\n","import './CollapsiblePanel.css';\n\ntype GetHTML = () => HTMLElement | Promise<HTMLElement>;\n\nconst LOADING_TEXT = 'Загрузка данных...';\n\nexport interface CollapsiblePanelOptions {\n  title?: string;\n  content: HTMLElement | GetHTML;\n  open?: boolean;\n  parent?: HTMLElement;\n}\n\nexport class CollapsiblePanel {\n  private readonly _container = document.createElement('div');\n  private _content?: HTMLElement;\n  private _toggle?: HTMLElement;\n  private status: boolean;\n\n  constructor(private options: CollapsiblePanelOptions) {\n    this.status = this.options.open !== undefined ? this.options.open : true;\n    this._updateContainer();\n    if (this.options.parent) {\n      this.options.parent.appendChild(this.getContainer());\n    }\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  open(): void {\n    if (\n      this._content &&\n      (!this._content.innerHTML || this._content.innerHTML === LOADING_TEXT)\n    ) {\n      this._updateContent();\n    }\n    // this._container.appendChild(this._content);\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-up');\n    }\n    this.status = true;\n  }\n\n  close(): void {\n    this._cleanContent();\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-down');\n    }\n    this.status = false;\n  }\n\n  toggle(): void {\n    if (this.status) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _getToggleButtonHtml(icon?: string) {\n    return `\n    <a class=\"button is-small\">\n    <span class=\"icon is-small\">\n      <i class=\"${icon}\"></i>\n    </span>\n    </a>\n    `;\n  }\n\n  private _updateContainer() {\n    this._container.innerHTML = '';\n    if (this.options.title) {\n      const header = this._createHeader();\n      this._container.appendChild(header);\n    }\n    const content = document.createElement('div');\n    content.innerHTML = LOADING_TEXT;\n    content.className = 'panel-content';\n    this._content = content;\n    this._container.appendChild(content);\n\n    if (this.status) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  private _createHeader() {\n    const header = document.createElement('div');\n    header.className = 'level is-mobile panel-header';\n\n    const leftLevel = document.createElement('div');\n    leftLevel.className = 'level-left';\n\n    const title = document.createElement('div');\n    title.className = 'level-item panel-header__title';\n    title.innerHTML = this.options.title || '';\n    leftLevel.appendChild(title);\n\n    const rightLevel = document.createElement('div');\n    rightLevel.className = 'level-right';\n    const toggle = document.createElement('div');\n    toggle.className = 'level-item panel-header__toggle';\n    rightLevel.appendChild(toggle);\n\n    toggle.onclick = () => {\n      this.toggle();\n    };\n    this._toggle = toggle;\n\n    header.appendChild(leftLevel);\n    header.appendChild(rightLevel);\n\n    return header;\n  }\n\n  private _cleanContent() {\n    if (this._content) {\n      this._content.innerHTML = '';\n    }\n  }\n\n  private async _updateContent() {\n    this._cleanContent();\n    if (this._content) {\n      const html =\n        typeof this.options.content === 'function'\n          ? await this.options.content()\n          : this.options.content;\n\n      this._content.appendChild(html);\n    }\n    return this._content;\n  }\n}\n","import { WebMap } from '@nextgis/webmap';\nimport { CheckProperty, ChangeEvent } from '@nextgis/item';\nimport { NgwWebmapItem, TreeGroup, TreeLayer } from '@nextgis/ngw-kit';\n\nexport class WebmapTreeItem {\n  private _container?: HTMLElement;\n\n  constructor(layer: NgwWebmapItem) {\n    const container = this._createTreeItem(layer);\n    if (container) {\n      this._container = container;\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  private _createTreeBranch(layers: NgwWebmapItem[]) {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item-children';\n    layers.forEach((x) => {\n      if (x.item) {\n        const item = this._createTreeItem(x);\n        if (item) {\n          elem.appendChild(item);\n        }\n      }\n    });\n    return elem;\n  }\n\n  private _createTreeItem(layer: NgwWebmapItem) {\n    const item: TreeGroup | TreeLayer = layer.item;\n    if (!item) {\n      return false;\n    }\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    if (item.display_name) {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'checkbox');\n      // const value = item.item_type === 'layer' ? item.layer_enabled : true;\n      const visibility = layer.properties.property(\n        'visibility',\n      ) as CheckProperty;\n      input.checked = !!visibility.get();\n\n      if (visibility) {\n        visibility.emitter.on('change', (ev: ChangeEvent) => {\n          input.checked = ev.value;\n        });\n        input.onclick = () => {\n          visibility.set(input.checked, {\n            propagation: WebMap.keys.pressed('ctrl'),\n          });\n        };\n      }\n\n      const name = document.createElement('span');\n      name.innerHTML = item.display_name;\n\n      elem.appendChild(input);\n      elem.appendChild(name);\n    }\n\n    if (\n      item.item_type === 'group' ||\n      (item.item_type === 'root' && item.children.length)\n    ) {\n      const children = layer.tree.getChildren() as NgwWebmapItem[];\n      const treeBranch = this._createTreeBranch(children.reverse());\n      elem.appendChild(treeBranch);\n    }\n    return elem;\n  }\n}\n","import './BaseMapsContainer.css';\n\nimport { NgwMap, LayerAdapter } from '@nextgis/ngw-map';\n\nexport interface BaseMapsContainerOptions {\n  ngwMap: NgwMap;\n}\n\nexport class BaseMapsContainer {\n  private readonly ngwMap: NgwMap;\n  private _container: HTMLElement;\n  private _baseMapsContainer?: HTMLElement;\n\n  constructor(private options: BaseMapsContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n    this.ngwMap.emitter.on('layer:add', (e) => {\n      if (this.ngwMap.isBaseLayer(e)) {\n        this._updateBaseMapContainer();\n      }\n    });\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  private _createContainer() {\n    const container = document.createElement('div');\n    container.className = 'basemaps-contentainer panel-content-padding control';\n\n    const basemaps = document.createElement('div');\n    basemaps.className = 'basemaps-contentainer__layers';\n    this._baseMapsContainer = basemaps;\n    container.appendChild(basemaps);\n    this._updateBaseMapContainer();\n    return container;\n  }\n\n  private _updateBaseMapContainer() {\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.innerHTML = '';\n    }\n    // first checkbox to remove any basemap\n    this._createBaseMapItem();\n    this.ngwMap.getBaseLayers().forEach((x) => {\n      const layer = this.ngwMap.getLayer(x);\n      if (layer) {\n        this._createBaseMapItem(layer);\n      }\n    });\n  }\n\n  private _createBaseMapItem(baseMap?: LayerAdapter) {\n    const control = document.createElement('div');\n    control.className = 'control';\n    const elem = document.createElement('label');\n    elem.className = 'radio basemap-container__item';\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'radio');\n    input.setAttribute('name', 'basemap');\n\n    input.checked = !!baseMap && this.ngwMap.isLayerVisible(baseMap);\n\n    // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n    //   input.checked = ev.value;\n    // });\n    input.onclick = () => {\n      if (baseMap && baseMap.id) {\n        this.ngwMap.toggleLayer(baseMap.id, input.checked);\n      } else {\n        const activeBaseLayer = this.ngwMap.getActiveBaseLayer();\n        if (activeBaseLayer) {\n          this.ngwMap.hideLayer(activeBaseLayer);\n        }\n      }\n    };\n    const layerName = baseMap && (baseMap.name || baseMap.options.name);\n    const displayName = layerName || 'Blank';\n    const name = document.createTextNode(displayName);\n\n    elem.appendChild(input);\n\n    elem.appendChild(name);\n\n    control.appendChild(elem);\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.appendChild(control);\n    }\n  }\n}\n","import './BookmarksContainer.css';\n\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { ResourceHierarchy, FeatureItem } from '@nextgis/ngw-connector';\nimport { GeoJSON, Map } from 'leaflet';\nimport { Polygon } from 'geojson';\nimport { Bookmark } from '../../interfaces';\n\nexport interface BookmarksContainerOptions {\n  ngwMap: NgwMap<Map>;\n  bookmarks: ResourceHierarchy[];\n}\n\nexport class BookmarksContainer {\n  private readonly ngwMap: NgwMap<Map>;\n  private _container: HTMLElement;\n\n  constructor(private options: BookmarksContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'bookmarks-contentainer panel-content-padding ';\n\n    const bookmarksContainer = document.createElement('div');\n    bookmarksContainer.className = 'bookmarks-contentainer__layers';\n    this.options.bookmarks.forEach((b) => {\n      this.ngwMap.connector\n        .get('resource.item', null, { id: b.id })\n        .then((resource) => {\n          if (resource.feature_layer) {\n            const labelField = resource.feature_layer.fields.find(\n              (x) => x.label_field,\n            );\n            if (labelField) {\n              this.ngwMap\n                .fetchNgwLayerItems<Bookmark, Polygon>({ resourceId: b.id })\n                .then((items) => {\n                  items.forEach((x) => {\n                    const elem = this._createBookmarkItem(\n                      x,\n                      labelField.keyname as keyof Bookmark,\n                    );\n                    container.appendChild(elem);\n                  });\n                });\n            }\n          }\n        });\n    });\n    container.appendChild(bookmarksContainer);\n\n    return container;\n  }\n\n  _createBookmarkItem<B extends Bookmark = Bookmark>(\n    bookmark: FeatureItem<B, Polygon>,\n    nameField: keyof B = 'name',\n  ): HTMLElement {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item bookmark';\n    const bookmarkBlock = document.createElement('div');\n    const nameValue = bookmark.fields[nameField];\n    bookmarkBlock.innerHTML = String(nameValue);\n    bookmarkBlock.onclick = () => {\n      const geoJson = new GeoJSON(bookmark.geom);\n      const lMap = this.ngwMap.mapAdapter.map;\n      lMap && lMap.fitBounds(geoJson.getBounds());\n    };\n    elem.appendChild(bookmarkBlock);\n    return elem;\n  }\n}\n","import type { TimeUnit } from '../interfaces';\n\nexport function formatTime(dt: Date, unit: TimeUnit = 'ms'): number | string {\n  const t = dt.getTime();\n  return unit === 's' ? t / 1000 : dt.toISOString();\n}\n","export const DATE_RANGE_SELECT: [days: number, text: string][] = [\n  [24, '1 день'],\n  [48, '2 дня'],\n  [72, '3 дня'],\n  [96, '4 дня'],\n  [120, '5 дней'],\n  [144, '6 дней'],\n  [168, 'неделя'],\n];\n\nexport const USERFIRE_ID = 'USERFIRE';\nexport const MODIS_ID = 'MODIS';\nexport const VIIRS_ID = 'VIIRS';\nexport const SENSOR_ID = 'SENSOR';\n\nexport let NOW = new Date();\n\n// update global NOW each hour for long session\nsetInterval(() => {\n  NOW = new Date();\n}, 60 * 60 * 1000);\n","import type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { FiresAdapterOptions, TimeUnit } from '../interfaces';\n\nexport function daysBehindRange(days: number, to?: Date): [Date, Date] {\n  const to_ = to ? to.getTime() : Date.now();\n  const from = to_ - Number(days) * 1000 * 60 * 60;\n  return [from, to_].map((x) => new Date(x)) as [Date, Date];\n}\n\nexport function daysBehindRangeFormat(\n  days: number,\n  unit: TimeUnit = 's',\n  to?: Date,\n): [number | string, number | string] {\n  return daysBehindRange(days, to).map((x) =>\n    unit === 'ISO'\n      ? new Date(x).toISOString()\n      : unit === 's'\n      ? Math.ceil(x.getTime()) / 1000\n      : x.getTime(),\n  ) as [number | string, number | string];\n}\n\nexport function daysBehindFilter(\n  days: number,\n  layer: FiresAdapterOptions,\n  to?: Date,\n): PropertiesFilter {\n  const { timeUnit, dateField } = layer.props;\n  const range = daysBehindRangeFormat(days, timeUnit, to);\n  return range.map((x, i) => [dateField, i ? 'le' : 'ge', x]);\n}\n","import './FiresContainer.css';\n\nimport { defined } from '@nextgis/utils';\n\nimport type { LayerAdapter, NgwMap } from '@nextgis/ngw-map';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { ResourceAdapter, NgwLayerOptions } from '@nextgis/ngw-kit';\nimport { FireResource } from '../../interfaces';\n\nexport interface LayersContainerOptions {\n  ngwMap: NgwMap;\n  layers: NgwLayerOptions<'GEOJSON'>[];\n}\n\nexport class LayersContainer<\n  O extends LayersContainerOptions = LayersContainerOptions,\n> {\n  protected readonly ngwMap: NgwMap;\n  protected _container: HTMLElement;\n\n  constructor(protected options: O) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  protected _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'fires-contentainer panel-content-padding ';\n\n    const firesEl = document.createElement('div');\n    firesEl.className = 'fires-contentainer__layers';\n    for (const f of this.options.layers) {\n      this._createFireItem(f, firesEl);\n    }\n    container.appendChild(firesEl);\n\n    return container;\n  }\n\n  protected onLayerAdd(id: string, cb: (layer: ResourceAdapter) => void): void {\n    const ngwMap = this.options.ngwMap;\n    const layer = ngwMap && (ngwMap.getLayer(id) as ResourceAdapter);\n    if (layer) {\n      cb(layer);\n    } else {\n      const onLayerAdd = (e: LayerAdapter) => {\n        if (e.id === id) {\n          cb(e as ResourceAdapter);\n          this.ngwMap.emitter.off('layer:add', onLayerAdd);\n        }\n      };\n      this.ngwMap.emitter.on('layer:add', onLayerAdd);\n    }\n  }\n\n  private _createFireItem(fire: FireResource, container: HTMLElement): void {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    const id = fire.id;\n    if (!defined(id)) return;\n\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = 'загрузка...';\n    container.appendChild(wrapper);\n\n    const createItem = (layer_: ResourceAdapter): void => {\n      const item = layer_.item;\n      wrapper.innerHTML = '';\n      if (item) {\n        const input = document.createElement('input');\n        input.setAttribute('type', 'checkbox');\n\n        input.checked = true;\n\n        // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n        //   input.checked = ev.value;\n        // });\n        input.onclick = () => {\n          this.ngwMap.toggleLayer(id, input.checked);\n        };\n\n        const name = document.createElement('span');\n        const displayName = item.resource.display_name.split('__')[0];\n        name.innerHTML = displayName.replace('fires', '').trim();\n        const symbol = this._createSymbol(fire);\n        elem.appendChild(input);\n        elem.appendChild(symbol);\n        elem.appendChild(name);\n        wrapper.appendChild(elem);\n      }\n    };\n    this.onLayerAdd(id, (layer) => createItem(layer));\n  }\n\n  private _createSymbol(fire: FireResource): HTMLElement {\n    const symbol = document.createElement('span');\n    symbol.className = 'item-symbol';\n    const { color, stroke, strokeColor } = fire.adapterOptions\n      ?.paint as CirclePaint;\n    if (typeof color === 'string') {\n      symbol.style.color = color;\n      symbol.style.backgroundColor = color;\n    }\n    if (stroke && typeof strokeColor === 'string') {\n      symbol.style.borderColor = strokeColor;\n    }\n    return symbol;\n  }\n}\n","import { formatTime } from '../../utils/formatTime';\nimport { createCalendar } from './createCalendar';\nimport { LayersContainer, LayersContainerOptions } from './LayersContainer';\n\nimport type { ResourceAdapter } from '@nextgis/ngw-kit';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { CreateCalendarOptions } from './createCalendar';\nimport type { FiresLayerProps } from '../../interfaces';\n\nexport interface FiresContainerOptions extends LayersContainerOptions {\n  dateRange: [Date | undefined, Date | undefined];\n  defaultDateRange: [Date | undefined, Date | undefined];\n  timedelta: number;\n  onDateChange?: () => void;\n}\n\nexport class FiresContainer extends LayersContainer<FiresContainerOptions> {\n  protected _createContainer(): HTMLElement {\n    const container = super._createContainer();\n\n    const calendarWrapper = this._createCalendar();\n    container.insertBefore(calendarWrapper, container.firstChild);\n    return container;\n  }\n\n  private _createCalendar(): HTMLElement {\n    const calendarWrapper = document.createElement('div');\n    const fires = this.options.layers;\n\n    const promises: Promise<ResourceAdapter>[] = [];\n    fires.forEach((x) => {\n      const id = x.id;\n      if (id) {\n        const promise = new Promise<ResourceAdapter>((resolve) => {\n          this.onLayerAdd(id, resolve);\n        });\n        promises.push(promise);\n      }\n    });\n    Promise.all(promises).then((fires) => {\n      const block = this._buildCalendarBlock(\n        fires,\n        this.options.dateRange,\n        this.options.defaultDateRange,\n      );\n      calendarWrapper.appendChild(block);\n    });\n\n    return calendarWrapper;\n  }\n\n  private _buildCalendarBlock(\n    layers: ResourceAdapter[],\n    extremeItems: [Date?, Date?],\n    defaultItems: [Date?, Date?],\n  ) {\n    const [min, max]: (Date | undefined)[] = extremeItems;\n    const [startDate, endDate]: (Date | undefined)[] = defaultItems;\n    const opt: CreateCalendarOptions = {\n      timedelta: this.options.timedelta,\n      onChange: (e) => {\n        for (const l of layers) {\n          const { dateField, timeUnit } = (l.options.props ||\n            {}) as FiresLayerProps;\n          if (dateField) {\n            const filter: PropertiesFilter = [];\n            if (e.start) {\n              filter.push([dateField, 'ge', formatTime(e.start, timeUnit)]);\n            }\n            if (e.end) {\n              filter.push([dateField, 'le', formatTime(e.end, timeUnit)]);\n            }\n            if (l.propertiesFilter) {\n              l.propertiesFilter(filter);\n            }\n          }\n        }\n        if (this.options.onDateChange) {\n          this.options.onDateChange();\n        }\n      },\n    };\n    if (min) {\n      opt.minDate = min;\n    }\n    if (startDate) {\n      opt.startDate = startDate;\n    }\n    if (max) {\n      opt.maxDate = max;\n    }\n    if (endDate) {\n      opt.endDate = endDate;\n    }\n    return createCalendar(opt);\n  }\n}\n","import 'flatpickr/dist/flatpickr.min.css';\nimport flatpickr from 'flatpickr';\n// import rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\nimport { Russian } from 'flatpickr/dist/l10n/ru.js';\nimport { DATE_RANGE_SELECT } from '../../constants';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { debounce } from '../../../@nextgis/packages/utils/src';\nexport interface CreateCalendarOptions {\n  maxDate?: Date;\n  minDate?: Date;\n  startDate?: Date;\n  endDate?: Date;\n  timedelta: number;\n  onChange: (val: { start?: Date; end?: Date }) => void;\n}\n\nexport function createCalendar(options: CreateCalendarOptions): HTMLElement {\n  const { onChange, maxDate, minDate, startDate, endDate, timedelta } = options;\n  const html = document.createElement('div');\n  html.className = 'field is-horizontal';\n  html.innerHTML = `\n  <button class=\"button calendar-open calendar-control-btn is-small\">\n    <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n  </button>\n    <div class=\"field\">\n        <input class=\"input input-from is-small\" type=\"text\" >\n    </div>\n\n    <div class=\"select is-small\">\n      <select class=\"select-input\">\n        ${DATE_RANGE_SELECT.map((x) => {\n          return `<option ${timedelta === x[0] ? 'selected' : ''} value=${\n            x[0]\n          }>${x[1]}</option>`;\n        })}\n      </select>\n    </div>\n    <button class=\"button calendar-clean calendar-control-btn is-small\">✖</button>\n    `;\n\n  // <div class=\"field\">\n  //     <input class=\"input input-to is-small\" type=\"text\" >\n  // </div>\n\n  const select = html.querySelector('.select-input') as HTMLSelectElement;\n  const inputFrom = html.querySelector('.input.input-from') as HTMLInputElement;\n  const calendarCleanBtn = html.querySelector(\n    '.calendar-clean',\n  ) as HTMLButtonElement;\n  const calendarOpenBtn = html.querySelector(\n    '.calendar-open',\n  ) as HTMLButtonElement;\n  const today = new Date();\n\n  const changeFunction = debounce((prop: { start: Date; end: Date }) => {\n    if (prop.start && prop.end) {\n      onChange(prop);\n    }\n  });\n\n  const defaultDate = startDate && endDate ? [startDate, endDate] : undefined;\n\n  const datepicker = flatpickr(inputFrom, {\n    mode: 'range',\n    locale: Russian,\n    allowInput: true,\n    maxDate: maxDate || today,\n    minDate,\n    defaultDate,\n    // plugins: [rangePlugin({ input: inputTo })],\n    onChange: ([start, end]) => {\n      select.value = '';\n      updateCleanBtnDisplay();\n      changeFunction({ start, end });\n    },\n  });\n  const updateCleanBtnDisplay = () => {\n    calendarCleanBtn.style.display =\n      Number(select.value) === timedelta ? 'none' : 'block';\n  };\n  updateCleanBtnDisplay();\n\n  const setRange = (val: number) => {\n    updateCleanBtnDisplay();\n    const [start, end] = daysBehindRange(val, endDate);\n    datepicker.setDate([start, end]);\n    changeFunction({ start, end });\n  };\n  calendarOpenBtn.onclick = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    datepicker.isOpen ? datepicker.close() : datepicker.open();\n  };\n  calendarCleanBtn.onclick = () => {\n    select.value = String(timedelta);\n    setRange(timedelta);\n  };\n\n  select.onchange = () => {\n    updateCleanBtnDisplay();\n    setRange(Number(select.value));\n  };\n\n  // calendar.on('select', () => {\n  //   // const val = calendar.value(); // string - string\n  //   onChange({ ...calendar.date });\n  // });\n\n  return html;\n}\n","import { fetchNgwLayerItems } from '@nextgis/ngw-kit';\nimport { NgwDateFormat } from '@nextgis/ngw-connector';\nimport { NOW } from '../constants';\n\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { FetchNgwItemsOptions, NgwLayerOptions } from '@nextgis/ngw-kit';\n\nexport function layerTimestampExtremum({\n  connector,\n  layer,\n}: {\n  connector: NgwConnector;\n  layer: NgwLayerOptions<'GEOJSON'>;\n}): Promise<[Date | undefined, Date | undefined]> {\n  const resource = layer.resource;\n  if (layer && resource && connector) {\n    const dateField = layer.adapterOptions?.props?.dateField || 'field_9';\n    return connector.getResourceIdOrFail(resource).then((resourceId) => {\n      const extremeReqOpt: FetchNgwItemsOptions = {\n        resourceId,\n        fields: [dateField],\n        geom: false,\n        connector,\n        limit: 1,\n      };\n      const extremePromises = [\n        fetchNgwLayerItems({ ...extremeReqOpt, orderBy: [dateField] }),\n        // fetchNgwLayerItems({ ...extremeReqOpt, orderBy: ['-' + dateField] }),\n      ];\n      return Promise.all(extremePromises).then(([minItem, maxItem]) => {\n        const [min] = [minItem, maxItem].map((items) => {\n          const item = items && items[0];\n          if (item) {\n            const ngwDate = item.fields[dateField] as NgwDateFormat;\n            if (ngwDate) {\n              return parseNgwDate(ngwDate);\n            }\n          }\n          return undefined;\n        });\n        const max = NOW;\n        return [min, max];\n      });\n    });\n  }\n  return Promise.resolve([undefined, undefined]);\n}\n\nfunction parseNgwDate(dt: NgwDateFormat): Date {\n  return new Date(dt.year, dt.month - 1, dt.day);\n}\n","import './MapSettingsPanel.css';\n// @ts-ignore\nimport Sidebar from 'leaflet-sidebar';\nimport 'leaflet-sidebar/src/L.Control.Sidebar.css';\n// import Sidebar from '../../assets/SidebarControl';\n// import '../../assets/SidebarControl/SidebarControl.scss';\nimport '../../assets/SidebarControl/SidebarControlLeaflet.scss';\n\nimport { NgwLayers } from '@nextgis/ngw-map';\n\nimport { ActionMap } from '../ActionMap';\nimport { CollapsiblePanel } from './CollapsiblePanel';\nimport { WebmapTreeItem } from './WebmapTreeItem';\nimport { BaseMapsContainer } from './BaseMapsContainer';\nimport { BookmarksContainer } from './BookmarksContainer';\nimport { FiresContainer } from './FiresContainer';\n\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type { MapSettingsPanelOptions } from './interfaces';\nimport { layerTimestampExtremum } from '../../utils/layerTimestampExtremum';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { NOW } from '../../constants';\nimport { LayersContainer } from './LayersContainer';\n\nconst OPTIONS: Partial<MapSettingsPanelOptions> = {\n  target: 'tree',\n  // width: 300\n};\n\nexport class MapSettingsPanel {\n  options: MapSettingsPanelOptions;\n\n  sidebar: Sidebar;\n\n  private _container: HTMLElement;\n  private _target: HTMLElement;\n\n  private ngwLayers!: NgwLayers;\n\n  constructor(private actionMap: ActionMap, options: MapSettingsPanelOptions) {\n    this.options = { ...OPTIONS, ...options };\n    if (typeof this.options.target === 'string') {\n      const target = document.getElementById(this.options.target);\n      if (target) {\n        this._target = target;\n      } else {\n        throw new Error(\n          `No element with ID #${this.options.target} in document for webmap tree`,\n        );\n      }\n    } else if (this.options.target instanceof HTMLElement) {\n      this._target = this.options.target;\n    } else {\n      throw new Error('`target` option is not set');\n    }\n    this.sidebar = new Sidebar(this._target, {\n      closeButton: false,\n      position: 'left',\n      autoPan: false,\n    });\n\n    this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n    // this.actionMap.ngwMap.createControl(this.sidebar).then((x) => {\n    //   x.onAdd(this.actionMap.ngwMap.mapAdapter);\n    // });\n\n    // this.actionMap.ngwMap.addControl(sidebarControl, 'top-left');\n    // this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n\n    this.ngwLayers = this.options.ngwLayers;\n\n    this._container = this._createContainer();\n    if (!this.options.status) {\n      this.hide();\n    }\n    this._target && this._target.appendChild(this._container);\n  }\n\n  show(): void {\n    this._container.classList.remove('hidden');\n    this.sidebar.show();\n  }\n\n  hide(): void {\n    this.sidebar.hide();\n    this._container.classList.add('hidden');\n  }\n\n  private _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'tree-container';\n\n    if (this.options.width !== undefined) {\n      container.style.width = this.options.width + 'px';\n    }\n\n    if (this.options.userFires || this.options.firms) {\n      new CollapsiblePanel({\n        title: 'Пожары',\n        content: () => this._createFiresContainer(),\n        parent: container,\n      });\n    }\n    if (this.options.sensors) {\n      new CollapsiblePanel({\n        title: 'Датчики',\n        content: () => this._createSensorContainer(),\n        parent: container,\n      });\n    }\n    new CollapsiblePanel({\n      title: 'Базовые слои',\n      content: () => this._createNgwLayers(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Подложки',\n      content: () => this._createBasemapsContainer(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Закладки',\n      content: () => this._createBookmarksContainer(),\n      open: false,\n      parent: container,\n    });\n\n    return container;\n  }\n\n  private _createNgwLayers() {\n    const container = document.createElement('div');\n    container.className = 'webmap-tree-container';\n    for (const n in this.ngwLayers) {\n      const ngwLayer = this.ngwLayers[n];\n      const tree = new WebmapTreeItem(ngwLayer.layer.layer);\n      const treeContainer = tree.getContainer();\n      if (treeContainer) {\n        container.appendChild(treeContainer);\n      }\n    }\n    return container;\n  }\n\n  private _createBookmarksContainer() {\n    const container = document.createElement('div');\n    const bookmarks = this.options.bookmarks;\n    if (bookmarks) {\n      const bookmarkContainer = new BookmarksContainer({\n        bookmarks,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(bookmarkContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createFiresContainer() {\n    const container = document.createElement('div');\n    const { firms, userFires } = this.options;\n    let dateRange: [Date | undefined, Date | undefined] = [\n      undefined,\n      undefined,\n    ];\n    if (firms || userFires) {\n      const fires: NgwLayerOptions<'GEOJSON'>[] = [];\n      if (userFires && userFires.id) {\n        fires.push(userFires);\n        dateRange = await layerTimestampExtremum({\n          layer: userFires,\n          connector: this.options.ngwMap.connector,\n        });\n      }\n      if (firms) {\n        firms.forEach((x) => fires.push(x));\n      }\n      const timedelta = this.actionMap.options.timedelta || 24;\n      const defaultDateRange = daysBehindRange(timedelta, NOW);\n      const firesContainer = new FiresContainer({\n        layers: fires,\n        ngwMap: this.options.ngwMap,\n        dateRange,\n        defaultDateRange,\n        timedelta: this.actionMap.options.timedelta || 72,\n        onDateChange: () => {\n          if (this.options.onDateChange) {\n            this.options.onDateChange();\n          }\n        },\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createSensorContainer() {\n    const container = document.createElement('div');\n    const { sensors } = this.options;\n    if (sensors) {\n      const firesContainer = new LayersContainer({\n        layers: [sensors],\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createBasemapsContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.firms;\n    if (fires) {\n      const baseMapsContainer = new BaseMapsContainer({\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(baseMapsContainer.getContainer());\n    }\n    return container;\n  }\n}\n","import './GetCoordinateControl.css';\nimport '../ToggleControl.css';\nimport { ActionMap } from '../ActionMap';\nimport { Clipboard } from '@nextgis/utils';\nimport { EventEmitter } from 'events';\n\nimport type { Feature, Point } from 'geojson';\nimport type {\n  MapClickEvent,\n  VectorLayerAdapter,\n  ToggleControlOptions,\n} from '@nextgis/ngw-map';\n\nexport interface GetCoordinatePanelControlOptions {\n  toggle?: (status: boolean) => void;\n}\n\nexport class GetCoordinatePanelControl implements ToggleControlOptions {\n  html = '<i class=\"fas fa-map-pin btn-control-icon \"></i>';\n  title = {\n    off: 'Полученить координаты с карты',\n    on: 'Выключить режим получения координат с карты',\n  };\n\n  addClass = 'toggle-control webmap-tree-control';\n  addClassOn = 'active';\n\n  status = false;\n\n  emitter = new EventEmitter();\n\n  private _toggle?: (status: boolean) => void;\n  private __onMapClick?: (e: MapClickEvent) => void;\n  private _layer!: VectorLayerAdapter;\n\n  constructor(\n    private actionMap: ActionMap,\n    options: GetCoordinatePanelControlOptions = {},\n  ) {\n    this._toggle = options.toggle;\n    this.actionMap.ngwMap\n      .addFeatureLayer<any, Point>({\n        id: 'show-coordinate-click',\n        visibility: true,\n        paint: { radius: 6 },\n        popup: true,\n        popupOptions: {\n          createPopupContent: (d) => {\n            if (d.feature) {\n              return this._createPopupContent(\n                d.feature.geometry.coordinates.map((x) => x.toFixed(5)),\n              );\n            }\n          },\n        },\n      })\n      .then((layer) => {\n        if (layer) {\n          this._layer = layer;\n        }\n      });\n  }\n\n  onClick(status?: boolean): void {\n    this.toggleControl(status);\n  }\n\n  show(): void {\n    this.actionMap.ngwMap.setCursor('crosshair');\n    this._removeClickListener();\n    this.__onMapClick = (e: MapClickEvent) => this._onMapClick(e);\n    this.actionMap.ngwMap.emitter.on('click', this.__onMapClick);\n  }\n\n  hide(): void {\n    this.actionMap.ngwMap.setCursor('default');\n    this._removeClickListener();\n    this.actionMap.ngwMap.clearLayerData(this._layer);\n  }\n\n  private _removeClickListener() {\n    if (this.__onMapClick) {\n      this.actionMap.ngwMap.emitter.off('click', this.__onMapClick);\n      this.__onMapClick = undefined;\n    }\n  }\n\n  private _onMapClick(e: MapClickEvent) {\n    const feature: Feature<Point> = {\n      type: 'Feature',\n      properties: {},\n      geometry: { type: 'Point', coordinates: e.lngLat },\n    };\n    this.actionMap.ngwMap.setLayerData(this._layer, feature);\n  }\n\n  private toggleControl(status?: boolean) {\n    status = status !== undefined ? status : !this.status;\n    if (status) {\n      this.show();\n    } else {\n      this.hide();\n    }\n\n    this.status = status;\n    if (this._toggle) {\n      this._toggle(status);\n    }\n    this.emitter.emit('status', this.status);\n  }\n\n  private _createPopupContent([lng, lat]: string[]) {\n    const content = document.createElement('div');\n    const latLngStr = `${lat}, ${lng}`;\n    content.innerHTML = `\n    <span>Широта/Долгота:</span>\n    <span class=\"lat-lng-coord\"> ${latLngStr}</span>\n    <a href=\"#\" class=\"copy-to-clipboard\">\n    <i class=\"far fa-clipboard\"></i>\n    </a>`;\n    const clipBoardLink = content.getElementsByClassName(\n      'copy-to-clipboard',\n    )[0] as HTMLLinkElement;\n    clipBoardLink.onclick = () => {\n      Clipboard.copy(latLngStr);\n    };\n\n    return content;\n  }\n}\n","import type { Messages } from './interfaces';\n\nexport const I18N: Record<string, Messages> = {\n  en: {\n    linearMeasurement: 'Distance measurement',\n    areaMeasurement: 'Area measurement',\n    start: 'Start',\n    meter: 'm',\n    kilometer: 'km',\n    squareMeter: 'm²',\n    squareKilometers: 'km²',\n  },\n  ru: {\n    linearMeasurement: 'Измерение расстояния',\n    areaMeasurement: 'Измерение площади',\n    start: 'Старт',\n    meter: 'м',\n    kilometer: 'км',\n    squareMeter: 'м²',\n    squareKilometers: 'км²',\n  },\n};\n","import type { LatLng } from 'leaflet';\nimport type { Messages } from './interfaces';\n\nexport function toRadians(deg: number): number {\n  return deg * (Math.PI / 180);\n}\nexport function square(x: number): number {\n  return Math.pow(x, 2);\n}\nexport function getDistanceString(\n  distance: number,\n  messages: { meter: string; kilometer: string },\n): string {\n  return distance < 1e3\n    ? numberFormat(distance, 0) + ' ' + messages.meter\n    : numberFormat(distance / 1e3, 2) + ' ' + messages.kilometer;\n}\n\nexport function getDistance(latlng1: LatLng, latlng2: LatLng): number {\n  const earthRadius = 6378137; // radius of the earth in meter\n  const lat1 = toRadians(latlng1.lat);\n  const lat2 = toRadians(latlng2.lat);\n  const lat_dif = lat2 - lat1;\n  const lng_dif = toRadians(latlng2.lng - latlng1.lng);\n  const a =\n    square(Math.sin(lat_dif / 2)) +\n    Math.cos(lat1) * Math.cos(lat2) * square(Math.sin(lng_dif / 2));\n  return 2 * earthRadius * Math.asin(Math.sqrt(a));\n}\nexport function getAreaString(points: LatLng[], messages: Messages): string {\n  const a = Math.round(getArea(points));\n  return a < 1e6\n    ? numberFormat(a, 0) + ' ' + messages.squareMeter\n    : numberFormat(a / 1e6, 2) + ' ' + messages.squareKilometers;\n}\nexport function getArea(points: LatLng[]): number {\n  const earthRadius = 6378137;\n  let area = 0;\n  const len = points.length;\n  let x1 = points[len - 1].lng;\n  let y1 = points[len - 1].lat;\n  for (let i = 0; i < len; i++) {\n    const x2 = points[i].lng;\n    const y2 = points[i].lat;\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return Math.abs((area * earthRadius * earthRadius) / 2.0);\n}\nexport function numberFormat(number: number, decimals = 2): string {\n  const thousandsSep = ',';\n  const sign = number < 0 ? '-' : '';\n  const num = Math.abs(+number || 0);\n  const intPart = parseInt(num.toFixed(decimals), 10) + '';\n  const j = intPart.length > 3 ? intPart.length % 3 : 0;\n\n  return [\n    sign,\n    j ? intPart.substr(0, j) + thousandsSep : '',\n    intPart.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSep),\n    decimals\n      ? '.' +\n        Math.abs(num - Number(intPart))\n          .toFixed(decimals)\n          .slice(2)\n      : '',\n  ].join('');\n}\n","import { Layer, Point, Util, Browser, DomUtil, latLng } from 'leaflet';\n\nimport type { Map, LayerOptions, LatLng, ZoomAnimEvent } from 'leaflet';\n\nexport interface MeasureLabelOptions extends LayerOptions {\n  offset?: Point;\n  latlng: null | LatLng;\n  content: string;\n  className: string;\n}\n\nexport class MeasureLabel extends Layer {\n  options: MeasureLabelOptions = {\n    latlng: null,\n    content: '',\n    className: '',\n  };\n\n  protected _map!: Map;\n  private _offset = new Point(0, 30);\n  private _container?: HTMLElement;\n  private _contentNode?: HTMLElement;\n  private _closeButton?: HTMLElement;\n  private _containerBottom?: number;\n  private _containerLeft?: number;\n\n  constructor(options: MeasureLabelOptions) {\n    super(options);\n    Util.setOptions(this, options);\n    if (this.options.offset) {\n      this._offset = this.options.offset;\n    }\n  }\n  onAdd(map: Map): this {\n    this._map = map;\n    this._container || this._initLayout();\n    if (this._container) {\n      map.getPanes().popupPane.appendChild(this._container);\n    }\n    map.on('viewreset', this._updatePosition, this);\n    if (Browser.any3d) {\n      map.on('zoomanim', this._zoomAnimation, this);\n    }\n    this._update();\n    return this;\n  }\n  addTo(map: Map): this {\n    map.addLayer(this);\n    return this;\n  }\n  onRemove(map: Map): this {\n    if (this._container) {\n      map.getPanes().popupPane.removeChild(this._container);\n    }\n    map.off('viewreset', this._updatePosition, this);\n    map.off('zoomanim', this._zoomAnimation, this);\n    (this._map as any) = null;\n    return this;\n  }\n  setLatLng(latlng: LatLng): this {\n    this.options.latlng = latLng(latlng);\n    this._updatePosition();\n    return this;\n  }\n  setContent(content: string): this {\n    this.options.content = content;\n    this._updateContent();\n    return this;\n  }\n  enableClose(): HTMLElement {\n    this._closeButton = DomUtil.create('span', 'close', this._container);\n    this._closeButton.innerHTML =\n      '<svg class=\"icon\" viewBox=\"0 0 40 40\"><path stroke=\"#FF0000\" stroke-width=\"3\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" /></svg>';\n    return this._closeButton;\n  }\n  private _initLayout(): void {\n    this._container = DomUtil.create('div', this.options.className);\n    this._contentNode = DomUtil.create('div', 'content', this._container);\n  }\n  private _update(): void {\n    this._map && (this._updateContent(), this._updatePosition());\n  }\n  private _updateContent(): void {\n    if (this._contentNode && this.options.content) {\n      if (typeof this.options.content == 'string') {\n        this._contentNode.innerHTML = this.options.content;\n      } else {\n        this._contentNode.innerHTML = '';\n        this._contentNode.appendChild(this.options.content);\n      }\n    }\n  }\n  private _updatePosition(): void {\n    if (this.options.latlng && this._container) {\n      const point = this._map.latLngToLayerPoint(this.options.latlng);\n      const is3D = Browser.any3d;\n      const offset = this._offset;\n      is3D && DomUtil.setPosition(this._container, point);\n      this._containerBottom = -offset.y - (is3D ? 0 : point.y);\n      this._containerLeft = offset.x + (is3D ? 0 : point.x);\n      this._container.style.bottom = this._containerBottom + 'px';\n      this._container.style.left = this._containerLeft + 'px';\n    }\n  }\n  private _zoomAnimation(a: ZoomAnimEvent): void {\n    if (this._container) {\n      const point = (this._map as any)._latLngToNewLayerPoint(\n        this.options.latlng,\n        a.zoom,\n        a.center,\n      ) as Point;\n      DomUtil.setPosition(this._container, point);\n    }\n  }\n}\n","import {\n  Handler,\n  Util,\n  DomUtil,\n  DomEvent,\n  Polygon,\n  Polyline,\n  CircleMarker,\n} from 'leaflet';\n\nimport { I18N } from './i18n';\nimport { getAreaString, getDistance, getDistanceString } from './utils';\nimport { MeasureLabel } from './MeasureLabel';\n\nimport type { Map, LatLng, LeafletMouseEvent } from 'leaflet';\nimport {\n  DirectPath,\n  MeasureActionOptions,\n  MeasureModel,\n  Trail,\n} from './interfaces';\n\nexport class MeasureAction extends Handler {\n  options: MeasureActionOptions = {\n    color: '#FF0080',\n    model: 'distance',\n    messages: I18N['en'],\n  };\n\n  private _map: Map;\n  private _measureHandler: this;\n  private _finished: boolean;\n  private _startMove?: boolean;\n  private _measurementStarted?: boolean;\n  private _lastPoint?: LatLng;\n  private _totalDistance = 0;\n  private _trail: Trail = { overlays: [], points: [] };\n  private _directPath?: DirectPath;\n  private _measurePath?: DirectPath;\n\n  constructor(map: Map, options: MeasureActionOptions) {\n    super(map);\n    this._map = map;\n    this._measureHandler = this;\n    this._finished = false;\n    Util.setOptions(this, options);\n  }\n  setModel(model: MeasureModel): this {\n    this.options.model = model;\n    return this;\n  }\n  addHooks(): void {\n    this._activeMeasure();\n  }\n  removeHooks(): void {\n    this._disableMeasure();\n  }\n  private _activeMeasure(): void {\n    this._measureHandler._measurementStarted &&\n      this._measureHandler._finishMeasure();\n    this._measurementStarted ? this._finishMeasure() : this._enableMeasure();\n  }\n  private _onMouseClick(event: LeafletMouseEvent): void {\n    const latlng = event.latlng || this._map.mouseEventToLatLng(event as any);\n    if (this._lastPoint && latlng.equals(this._lastPoint)) {\n      return;\n    }\n    if (this._trail.points.length > 0) {\n      const points = this._trail.points;\n      points.push(latlng);\n      const length = points.length;\n      this._totalDistance += getDistance(\n        points[length - 2],\n        points[length - 1],\n      );\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          getDistanceString(this._totalDistance, this.options.messages),\n          'leaflet-measure-label',\n        );\n      }\n    } else {\n      this._totalDistance = 0;\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          this.options.messages.start,\n          'leaflet-measure-label',\n        );\n      }\n      this._trail.points.push(latlng);\n    }\n    this._lastPoint = latlng;\n    this._startMove = false;\n  }\n  private _onMouseMove(event: LeafletMouseEvent): void {\n    const latlng = event.latlng;\n    if (this._directPath && this._trail.points.length > 0) {\n      if (this._startMove) {\n        this._directPath.setLatLngs(this._trail.points.concat(latlng));\n      } else {\n        this._directPath.setLatLngs([latlng]);\n        this._startMove = true;\n      }\n    }\n  }\n  private _enableMeasure(): void {\n    this._trail = {\n      overlays: [],\n      points: [],\n    };\n    const map = this._map;\n    DomUtil.addClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.disable();\n    this._measurementStarted = true;\n    map.on('click', this._onMouseClick, this);\n    map.on('dblclick', this._finishMeasure, this);\n    map.on('contextmenu', this._finishMeasure, this);\n    map.doubleClickZoom.disable();\n    map.on('mousemove', this._onMouseMove, this);\n    map.fire('measure:start');\n  }\n  private _disableMeasure(): void {\n    const map = this._map;\n    DomUtil.removeClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.enable();\n    map.off('click', this._onMouseClick, this);\n    map.off('dblclick', this._finishMeasure, this);\n    map.off('contextmenu', this._finishMeasure, this);\n    map.off('mousemove', this._onMouseMove, this);\n    map.doubleClickZoom.enable();\n    this._measurementStarted = this._startMove = false;\n    if (!this._finished) {\n      this._clearOverlay.call(this);\n    }\n    map.fire('measure:stop');\n  }\n  private _finishMeasure(event?: LeafletMouseEvent): void {\n    if (this._trail.points.length > 0) {\n      if (this._trail.points.length > 1) {\n        if (this._directPath && (!event || event.type === 'contextmenu')) {\n          this._directPath.setLatLngs(this._trail.points);\n        }\n        if (this._lastPoint) {\n          if (this.options.model === 'area') {\n            this._addLable(\n              this._lastPoint,\n              getAreaString(this._trail.points, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          } else {\n            this._addLable(\n              this._lastPoint,\n              getDistanceString(this._totalDistance, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          }\n        }\n        this._directPath && this._map.removeLayer(this._directPath);\n        this._finished = true;\n      } else {\n        this._clearOverlay.call(this);\n      }\n    }\n    this.disable();\n  }\n  private _resetDirectPath(latlng: LatLng): void {\n    if (!this._directPath) {\n      let directPath: DirectPath;\n      if (this.options.model === 'area') {\n        directPath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          fillOpacity: 0,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          interactive: false,\n        });\n        directPath = polyline;\n      }\n      this._map.addLayer(directPath);\n      this._trail.overlays.push(directPath);\n      this._directPath = directPath;\n    } else {\n      this._directPath.addLatLng(latlng);\n    }\n  }\n  private _addMeasurePoint(latlng: LatLng): void {\n    if (!this._measurePath) {\n      let measurePath: DirectPath;\n      if (this.options.model === 'area') {\n        measurePath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          fillColor: this.options.color,\n          fillOpacity: 0.5,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          interactive: false,\n        });\n        measurePath = polyline;\n      }\n      this._map.addLayer(measurePath);\n      this._trail.overlays.push(measurePath);\n      this._measurePath = measurePath;\n    } else {\n      this._measurePath.addLatLng(latlng);\n    }\n    this._resetDirectPath(latlng);\n  }\n  private _addMarker(latLng: LatLng): void {\n    const marker = new CircleMarker(latLng, {\n      color: this.options.color,\n      opacity: 1,\n      weight: 1,\n      fillColor: '#FFFFFF',\n      fill: true,\n      fillOpacity: 1,\n      radius: 3,\n      interactive: false,\n    });\n    this._map.addLayer(marker);\n    this._trail.overlays.push(marker);\n  }\n  private _addLable(\n    latlng: LatLng,\n    content: string,\n    className: string,\n    ended?: boolean,\n  ): void {\n    const lable = new MeasureLabel({\n      latlng,\n      content,\n      className,\n    });\n    this._map.addLayer(lable);\n    this._trail.overlays.push(lable);\n    if (ended) {\n      const closeButton = lable.enableClose();\n      DomEvent.on(\n        closeButton,\n        'click',\n        (e) => {\n          DomEvent.stopPropagation(e);\n          this._clearOverlay();\n        },\n        this,\n      );\n    }\n  }\n  private _clearOverlay(): void {\n    const overlays = this._trail.overlays;\n    let i = 0,\n      length;\n    for (length = overlays.length; i < length; i++) {\n      this._map.removeLayer(overlays[i]);\n    }\n  }\n}\n","import { Control, DomUtil, DomEvent, Util } from 'leaflet';\nimport { I18N } from './i18n';\nimport { MeasureAction } from './MeasureAction';\n\nimport type { Map, Handler } from 'leaflet';\nimport type { MeasureOptions } from './interfaces';\n\nexport class Measure extends Control {\n  options: MeasureOptions = {\n    position: 'topright',\n    title: 'Measurement',\n    collapsed: true,\n    color: '#FF0080',\n    locale: 'en',\n    messages: I18N['en'],\n  };\n\n  private _map?: Map;\n  private _container?: HTMLElement;\n  private _link?: HTMLAnchorElement;\n  private _contents?: HTMLElement;\n  private _measureHandler?: Handler;\n\n  constructor(options: Partial<MeasureOptions>) {\n    super(options);\n    Util.setOptions(this, options);\n    const locale = options.locale;\n    if (locale && locale !== 'en') {\n      const messages = I18N[locale];\n      if (messages) {\n        this.options.messages = { ...I18N, ...messages };\n      } else {\n        console.error(\n          'Measure control has no messages for ' +\n            this.options.locale +\n            ' locale',\n        );\n      }\n    }\n  }\n  onAdd(map: Map): HTMLElement {\n    this._map = map;\n    return this._container || this._initLayout();\n  }\n  disableMeasure(): void {\n    if (this._measureHandler) {\n      this._measureHandler.disable();\n      this._measureHandler = undefined;\n    }\n  }\n  private _buildContainer(): HTMLElement {\n    this._container = DomUtil.create(\n      'div',\n      'leaflet-control-measure leaflet-bar leaflet-control',\n    );\n\n    this._contents = DomUtil.create(\n      'div',\n      'leaflet-measure-contents',\n      this._container,\n    );\n\n    this._link = DomUtil.create('a', 'leaflet-measure-toggle', this._container);\n    this._link.title = this.options.title || 'Measurement';\n    this._link.href = '#';\n\n    // if (this.options.title) {\n    //   var title = DomUtil.create('h3', '', this._contents);\n    //   title.innerText = this.options.title;\n    // }\n\n    this._buildItems();\n    return this._container;\n  }\n  private _buildItems(): void {\n    const ele_ul = DomUtil.create(\n      'ul',\n      'leaflet-measure-actions',\n      this._contents,\n    );\n    let ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_line = DomUtil.create('a', 'start', ele_li);\n    ele_link_line.innerText = this.options.messages.linearMeasurement;\n    ele_link_line.href = '#';\n    DomEvent.disableClickPropagation(ele_link_line);\n    DomEvent.on(ele_link_line, 'click', this._enableMeasureLine, this);\n\n    ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_area = DomUtil.create(\n      'a',\n      'leaflet-measure-action start',\n      ele_li,\n    );\n    ele_link_area.innerText = this.options.messages.areaMeasurement;\n    ele_link_area.href = '#';\n    DomEvent.disableClickPropagation(ele_link_area);\n    DomEvent.on(ele_link_area, 'click', this._enableMeasureArea, this);\n  }\n  private _initLayout(): HTMLElement {\n    const container = this._buildContainer();\n    DomEvent.disableClickPropagation(container);\n    DomEvent.disableScrollPropagation(container);\n    if (this.options.collapsed) {\n      DomEvent.on(\n        container,\n        {\n          mouseenter: this._expand,\n          mouseleave: this._collapse,\n        },\n        this,\n      );\n    } else {\n      this._expand();\n    }\n    return container;\n  }\n  private _enableMeasureLine(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'distance',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _enableMeasureArea(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'area',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _expand(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'none';\n      DomUtil.addClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n  private _collapse(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'block';\n      DomUtil.removeClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n}\n","export const StopToggleControlsCb: Array<{\n  name: string;\n  stop: () => void;\n}> = [];\n\nexport function addStopToggleControl(name: string, stop: () => void): void {\n  StopToggleControlsCb.push({ name, stop });\n}\n\nexport function stopToggleControlsFor(excludeControlName?: string): void {\n  StopToggleControlsCb.forEach((x) => {\n    if (x.name !== excludeControlName) {\n      x.stop();\n    }\n  });\n}\n","import { Measure } from '../assets/Leaflet.Measure-master/src';\nimport '../assets/Leaflet.Measure-master/src/leaflet.measure.css';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nimport type { Map } from 'leaflet';\n\nexport function createMeasureControl(ngwMap: NgwMap): void {\n  // @ts-ignore\n  const control = new Measure({ locale: 'ru' });\n  ngwMap.addControl(control, 'top-left');\n\n  ngwMap.onLoad().then(() => {\n    const map = ngwMap.mapAdapter.map as Map;\n    if (map) {\n      map.on('measure:start', () => {\n        stopToggleControlsFor('measure');\n        ngwMap.disableSelection();\n      });\n      map.on('measure:stop', () => {\n        ngwMap.setCursor('default');\n        ngwMap.enableSelection();\n      });\n    }\n    addStopToggleControl('measure', () => {\n      control.disableMeasure();\n    });\n  });\n}\n","import 'leaflet/dist/leaflet.css';\n// import 'ol/ol.css';\nimport './ActionMap.css';\n\n// @ts-ignore\nimport ShareButtons from 'share-buttons/dist/share-buttons';\n\nimport {\n  NgwMap,\n  NgwLayers,\n  LocationEvent,\n  ToggleControl,\n  VectorAdapterOptions,\n  NgwIdentifyEvent,\n} from '@nextgis/ngw-map';\nimport { CirclePaint } from '@nextgis/paint';\nimport { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport { getIcon } from '@nextgis/icons';\nimport MapAdapter from '@nextgis/leaflet-map-adapter';\n// import MapAdapter from '@nextgis/ol-map-adapter';\nimport UrlRuntimeParams from '@nextgis/url-runtime-params';\nimport { QmsAdapterOptions } from '@nextgis/qms-kit';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { ResourceHierarchy } from '@nextgis/ngw-connector';\n\nimport { Popup } from './Popup';\nimport { MapSettingsPanel } from './MapSettingsPanel/MapSettingsPanel';\nimport { GetCoordinatePanelControl } from './GetCoordinateControl/GetCoordinateControl';\nimport { createMeasureControl } from './createMeasureControl';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\nimport { daysBehindFilter } from '../utils/daysBehindRange';\n\nimport { NOW } from '../constants';\n\nimport type { Control, Map, Layer } from 'leaflet';\nimport type {\n  AppOptions,\n  FiresAdapterOptions,\n  FirmsLayerOptions,\n  SensorLayerOptions,\n  UserFiresLayerOptions,\n} from '../interfaces';\n\nexport class ActionMap {\n  ngwMap!: NgwMap<Map, Layer, any>;\n\n  tree?: MapSettingsPanel;\n  treeControl?: Control & ToggleControl;\n\n  authControl?: Control & ToggleControl;\n  popup: Popup;\n\n  private _promises: { [name: string]: CancelablePromise<any> } = {};\n\n  constructor(public options: Partial<AppOptions>) {\n    this.popup = new Popup();\n  }\n\n  async create(opt: Partial<AppOptions>): Promise<void> {\n    // const auth = new Auth(opt.mapOptions);\n    const mapOpt = { ...opt.mapOptions };\n    // try {\n    //   await auth.login();\n    //   mapOpt.connector = auth.connector;\n    // } catch (er) {\n    //   // cancel login\n    // }\n\n    const { basemaps, firms, userFires, sensors } = opt;\n\n    const ngwMap = new NgwMap<Map, Layer>({\n      mapAdapter: new MapAdapter(),\n      controls: [],\n      minZoom: 4,\n      runtimeParams: [new UrlRuntimeParams()],\n      ...mapOpt,\n    });\n\n    this.ngwMap = ngwMap;\n\n    ngwMap.setCursor('default');\n    this.popup.setNgwMap(ngwMap);\n\n    if (basemaps) {\n      ngwMap.onLoad().then(() =>\n        basemaps.forEach((x, i) => {\n          ngwMap.addBaseLayer<any, QmsAdapterOptions>('QMS', {\n            ...x,\n            visibility: i === 0,\n          });\n        }),\n      );\n    }\n    ngwMap.getPaintFunctions = { base: getIcon };\n\n    ngwMap.addControl('ZOOM', 'top-left');\n    this._createLocateControl();\n    ngwMap.addControl('ATTRIBUTION', 'bottom-right', {\n      customAttribution: [\n        '<a href=\"https://nextgis.com\" target=\"_blank\">©NextGIS</a>',\n      ],\n    });\n    createMeasureControl(ngwMap);\n    this._createShareControl();\n    // await this._createAuthControl(auth);\n    // this.ngwMap.addControl(this.authControl, 'top-right');\n\n    const ngwLayers = await ngwMap.getNgwLayers();\n    const bookmarks: ResourceHierarchy[] = [];\n    Object.values(ngwLayers).forEach((x) => {\n      const bookmark =\n        x.layer.item &&\n        x.layer.item.webmap &&\n        x.layer.item.webmap.bookmark_resource;\n      if (bookmark) {\n        bookmarks.push(bookmark);\n      }\n    });\n\n    await this._addFireLayer(opt.userFires);\n    await this._addFirms(opt.firms);\n    await this._addSensors(opt.sensors);\n    this._createGetCoordinateControl();\n\n    this._addTreeControl({\n      ngwLayers,\n      firms,\n      sensors,\n      userFires,\n      bookmarks,\n    });\n\n    this._addEventsListeners();\n  }\n\n  private _locate() {\n    const locationfound = (e: LocationEvent) => {\n      const lngLat = e.lngLat;\n      this.ngwMap.setCenter(lngLat);\n    };\n\n    this.ngwMap.locate({ setView: false }, { locationfound });\n  }\n\n  // private async _createAuthControl(auth: Auth) {\n  //   const authBtn = document.getElementsByClassName(\n  //     'js-auth-btn',\n  //   )[0] as HTMLElement;\n  //   const getStatus = () => {\n  //     return !!(this.ngwMap.connector && this.ngwMap.connector.user);\n  //   };\n  //   const onClick = () => {\n  //     auth.logout();\n  //     window.location.reload();\n  //   };\n  //   authBtn.innerHTML = getStatus() ? 'Выйти' : 'Войти';\n  //   authBtn.style.display = 'block';\n  //   authBtn.addEventListener('click', onClick);\n  // }\n\n  private _createShareControl() {\n    const shareModal = document.getElementsByClassName('js-modal')[0];\n    const closeModalBtn = document.getElementsByClassName('js-modal-close')[0];\n    const shareModalContent = document.getElementsByClassName(\n      'js-share-modal-content',\n    )[0];\n    const shareInput = document.getElementsByClassName(\n      'js-share-input',\n    )[0] as HTMLInputElement;\n    const showModal = () => {\n      const href = location.href;\n      const html = this._createShareModalContent(href);\n      shareInput.value = href;\n      shareModalContent.innerHTML = html;\n      ShareButtons.update();\n      shareModal.classList.add('is-active');\n    };\n    const closeModal = () => {\n      shareModalContent.innerHTML = '';\n      shareModal.classList.remove('is-active');\n    };\n    closeModalBtn.addEventListener('click', () => {\n      closeModal();\n    });\n\n    const shareControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-share-alt btn-control-icon \"></i>',\n      onClick() {\n        showModal();\n      },\n    });\n    this.ngwMap.addControl(shareControl, 'bottom-right');\n  }\n\n  private async _createGetCoordinateControl() {\n    const control = new GetCoordinatePanelControl(this, {\n      toggle: (status) => {\n        if (status) {\n          stopToggleControlsFor('coordinate');\n          this.ngwMap.disableSelection();\n        } else {\n          this.ngwMap.enableSelection();\n        }\n      },\n    });\n    const toggleControl = await this.ngwMap.createToggleControl(control);\n    this.ngwMap.addControl(toggleControl, 'top-left');\n    addStopToggleControl('coordinate', () => toggleControl.onClick(false));\n  }\n\n  private _createLocateControl() {\n    const onClick = () => this._locate();\n    const locateControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-location-arrow btn-control-icon\"></i>',\n      title: 'Найти меня на карте',\n      onClick,\n    });\n    this.ngwMap.addControl(locateControl, 'top-left');\n  }\n\n  private _createShareModalContent(url: string) {\n    const social = [\n      { id: 'tw', name: 'Twitter', icon: 'fab fa-twitter' },\n      { id: 'vk', name: 'VK', icon: 'fab fa-vk' },\n      { id: 'fb', name: 'Facebook', icon: 'fab fa-facebook-square' },\n    ];\n\n    const html = `<div class=\"buttons share-btn js-share-btn\" data-url=\"${url}\" data-title=\"\" data-desc=\"\">\n      ${social\n        .map(\n          (x) => `<a class=\"button is-primary\" data-id=\"${x.id}\">\n                    <span class=\"icon\">\n                        <i class=\"${x.icon}\"></i>\n                    </span>\n                    <span>${x.name}</span>\n                </a>`,\n        )\n        .join('')}\n    </div>`;\n    return html;\n  }\n\n  private async _addFireLayer(\n    x?: NgwLayerOptions<'GEOJSON'>,\n    adapterOptions?: VectorAdapterOptions,\n  ) {\n    if (x) {\n      const paint =\n        x.adapterOptions && x.adapterOptions.paint\n          ? (x.adapterOptions.paint as CirclePaint)\n          : {};\n      return this.ngwMap.addNgwLayer({\n        resource: x.resource,\n        id: x.id,\n        adapterOptions: {\n          ...x.adapterOptions,\n          paint: {\n            ...paint,\n            radius: 5,\n          },\n          selectable: true,\n          selectedPaint: {\n            ...paint,\n            radius: 7,\n          },\n          ...adapterOptions,\n          propertiesFilter: daysBehindFilter(\n            this.options.timedelta || 24,\n            x.adapterOptions as FiresAdapterOptions,\n            NOW,\n          ),\n        },\n      });\n    }\n  }\n\n  private async _addFirms(fires?: FirmsLayerOptions[]) {\n    if (fires) {\n      for (const x of fires) {\n        await this._addFireLayer(x);\n      }\n    }\n  }\n\n  private async _addSensors(sensor?: SensorLayerOptions) {\n    return sensor && this.ngwMap.addNgwLayer(sensor);\n  }\n\n  private async _addTreeControl(opt: {\n    ngwLayers: NgwLayers;\n    firms?: FirmsLayerOptions[];\n    userFires?: UserFiresLayerOptions;\n    sensors?: SensorLayerOptions;\n    bookmarks?: ResourceHierarchy[];\n  }) {\n    const sidebarToggleBtn = document.getElementsByClassName('js-sidebar')[0];\n\n    const isActive = () => sidebarToggleBtn.classList.contains('is-active');\n    const activateBurger = () => sidebarToggleBtn.classList.add('is-active');\n    const deactivateBurger = () =>\n      sidebarToggleBtn.classList.remove('is-active');\n\n    await this.ngwMap.onLoad();\n\n    this.tree = new MapSettingsPanel(this, {\n      ...opt,\n      onDateChange: () => {\n        this._cleanSelection();\n      },\n      ngwMap: this.ngwMap,\n    });\n\n    const toggle = (status?: boolean) => {\n      status = status !== undefined ? status : isActive();\n      if (status) {\n        stopToggleControlsFor('tree');\n        this.tree && this.tree.show();\n        activateBurger();\n      } else {\n        this.tree && this.tree.hide();\n        deactivateBurger();\n      }\n    };\n    sidebarToggleBtn.addEventListener('click', () => {\n      toggle();\n    });\n    setTimeout(() => {\n      toggle();\n    }, 500);\n    addStopToggleControl('tree', () => toggle(false));\n  }\n\n  private _cleanSelection() {\n    if (\n      this._promises.getFeaturePromise &&\n      this._promises.getFeaturePromise.cancel\n    ) {\n      this._promises.getFeaturePromise.cancel();\n    }\n    this.ngwMap.removeLayer('highlight');\n  }\n\n  private _highlighNgwLayer(e: NgwIdentifyEvent) {\n    this._cleanSelection();\n    const paramsList = e.getIdentifyItems();\n    const paramsLast = paramsList[paramsList.length - 1];\n    if (paramsLast) {\n      // const resourceId = params.resourceId;\n      paramsLast.identify().then((item) => {\n        if (item) {\n          item.toGeojson().then((geojson) => {\n            this.ngwMap.addLayer('GEOJSON', {\n              id: 'highlight',\n              data: geojson,\n              visibility: true,\n              paint: { color: 'green', stroke: true, fillOpacity: '0.8' },\n              popup: true,\n              popupOptions: {\n                maxWidth: 300,\n                createPopupContent: (e) => {\n                  e.onClose(() => {\n                    this._cleanSelection();\n                    this.ngwMap.unSelectLayers();\n                  });\n                  if (e.feature) {\n                    const element = this.popup.createPopupContent(\n                      geojson,\n                      paramsLast.layerId,\n                      item.extensions.attachment,\n                    );\n\n                    return element;\n                  }\n                },\n              },\n            });\n          });\n        }\n      });\n    }\n  }\n\n  private _addEventsListeners() {\n    this.ngwMap.emitter.on('click', () => {\n      this.ngwMap.cancelPromises('identify', 'select');\n    });\n    this.ngwMap.emitter.on('ngw:select', (e) => e && this._highlighNgwLayer(e));\n  }\n}\n","document.addEventListener('DOMContentLoaded', () => {\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(\n    document.querySelectorAll('.navbar-burger'),\n    0,\n  );\n\n  // Check if there are any navbar burgers\n  if ($navbarBurgers.length > 0) {\n    // Add a click event on each of them\n    $navbarBurgers.forEach((el) => {\n      el.addEventListener('click', () => {\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target);\n\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n        el.classList.toggle('is-active');\n        if ($target) {\n          $target.classList.toggle('is-active');\n        }\n      });\n    });\n  }\n});\n","import { MODIS_ID, SENSOR_ID, USERFIRE_ID, VIIRS_ID } from './constants';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { AppOptions, FiresAdapterOptions } from './interfaces';\n\nconst firmsAdapterOptions: FiresAdapterOptions = {\n  limit: 2000,\n  props: { dateField: 'timestamp', timeUnit: 's' },\n};\n\nconst stroke: CirclePaint = {\n  stroke: true,\n  strokeColor: '#ffffff',\n  strokeOpacity: 1,\n  opacity: 1,\n};\n\nconst options: AppOptions = {\n  mapOptions: {\n    target: 'map',\n    bounds: [36.59, 43.385, 49.374, 50.214],\n    baseUrl: 'https://clear-horizon.nextgis.com',\n    resources: [\n      {\n        resource: 1,\n        fit: true,\n        adapterOptions: { selectable: true },\n      },\n    ],\n  },\n  timedelta: 72,\n  basemaps: [\n    {\n      qmsId: 1135,\n    },\n    {\n      qmsId: 487,\n    },\n  ],\n  userFires: {\n    resource: 'userfirepoints',\n    id: USERFIRE_ID,\n    adapterOptions: {\n      paint: { color: 'rgb(100,20,40)', ...stroke },\n      props: { dateField: 'field_9', timeUnit: 'ISO' },\n    },\n  },\n  sensors: {\n    resource: 359,\n    id: SENSOR_ID,\n    adapterOptions: {\n      selectable: true,\n      paint: {\n        color: '#0000ff',\n        radius: 5,\n        ...stroke,\n      },\n    },\n  },\n  firms: [\n    {\n      resource: 103,\n      id: MODIS_ID,\n      adapterOptions: {\n        paint: { color: 'red', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n    {\n      resource: 105,\n      id: VIIRS_ID,\n      adapterOptions: {\n        paint: { color: 'orange', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n  ],\n};\n\nexport default options;\n","import 'regenerator-runtime/runtime';\n\nimport { App } from './App';\nimport config from './config';\n\nimport './style/style.scss';\n\nconst app = new App(config);\n\napp.create();\n","import { ActionMap } from './components/ActionMap';\nimport './bulma';\nimport type { AppOptions } from './interfaces';\n\nexport class App {\n  actionMap: ActionMap;\n\n  constructor(public options: Partial<AppOptions> = {}) {\n    this.actionMap = new ActionMap(options);\n  }\n\n  async create(options?: AppOptions): Promise<void> {\n    this.options = { ...this.options, ...options };\n    // show app html after js and css loading and before map drawing start\n    this.showContent();\n    await this.actionMap.create(this.options);\n  }\n\n  showContent(): void {\n    const appContent = document.getElementById('app');\n    const appLoadingContent = document.getElementById('app-loading');\n    if (appLoadingContent) {\n      appLoadingContent.style.display = 'none';\n    }\n    if (appContent) {\n      appContent.style.display = 'block';\n    }\n  }\n}\n"],"names":["Popup","ngwMap","this","feature","resourceId","attachment","popupElement","document","createElement","properties","className","propertiesList","Object","entries","map","key","value","innerHTML","createPropertiesHtml","pre","appendChild","updateElementContent","then","length","_addPhotos","Number","id","elem","forEach","day","month","year","join","hour","minute","str","RegExp","test","prepareColumnValue","element","_getResourceItem","item","feature_layer","newProperties","fields","x","grid_visibility","property","keyname","replace","a","b","push","display_name","newContent","getElementsByClassName","fid","attachmentElement","img","figure","style","maxHeight","height","maxWidth","width","_loadImage","src","imgElem","bulmaCarousel","_resourceItems","connector","get","options","Promise","resolve","reject","url","makeQuery","responseType","blob","reader","FileReader","readAsDataURL","onloadend","result","catch","er","LOADING_TEXT","CollapsiblePanel","status","undefined","open","_updateContainer","parent","getContainer","_container","_content","_updateContent","_toggle","_getToggleButtonHtml","_cleanContent","close","icon","title","header","_createHeader","content","leftLevel","rightLevel","toggle","onclick","html","WebmapTreeItem","layer","container","_createTreeItem","layers","input","setAttribute","visibility","checked","emitter","on","ev","set","propagation","WebMap","name","item_type","children","tree","getChildren","treeBranch","_createTreeBranch","reverse","BaseMapsContainer","_createContainer","e","isBaseLayer","_updateBaseMapContainer","basemaps","_baseMapsContainer","_createBaseMapItem","getBaseLayers","getLayer","baseMap","control","isLayerVisible","toggleLayer","activeBaseLayer","getActiveBaseLayer","hideLayer","displayName","createTextNode","BookmarksContainer","bookmarksContainer","bookmarks","resource","labelField","find","label_field","fetchNgwLayerItems","items","_createBookmarkItem","bookmark","nameField","bookmarkBlock","nameValue","String","geoJson","GeoJSON","geom","lMap","mapAdapter","fitBounds","getBounds","formatTime","dt","unit","t","getTime","toISOString","DATE_RANGE_SELECT","NOW","Date","daysBehindRange","days","to","to_","now","daysBehindFilter","props","timeUnit","dateField","Math","ceil","daysBehindRangeFormat","i","setInterval","LayersContainer","firesEl","f","_createFireItem","cb","onLayerAdd","off","fire","defined","wrapper","layer_","split","trim","symbol","_createSymbol","createItem","adapterOptions","paint","color","stroke","strokeColor","backgroundColor","borderColor","FiresContainer","calendarWrapper","_createCalendar","insertBefore","firstChild","fires","promises","promise","all","block","_buildCalendarBlock","dateRange","defaultDateRange","extremeItems","defaultItems","min","max","startDate","endDate","opt","timedelta","onChange","l","filter","start","end","propertiesFilter","onDateChange","minDate","maxDate","select","querySelector","inputFrom","calendarCleanBtn","calendarOpenBtn","today","changeFunction","debounce","prop","defaultDate","datepicker","flatpickr","mode","locale","Russian","allowInput","updateCleanBtnDisplay","display","setRange","val","setDate","stopPropagation","preventDefault","isOpen","onchange","createCalendar","layerTimestampExtremum","getResourceIdOrFail","extremeReqOpt","limit","extremePromises","orderBy","ngwDate","OPTIONS","target","MapSettingsPanel","actionMap","getElementById","Error","_target","HTMLElement","sidebar","Sidebar","closeButton","position","autoPan","addTo","ngwLayers","hide","classList","remove","show","add","userFires","firms","_createFiresContainer","sensors","_createSensorContainer","_createNgwLayers","_createBasemapsContainer","_createBookmarksContainer","n","ngwLayer","treeContainer","bookmarkContainer","firesContainer","baseMapsContainer","GetCoordinatePanelControl","EventEmitter","addFeatureLayer","radius","popup","popupOptions","createPopupContent","d","_createPopupContent","geometry","coordinates","toFixed","_layer","toggleControl","setCursor","_removeClickListener","__onMapClick","_onMapClick","clearLayerData","type","lngLat","setLayerData","emit","lng","lat","latLngStr","Clipboard","I18N","en","linearMeasurement","areaMeasurement","meter","kilometer","squareMeter","squareKilometers","ru","toRadians","deg","PI","square","pow","getDistanceString","distance","messages","numberFormat","number","decimals","thousandsSep","sign","num","abs","intPart","parseInt","j","substr","slice","MeasureLabel","latlng","Point","Util","offset","_offset","_map","_initLayout","getPanes","popupPane","_updatePosition","Browser","_zoomAnimation","_update","addLayer","removeChild","latLng","_closeButton","DomUtil","_contentNode","point","latLngToLayerPoint","is3D","_containerBottom","y","_containerLeft","bottom","left","_latLngToNewLayerPoint","zoom","center","Layer","MeasureAction","model","overlays","points","_measureHandler","_finished","_activeMeasure","_disableMeasure","_measurementStarted","_finishMeasure","_enableMeasure","event","mouseEventToLatLng","_lastPoint","equals","_trail","_totalDistance","latlng1","latlng2","lat1","lat_dif","lat2","lng_dif","sin","cos","asin","sqrt","_addMeasurePoint","_addMarker","_addLable","_startMove","_directPath","setLatLngs","concat","contextMenu","disable","_onMouseClick","doubleClickZoom","_onMouseMove","enable","_clearOverlay","call","round","earthRadius","area","len","x1","y1","x2","y2","getArea","removeLayer","directPath","addLatLng","Polygon","weight","dashArray","fillOpacity","interactive","Polyline","measurePath","_measurePath","fillColor","_resetDirectPath","marker","CircleMarker","opacity","fill","ended","lable","enableClose","DomEvent","Handler","Measure","collapsed","console","error","_contents","_link","href","_buildItems","ele_ul","ele_li","ele_link_line","innerText","_enableMeasureLine","ele_link_area","_enableMeasureArea","_buildContainer","mouseenter","_expand","mouseleave","_collapse","disableMeasure","Control","StopToggleControlsCb","addStopToggleControl","stop","stopToggleControlsFor","excludeControlName","createMeasureControl","addControl","onLoad","disableSelection","enableSelection","ActionMap","mapOpt","mapOptions","NgwMap","MapAdapter","controls","minZoom","runtimeParams","UrlRuntimeParams","setNgwMap","addBaseLayer","getPaintFunctions","base","getIcon","_createLocateControl","customAttribution","_createShareControl","getNgwLayers","values","webmap","bookmark_resource","_addFireLayer","_addFirms","_addSensors","_createGetCoordinateControl","_addTreeControl","_addEventsListeners","locate","setView","locationfound","setCenter","shareModal","closeModalBtn","shareModalContent","shareInput","addEventListener","shareControl","createButtonControl","onClick","location","_createShareModalContent","ShareButtons","createToggleControl","locateControl","_locate","addNgwLayer","selectable","selectedPaint","sensor","sidebarToggleBtn","isActive","contains","activateBurger","deactivateBurger","_cleanSelection","setTimeout","_promises","getFeaturePromise","cancel","paramsList","getIdentifyItems","paramsLast","identify","toGeojson","geojson","data","onClose","unSelectLayers","layerId","extensions","cancelPromises","_highlighNgwLayer","$navbarBurgers","Array","prototype","querySelectorAll","el","dataset","$target","firmsAdapterOptions","strokeOpacity","showContent","create","appContent","appLoadingContent","bounds","baseUrl","resources","fit","qmsId"],"sourceRoot":""}