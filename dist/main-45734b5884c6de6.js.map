{"version":3,"file":"main-45734b5884c6de6.js","mappings":"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","sources":["webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/NetworkError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/NgwError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/loadData.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/isObject.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/template.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/ResourceNotFoundError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/InsufficientPermissionsError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/activeConnectors.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/resourceToQuery.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/ResourcesControl.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/resourceCompare.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/NgwConnector.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/apiRequest.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/index.ts"],"sourcesContent":["/**\n * Thrown when...\n */\nexport class NetworkError extends Error {\n  name = 'NetworkError';\n\n  constructor(url: string) {\n    super();\n    Object.setPrototypeOf(this, NetworkError.prototype);\n    this.message = `Unable to request ${url}.\n    Possibly invalid NGW URL entered or CORS not configured to get request from ${location.origin}`; // /control-panel/cors\n  }\n}\n","import { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when...\n */\nexport class NgwError extends Error {\n  name = 'NgwError';\n\n  title!: string;\n  message!: string;\n  detail!: string;\n  exception!: NgwExceptions;\n  status_code!: number | 404 | 500;\n  data?: Record<string, any>;\n  guru_meditation!: string;\n\n  constructor(er?: Partial<NgwError>) {\n    super();\n    Object.assign(this, er);\n    Object.setPrototypeOf(this, NgwError.prototype);\n  }\n}\n","import {\n  RequestOptions as NgwRequestOptions,\n  RequestMethods,\n} from '../interfaces';\nimport { NetworkError } from '../errors/NetworkError';\nimport { NgwError } from '../errors/NgwError';\nimport { isError } from '../errors/isError';\nimport { isObject } from './isObject';\n\n// readyState\n// Holds the status of the XMLHttpRequest.\n// 0: request not initialized\n// 1: server connection established\n// 2: request received\n// 3: processing request\n// 4: request finished and response is ready\n\n// status\n// 200: \"OK\"\n// 201 \"Created\"\tThe request has been fulfilled, and a new resource is created\n// 403: \"Forbidden\"\n// 404: \"Page not found\"\n// 500: \"Internal Server Error\"\n// For a complete list go to the Http Messages Reference\n\ntype LoadData = (\n  url: string,\n  callback: (...args: any[]) => any,\n  options: NgwRequestOptions<RequestMethods> | undefined,\n  error: (reason?: any) => void,\n  onCancel: (cancelHandler: () => void) => void,\n) => void;\n\nlet loadData: LoadData;\n// @ts-ignore\nif (__BROWSER__) {\n  loadData = (\n    url: string,\n    callback: (...args: any[]) => any,\n    options: NgwRequestOptions = {},\n    error: (reason?: any) => void,\n    onCancel: (cancelHandler: () => void) => void,\n  ): void => {\n    options.method = options.method || 'GET';\n\n    const xhr = new XMLHttpRequest();\n    xhr.open(options.method || 'GET', url, true); // true for asynchronous\n\n    if (options.responseType === 'blob') {\n      xhr.responseType = options.responseType;\n    }\n    const getResponseText = () => {\n      try {\n        return JSON.parse(xhr.responseText);\n      } catch (er) {\n        return xhr.responseText;\n      }\n    };\n    const processingResponse = (forError = false) => {\n      const cb = forError ? error : callback;\n      if (options.responseType === 'blob') {\n        cb(xhr.response);\n      } else {\n        if (xhr.responseText) {\n          cb(getResponseText());\n        } else {\n          error({ message: '' });\n        }\n      }\n    };\n    xhr.onload = () => {\n      if ([401, 403, 404, 422, 500].indexOf(xhr.status) !== -1) {\n        error(new NgwError(getResponseText()));\n      }\n      processingResponse();\n    };\n\n    // xhr.onreadystatechange = () => {\n    //   if (\n    //     (xhr.readyState === 4 && xhr.status === 200) ||\n    //     (xhr.readyState === 3 && xhr.status === 201)\n    //   ) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 3 && xhr.status === 400) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 4 && xhr.status === 500) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 4 && xhr.status === 401) {\n    //     error(xhr.statusText);\n    //   } else if (xhr.readyState === 4) {\n    //     error('request error');\n    //   }\n    // };\n\n    xhr.onerror = (er) => {\n      if (xhr.status === 0) {\n        error(new NetworkError(url));\n      } else {\n        error(er);\n      }\n    };\n\n    xhr.upload.onprogress = function (e) {\n      if (e.lengthComputable) {\n        const percentComplete = (e.loaded / e.total) * 100;\n        if (options.onProgress) {\n          options.onProgress(percentComplete, e);\n        }\n        // console.log(percentComplete + '% uploaded');\n      }\n    };\n\n    const headers = options.headers;\n    if (headers) {\n      for (const h in headers) {\n        const header = headers[h];\n        if (typeof header === 'string') {\n          xhr.setRequestHeader(h, header);\n        }\n      }\n    }\n    if (options.withCredentials !== undefined) {\n      xhr.withCredentials = options.withCredentials;\n    }\n\n    let data: FormData | any;\n    if (options.file) {\n      data = new FormData();\n      data.append('file', options.file);\n      if (options.data) {\n        for (const d in options.data) {\n          data.append(d, data[d]);\n        }\n      }\n    } else {\n      data = options.data\n        ? typeof options.data === 'string'\n          ? options.data\n          : JSON.stringify(options.data)\n        : null;\n    }\n    if (onCancel) {\n      onCancel(() => {\n        xhr.abort();\n      });\n    }\n    xhr.send(data);\n  };\n} else {\n  const url = require('url');\n  const http = require('http');\n  const https = require('https');\n  const FormData = require('form-data');\n\n  const adapterFor = (inputUrl: string) => {\n    const adapters: Record<string, any> = {\n      'http:': http,\n      'https:': https,\n    };\n    const protocol = url.parse(inputUrl).protocol || 'https:';\n    return adapters[protocol];\n  };\n\n  loadData = (\n    url: string,\n    callback: (...args: any[]) => any,\n    options: NgwRequestOptions<RequestMethods> = {},\n    error: (reason?: any) => void,\n    onCancel: (cancelHandler: () => void) => void,\n  ): Promise<unknown> => {\n    const { file, headers, method, data, responseType } = options;\n\n    const request = new Promise((resolve, reject) => {\n      const adapter = adapterFor(url);\n      if (adapter) {\n        const requestOpt = {\n          headers: headers || {},\n          method,\n        };\n        const body = typeof data === 'string' ? data : JSON.stringify(data);\n        // https://stackoverflow.com/questions/35589109/node-http-delete-request-no-longer-works-after-upgrading-from-0-10-40\n        let form;\n        let uploadedFile = file;\n        if (file) {\n          const fileMeta = {};\n          if (\n            isObject(file) &&\n            'file' in file &&\n            ('filename' in file || 'name' in file)\n          ) {\n            const {\n              file: file_,\n              name,\n              ...fileMeta_\n            } = file as Record<string, any>;\n            if (name && !fileMeta_.filename) {\n              fileMeta_.filename = name;\n            }\n            Object.assign(fileMeta, fileMeta_);\n            uploadedFile = file_ as File;\n          }\n          form = new FormData();\n          form.append('file', uploadedFile, fileMeta);\n          if (data) {\n            for (const d in data) {\n              form.append(d, data[d]);\n            }\n          }\n          Object.assign(requestOpt.headers, {\n            // 'content-length': form.getLengthSync(),\n            ...form.getHeaders(),\n          });\n        }\n\n        if (body !== undefined) {\n          Object.assign(requestOpt.headers, {\n            'content-type': 'application/json',\n            'content-length': Buffer.byteLength(body),\n          });\n        }\n        const req = adapter.request(url, requestOpt, (resp: any) => {\n          let data = '';\n          resp.on('data', (chunk: any) => {\n            data += chunk;\n          });\n          resp.on('end', () => {\n            if (data) {\n              if (responseType === 'blob') {\n                resolve(data);\n              } else {\n                let json: Record<string, any> | undefined;\n                try {\n                  json = JSON.parse(data);\n                  if (json && json.status_code && json.status_code) {\n                    reject(json.message);\n                  }\n                } catch (er) {\n                  reject(er);\n                }\n                if (json !== undefined) {\n                  if (isError(json)) {\n                    reject('extractError(json)');\n                  } else {\n                    resolve(json);\n                  }\n                }\n              }\n            }\n            reject('no data');\n          });\n        });\n        if (form) {\n          form.pipe(req);\n        }\n        req.on('error', (err: any) => {\n          reject(err);\n        });\n        if (body) {\n          req.write(body);\n        }\n        onCancel(() => {\n          req.abort();\n        });\n        req.end();\n      } else {\n        throw new Error(`Given URL '${url}' is not correct`);\n      }\n    });\n    return request\n      .then((data) => {\n        if (callback) {\n          callback(data);\n        }\n        return data;\n      })\n      .catch((er) => {\n        if (error) {\n          error(er);\n        } else {\n          throw new Error(er);\n        }\n      });\n  };\n}\n\nexport { loadData };\n","export function isObject(val: unknown): val is Record<string | number, any> {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n","// https://github.com/Leaflet/Leaflet/blob/b507e21c510b53cd704fb8d3f89bb46ea925c8eb/src/core/Util.js#L165\nconst templateRe = /\\{ *([\\w_-]+) *\\}/g;\n\nexport function template(str: string, data: { [param: string]: any }): string {\n  return str.replace(templateRe, (s, key) => {\n    let value = data[key];\n\n    if (value === undefined) {\n      throw new Error('No value provided for letiable ' + s);\n    } else if (typeof value === 'function') {\n      value = value(data);\n    }\n    return value;\n  });\n}\n","import { NgwError } from './NgwError';\nimport { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when ...\n */\nexport class ResourceNotFoundError extends NgwError {\n  name = 'ResourceNotFoundError';\n  exception: NgwExceptions = 'nextgisweb.resource.exception.ResourceNotFound';\n\n  constructor(obj?: ResourceNotFoundError) {\n    super(obj);\n    Object.setPrototypeOf(this, ResourceNotFoundError.prototype);\n  }\n}\n","import { NgwError } from './NgwError';\nimport { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when ...\n */\nexport class InsufficientPermissionsError extends NgwError {\n  name = 'InsufficientPermissionsError';\n  exception: NgwExceptions =\n    'nextgisweb.core.exception.InsufficientPermissions';\n\n  constructor(obj: InsufficientPermissionsError) {\n    super(obj);\n    Object.setPrototypeOf(this, InsufficientPermissionsError.prototype);\n  }\n}\n","import { NgwConnectorOptions } from './interfaces';\nimport { NgwConnector } from './NgwConnector';\nimport { objectDeepEqual } from '@nextgis/utils';\n\nexport const CONNECTORS: NgwConnector[] = [];\n\nexport function addConnector(connector: NgwConnector): void {\n  CONNECTORS.push(connector);\n}\n\nexport function findConnector(\n  options: NgwConnectorOptions,\n): NgwConnector | undefined {\n  return CONNECTORS.find((x) => {\n    if (x.options.baseUrl === options.baseUrl) {\n      if (options.auth) {\n        if (x.options.auth) {\n          return objectDeepEqual(x.options.auth, options.auth);\n        }\n      } else {\n        // if auth not in find options; use first connector with same url\n        return true;\n      }\n    }\n  });\n}\n\nexport function removeConnector(connector: NgwConnector): void {\n  const index = CONNECTORS.indexOf(connector);\n  if (index !== -1) {\n    CONNECTORS.splice(index, 1);\n  }\n}\n\nexport function findAndRemoveConnector(options: NgwConnectorOptions): void {\n  const exist = findConnector(options);\n  if (exist) {\n    removeConnector(exist);\n  }\n}\n","import { DeepPartial, defined } from '@nextgis/utils';\nimport { Resource } from '../types/ResourceItem';\nimport { isObject } from './isObject';\n\nconst exclude = ['description'];\n\n/**\n * @remarks\n * https://docs.nextgis.ru/docs_ngweb_dev/doc/developer/resource.html#search-resources\n *\n * ```\n * { keyname, owner_user: { id }} > { keyname, owner_user__id }\n * ```\n *\n * @param resource - Any property from NGW resource item\n */\nexport function resourceToQuery(\n  resource: DeepPartial<Resource>,\n  prefix = '',\n): Record<string, unknown> {\n  prefix = prefix ? prefix + '__' : '';\n  const query: Record<string, any> = {};\n  for (const [key, value] of Object.entries(resource)) {\n    if (exclude.indexOf(key) === -1) {\n      if (isObject(value)) {\n        if (key === 'owner_user') {\n          const children = resourceToQuery(value as DeepPartial<Resource>, key);\n          Object.assign(query, children);\n        } else if (key === 'parent' && 'id' in value) {\n          query.parent_id = value.id;\n        }\n      } else if (defined(value)) {\n        query[prefix + key] = value;\n      }\n    }\n  }\n  return query;\n}\n","import CancelablePromise from '@nextgis/cancelable-promise';\nimport { defined } from '@nextgis/utils';\nimport Cache from '@nextgis/cache';\n\nimport { resourceToQuery } from './utils/resourceToQuery';\nimport { resourceCompare } from './utils/resourceCompare';\nimport { ResourceNotFoundError } from './errors/ResourceNotFoundError';\n\nimport { isObject } from './utils/isObject';\n\nimport type { DeepPartial } from '@nextgis/utils';\nimport type { NgwConnector } from './NgwConnector';\nimport type { ResourceItem, Resource } from './types/ResourceItem';\nimport type {\n  GetChildrenOfOptions,\n  ResourceDefinition,\n  RequestOptions,\n} from './interfaces';\n\nexport class ResourcesControl {\n  cache = new Cache<\n    CancelablePromise<ResourceItem | undefined>,\n    { id?: number | string }\n  >();\n\n  constructor(private connector: NgwConnector) {}\n\n  // -------------------------------------------------------------------------\n  // Resource Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Receive resource from NGW by id, keyname or search-object parameter.\n   * @param resource - Resource id, keyname or search-object\n   *\n   * @remarks\n   * Fetching resource would be cached to speed up next call\n   */\n  getOne(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    const cache = new Cache();\n    const forCache: { keyname?: string; id?: number } = {};\n    const opt = { ...requestOptions, cache: false };\n    if (typeof resource === 'string') {\n      forCache.keyname = resource;\n    } else if (typeof resource === 'number') {\n      forCache.id = resource;\n    } else if (isObject(resource)) {\n      if (resource.id !== undefined) {\n        forCache.id = resource.id;\n      } else if (resource.keyname) {\n        forCache.keyname = resource.keyname;\n      }\n    }\n    const makeRequest = () => {\n      if (typeof resource === 'string') {\n        return this._fetchResourceBy({ keyname: resource }, opt);\n      } else if (typeof resource === 'number') {\n        return this._fetchResourceById(resource, opt);\n      } else if (isObject(resource)) {\n        return this._fetchResourceBy(resource, opt);\n      }\n      return CancelablePromise.resolve(undefined);\n    };\n\n    return cache.addFull('resource', makeRequest, forCache);\n  }\n\n  getOneOrFail(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem> {\n    return this.getOne(resource, requestOptions).then((res) => {\n      if (res) {\n        return res;\n      }\n      throw new ResourceNotFoundError();\n    });\n  }\n\n  /**\n   * A fast way to retrieve resource ID for any resource definition.\n   * @param resource - Any available resource definition\n   *\n   * @remarks\n   * There are situations when exactly the resource id is needed\n   * (for example, to compose the correct request to the api)\n   * then this method will come in handy to facilitate the extraction of the identifier\n   * if the resource is specified through a keyname or other parameters.\n   */\n  getId(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<number | undefined> {\n    if (typeof resource === 'number') {\n      return CancelablePromise.resolve(resource);\n    } else if (typeof resource === 'string' || isObject(resource)) {\n      return this.getOne(resource, requestOptions).then((res) => {\n        if (res) {\n          return res.resource.id;\n        }\n      });\n    }\n    return CancelablePromise.resolve(undefined);\n  }\n\n  /**\n   * A fast way to retrieve resource ID for any resource definition.\n   * @param resource - Any available resource definition\n   *\n   * @remarks\n   * Similar with {@link NgwConnector.getResourceId | getResourceId} but rise error if resource is not exist.\n   * To not make one more checks if the resource is definitely exists\n   */\n  getIdOrFail(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<number> {\n    return this.getId(resource, requestOptions).then((resp) => {\n      if (resp === undefined) {\n        throw new Error();\n      }\n      return resp;\n    });\n  }\n\n  getMany(\n    resource: DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem[]> {\n    return this._resourceCacheFilter(resource).then((items) => {\n      if (!items.length) {\n        const query: Record<string, unknown> = {};\n        if (resource.keyname) {\n          query.keyname = resource.keyname;\n        } else {\n          Object.assign(query, resourceToQuery(resource));\n        }\n        return this.connector\n          .get('resource.search', requestOptions, {\n            serialization: 'full',\n            ...query,\n          })\n          .then((resources) => {\n            if (resources) {\n              for (const x of resources) {\n                this.cache.add('resource.item', CancelablePromise.resolve(x), {\n                  id: x.resource.id,\n                });\n              }\n            }\n            return resources;\n          });\n      }\n      return items;\n    });\n  }\n\n  getParent(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.getOne(resource, requestOptions).then((child) => {\n      if (child) {\n        return this.getOne(child.resource.parent.id, requestOptions);\n      }\n      return CancelablePromise.resolve(undefined);\n    });\n  }\n\n  getChildrenOf(\n    resource: ResourceDefinition,\n    requestOptions?: GetChildrenOfOptions,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.getIdOrFail(resource).then((parent) =>\n      this._getChildrenOf(parent, requestOptions),\n    );\n  }\n\n  update(\n    resource: ResourceDefinition,\n    data: DeepPartial<ResourceItem>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.getId(resource).then((id) => {\n      if (id !== undefined) {\n        return this.connector.put('resource.item', { data }, { id });\n      }\n    });\n  }\n\n  /**\n   * Fast way to delete resource from NGW and clean cache.\n   * @param resource - Resource definition\n   */\n  delete(resource: ResourceDefinition): CancelablePromise<void> {\n    return this.getId(resource).then((id) => {\n      if (id !== undefined) {\n        return this.connector.delete('resource.item', null, { id }).then(() => {\n          this._cleanResourceItemCache(id);\n          return undefined;\n        });\n      }\n    });\n  }\n\n  private _getChildrenOf(\n    parent: ResourceDefinition,\n    requestOptions?: GetChildrenOfOptions,\n    _items: ResourceItem[] = [],\n  ): CancelablePromise<ResourceItem[]> {\n    return this.connector\n      .get(\n        'resource.collection',\n        { cache: true, ...requestOptions },\n        {\n          parent,\n        },\n      )\n      .then((items) => {\n        const recursivePromises = [];\n        for (const item of items) {\n          this.cache.add('resource.item', CancelablePromise.resolve(item), {\n            id: item.resource.id,\n          });\n          _items.push(item);\n          if (requestOptions?.recursive && item.resource.children) {\n            recursivePromises.push(\n              this._getChildrenOf(item.resource.id, requestOptions, _items),\n            );\n          }\n        }\n        if (recursivePromises.length) {\n          return CancelablePromise.all(recursivePromises).then(() => {\n            return _items;\n          });\n        }\n        return _items;\n      });\n  }\n\n  private async _cleanResourceItemCache(id: number) {\n    const all = this.cache.all();\n    const toDelete: typeof all = [];\n    for (const c of all) {\n      const cid = c.options && c.options.id;\n      if (['resource.item', 'resource'].includes(c.key) && cid !== undefined) {\n        if (typeof cid === 'number') {\n          if (cid === id) {\n            toDelete.push(c);\n          }\n        } else {\n          const rid = await this.getId(cid);\n          if (rid === id) {\n            toDelete.push(c);\n          }\n        }\n      }\n    }\n    for (const d of toDelete) {\n      this.cache.delete(d);\n    }\n  }\n\n  private _fetchResourceById(\n    id: number,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    const promise = () =>\n      this.connector.get('resource.item', requestOptions, { id });\n\n    return this.cache\n      .add('resource.item', promise, {\n        id,\n      })\n      .catch((er) => {\n        if (!(er instanceof ResourceNotFoundError)) {\n          throw er;\n        }\n        return undefined;\n      });\n  }\n\n  private _fetchResourceBy(\n    resource: DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.getMany(resource, requestOptions).then((resources) => {\n      return resources[0];\n    });\n  }\n\n  private _resourceCacheFilter(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem[]> {\n    return CancelablePromise.all(this.cache.matchAll('resource.item')).then(\n      (resources) => {\n        const items: ResourceItem[] = [];\n        resources.filter((x) => {\n          if (x) {\n            // identical by uniq props\n            if (resource.keyname && x.resource.keyname) {\n              return resource.keyname === x.resource.keyname;\n            }\n            if (defined(resource.id) && defined(x.resource.id)) {\n              return resource.id === x.resource.id;\n            }\n            return resourceCompare(resource, x.resource);\n          }\n        });\n        return items;\n      },\n    );\n  }\n}\n","import { objectDeepEqual } from '@nextgis/utils';\nimport type { DeepPartial } from '@nextgis/utils';\nimport type { Resource } from '../types/ResourceItem';\n\nexport function resourceCompare(\n  res1: DeepPartial<Resource>,\n  res2: DeepPartial<Resource>,\n): boolean {\n  return objectDeepEqual(res1, res2);\n}\n","import { EventEmitter } from 'events';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { objectRemoveEmpty } from '@nextgis/utils';\nimport { fixUrlStr } from '@nextgis/utils';\nimport Cache from '@nextgis/cache';\n\nimport { loadData } from './utils/loadData';\nimport { template } from './utils/template';\nimport { NgwError } from './errors/NgwError';\nimport { apiRequest } from './utils/apiRequest';\nimport { ResourceNotFoundError } from './errors/ResourceNotFoundError';\nimport { InsufficientPermissionsError } from './errors/InsufficientPermissionsError';\nimport {\n  addConnector,\n  findConnector,\n  removeConnector,\n} from './activeConnectors';\nimport { ResourcesControl } from './ResourcesControl';\n\nimport type { DeepPartial } from '@nextgis/utils';\nimport type {\n  DeleteRequestItemsResponseMap,\n  PatchRequestItemsResponseMap,\n  PostRequestItemsResponseMap,\n  GetRequestItemsResponseMap,\n  PutRequestItemsResponseMap,\n  RequestTransformFunction,\n  GetChildrenOfOptions,\n  ResourceIdKeynameDef,\n  NgwConnectorOptions,\n  ResourceDefinition,\n  RequestItemsParams,\n  RequestItemKeys,\n  RequestHeaders,\n  RequestOptions,\n  PyramidRoute,\n  Credentials,\n  UserInfo,\n  Params,\n} from './interfaces';\nimport type { RequestItemsParamsMap } from './types/RequestItemsParamsMap';\nimport type { ResourceItem, Resource } from './types/ResourceItem';\n\nlet ID = 0;\n\nexport class NgwConnector {\n  static errors = {\n    NgwError,\n    ResourceNotFoundError,\n  };\n  id = ID++;\n\n  emitter = new EventEmitter();\n  user?: UserInfo;\n\n  resources!: ResourcesControl;\n\n  private routeStr = '/api/component/pyramid/route';\n  private activeRequests: CancelablePromise[] = [];\n  private requestTransform?: RequestTransformFunction | null;\n\n  constructor(public options: NgwConnectorOptions) {\n    const exist = findConnector(options);\n    if (exist) {\n      return exist;\n    } else {\n      if (this.options.route) {\n        this.routeStr = this.options.route;\n      }\n      if (this.options.requestTransform) {\n        this.requestTransform = this.options.requestTransform;\n      }\n      this.resources = new ResourcesControl(this);\n      addConnector(this);\n    }\n  }\n\n  static create(options: NgwConnectorOptions): NgwConnector {\n    return new this(options);\n  }\n\n  setRequestTransform(\n    requestTransform: RequestTransformFunction | undefined | null,\n  ) {\n    this.requestTransform = requestTransform;\n  }\n\n  /**\n   * Fast way to specify the connection address to NextGIS Web.\n   * The current connection will be severed.\n   * @param baseUrl - NGW url\n   */\n  setNgw(baseUrl: string): void {\n    this.logout();\n    this.options.baseUrl = baseUrl;\n    addConnector(this);\n  }\n\n  /**\n   * Establishing a connection with NextGIS Web to fulfill all other requests.\n   * @remarks\n   * This method need not be called manually as it is used when forming a request in {@link NgwConnector.apiRequest | apiRequest}.\n   * Can be used to check connection.\n   * @example\n   * ```javascript\n   * const connector = new NgwConnector({baseUrl: 'https://demo.nextgis.com'});\n   * connector.connect()\n   *   .then(() => console.log('Ok'))\n   *   .catch((er) => console.log('Connection problem', er));\n   * ```\n   */\n  connect(): CancelablePromise<PyramidRoute> {\n    const cache = new Cache();\n    const auth = this.options.auth;\n    const makeConnect = () =>\n      new CancelablePromise((resolve, reject) => {\n        const makeQuery = () => {\n          return this.makeQuery<PyramidRoute>(this.routeStr, {}, {})\n            .then((route) => {\n              resolve(route);\n            })\n            .catch((er) => {\n              reject(er);\n            });\n        };\n        if (auth) {\n          const { login, password } = auth;\n          if (login && password) {\n            return this._login({ login, password })\n              .then(() => {\n                return makeQuery();\n              })\n              .catch((er) => reject(er));\n          }\n        }\n        return makeQuery();\n      });\n    return cache.add('route', makeConnect, {\n      id: this.id,\n      auth,\n      baseUrl: this.options.baseUrl,\n    });\n  }\n\n  /**\n   * Quick way to change NextGIS Web user.\n   * @param credentials - New user credentials\n   */\n  login(\n    credentials: Credentials,\n    options?: RequestOptions,\n  ): CancelablePromise<UserInfo> {\n    this.logout();\n    addConnector(this);\n    return this._login(credentials, options);\n  }\n\n  /**\n   * Disconnecting a user. Aborting all current requests\n   */\n  logout(): void {\n    this.abort();\n    removeConnector(this);\n    this.options.auth = undefined;\n    this.user = undefined;\n    this.emitter.emit('logout');\n    this.resources.cache.clean();\n  }\n\n  getUserInfo(\n    credentials?: Credentials,\n    options?: RequestOptions,\n  ): CancelablePromise<UserInfo> {\n    if (this.user && this.user.id) {\n      return CancelablePromise.resolve(this.user);\n    }\n    if (credentials) {\n      this.options.auth = credentials;\n    }\n    const options_: RequestOptions = {\n      headers: this.getAuthorizationHeaders(credentials),\n      // withCredentials: true\n      ...options,\n    };\n\n    // Do not use apiRequest('auth.current_user') to avoid circular-references\n    return this.makeQuery<UserInfo>(\n      '/api/component/auth/current_user',\n      {},\n      options_,\n    );\n  }\n\n  /**\n   * Obtaining the required Headers for authentication of requests in the NGW.\n   */\n  getAuthorizationHeaders(\n    credentials?: Credentials,\n  ): RequestHeaders | undefined {\n    const client = this.makeClientId(credentials);\n    if (client) {\n      return {\n        Authorization: 'Basic ' + client,\n      };\n    }\n  }\n\n  makeClientId(credentials?: Credentials): string | undefined {\n    credentials = credentials || this.options.auth;\n    if (credentials) {\n      const { login, password } = credentials;\n      const str = unescape(encodeURIComponent(`${login}:${password}`));\n      // @ts-ignore\n      if (__BROWSER__) {\n        return window.btoa(str);\n      } else {\n        return Buffer.from(str).toString('base64');\n      }\n    }\n  }\n\n  /** Stop all api requests */\n  abort() {\n    for (const req of this.activeRequests) {\n      req.cancel();\n    }\n    this.activeRequests = [];\n  }\n\n  getActiveApiRequests() {\n    return [...this.activeRequests];\n  }\n\n  /**\n   * Send request to NGW api router.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param params - Request item params or query params\n   * @param requestOptions - Request options\n   *\n   * @example\n   * ```javascript\n   *\n   * // there is such an NGW route item\n   * // \"feature_layer.feature.item\": [\n   * //   \"/api/resource/{0}/feature/{1}\",\n   * //   \"id\",\n   * //   \"fid\"\n   * // ],\n   *\n   * const connector = new NgwConnector({ baseUrl: 'https://example.nextgis.com' });\n   * connector.apiRequest('feature_layer.feature.item', {\n   *   // request params for {0} and {1}\n   *   'id': 2011,\n   *   'fid': 101,\n   *   // query params\n   *   'srs': 4326,\n   *   'geom_format': 'geojson',\n   * }, { method: 'GET' });\n   * // send get-request to 'https://example.nextgis.com/api/resource/2011/feature/101?srs=4326&geom_format=geojson'\n   *\n   * ```\n   */\n  apiRequest<\n    K extends keyof RequestItemsParamsMap,\n    P extends RequestItemKeys = RequestItemKeys,\n  >(\n    name: K,\n    params_: RequestItemsParams<K> = {},\n    requestOptions: RequestOptions = {},\n  ): CancelablePromise<P[K]> {\n    const { method, headers, withCredentials, responseType } = requestOptions;\n    const params = objectRemoveEmpty(params_);\n    const makeApiRequest = () =>\n      apiRequest({ name, params, requestOptions, connector: this });\n    if (requestOptions.cache && method === 'GET') {\n      const cache = new Cache<CancelablePromise<P[K]>>();\n      return cache.add(name, makeApiRequest, {\n        params,\n        ...objectRemoveEmpty({\n          headers,\n          withCredentials,\n          responseType,\n          baseUrl: this.options.baseUrl,\n          userId: this.user?.id,\n        }),\n      });\n    }\n    return makeApiRequest();\n  }\n\n  /**\n   * Shortcut method for send POST request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   *\n   * @example\n   * ```javascript\n   * connector.post('resource.collection', { data: POST_PAYLOAD })\n   *   .then((newResource) => console.log(newResource))\n   *   .catch((error) => console.warn(error));\n   * ```\n   */\n  post<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions<'POST'>,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PostRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'POST';\n    return this.apiRequest<K, PostRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send GET request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  get<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions | undefined | null,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<GetRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'GET';\n    return this.apiRequest<K, GetRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send PATCH request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  patch<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PatchRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'PATCH';\n    return this.apiRequest<K, PatchRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send PUT request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  put<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PutRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'PUT';\n    return this.apiRequest<K, PutRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send DELETE request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  delete<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions | undefined | null,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<DeleteRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'DELETE';\n    return this.apiRequest<K, DeleteRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Send request to NGW.\n   * @param url - URL address to NGW\n   * @param params - Query params\n   * @param options - Request options\n   */\n  makeQuery<R = unknown>(\n    url: string,\n    params?: Params | null,\n    options: RequestOptions = {},\n  ): CancelablePromise<R> {\n    url = (this.options.baseUrl ? this.options.baseUrl : '') + url;\n    if (url) {\n      if (params) {\n        url = template(url, params);\n      }\n      url = encodeURI(fixUrlStr(url));\n      return this._loadData(url, options);\n    } else {\n      throw new Error('Empty `url` not allowed');\n    }\n  }\n\n  // -------------------------------------------------------------------------\n  // Resource Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * {@inheritDoc ResourcesControl.getOne}\n   */\n  getResource(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(resource, requestOptions);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getOneOrFail}\n   */\n  getResourceOrFail(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem> {\n    return this.resources.getOneOrFail(resource, requestOptions);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceBy(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(resource);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceByKeyname(\n    keyname: string,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(keyname);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceById(id: number): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(id);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getId}\n   */\n  getResourceId(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<number | undefined> {\n    return this.resources.getId(resource, requestOptions);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getIdOrFail}\n   */\n  getResourceIdOrFail(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<number> {\n    return this.resources.getIdOrFail(resource, requestOptions);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getMany}\n   */\n  getResourcesBy(\n    resource: DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.resources.getMany(resource, requestOptions);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getParent}\n   */\n  getResourceParent(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getParent(resource, requestOptions);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getChildrenOf}\n   */\n  getResourceChildren(\n    resource: ResourceDefinition,\n    requestOptions?: GetChildrenOfOptions,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.resources.getChildrenOf(resource, requestOptions);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.update}\n   */\n  updateResource(\n    resource: ResourceIdKeynameDef,\n    data: DeepPartial<ResourceItem>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.update(resource, data);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.delete}\n   */\n  deleteResource(resource: ResourceIdKeynameDef): CancelablePromise<void> {\n    return this.resources.delete(resource);\n  }\n\n  /**\n   * @internal\n   */\n  protected _loadData(\n    url: string,\n    options: RequestOptions,\n  ): CancelablePromise<any> {\n    options.responseType = options.responseType || 'json';\n\n    const request = new CancelablePromise((resolve, reject, onCancel) => {\n      if (this.user) {\n        options = options || {};\n        // options.withCredentials = true;\n        options.headers = {\n          ...this.getAuthorizationHeaders(),\n          ...options.headers,\n        };\n      }\n\n      if (this.requestTransform) {\n        const [transUrl, transOptions] = this.requestTransform(url, options);\n        url = transUrl;\n        options = transOptions;\n      }\n      loadData(url, resolve, options, reject, onCancel);\n    })\n      .then((resp) => {\n        this._cleanActiveRequests(request);\n        return resp;\n      })\n      .catch((httpError) => {\n        this._cleanActiveRequests(request);\n        if (httpError instanceof CancelablePromise.CancelError) {\n          // not need to handle cancel error because onCancel method is used\n        } else {\n          // @ts-ignore\n          if (__DEV__) {\n            console.warn('DEV WARN', httpError);\n          }\n          const er = this._handleHttpError(httpError);\n          if (er) {\n            throw er;\n          }\n        }\n      });\n    if (\n      options.signal &&\n      typeof options.signal.addEventListener === 'function'\n    ) {\n      options.signal.addEventListener('abort', () => {\n        request.cancel();\n        this._cleanActiveRequests(request);\n      });\n    }\n    this.activeRequests.push(request);\n    return request;\n  }\n\n  private _login(\n    credentials: Credentials,\n    options?: RequestOptions,\n  ): CancelablePromise<UserInfo> {\n    return this.getUserInfo(credentials, options)\n      .then((data) => {\n        this.user = data;\n        this.emitter.emit('login', data);\n        return data;\n      })\n      .catch((er) => {\n        this.emitter.emit('login:error', er);\n        throw er;\n      });\n  }\n\n  private _cleanActiveRequests(request: CancelablePromise) {\n    const activeRequestIndex = this.activeRequests.indexOf(request);\n    if (activeRequestIndex !== -1) {\n      this.activeRequests.splice(activeRequestIndex, 1);\n    }\n  }\n\n  private _handleHttpError(er: Error) {\n    if (er) {\n      if (er instanceof NgwError) {\n        if (er.exception === 'nextgisweb.resource.exception.ResourceNotFound') {\n          throw new ResourceNotFoundError(er);\n        } else if (\n          er.exception === 'nextgisweb.core.exception.InsufficientPermissions'\n        ) {\n          throw new InsufficientPermissionsError(er);\n        }\n      }\n    }\n    return er;\n  }\n}\n","import CancelablePromise from '@nextgis/cancelable-promise';\nimport { template } from './template';\nimport type { NgwConnector } from '../NgwConnector';\nimport type {\n  RequestItemKeys,\n  RequestItemsParams,\n  RequestOptions,\n} from '../interfaces';\nimport type { RequestItemsParamsMap } from '../types/RequestItemsParamsMap';\n\ninterface ApiRequestOptions<K extends keyof RequestItemsParamsMap> {\n  name: string;\n  connector: NgwConnector;\n  params: RequestItemsParams<K>;\n  requestOptions: RequestOptions;\n}\n\nexport function apiRequest<\n  K extends keyof RequestItemsParamsMap,\n  P extends RequestItemKeys = RequestItemKeys,\n>(opt: ApiRequestOptions<K>): CancelablePromise<P[K]> {\n  const params = opt.params;\n  return new CancelablePromise((resolve, reject) => {\n    opt.connector\n      .connect()\n      .then((apiItems) => {\n        let apiItem = apiItems && apiItems[opt.name];\n        if (apiItem) {\n          apiItem = [...apiItem];\n          let url = apiItem.shift();\n          if (apiItem.length) {\n            const replaceParams: {\n              [num: number]: string;\n            } = {};\n            for (let fry = 0; fry < apiItem.length; fry++) {\n              const arg = apiItem[fry];\n              replaceParams[fry] = '{' + arg + '}';\n              if (params[arg] === undefined) {\n                throw new Error(\n                  '`' + arg + '`' + ' url api argument is not specified',\n                );\n              }\n            }\n            if (url) {\n              url = template(url, replaceParams);\n            }\n          }\n          // Transfer part of the parameters from `params` to the URL string\n          if (params) {\n            const paramArray = [];\n            const paramList = params.paramList;\n            if (Array.isArray(paramList)) {\n              delete params.paramList;\n              paramList.forEach((x) => {\n                paramArray.push(`${x[0]}=${x[1]}`);\n              });\n            }\n            for (const p in params) {\n              if (apiItem.indexOf(p) === -1) {\n                paramArray.push(`${p}=${params[p]}`);\n              }\n            }\n            if (paramArray.length) {\n              url = url + '?' + paramArray.join('&');\n            }\n          }\n          if (url) {\n            resolve(opt.connector.makeQuery(url, params, opt.requestOptions));\n          } else {\n            reject(new Error('request url is not set'));\n          }\n        } else {\n          resolve(undefined);\n        }\n      })\n      .catch((er) => {\n        reject(er);\n      });\n  });\n}\n","/**\n * A lightweight HTTP client optimized for use with {@link http://docs.nextgis.ru/docs_ngweb_dev/doc/developer/toc.html | NextGIS Web} API\n *\n * @remarks\n * Make sure CORS is registered in the {@link https://docs.nextgis.com/docs_ngcom/source/CORS.html | NextGIS Web settings } to be able to send requests.\n *\n * @packageDocumentation\n * @module ngw-connector\n */\nimport { NgwConnector } from './NgwConnector';\n\nexport * from './interfaces';\nexport * from './types/ResourceItem';\nexport * from './types/FeatureLayer';\nexport * from './types/RequestItemsParamsMap';\nexport * from './types/ResourceStore';\n\n// export { NgwConnector };\nexport default NgwConnector;\n"],"names":["NetworkError","_Error","_inherits","_super","url","_this","_classCallCheck","_assertThisInitialized","call","Object","setPrototypeOf","prototype","message","concat","location","origin","_wrapNativeSuper","Error","loadData","NgwError","er","_defineProperty","assign","isObject","val","toString","callback","options","arguments","length","undefined","error","onCancel","method","xhr","XMLHttpRequest","open","responseType","getResponseText","JSON","parse","responseText","onload","indexOf","status","cb","response","processingResponse","onerror","upload","onprogress","e","lengthComputable","percentComplete","loaded","total","onProgress","data","headers","h","header","setRequestHeader","withCredentials","file","FormData","append","d","stringify","abort","send","templateRe","template","str","replace","s","key","value","ResourceNotFoundError","_NgwError","obj","InsufficientPermissionsError","CONNECTORS","addConnector","connector","push","exclude","resourceToQuery","resource","prefix","query","_i","_Object$entries","entries","_Object$entries$_i","children","parent_id","id","defined","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","n","from","test","_unsupportedIterableToArray","F","_e","f","normalCompletion","didErr","step","_e2","arr","len","arr2","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread","target","source","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","descriptor","_toPropertyKey","input","hint","prim","toPrimitive","res","String","_toPrimitive","ResourcesControl","instance","Constructor","Cache","protoProps","_cleanResourceItemCache2","requestOptions","cache","forCache","opt","keyname","addFull","_fetchResourceBy","_fetchResourceById","CancelablePromise","this","getOne","getId","resp","_this2","_resourceCacheFilter","items","get","serialization","resources","_step","_iterator","x","add","_this3","child","parent","_this4","getIdOrFail","_getChildrenOf","_this5","put","_this6","delete","_cleanResourceItemCache","_this7","_items","_step2","recursivePromises","_iterator2","item","recursive","_callee","all","toDelete","_iterator3","_step3","c","cid","_toDelete","_context","includes","t0","args","_x","_this8","getMany","matchAll","res1","res2","objectDeepEqual","ID","NgwConnector","EventEmitter","exist","find","baseUrl","auth","findConnector","route","routeStr","requestTransform","logout","makeQuery","login","password","_login","credentials","index","splice","user","emitter","emit","clean","options_","getAuthorizationHeaders","client","makeClientId","Authorization","_credentials","unescape","encodeURIComponent","window","btoa","activeRequests","cancel","_this$user","params_","params","objectRemoveEmpty","makeApiRequest","connect","apiItems","apiItem","shift","replaceParams","fry","paramArray","paramList","p","join","apiRequest","userId","encodeURI","fixUrlStr","_loadData","getOneOrFail","getParent","getChildrenOf","update","request","_this3$requestTransfo2","transUrl","transOptions","_cleanActiveRequests","httpError","_handleHttpError","signal","addEventListener","getUserInfo","activeRequestIndex"],"sourceRoot":""}