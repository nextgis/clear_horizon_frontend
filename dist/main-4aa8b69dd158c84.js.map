{"version":3,"file":"main-4aa8b69dd158c84.js","mappings":"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","sources":["webpack://clear_horizon/./@nextgis/packages/icons/src/index.ts","webpack://clear_horizon/./@nextgis/packages/item/src/TreeHelper.ts","webpack://clear_horizon/./@nextgis/packages/item/src/properties/CheckProperty.ts","webpack://clear_horizon/./@nextgis/packages/item/src/properties/BaseProperty.ts","webpack://clear_horizon/./@nextgis/packages/item/src/properties/ItemProperties.ts","webpack://clear_horizon/./@nextgis/packages/item/src/Item.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/utils/utils.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/controls/createControl.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/controls/Attribution.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/BaseAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/GeoJsonAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/layersUtility.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/ImageAdapter/ImageOverlay.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/ImageAdapter/ImageLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/ImageAdapter/ImageAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/RemoteTileLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/TileAdapter/TileLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/TileAdapter/TileAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/WmsAdapter/WmsLayer.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/WmsAdapter/WmsAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/layer-adapters/OsmAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/LeafletMapAdapter.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/controls/createButtonControl.ts","webpack://clear_horizon/./@nextgis/packages/leaflet-map-adapter/src/index.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/NgwError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/NetworkError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/loadData.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/template.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/ResourceNotFoundError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/errors/InsufficientPermissionsError.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/activeConnectors.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/isObject.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/resourceToQuery.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/ResourcesControl.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/resourceCompare.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/utils/apiRequest.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/NgwConnector.ts","webpack://clear_horizon/./@nextgis/packages/ngw-connector/src/index.ts"],"sourcesContent":["/**\n * @module icons\n */\n\n// tslint:disable:max-line-length\nimport { IconOptions as WebmapIcoOptions } from '@nextgis/paint';\n\nconst svgPath: { [name: string]: string | GetPathCallback } = {\n  brill: '<path d=\"m6 0-5 6 5 6 5-6z\"/>',\n  circle: '<circle cx=\"6\" cy=\"6\" r=\"6\"/>',\n  rect: '<rect width=\"12\" height=\"12\"/>',\n  marker:\n    '<path d=\"m6 0c-1.85 0-4 1.19-4 4.22 0 2.05 3.08 6.59 4 7.78 0.821-1.19 4-5.62 4-7.78 0-3.03-2.15-4.22-4-4.22z\"/>',\n  cross:\n    '<path d=\"M 2.4,12 6,8.4 9.6,12 12,9.6 8.4,6 12,2.4 9.6,0 6,3.6 2.4,0 0,2.4 3.6,6 0,9.6 Z\"/>',\n  star: '<path d=\"m6 0.25 1.71 4.18 4.29-1.04e-4 -3.43 3.14 0.857 4.18-3.43-3.14-3.43 3.14 0.857-4.18-3.43-3.14 4.29-0.209z\"/>',\n  triangle: '<path d=\"m12 11.7h-12l6-11.2z\"/>',\n  plus: '<path d=\"m7.5 12v-4.5h4.5v-3h-4.5v-4.5h-3v4.5h-4.5v3h4.5v4.5z\"/>',\n  minus: '<path d=\"m12 7.5v-3h-12v3z\"/>',\n  asterisk:\n    '<path d=\"m7.59 12v-3.27l2.83 1.64 1.58-2.74-2.85-1.64 2.83-1.64-1.56-2.74-2.83 1.64v-3.24h-3.17v3.24l-2.85-1.64-1.57 2.74 2.84 1.64-2.84 1.64 1.57 2.74 2.85-1.64v3.27z\"/>',\n};\n\nexport interface IconOptions {\n  shape?:\n    | 'circle'\n    | 'brill'\n    | 'rect'\n    | 'marker'\n    | 'star'\n    | 'asterisk'\n    | 'triangle'\n    | 'plus'\n    | 'minus';\n  color?: string;\n  size?: number;\n  stroke?: number;\n  strokeColor?: string;\n  rotate?: number;\n}\n\nconst STROKE = 0.8;\n\nfunction insertSvg(\n  width: number,\n  height: number,\n  stroke = 0,\n  content?: string,\n) {\n  const s = stroke / 2;\n  const svg = `<svg\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${width}\"\n    height=\"${height}\"\n    viewBox=\"-${s} -${s} ${width + stroke} ${height + stroke}\"\n  >${content}</svg>`;\n  const oParser = new DOMParser();\n  const oDOM = oParser.parseFromString(svg, 'image/svg+xml');\n  return oDOM.documentElement;\n}\n\ntype GetPathCallback = (opt?: IconOptions) => string;\n\nexport function getIcon(opt: IconOptions = {}): WebmapIcoOptions {\n  // default values\n  const shape = opt.shape || 'circle';\n  const color = opt.color || 'blue';\n  const strokeColor = opt.strokeColor || 'white';\n  const size = opt.size || 12;\n\n  const anchor = size / 2;\n  const defSize = 12;\n  const stroke = typeof opt.stroke === 'number' ? opt.stroke : STROKE;\n  const scale = size / defSize;\n\n  const pathAlias = svgPath[shape] || 'circle';\n\n  const path = typeof pathAlias === 'string' ? pathAlias : pathAlias(opt);\n  const svg = insertSvg(size, size, stroke * scale, path);\n  const fistChild = svg.firstChild as SVGElement;\n\n  const transform = `scale(${scale})`;\n\n  fistChild.setAttribute('fill', color);\n  if (stroke) {\n    fistChild.setAttribute('stroke', strokeColor);\n    fistChild.setAttribute('stroke-width', String(stroke));\n  }\n  fistChild.setAttribute('transform', transform);\n  const s = new XMLSerializer();\n\n  return {\n    type: 'icon',\n    iconSize: [size, size],\n    iconAnchor: [anchor, anchor],\n    html: s.serializeToString(svg),\n    svg,\n  };\n}\n","import { treeFind, treeFilter, treeEvery, treeSome } from '@nextgis/tree';\nimport { Item } from './Item';\nimport { ItemOptions } from './interfaces';\n\nexport class TreeHelper {\n  item: Item;\n\n  private _children: Item[] = [];\n  private _parent?: Item;\n\n  constructor(item: Item) {\n    this.item = item;\n  }\n\n  setParent(parent: Item): void {\n    this._parent = parent;\n  }\n\n  addChild(child: Item): void {\n    this._children.push(child);\n  }\n\n  getParent(): Item | undefined {\n    return this._parent;\n  }\n\n  getParents<I extends Item = Item>(filterFunc?: (item: I) => boolean): I[] {\n    const parent = this.getParent() as I;\n    if (parent) {\n      return treeFilter<I>(\n        parent,\n        filterFunc,\n        (x: I) => x.tree.getParent() as I,\n      );\n    }\n    return [];\n  }\n\n  getRoot<I extends Item = Item>(): I | undefined {\n    let parent = this.getParent() as I;\n    let toReturn = parent;\n    while (parent) {\n      parent = parent.tree.getParent() as I;\n      if (parent) {\n        toReturn = parent;\n      }\n    }\n    return toReturn;\n  }\n\n  find(filterFunc?: (item: Item) => boolean): Item<ItemOptions> | undefined {\n    return treeFind(this._children, filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  every<I extends Item = Item>(filterFunc?: (item: I) => boolean): boolean {\n    return treeEvery(this._children as I[], filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  some<I extends Item = Item>(filterFunc?: (item: I) => boolean): boolean {\n    return treeSome(this._children as I[], filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  // getDescendants shortcut\n  all(filterFunc?: (item: Item) => boolean): any[] {\n    return this.getDescendants(filterFunc);\n  }\n\n  getDescendants(filterFunc?: (item: Item) => boolean): any[] {\n    return treeFilter(this._children, filterFunc, (x) => {\n      return x.tree.getChildren();\n    });\n  }\n\n  getChildren<T extends Item = Item>(): T[] {\n    return [...this._children] as T[];\n  }\n}\n","import { BaseProperty } from './BaseProperty';\nimport { Item } from '../Item';\n\nimport { CheckOptions } from '../interfaces';\n\ntype VAL = boolean;\n\ntype PreparedValue = any;\n\nexport class CheckProperty<\n  V extends VAL = VAL,\n  O extends CheckOptions<VAL> = CheckOptions<VAL>,\n> extends BaseProperty<VAL, CheckOptions<VAL>> {\n  static options: CheckOptions = {\n    hierarchy: true,\n    bubble: false,\n    propagation: false,\n    label: 'Toggle',\n    // PropertyContainer: IndicatorContainer\n  };\n\n  constructor(name: string, item: Item, options: O) {\n    super(name, item, { ...CheckProperty.options, ...options });\n    this.set(this.get());\n  }\n\n  update(value?: V, options?: O): void {\n    if (value) {\n      const bubble = (options && options.bubble) || this.options.bubble;\n      if (bubble) {\n        this.unBlock(options);\n        const parent = this.getParent();\n        const property =\n          parent && parent.properties && parent.properties.property(this.name);\n        if (property) {\n          property.set(\n            value,\n            Object.assign({}, options, { bubble: true, propagation: false }),\n          );\n        }\n      }\n      if (!this.isBlocked()) {\n        this._turnOn(options);\n      }\n    } else {\n      this._turnOff(options);\n    }\n    const propagation =\n      (options && options.propagation) || this.options.propagation;\n    if (propagation) {\n      this._propagation(value, options);\n    }\n  }\n\n  getHierarchyValue(): boolean | undefined {\n    return (\n      this.get() &&\n      this.getParents().every((x) => {\n        const property = x.properties && x.properties.get(this.name);\n        return property && property.get();\n      })\n    );\n  }\n\n  _prepareValue(value?: PreparedValue): V | undefined {\n    return value;\n  }\n\n  _turnOff(options?: O): void {\n    if (this.options.turnOff) {\n      this.options.turnOff.call(this, options);\n    }\n    this._callOnSet(false, options);\n    if (this.options.hierarchy && this.isGroup()) {\n      this.blockChild(options);\n    }\n  }\n\n  _turnOn(options?: O): void {\n    if (this.options.turnOn) {\n      this.options.turnOn.call(this, options);\n    }\n    this._callOnSet(true, options);\n    if (this.options.hierarchy && this.isGroup()) {\n      this.unblockChild(options);\n    }\n  }\n\n  block(options?: O): void {\n    this._blocked = true;\n    this._block(options);\n  }\n\n  _block(options?: O): void {\n    this._turnOff(options);\n  }\n\n  unBlock(options?: O): void {\n    this._blocked = false;\n    if (this.getValue()) {\n      this._unBlock(options);\n    }\n  }\n\n  _unBlock(options?: O): void {\n    this._turnOn(options);\n  }\n\n  blockChild(options?: O): void {\n    this.item.tree\n      .getDescendants()\n      .forEach((x) => this._blockChild(x, options));\n  }\n\n  unblockChild(options?: O): void {\n    this.item.tree.getChildren().forEach((x) => this._unBlockChild(x, options));\n  }\n\n  _blockChild(item: Item, options?: O): void {\n    const prop =\n      item.properties &&\n      (item.properties.property(this.name) as CheckProperty<V, O>);\n    if (prop && prop.block) {\n      prop.block(options);\n    }\n  }\n\n  _unBlockChild(item: Item, options?: O): void {\n    const prop =\n      item.properties &&\n      (item.properties.property(this.name) as CheckProperty<V, O>);\n    if (prop && prop.unBlock) {\n      prop.unBlock(options);\n    }\n  }\n\n  _propagation(value?: V, options?: O): void {\n    if (this.isGroup()) {\n      const children = this.item.tree.getChildren();\n      for (let fry = 0; fry < children.length; fry++) {\n        const child = children[fry];\n        const property =\n          child.properties &&\n          (child.properties.property(this.name) as CheckProperty<V, O>);\n        if (property) {\n          property.set(value, {\n            ...options,\n            ...{\n              propagation: true,\n              bubble: false,\n            },\n          });\n        }\n      }\n    }\n  }\n}\n","import { EventEmitter } from 'events';\nimport { Item } from '../Item';\nimport { ItemBasePropertyOptions, ItemOptions } from '../interfaces';\n\n// import StrictEventEmitter from 'strict-event-emitter-types/types/src';\n\n// export interface BasePropertyEvents<V, O> {\n//   'change': {value: V, options: O};\n//   'change-tree': {value: V, options: O, item: Item};\n// }\n\nexport abstract class BaseProperty<\n  V = any,\n  O extends ItemBasePropertyOptions<V> = ItemBasePropertyOptions<V>,\n> {\n  options: O;\n\n  // emitter: StrictEventEmitter<EventEmitter, BasePropertyEvents<V, O>> = new EventEmitter();\n  emitter = new EventEmitter();\n  name: string;\n\n  item: Item;\n  protected _blocked = false;\n  protected _container?: HTMLElement;\n  protected _value?: V;\n\n  private _removeEventsListener?: () => void;\n\n  constructor(name: string, item: Item, options: O) {\n    this.item = item;\n    this.options = Object.assign({}, options);\n    this.name = name;\n    this._value = this.getProperty();\n  }\n\n  getProperty(): V | undefined {\n    if (typeof this.options.getProperty === 'function') {\n      return this.options.getProperty.call(this, this.item);\n    }\n    return this.options.value;\n  }\n\n  getParents(): Item[] {\n    return this.item.tree.getParents() || [];\n  }\n\n  getParent(): Item<ItemOptions> | undefined {\n    return this.item.tree.getParent();\n  }\n\n  isGroup(): number {\n    const children = this.item.tree.getDescendants();\n    return children.length;\n  }\n\n  isBlocked(): boolean {\n    if (this._blocked === undefined) {\n      const parents = this.item.tree.getParents();\n      if (parents) {\n        const isBlocked = parents.find((x: Item) => {\n          const parentProp = x.properties && x.properties.property(this.name);\n          if (parentProp) {\n            return !parentProp.get();\n          }\n          return false;\n        });\n        this._blocked = !!isBlocked;\n      } else {\n        this._blocked = false;\n      }\n    }\n    return this._blocked;\n  }\n\n  set(value?: V, options?: O): void {\n    this._value = this._prepareValue(value);\n\n    this.update(this._value, options);\n    this._fireChangeEvent(this._value, options);\n  }\n\n  // shortcut for getValue\n  get(): V | undefined {\n    return this.getValue();\n  }\n\n  update(value?: V, options?: O): void {\n    this._callOnSet(value, options);\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  destroy(): void {\n    if (this._container) {\n      const parentNode = this._container.parentNode;\n      if (parentNode) {\n        parentNode.removeChild(this._container);\n      }\n    }\n    if (this._removeEventsListener) {\n      this._removeEventsListener();\n    }\n  }\n\n  getValue(): V | undefined {\n    return this._value !== undefined ? this._value : this.getProperty();\n  }\n\n  protected _prepareValue(value?: V): V | undefined {\n    return value;\n  }\n\n  protected _callOnSet<W extends V = V>(value?: W, options?: O): void {\n    if (this.options.onSet) {\n      this.options.onSet.call(this, value, options, this.item);\n    }\n  }\n\n  protected _fireChangeEvent(value?: V, options?: O): void {\n    if (this.emitter) {\n      value = value !== undefined ? value : this.getValue();\n      this.emitter.emit('change', { value, options });\n      const parents = this.item.tree.getParents();\n      parents.forEach((x) => {\n        const prop = x.properties && x.properties.property(this.name);\n        if (prop) {\n          prop.emitter.emit('change-tree', {\n            value,\n            options,\n            item: this.item,\n          });\n        }\n      });\n    }\n  }\n}\n","import { BaseProperty } from './BaseProperty';\nimport { CheckProperty } from './CheckProperty';\nimport { Item } from '../Item';\n\nimport {\n  ItemBasePropertyOptions,\n  Type,\n  ItemPropertyConfig,\n  ItemPropertyTypes,\n} from '../interfaces';\n\nexport class ItemProperties {\n  static handlers: { [name: string]: Type<BaseProperty> } = {\n    CheckProperty,\n  };\n\n  options = {};\n\n  private _properties: { [propName: string]: BaseProperty } = {};\n  private _propertiesList: string[];\n\n  constructor(\n    public item: Item,\n    propertiesList?: ItemPropertyConfig<keyof ItemPropertyTypes>[],\n  ) {\n    this._propertiesList = []; // ordered list\n    if (propertiesList) {\n      propertiesList.forEach(this._setPropertyHandler.bind(this));\n    }\n  }\n\n  add(propOpt: ItemPropertyConfig<keyof ItemPropertyTypes>): void {\n    this._setPropertyHandler(propOpt);\n  }\n\n  _setPropertyHandler(\n    propOpt: ItemPropertyConfig<keyof ItemPropertyTypes>,\n  ): void {\n    const handlers = ItemProperties.handlers;\n    let handler = propOpt.handler;\n    if (!handler && propOpt.type) {\n      switch (propOpt.type) {\n        case 'boolean':\n          handler = handlers.CheckProperty;\n          break;\n        case 'string':\n          handler = handlers.BaseProperty;\n          break;\n        default:\n          handler = handlers.BaseProperty;\n      }\n    }\n    if (handler && propOpt.name) {\n      const options = { ...(propOpt || {}) };\n      this._properties[propOpt.name] = new handler(\n        propOpt.name,\n        this.item,\n        options,\n      );\n      this._propertiesList.push(propOpt.name);\n    }\n  }\n\n  update(): void {\n    this.list().forEach((x) => {\n      x.update();\n    });\n  }\n\n  get(name: string): any {\n    const prop = this.property(name);\n    if (prop) {\n      return prop.get();\n    }\n  }\n\n  set<K extends keyof ItemPropertyTypes>(\n    name: string,\n    value: ItemPropertyTypes[K],\n    options?: ItemBasePropertyOptions<ItemPropertyTypes[K]>,\n  ): void {\n    const prop = this.property(name);\n    if (prop) {\n      return prop.set(value, options);\n    }\n  }\n\n  property(name: string): BaseProperty<any, ItemBasePropertyOptions<any>> {\n    return this._properties[name];\n  }\n\n  list(): BaseProperty<any, ItemBasePropertyOptions<any>>[] {\n    return this._propertiesList.map((x) => this._properties[x]);\n  }\n\n  destroy(): void {\n    for (const p in this._properties) {\n      const prop = this.property(p);\n      if (prop && prop.destroy) {\n        prop.destroy();\n      }\n    }\n    this._properties = {};\n    this._propertiesList = [];\n  }\n}\n","import { TreeHelper } from './TreeHelper';\nimport { ItemProperties } from './properties/ItemProperties';\nimport { ItemOptions } from './interfaces';\n\nlet ID = 0;\nexport class Item<O extends ItemOptions = ItemOptions> {\n  options: O = {} as O;\n\n  properties!: ItemProperties;\n  tree: TreeHelper;\n  id = ID;\n\n  constructor(options?: O) {\n    ID += 1;\n    this.options = { ...options } as O;\n    this.tree = new TreeHelper(this);\n  }\n\n  initProperties(): void {\n    this.properties = new ItemProperties(this, this.options.properties);\n  }\n}\n","import { VectorAdapterLayerType, MapClickEvent } from '@nextgis/webmap';\nimport {\n  GeoJsonObject,\n  GeoJsonGeometryTypes,\n  FeatureCollection,\n  Feature,\n  GeometryCollection,\n} from 'geojson';\nimport { LeafletMouseEvent } from 'leaflet';\n\nexport const typeAlias: {\n  [key in GeoJsonGeometryTypes]: VectorAdapterLayerType;\n} = {\n  Point: 'point',\n  LineString: 'line',\n  MultiPoint: 'point',\n  Polygon: 'polygon',\n  MultiLineString: 'line',\n  MultiPolygon: 'polygon',\n  GeometryCollection: 'polygon',\n};\n\nexport const PAINT = {\n  stroke: false,\n  opacity: 1,\n};\n\nexport const backAliases: {\n  [key in VectorAdapterLayerType]?: GeoJsonGeometryTypes[];\n} = {};\n\nfor (const a in typeAlias) {\n  const layerType = typeAlias[a as GeoJsonGeometryTypes];\n  const backAlias = backAliases[layerType] || [];\n  backAlias.push(a as GeoJsonGeometryTypes);\n  backAliases[layerType] = backAlias;\n}\n\nexport function findMostFrequentGeomType(\n  arr: GeoJsonGeometryTypes[],\n): GeoJsonGeometryTypes {\n  const counts: { [x: string]: number } = {};\n  for (let fry = 0; fry < arr.length; fry++) {\n    counts[arr[fry]] = 1 + (counts[arr[fry]] || 0);\n  }\n  let maxName = '';\n  for (const c in counts) {\n    const maxCount = maxName ? counts[maxName] : 0;\n    if (counts[c] > maxCount) {\n      maxName = c;\n    }\n  }\n  return maxName as GeoJsonGeometryTypes;\n}\n\nexport function detectType(geojson: GeoJsonObject): GeoJsonGeometryTypes {\n  let geometry: GeoJsonGeometryTypes;\n  if (geojson.type === 'FeatureCollection') {\n    const featuresTypes = (geojson as FeatureCollection).features.map(\n      (f) => f.geometry.type,\n    );\n    geometry = findMostFrequentGeomType(featuresTypes);\n  } else if (geojson.type === 'GeometryCollection') {\n    const geometryTypes = (geojson as GeometryCollection).geometries.map(\n      (g) => g.type,\n    );\n    geometry = findMostFrequentGeomType(geometryTypes);\n  } else if (geojson.type === 'Feature') {\n    geometry = (geojson as Feature).geometry.type;\n  } else {\n    geometry = geojson.type;\n  }\n  return geometry;\n}\n\nexport function geometryFilter(\n  geometry: GeoJsonGeometryTypes,\n  type: VectorAdapterLayerType,\n): boolean {\n  const geoJsonGeometry = backAliases[type] || [];\n  return geoJsonGeometry.indexOf(geometry) !== -1;\n}\n\nexport function filterGeometries(\n  data: GeoJsonObject,\n  type: VectorAdapterLayerType,\n): GeoJsonObject | false {\n  if (data.type === 'FeatureCollection') {\n    const _data = data as FeatureCollection;\n    _data.features = _data.features.filter((f) =>\n      geometryFilter(f.geometry.type, type),\n    );\n  } else if (data.type === 'Feature') {\n    const allow = geometryFilter((data as Feature).geometry.type, type);\n    if (!allow) {\n      return false;\n    }\n  } else if (data.type === 'GeometryCollection') {\n    const _data = data as GeometryCollection;\n    _data.geometries = _data.geometries.filter((g) =>\n      geometryFilter(g.type, type),\n    );\n  }\n  return data;\n}\n\nexport function convertMapClickEvent(evt: LeafletMouseEvent): MapClickEvent {\n  const coord = evt.containerPoint;\n  const latLng = evt.latlng;\n  const { lat, lng } = latLng;\n  return {\n    latLng,\n    lngLat: [lng, lat],\n    pixel: { left: coord.x, top: coord.y },\n    source: evt,\n  };\n}\n","import { Control, DomEvent } from 'leaflet';\nimport type { MapControl, CreateControlOptions, MapAdapter } from '@nextgis/webmap';\n\nexport function createControl(\n  control: MapControl,\n  options: CreateControlOptions = {},\n  map: MapAdapter,\n): Control {\n  const C = Control.extend({\n    onAdd() {\n      const element = document.createElement('div');\n      const content = control.onAdd(map);\n      element.classList.add('leaflet-control');\n      if (options.bar) {\n        element.classList.add('leaflet-bar');\n      }\n      if (!options.margin && !options.bar) {\n        element.style.marginBottom = '0px';\n        element.style.marginTop = '0px';\n        element.style.marginLeft = '0px';\n        element.style.marginRight = '0px';\n      }\n      if (content) {\n        element.appendChild(content);\n      }\n\n      DomEvent.disableClickPropagation(element);\n\n      return element;\n    },\n    onRemove() {\n      control.onRemove();\n    },\n  });\n  return new C();\n}\n","import { Control, ControlOptions } from 'leaflet';\nimport { AttributionControlOptions } from '@nextgis/webmap';\n\nexport class AttributionControl extends Control.Attribution {\n  // options: AttributionControlOptions\n  constructor(options: AttributionControlOptions & ControlOptions) {\n    super(options);\n    const customAttribution = options && options.customAttribution;\n    if (customAttribution) {\n      let attributions: string[] = [];\n      if (Array.isArray(customAttribution)) {\n        attributions = customAttribution;\n      } else if (customAttribution) {\n        attributions = [customAttribution];\n      }\n      attributions.forEach((x) => this.addAttribution(x));\n    }\n  }\n}\n","import { MainLayerAdapter, AdapterOptions } from '@nextgis/webmap';\nimport { Map } from 'leaflet';\n\nexport class BaseAdapter<O extends AdapterOptions = AdapterOptions, L = any>\n  implements MainLayerAdapter<Map, L, O>\n{\n  layer?: L;\n  protected pane = 'order-0';\n\n  constructor(public map: L.Map, public options: O) {\n    if (options.order !== undefined) {\n      const pane = 'order-' + options.order;\n      let exist = map.getPane(pane);\n      if (!exist) {\n        exist = map.createPane(pane);\n      }\n      exist.style.zIndex = String(Math.round(options.order * 100));\n      this.pane = pane;\n    }\n  }\n\n  addLayer(_options: O): L | Promise<L> | undefined {\n    return undefined;\n  }\n}\n","import {\n  CircleMarker,\n  FeatureGroup,\n  DomEvent,\n  GeoJSON,\n  DivIcon,\n  Marker,\n  Layer,\n} from 'leaflet';\nimport { debounce, defined } from '@nextgis/utils';\nimport { isPaintCallback, isPaint } from '@nextgis/paint';\nimport { BaseAdapter } from './BaseAdapter';\nimport {\n  PAINT,\n  typeAlias,\n  detectType,\n  filterGeometries,\n  convertMapClickEvent,\n} from '../utils/utils';\n\nimport type { GeoJsonObject, Feature, Point } from 'geojson';\nimport type {\n  CircleMarkerOptions,\n  LeafletMouseEvent,\n  LatLngExpression,\n  GeoJSONOptions,\n  PathOptions,\n  LatLng,\n  Path,\n  Map,\n} from 'leaflet';\nimport type {\n  Paint,\n  IconPaint,\n  PathPaint,\n  VectorAdapterLayerPaint,\n} from '@nextgis/paint';\nimport type {\n  VectorAdapterLayerType,\n  GeoJsonAdapterOptions,\n  PopupOnCloseFunction,\n  VectorLayerAdapter,\n  LngLatBoundsArray,\n  OnLayerSelectType,\n  LayerDefinition,\n  DataLayerFilter,\n  PopupOptions,\n} from '@nextgis/webmap';\n\ntype LayerDef = LayerDefinition<Feature, Layer>;\n\nexport class GeoJsonAdapter\n  extends BaseAdapter<GeoJsonAdapterOptions>\n  implements VectorLayerAdapter<Map>\n{\n  layer: FeatureGroup;\n  selected = false;\n\n  private paint?: Paint;\n  private selectedPaint?: Paint;\n  private type?: VectorAdapterLayerType;\n\n  private _layers: LayerDef[] = [];\n  private _selectedLayers: LayerDef[] = [];\n  private _filteredLayers: LayerDef[] = [];\n  private _filterFun?: DataLayerFilter<Feature>;\n  private _openedPopup: [Layer, PopupOnCloseFunction[], LayerDef][] = [];\n\n  private $updateTooltip = debounce(() => {\n    this.updateTooltip();\n  }, 300);\n\n  constructor(map: L.Map, options: GeoJsonAdapterOptions) {\n    super(map, options);\n    this.layer = new FeatureGroup([], { pane: this.pane });\n  }\n\n  addLayer(options: GeoJsonAdapterOptions): FeatureGroup<any> | undefined {\n    this.options = options;\n    this.paint = options.paint;\n\n    this.selectedPaint = options.selectedPaint;\n    options.paint = this.paint;\n\n    if (options.data) {\n      this.addData(options.data);\n    }\n\n    this._addMapListener();\n\n    return this.layer;\n  }\n\n  beforeRemove(): void {\n    this._removeMapListener();\n  }\n\n  select(findFeatureFun?: DataLayerFilter): void {\n    if (findFeatureFun) {\n      const def = this._layers.filter(findFeatureFun);\n      def.forEach((x) => {\n        this._selectLayer(x, 'api');\n      });\n    } else if (!this.selected) {\n      this.selected = true;\n      if (this.selectedPaint) {\n        this._setPaintEachLayer(this.selectedPaint);\n      }\n    }\n  }\n\n  unselect(findFeatureFun?: DataLayerFilter): void {\n    if (findFeatureFun) {\n      const feature = this._layers.filter(findFeatureFun);\n      feature.forEach((x) => {\n        this._unSelectLayer(x);\n      });\n    } else if (this.selected) {\n      for (const p of this._openedPopup) {\n        this._removePopup(p[0]);\n      }\n      if (this.paint) {\n        this._setPaintEachLayer(this.paint);\n      }\n      this._selectedLayers.length = 0;\n      this.selected = false;\n    }\n  }\n\n  getSelected(): LayerDefinition<Feature, LayerDef>[] {\n    return this._selectedLayers.map((x) => {\n      return { feature: x.feature, layer: x };\n    });\n  }\n\n  getFiltered(): LayerDef[] {\n    return this._filteredLayers;\n  }\n\n  filter(fun?: DataLayerFilter): LayerDef[] {\n    // Some optimization\n    this._filterFun = fun;\n    // @ts-ignore\n    const _map = this.layer._map;\n    if (_map) {\n      this.layer.remove();\n    }\n    const filteredLayers: LayerDef[] = [];\n    this._layers.forEach(({ feature, layer }) => {\n      if (layer) {\n        const ok = fun ? fun({ feature, layer }) : true;\n        if (ok) {\n          this.layer.addLayer(layer);\n          filteredLayers.push({ feature, layer });\n        } else {\n          this.layer.removeLayer(layer);\n        }\n      }\n    });\n    this._filteredLayers = filteredLayers;\n    if (_map) {\n      this.layer.addTo(_map);\n    }\n    return this._filteredLayers;\n  }\n\n  cleanFilter(): void {\n    this.filter();\n  }\n\n  getLayers(): LayerDef[] {\n    return this._layers.map(({ layer, feature }) => {\n      const visible = layer && !!(layer as any)._map;\n      return {\n        feature,\n        layer,\n        visible,\n        target: this,\n      };\n    });\n  }\n\n  clearLayer(cb?: (feature: Feature) => boolean): void {\n    this.unselect();\n    if (cb) {\n      for (let fry = this._layers.length; fry--; ) {\n        const def = this._layers[fry];\n        if (def) {\n          const { feature, layer } = def;\n          if (feature && layer) {\n            const exist = cb(feature);\n            if (exist) {\n              this.layer.removeLayer(layer);\n              this._layers.splice(fry, 1);\n            }\n          }\n        }\n      }\n    } else {\n      this.layer.clearLayers();\n      this._layers = [];\n    }\n  }\n\n  setData(data: GeoJsonObject): void {\n    this.clearLayer();\n    this.addData(data);\n  }\n\n  addData(data: GeoJsonObject | false): void {\n    const options = this.options;\n    let geoJsonOptions: GeoJSONOptions | undefined;\n    if (options) {\n      if (data) {\n        let type: VectorAdapterLayerType;\n\n        if (!options.type) {\n          const detectedType = detectType(data);\n          type = typeAlias[detectedType];\n        } else {\n          type = options.type;\n        }\n        if (this.type && this.type !== type) {\n          console.warn('no other data type than layer can be added');\n          return;\n        }\n        this.type = type;\n\n        data = filterGeometries(data, type);\n        if (data) {\n          geoJsonOptions = this._getGeoJsonOptions(options, type);\n        }\n      }\n      new GeoJSON(data || undefined, geoJsonOptions);\n    }\n  }\n\n  openPopup(findFeatureFun: DataLayerFilter, options?: PopupOptions): void {\n    if (findFeatureFun) {\n      const def = this._layers.filter(findFeatureFun);\n      def.forEach((x) => {\n        this._openPopup(x, options, 'api');\n      });\n    }\n  }\n\n  closePopup(findFeatureFun?: DataLayerFilter): void {\n    const popupToClose = findFeatureFun\n      ? this._openedPopup.filter((x) => findFeatureFun(x[2]))\n      : this._openedPopup;\n\n    popupToClose.forEach((x) => {\n      this._removePopup(x[0]);\n    });\n  }\n\n  updateTooltip(layerDef?: LayerDefinition): void {\n    if (layerDef) {\n      this._updateTooltip(layerDef);\n    } else {\n      this.getLayers().forEach((x) =>\n        this._updateTooltip({ feature: x.feature, layer: x.layer }),\n      );\n    }\n  }\n\n  getExtent(): LngLatBoundsArray | undefined {\n    const bounds = this.layer.getBounds();\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    if (ne && sw) {\n      return [sw.lng, sw.lat, ne.lng, ne.lat];\n    }\n  }\n\n  setOpacity(value: number): void {\n    this.options.opacity = value;\n    this.setPaint(this.paint);\n    this.setSelectedPaint(this.selectedPaint);\n  }\n\n  setPaint(paint?: Paint | null): void {\n    if (paint) {\n      this.paint = paint;\n      for (const l of this._layers) {\n        this._setPaint(l, paint);\n      }\n    }\n  }\n  setSelectedPaint(paint?: Paint | null): void {\n    if (paint) {\n      this.selectedPaint = paint;\n      for (const l of this._selectedLayers) {\n        this._setPaint(l, paint);\n      }\n    }\n  }\n  updatePaint(paint: Partial<Paint>): void {\n    this.paint = { ...this.paint, ...paint } as Paint;\n    for (const l of this._layers) {\n      this._setPaint(l, this.paint);\n    }\n  }\n  updateSelectedPaint(paint: Partial<Paint>): void {\n    this.selectedPaint = { ...this.selectedPaint, ...paint } as Paint;\n    for (const l of this._selectedLayers) {\n      this._setPaint(l, this.selectedPaint);\n    }\n  }\n\n  private $unselect = () => {\n    this.unselect();\n  };\n\n  private _updateTooltip(layerDef: LayerDef) {\n    const { feature, layer } = layerDef;\n    if (feature && layer && feature.properties && this.options.labelField) {\n      layer.unbindTooltip();\n      const message = feature.properties[this.options.labelField];\n      if (message !== undefined) {\n        const permanent = !this.options.labelOnHover;\n\n        layer.bindTooltip(String(message), { permanent, sticky: false });\n      }\n    }\n  }\n\n  private async _openPopup(\n    def: LayerDef,\n    options: PopupOptions = {},\n    type: OnLayerSelectType,\n    latlng?: LatLngExpression,\n  ) {\n    const { feature, layer } = def;\n    const {\n      minWidth,\n      autoPan,\n      maxWidth,\n      closeButton: closeButton_,\n    } = { minWidth: 300, ...options };\n    const closeButton = closeButton_ ?? !this.options.selectOnHover;\n    let popup: Layer;\n    const _closeHandlers: PopupOnCloseFunction[] = [];\n    const onClose = (handler: PopupOnCloseFunction) => {\n      _closeHandlers.push(handler);\n    };\n    const close = () => {\n      if (popup) {\n        this._removePopup(popup);\n      }\n    };\n    const content = options.createPopupContent\n      ? await options.createPopupContent({\n          layer,\n          feature,\n          target: this,\n          type,\n          close,\n          onClose,\n        })\n      : options.popupContent;\n    if (content && layer) {\n      popup = layer.bindPopup(content, {\n        minWidth,\n        autoPan,\n        maxWidth,\n        closeButton,\n        closeOnClick: false,\n        autoClose: false,\n      });\n      const unselectOnClose =\n        this.options.popupOptions?.unselectOnClose ?? true;\n      if (unselectOnClose) {\n        const p = layer.getPopup();\n        p &&\n          p.once(\n            'remove',\n            () => {\n              close();\n            },\n            this,\n          );\n      }\n      this._openedPopup.push([popup, _closeHandlers, def]);\n      setTimeout(() => {\n        popup.openPopup(latlng);\n      }, 0);\n    }\n  }\n\n  private _removePopup(popup: Layer) {\n    const map = this.map;\n    if (map) {\n      popup.closePopup().unbindPopup();\n      const index = this._openedPopup.findIndex((x) => x[0] === popup);\n      if (index !== -1) {\n        const unselectOnClose =\n          this.options.popupOptions?.unselectOnClose ?? true;\n        const [, closeHandlers, def] = this._openedPopup[index];\n        for (const h of closeHandlers) {\n          h(def);\n        }\n        closeHandlers.length = 0;\n        if (unselectOnClose) {\n          this._unSelectLayer(def);\n        }\n        this._openedPopup.splice(index, 1);\n      }\n    }\n  }\n\n  private _setPaintEachLayer(paint: Paint) {\n    this._layers.forEach((l) => {\n      this._setPaint(l, paint);\n    });\n  }\n\n  private _setPaint(def: LayerDef, paint: Paint) {\n    let style: VectorAdapterLayerPaint | undefined = undefined;\n    const { layer, feature } = def;\n    if (layer && feature) {\n      if (isPaintCallback(paint)) {\n        style = paint(feature);\n      } else if (isPaint(paint)) {\n        style = paint;\n      }\n      if (style) {\n        if (this.type === 'point' && style.type === 'icon') {\n          const marker = layer as Marker;\n          const divIcon = this._createDivIcon(style);\n          marker.setIcon(divIcon);\n        } else if ('setStyle' in layer) {\n          (layer as Path).setStyle(this._preparePaint(style));\n        }\n      }\n    }\n  }\n\n  private _preparePaint(paint: VectorAdapterLayerPaint): PathOptions {\n    if (paint.type !== 'get-paint') {\n      // const path: CircleMarkerOptions | PathOptions = paint as CircleMarkerOptions | PathOptions;\n      // if (path.opacity) {\n      //   path.fillOpacity = path.opacity;\n      // }\n\n      const paintAliases: [keyof PathOptions, keyof PathPaint][] = [\n        // ['color', 'color'],\n        ['color', 'strokeColor'],\n        ['opacity', 'strokeOpacity'],\n        ['stroke', 'stroke'],\n        ['fillColor', 'fillColor'],\n        ['fillOpacity', 'fillOpacity'],\n        ['fill', 'fill'],\n        ['weight', 'weight'],\n      ];\n      const aliases: [keyof PathOptions, keyof PathPaint][] =\n        this.type === 'line'\n          ? [\n              ['color', 'strokeColor'],\n              ['opacity', 'strokeOpacity'],\n              ['weight', 'weight'],\n            ]\n          : paintAliases;\n\n      const readyPaint: PathOptions & CircleMarkerOptions = {};\n\n      if ('radius' in paint && typeof paint.radius === 'number') {\n        readyPaint.radius = paint.radius;\n      }\n      for (const [to, from] of aliases) {\n        let paintProp = (paint as PathPaint)[from];\n        if (\n          defined(this.options.opacity) &&\n          from.toLowerCase().indexOf('opacity') !== -1\n        ) {\n          paintProp = Number(paintProp) * this.options.opacity;\n        }\n\n        if (paintProp !== undefined) {\n          Object.defineProperty(readyPaint, to, {\n            enumerable: true,\n            value: paintProp,\n          });\n        }\n      }\n\n      return readyPaint;\n    }\n    return PAINT;\n  }\n\n  private _getGeoJsonOptions(\n    options: GeoJsonAdapterOptions,\n    type: VectorAdapterLayerType,\n  ): GeoJSONOptions {\n    const paint = options.paint;\n    let lopt: GeoJSONOptions = {};\n\n    if (typeof paint === 'function') {\n      if (type === 'point') {\n        // TODO: fix types (@geoman-io/leaflet-geoman-free)\n        (lopt as any).pointToLayer = (\n          feature: Feature<Point, any>,\n          latLng: LatLng,\n        ) => {\n          const iconOpt = paint(feature);\n          const pointToLayer = this._createPaintToLayer(iconOpt as IconPaint);\n          return pointToLayer(feature, latLng);\n        };\n      } else {\n        lopt = {\n          style: (feature) => {\n            if (feature) {\n              return this._preparePaint({ ...PAINT, ...paint(feature) });\n            } else {\n              return this._preparePaint({ ...PAINT, type: 'path' });\n            }\n          },\n        };\n      }\n    } else {\n      lopt = this._createPaintOptions(paint as VectorAdapterLayerPaint, type);\n    }\n\n    lopt.onEachFeature = (feature: Feature, layer) => {\n      // @ts-ignore\n      layer.options.pane = this.pane;\n      this._layers.push({ feature, layer });\n      let ok = true;\n      if (this._filterFun) {\n        ok = this._filterFun({ feature, layer });\n      }\n      if (ok) {\n        const { popup, popupOptions, selectable, interactive, selectOnHover } =\n          this.options;\n        // @ts-ignore\n        layer.options.interactive = defined(interactive) ? interactive : true;\n        this.layer.addLayer(layer);\n        if (selectable) {\n          if (selectOnHover) {\n            layer.on('mouseover', () => {\n              this._selectLayer({ feature, layer }, 'hover');\n            });\n            layer.on('mouseout', () => {\n              this._unSelectLayer({ feature, layer });\n            });\n          } else {\n            layer.on(\n              'click',\n              (e) => this._selectOnLayerClick(e as LeafletMouseEvent),\n              this,\n            );\n          }\n        }\n        this._handleMouseEvents(layer);\n        if (popup) {\n          this._openPopup({ layer, feature }, popupOptions, 'api');\n        }\n\n        this._updateTooltip({ layer, feature });\n      }\n    };\n\n    return lopt;\n  }\n\n  private _handleMouseEvents(layer: Layer) {\n    const isSelected = (l: LayerDef) => this._selectedLayers.indexOf(l) !== -1;\n    const createMouseOptions = (e: LeafletMouseEvent) => {\n      const layer_ = e.target as LayerDef;\n      return {\n        layer: this,\n        feature: layer_.feature,\n        event: convertMapClickEvent(e),\n        source: e,\n      };\n    };\n    const { onClick, onLayerClick, onMouseOut, onMouseOver } = this.options;\n    // TODO: remove backward compatibility for onLayerClick\n    const onClick_ = onClick || onLayerClick;\n    if (onClick_) {\n      layer.on(\n        'click',\n        (e) => {\n          onClick_({\n            selected: isSelected(e.target),\n            ...createMouseOptions(e as LeafletMouseEvent),\n          });\n        },\n        this,\n      );\n    }\n    if (onMouseOut) {\n      layer.on(\n        'mouseout',\n        (e) => {\n          onMouseOut(createMouseOptions(e as LeafletMouseEvent));\n        },\n        this,\n      );\n    }\n    if (onMouseOver) {\n      layer.on(\n        'mouseover',\n        (e) => {\n          onMouseOver(createMouseOptions(e as LeafletMouseEvent));\n        },\n        this,\n      );\n    }\n  }\n\n  private _selectOnLayerClick(e: LeafletMouseEvent) {\n    DomEvent.stopPropagation(e);\n    const layer = e.target as Layer;\n    const def: LayerDef = { layer, feature: (layer as any).feature };\n    const isSelected = this._selectedLayers.find((x) => x.layer === layer);\n    if (isSelected) {\n      if (this.options && this.options.unselectOnSecondClick) {\n        this._unSelectLayer(isSelected);\n      }\n    } else {\n      this._selectLayer(def, 'click', e.latlng);\n    }\n  }\n\n  private _selectLayer(\n    def: LayerDef,\n    type: OnLayerSelectType,\n    latlng?: LatLngExpression,\n  ) {\n    this.map._addUnselectCb(() => {\n      this._unSelectLayer(def);\n    });\n    if (this.options && !this.options.multiselect) {\n      this._selectedLayers.forEach((x) => this._unSelectLayer(x));\n    }\n    this._selectedLayers.push(def);\n    this.selected = true;\n    const { selectedPaint, popupOnSelect, popupOptions } = this.options;\n\n    if (selectedPaint && def.layer) {\n      this._setPaint(def, selectedPaint);\n    }\n    if (popupOnSelect) {\n      this._openPopup(def, popupOptions, type, latlng);\n    }\n    if (this.options.onSelect) {\n      this.options.onSelect({\n        type,\n        layer: this,\n        features: def.feature ? [def.feature] : [],\n      });\n    }\n  }\n\n  private _unSelectLayer(def: LayerDef) {\n    const index = this._selectedLayers.indexOf(def);\n    if (index !== -1) {\n      this._selectedLayers.splice(index, 1);\n      if (this.options) {\n        if (this.options.paint) {\n          this._setPaint(def, this.options.paint);\n        }\n\n        if (this.options.popupOnSelect && def.layer) {\n          this._removePopup(def.layer);\n        }\n      }\n    }\n    this.selected = this._selectedLayers.length > 0;\n  }\n\n  private _createDivIcon(icon: IconPaint) {\n    const { ...toLIconOpt } = icon;\n    return new DivIcon({ className: '', ...toLIconOpt });\n  }\n\n  private _createPaintToLayer(icon: IconPaint) {\n    if (icon && icon.type) {\n      if (icon.type === 'icon') {\n        const iconClassName = icon.className;\n        const html = icon.html;\n        if (iconClassName || html) {\n          return (geoJsonPoint: any, latlng: LatLngExpression) => {\n            const divIcon = this._createDivIcon(icon);\n            return new Marker(latlng, { icon: divIcon });\n          };\n        }\n      } else if (icon.type === 'pin') {\n        return (geoJsonPoint: any, latlng: LatLngExpression) => {\n          // const divIcon = this.createDivIcon(icon);\n          return new Marker(latlng);\n        };\n      }\n    }\n    return (geoJsonPoint: any, latlng: LatLngExpression) => {\n      const p: any = PAINT;\n      return new CircleMarker(latlng, this._preparePaint({ ...p, ...icon }));\n    };\n  }\n\n  private _createPaintOptions(\n    paintOptions: VectorAdapterLayerPaint,\n    type: VectorAdapterLayerType,\n  ): GeoJSONOptions {\n    const geoJsonOptions: GeoJSONOptions = {};\n    const paint = (paintOptions && this._preparePaint(paintOptions)) || {};\n    if (paintOptions) {\n      geoJsonOptions.style = () => {\n        return paint;\n      };\n    }\n    if (type === 'point') {\n      (geoJsonOptions as any).pointToLayer = this._createPaintToLayer(\n        paintOptions as IconPaint,\n      );\n    } else if (type === 'line') {\n      paint.stroke = true;\n    }\n    return geoJsonOptions;\n  }\n\n  private _addMapListener() {\n    const map = this.map;\n    if (map) {\n      const { labelField, labelOnHover, unselectOnClick } = this.options;\n      const uoc = unselectOnClick ?? true;\n      if (uoc) {\n        map.on('click', this.$unselect);\n      }\n      if (labelField && !labelOnHover) {\n        map.on('zoomend', this.$updateTooltip);\n        map.on('moveend', this.$updateTooltip);\n      }\n    }\n  }\n\n  private _removeMapListener() {\n    this.map.off('zoomend', this.$updateTooltip);\n    this.map.off('moveend', this.$updateTooltip);\n    this.map.off('click', this.$unselect);\n  }\n}\n","export function callAjax(\n  src: string,\n  callback: (resp: any) => any,\n  headers: Record<string, any>,\n): () => void {\n  const xhr = new XMLHttpRequest();\n  xhr.open('GET', src);\n  xhr.responseType = 'arraybuffer';\n  for (const h in headers) {\n    xhr.setRequestHeader(h, headers[h]);\n  }\n  xhr.onload = function () {\n    const arrayBufferView = new Uint8Array(this.response);\n    const blob = new Blob([arrayBufferView], { type: 'image/png' });\n    // @ts-ignore for typedoc\n    const urlCreator = window.URL || window.webkitURL;\n    const imageUrl = urlCreator.createObjectURL(blob);\n    callback(imageUrl);\n  };\n  xhr.send();\n  return () => {\n    xhr.abort();\n  };\n}\n","import {\n  ImageOverlay as LImageOverlay,\n  LatLngBoundsExpression,\n  ImageOverlayOptions,\n} from 'leaflet';\nimport { callAjax } from '../layersUtility';\n\ntype IOptions = ImageOverlayOptions & { headers?: any };\n\nexport class ImageOverlay extends LImageOverlay {\n  private _abort: (() => void)[] = [];\n\n  constructor(\n    imageUrl: string,\n    bounds: LatLngBoundsExpression,\n    options?: IOptions,\n  ) {\n    super(imageUrl, bounds, options);\n  }\n\n  cancelLoad(): void {\n    if (this._abort) {\n      this._abort.forEach((x) => x());\n      this._abort = [];\n    }\n  }\n\n  _initImage(): void {\n    // @ts-ignore\n    super._initImage();\n    // @ts-ignore\n    const headers = this.options.headers;\n    if (headers) {\n      // @ts-ignore\n      const img: HTMLImageElement = this._image;\n      const src = img.src;\n      img.src = '';\n      this._abort.push(\n        callAjax(\n          src,\n          (response) => {\n            img.src = response;\n          },\n          headers,\n        ),\n      );\n    }\n  }\n}\n","/*!\n * leaflet.wms.js\n * A collection of Leaflet utilities for working with Web Mapping services.\n * (c) 2014-2016, Houston Engineering, Inc.\n * MIT License\n */\n\nimport { Layer, Util, CRS } from 'leaflet';\nimport { debounce } from '@nextgis/utils';\nimport { ImageOverlay } from './ImageOverlay';\n\ninterface OverlayOptions {\n  crs?: null;\n  uppercase?: boolean;\n  attribution?: string;\n  opacity?: number;\n  isBack?: boolean;\n  minZoom?: number;\n  maxZoom?: number;\n  zIndex?: number;\n  pane?: string;\n  headers?: any;\n  viewPortBuffer?: number;\n  setViewDelay?: number;\n}\n\n/*\n * Overlay:\n * \"Single Tile\" WMS image overlay that updates with map changes.\n * Portions of wms.Overlay are directly extracted from L.TileLayer.WMS.\n * See Leaflet license.\n */\nexport class ImageLayer extends Layer {\n  defaultWmsParams = {\n    service: 'WMS',\n    request: 'GetMap',\n    version: '1.1.1',\n    layers: '',\n    styles: '',\n    format: 'image/jpeg',\n    transparent: false,\n  };\n\n  options: OverlayOptions = {\n    crs: null,\n    uppercase: false,\n    attribution: '',\n    opacity: 1,\n    isBack: false,\n    minZoom: 0,\n    maxZoom: 18,\n    pane: 'tilePane',\n    headers: null,\n    viewPortBuffer: 0,\n    setViewDelay: 100,\n  };\n\n  private wmsParams: any;\n  private _url?: string;\n  private _currentUrl?: string;\n  private _currentOverlay?: ImageOverlay;\n\n  constructor(url: string, options: OverlayOptions) {\n    super(options);\n    this._url = url;\n\n    // Move WMS parameters to params object\n    const params: any = {};\n    const opts: any = {};\n    let opt: keyof OverlayOptions;\n    for (opt in options) {\n      if (opt in this.options) {\n        opts[opt] = options[opt];\n      } else {\n        params[opt] = options[opt];\n      }\n    }\n    Util.setOptions(this, opts);\n    this.wmsParams = Util.extend({}, this.defaultWmsParams, params);\n  }\n\n  setParams(params: Record<string, any>): void {\n    Util.extend(this.wmsParams, params);\n    this.update();\n  }\n\n  getAttribution(): string {\n    return this.options.attribution || '';\n  }\n\n  onAdd(): this {\n    this.update();\n    return this;\n  }\n\n  onRemove(map: L.Map): this {\n    if (this._currentOverlay) {\n      this._currentOverlay.cancelLoad();\n      map.removeLayer(this._currentOverlay);\n      delete this._currentOverlay;\n    }\n    if (this._currentUrl) {\n      delete this._currentUrl;\n    }\n    return this;\n  }\n\n  getEvents(): {\n    moveend: () => void;\n  } {\n    return {\n      moveend: debounce(this.update, this.options.setViewDelay),\n    };\n  }\n\n  update(): void {\n    if (!this._map) {\n      return;\n    }\n    // Determine image URL and whether it has changed since last update\n    this.updateWmsParams();\n    const url = this.getImageUrl();\n    if (this._currentUrl === url) {\n      return;\n    }\n    this._currentUrl = url;\n\n    // Keep current image overlay in place until new one loads\n    // (inspired by esri.leaflet)\n    const viewPortBuffer = this.options.viewPortBuffer || 0;\n    const bounds = this._map.getBounds().pad(viewPortBuffer);\n\n    const overlay = new ImageOverlay(url, bounds, {\n      opacity: 0,\n      pane: this.options.pane,\n      headers: this.options.headers,\n    });\n    overlay.addTo(this._map);\n    if (this._currentOverlay) {\n      this._currentOverlay.cancelLoad();\n    }\n    overlay.once(\n      'load',\n      () => {\n        if (!this._map) {\n          return;\n        }\n        // @ts-ignore\n        if (overlay._url !== this._currentUrl) {\n          this._map.removeLayer(overlay);\n          return;\n        } else if (this._currentOverlay) {\n          this._map.removeLayer(this._currentOverlay);\n        }\n        this._currentOverlay = overlay;\n        overlay.setOpacity(\n          this.options.opacity !== undefined ? this.options.opacity : 1,\n        );\n        if (this.options.isBack === true) {\n          overlay.bringToBack();\n        }\n        if (this.options.isBack === false) {\n          overlay.bringToFront();\n        }\n        if (this.options.zIndex !== undefined) {\n          overlay.setZIndex(this.options.zIndex);\n        }\n      },\n      this,\n    );\n    const { minZoom, maxZoom } = this.options;\n    if (\n      (minZoom && this._map.getZoom() < minZoom) ||\n      (maxZoom && this._map.getZoom() > maxZoom)\n    ) {\n      this._map.removeLayer(overlay);\n    }\n  }\n\n  setOpacity(opacity: number): void {\n    this.options.opacity = opacity;\n    if (this._currentOverlay) {\n      this._currentOverlay.setOpacity(opacity);\n    }\n  }\n\n  bringToBack(): void {\n    this.options.isBack = true;\n    if (this._currentOverlay) {\n      this._currentOverlay.bringToBack();\n    }\n  }\n\n  bringToFront(): void {\n    this.options.isBack = false;\n    if (this._currentOverlay) {\n      this._currentOverlay.bringToFront();\n    }\n  }\n\n  setZIndex(zIndex: number): void {\n    this.options.zIndex = zIndex;\n    if (this._currentOverlay) {\n      this._currentOverlay.setZIndex(zIndex);\n    }\n  }\n\n  // See L.TileLayer.WMS: onAdd() & getTileUrl()\n  updateWmsParams(map?: L.Map): void {\n    if (!map) {\n      map = this._map;\n    }\n    // Compute WMS options\n    const viewPortBuffer = this.options.viewPortBuffer || 0;\n    const bounds = map.getBounds().pad(viewPortBuffer);\n    const size = map.getSize();\n    if (this.options.viewPortBuffer !== 0) {\n      const factor = viewPortBuffer + 1;\n      size.x = Math.ceil(size.x * factor);\n      size.y = Math.ceil(size.y * factor);\n    }\n    const wmsVersion = parseFloat(this.wmsParams.version);\n    const crs = this.options.crs || map.options.crs;\n    const projectionKey = wmsVersion >= 1.3 ? 'crs' : 'srs';\n    if (crs) {\n      const nw = crs.project(bounds.getNorthWest());\n      const se = crs.project(bounds.getSouthEast());\n\n      // Assemble WMS parameter string\n      const params: any = {\n        width: size.x,\n        height: size.y,\n      };\n      params[projectionKey] = crs.code;\n      params.bbox = (\n        wmsVersion >= 1.3 && crs === CRS.EPSG4326\n          ? [se.y, nw.x, nw.y, se.x]\n          : [nw.x, se.y, se.x, nw.y]\n      ).join(',');\n\n      Util.extend(this.wmsParams, params);\n    }\n  }\n\n  getImageUrl(): string {\n    const uppercase = this.options.uppercase || false;\n    const pstr = Util.getParamString(this.wmsParams, this._url, uppercase);\n    return this._url + pstr;\n  }\n}\n","import { MainLayerAdapter, ImageAdapterOptions } from '@nextgis/webmap';\n// @ts-ignore\nimport { ImageLayer } from './ImageLayer';\n\nimport { Map } from 'leaflet';\nimport { BaseAdapter } from '../BaseAdapter';\n\nexport class ImageAdapter\n  extends BaseAdapter<ImageAdapterOptions>\n  implements MainLayerAdapter<Map>\n{\n  layer: any;\n\n  addLayer(options: ImageAdapterOptions): any {\n    const url = options && options.url;\n    if (url) {\n      options = { transparent: true, ...options };\n      const updateWmsParamsFromOpt = options.updateWmsParams;\n      this.layer = new ImageLayer(url, {\n        pane: this.pane,\n        headers: options.headers,\n        setViewDelay: options.setViewDelay,\n        /**\n         * TODO: safe remove, use only options.params\n         */\n        ...options,\n        ...options.params,\n      });\n      if (updateWmsParamsFromOpt) {\n        const updateWmsParams = this.layer.updateWmsParams;\n        this.layer.updateWmsParams = function (map: Map) {\n          updateWmsParams.call(this, map);\n          this.wmsParams = updateWmsParamsFromOpt(this.wmsParams);\n        };\n      }\n      return this.layer;\n    }\n  }\n}\n","import { DomUtil, GridLayer, Util } from 'leaflet';\nimport { debounce } from '../../../utils/src';\nimport { callAjax } from './layersUtility';\n\n// import type { TileLayerOptionsExtended } from './TileAdapter/TileLayer';\n\ntype Constructor = new (...args: any[]) => any;\n\nexport function makeRemote<\n  TBase extends Constructor,\n  // O extends TileLayerOptionsExtended = TileLayerOptionsExtended\n>(Base: TBase): TBase {\n  return class RemoteTileLayer extends Base {\n    constructor(...args: any[]) {\n      super(...args);\n      if (this.options.setViewDelay) {\n        // @ts-ignore\n        this._update = debounce((...a: any[]) => {\n          // @ts-ignore\n          GridLayer.prototype._update.call(this, ...a);\n        }, this.options.setViewDelay);\n      }\n    }\n\n    createTile(\n      coords: Record<string, unknown>,\n      done: (error: any, tile: HTMLImageElement) => void,\n    ): HTMLImageElement {\n      // @ts-ignore\n      const url = this.getTileUrl(coords);\n\n      const tile = document.createElement('img');\n      (tile as any).abort = callAjax(\n        url,\n        (response) => {\n          tile.src = response;\n          done(null, tile);\n        },\n        // @ts-ignore\n        this.options.headers,\n      );\n\n      if (this.options.crossOrigin || this.options.crossOrigin === '') {\n        tile.crossOrigin =\n          this.options.crossOrigin === true ? '' : this.options.crossOrigin;\n      }\n\n      tile.alt = '';\n      tile.setAttribute('role', 'presentation');\n\n      return tile;\n    }\n\n    _abortLoading() {\n      // @ts-ignore\n      const tiles = this._tiles;\n      // @ts-ignore\n      const tileZoom = this._tileZoom;\n      for (const i in tiles) {\n        if (tiles[i].coords.z !== tileZoom) {\n          const tile = tiles[i].el;\n\n          tile.onload = Util.falseFn;\n          tile.onerror = Util.falseFn;\n          if (!tile.complete) {\n            if (tile.abort) {\n              tile.abort();\n            }\n            tile.src = Util.emptyImageUrl;\n            DomUtil.remove(tile);\n            delete tiles[i];\n          }\n        }\n      }\n    }\n  };\n}\n","import { TileLayer as TL, TileLayerOptions } from 'leaflet';\n\nimport { makeRemote } from '../RemoteTileLayer';\n\nexport type TileLayerOptionsExtended = TileLayerOptions & {\n  headers: Record<string, any>;\n  setViewDelay?: number;\n};\n\nclass TileLayerBase extends TL {\n  constructor(urlTemplate: string, options?: TileLayerOptionsExtended) {\n    super(urlTemplate, options);\n    Object.assign(this.options, options);\n  }\n}\n\nexport const TileLayer = makeRemote(TileLayerBase);\n","import { MainLayerAdapter, TileAdapterOptions } from '@nextgis/webmap';\nimport { TileLayer, TileLayerOptions } from 'leaflet';\nimport { TileLayer as TL } from './TileLayer';\nimport { BaseAdapter } from '../BaseAdapter';\n\nexport class TileAdapter\n  extends BaseAdapter<TileAdapterOptions, TileLayer>\n  implements MainLayerAdapter\n{\n  addLayer(options: TileAdapterOptions): TileLayer | undefined {\n    this.options = Object.assign(this.options, options);\n    if (options) {\n      const { url, ...opt } = options;\n      if (url) {\n        const tileLayerOptions: TileLayerOptions = {\n          pane: this.pane,\n          attribution: opt.attribution,\n          minZoom: opt.minZoom,\n          maxZoom: opt.maxZoom,\n\n          ...opt.nativeOptions,\n        };\n        if (opt.subdomains) {\n          tileLayerOptions.subdomains = opt.subdomains;\n        }\n        let layer;\n        if (opt.headers) {\n          layer = new TL(url, {\n            ...tileLayerOptions,\n            headers: opt.headers,\n            setViewDelay: opt.setViewDelay,\n          });\n        } else {\n          layer = new TileLayer(url, tileLayerOptions);\n        }\n        return layer;\n      }\n    }\n  }\n}\n","import { TileLayer as TL, WMSOptions } from 'leaflet';\nimport { makeRemote } from '../RemoteTileLayer';\n\ntype LayerOptions = WMSOptions & { headers: any };\n\nclass WmsLayerBase extends TL.WMS {\n  constructor(urlTemplate: string, options: LayerOptions) {\n    super(urlTemplate, options);\n  }\n}\n\nexport const WmsLayer = makeRemote(WmsLayerBase);\n\n// applyMixins(WmsLayer, [RemoteTileLayer]);\n","import { MainLayerAdapter, WmsAdapterOptions } from '@nextgis/webmap';\nimport { TileLayer, WMSOptions } from 'leaflet';\nimport { WmsLayer as WMS } from './WmsLayer';\nimport { BaseAdapter } from '../BaseAdapter';\n\nexport class WmsAdapter\n  extends BaseAdapter<WmsAdapterOptions, TileLayer.WMS>\n  implements MainLayerAdapter\n{\n  addLayer(options: WmsAdapterOptions): TileLayer.WMS | undefined {\n    if (options) {\n      const { url, ...opt } = options;\n      if (url) {\n        const layerOptions: WMSOptions = {\n          pane: this.pane,\n          attribution: opt.attribution,\n          minZoom: opt.minZoom,\n          maxZoom: opt.maxZoom,\n          layers: options.layers,\n          format: options.format,\n        };\n        let layer;\n        if (opt.headers) {\n          layer = new WMS(url, { ...layerOptions, headers: opt.headers });\n        } else {\n          layer = new TileLayer.WMS(url, layerOptions);\n        }\n        return layer;\n      }\n    }\n  }\n}\n","import { MainLayerAdapter, TileAdapterOptions } from '@nextgis/webmap';\nimport { TileLayer } from 'leaflet';\n\nimport { TileAdapter } from './TileAdapter/TileAdapter';\n\nexport class OsmAdapter extends TileAdapter implements MainLayerAdapter {\n  addLayer(options: TileAdapterOptions): TileLayer | undefined {\n    const url =\n      options.url || 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n    return super.addLayer({\n      name: 'OpenStreetMap',\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      ...options,\n      url,\n    });\n  }\n}\n","import { EventEmitter } from 'events';\nimport { Map, Control, FitBoundsOptions } from 'leaflet';\nimport { convertMapClickEvent } from './utils/utils';\nimport { createButtonControl } from './controls/createButtonControl';\nimport { AttributionControl } from './controls/Attribution';\nimport { createControl } from './controls/createControl';\nimport { GeoJsonAdapter } from './layer-adapters/GeoJsonAdapter';\nimport { ImageAdapter } from './layer-adapters/ImageAdapter/ImageAdapter';\nimport { TileAdapter } from './layer-adapters/TileAdapter/TileAdapter';\nimport { WmsAdapter } from './layer-adapters/WmsAdapter/WmsAdapter';\nimport { OsmAdapter } from './layer-adapters/OsmAdapter';\n\nimport type {\n  Layer,\n  GridLayer,\n  ControlPosition,\n  LeafletMouseEvent,\n} from 'leaflet';\nimport type {\n  CreateControlOptions,\n  ButtonControlOptions,\n  LngLatBoundsArray,\n  LocationEvents,\n  LocateOptions,\n  MainMapEvents,\n  LayerAdapter,\n  LngLatArray,\n  MapAdapter,\n  MapOptions,\n  FitOptions,\n  MapControl,\n  Locate,\n} from '@nextgis/webmap';\n\nexport type Type<T> = new (...args: any[]) => T;\nexport type UnselectCb = () => void;\nexport type UnselectDef = UnselectCb;\nexport class LeafletMapAdapter implements MapAdapter<Map, any, Control> {\n  static layerAdapters: {\n    [name: string]: Type<LayerAdapter<Map, any, any>>;\n  } = {\n    GEOJSON: GeoJsonAdapter,\n    IMAGE: ImageAdapter,\n    TILE: TileAdapter,\n    WMS: WmsAdapter,\n    // // MVT: MvtAdapter,\n    OSM: OsmAdapter,\n  };\n\n  static controlAdapters = {\n    ZOOM: Control.Zoom,\n    ATTRIBUTION: AttributionControl,\n  };\n\n  static Map = Map;\n\n  options: MapOptions = { target: 'map' };\n\n  layerAdapters = LeafletMapAdapter.layerAdapters;\n  controlAdapters = LeafletMapAdapter.controlAdapters;\n  emitter = new EventEmitter();\n  map?: Map;\n\n  private _unselectCb: UnselectDef[] = [];\n  private _universalEvents: (keyof MainMapEvents)[] = [\n    'move',\n    'zoom',\n    'moveend',\n    'zoomend',\n    'zoomstart',\n    'movestart',\n  ];\n\n  create(options: MapOptions): void {\n    this.options = { ...options };\n    if (this.options.target) {\n      const {\n        zoom,\n        center,\n        maxZoom,\n        minZoom,\n        maxBounds: mb,\n        mapAdapterOptions,\n      } = this.options;\n      this.map = new Map(this.options.target, {\n        attributionControl: false,\n        zoomControl: false,\n        maxBounds: mb && [\n          [mb[1], mb[0]],\n          [mb[3], mb[2]],\n        ],\n        maxZoom,\n        minZoom,\n        center: center && [center[1], center[0]],\n        zoom,\n        ...mapAdapterOptions,\n      });\n      // create default pane\n      const defPane = this.map.createPane('order-0');\n      this.map._addUnselectCb = (def) => {\n        this._addUnselectCb(def);\n      };\n      defPane.style.zIndex = String(0);\n      this.emitter.emit('create', this);\n      this._addMapListeners();\n    }\n  }\n\n  destroy(): void {\n    if (this.map) {\n      this.map.remove();\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this.map && this.map.getContainer();\n  }\n\n  getControlContainer(): HTMLElement {\n    const controlContainer = this.map && (this.map as any)._controlContainer;\n    if (controlContainer) {\n      return controlContainer;\n    }\n    throw new Error('Leaflet Map is not initialized yet');\n  }\n\n  setCursor(cursor: string): void {\n    if (this.map) {\n      this.map.getContainer().style.cursor = cursor;\n    }\n  }\n\n  setView(lngLat: LngLatArray, zoom?: number): void {\n    const [lng, lat] = lngLat;\n    if (this.map) {\n      if (typeof zoom === 'number') {\n        this.map.setView([lat, lng], zoom, { animate: false });\n      } else {\n        this.setCenter([lng, lat]);\n      }\n    }\n  }\n\n  setCenter(lngLat: LngLatArray): void {\n    const [lng, lat] = lngLat;\n    if (this.map) {\n      this.map.panTo([lat, lng]);\n    }\n  }\n\n  getCenter(): LngLatArray | undefined {\n    const map = this.map;\n    if (map) {\n      const bounds = map.getBounds();\n      const center = bounds.getCenter();\n      return [center.lng, center.lat];\n    }\n  }\n\n  setZoom(zoom: number): void {\n    if (this.map) {\n      this.map.setZoom(zoom);\n    }\n  }\n\n  getZoom(): number | undefined {\n    return (this.map && this.map.getZoom()) || undefined;\n  }\n\n  getBounds(): LngLatBoundsArray | undefined {\n    if (!this.map) return undefined;\n    const b = this.map.getBounds();\n    const sw = b.getSouthWest();\n    const ne = b.getNorthEast();\n    return [sw.lng, sw.lat, ne.lng, ne.lat];\n  }\n\n  // [west, south, east, north]\n  fitBounds(e: LngLatBoundsArray, options: FitOptions = {}): void {\n    if (this.map) {\n      const { maxZoom, offset, padding } = options;\n      const opt: FitBoundsOptions = {};\n      if (maxZoom) {\n        opt.maxZoom = maxZoom;\n      }\n      if (padding) {\n        opt.padding = [padding, padding];\n      }\n      if (offset) {\n        opt.padding = offset;\n      }\n      // top, left, bottom, right\n      this.map.fitBounds(\n        [\n          [e[3], e[0]],\n          [e[1], e[2]],\n        ],\n        opt,\n      );\n    }\n  }\n\n  getLayerAdapter(name: string): Type<LayerAdapter<L.Map, any, any>> {\n    return LeafletMapAdapter.layerAdapters[name];\n  }\n\n  createControl(control: MapControl, options: CreateControlOptions): L.Control {\n    return createControl(control, options, this);\n  }\n\n  createButtonControl(options: ButtonControlOptions): L.Control {\n    return createButtonControl(options, this);\n  }\n\n  addControl(control: Control, position: string): Control | undefined {\n    control.options.position = position.replace('-', '') as ControlPosition;\n    if (this.map) {\n      this.map.addControl(control);\n      return control;\n    }\n  }\n\n  removeControl(control: Control): void {\n    if (this.map) {\n      this.map.removeControl(control);\n    }\n  }\n\n  removeLayer(layer: Layer): void {\n    layer && layer.remove && layer.remove();\n  }\n\n  showLayer(layer: Layer): void {\n    if (this.map) {\n      layer.addTo(this.map);\n    }\n  }\n\n  hideLayer(layer: Layer): void {\n    layer.remove();\n  }\n\n  setLayerOpacity(layer: GridLayer | Layer, value: number): void {\n    if ('setOpacity' in layer) {\n      layer.setOpacity(value);\n    }\n  }\n\n  setLayerOrder(\n    layer: Layer,\n    order: number,\n    layers: { [x: string]: LayerAdapter },\n  ): void {\n    //\n  }\n\n  onMapClick(evt: LeafletMouseEvent): void {\n    const converted = convertMapClickEvent(evt);\n    this.emitter.emit('preclick', converted);\n    this.emitter.emit('click', converted);\n  }\n\n  locate(opt: LocateOptions, events?: LocationEvents): Locate {\n    const map = this.map;\n    if (map) {\n      map.locate(opt);\n      if (events) {\n        const { locationfound, locationerror } = events;\n        const locationFound = (e: L.LeafletEvent) => {\n          const event = e as L.LocationEvent;\n          const lngLat: [number, number] = [event.latlng.lng, event.latlng.lat];\n          locationfound({ lngLat });\n        };\n        if (locationfound !== undefined) {\n          map.on('locationfound', locationFound, this);\n        }\n        if (locationerror) {\n          map.on('locationerror', locationerror, this);\n        }\n        const stop = () => {\n          if (locationfound !== undefined) {\n            map.off('locationfound', locationFound);\n          }\n          if (locationerror) {\n            map.off('locationerror', locationerror);\n          }\n        };\n        return { stop };\n      }\n    }\n    const stop = () => void 'fake function';\n    return { stop };\n  }\n\n  private _addUnselectCb(cb: UnselectDef) {\n    for (const p of this._unselectCb) {\n      p();\n    }\n    this._unselectCb.length = 0;\n    this._unselectCb.push(cb);\n  }\n\n  private _addMapListeners() {\n    const map = this.map;\n    if (map) {\n      map.on('click', (evt) => {\n        this.onMapClick(evt as LeafletMouseEvent);\n      });\n      this._universalEvents.forEach((e) => {\n        map.on(e, () => this.emitter.emit(e, this), map);\n      });\n    }\n  }\n}\n","import { ButtonControlOptions, MapAdapter } from '@nextgis/webmap';\nimport { createControl } from './createControl';\nimport { DomEvent, Control } from 'leaflet';\n\nexport function createButtonControl(options: ButtonControlOptions, map: MapAdapter): Control {\n  const link = document.createElement('a');\n\n  const title = options.title || '';\n  link.href = '#';\n  link.title = title;\n\n  link.setAttribute('role', 'button');\n  link.setAttribute('aria-label', title);\n\n  DomEvent.disableClickPropagation(link);\n  DomEvent.on(link, 'click', DomEvent.stop);\n\n  if (options.html instanceof HTMLElement) {\n    link.appendChild(options.html);\n  } else if (typeof options.html === 'string') {\n    link.innerHTML = options.html;\n  }\n\n  const onClick = (e: Event) => {\n    e.stopPropagation();\n    options.onClick();\n  };\n\n  return createControl(\n    {\n      onAdd() {\n        if (options.onClick !== undefined) {\n          link.addEventListener('click', onClick);\n        }\n        return link;\n      },\n      onRemove() {\n        const parent = link.parentNode;\n        if (parent) {\n          parent.removeChild(link);\n        }\n        if (options.onClick !== undefined) {\n          link.removeEventListener('click', onClick);\n        }\n      },\n    },\n    { bar: true },\n    map\n  );\n}\n","/**\n * @module leaflet-map-adapter\n */\n\nimport { LeafletMapAdapter } from './LeafletMapAdapter';\n\nexport default LeafletMapAdapter;\n","import { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when...\n */\nexport class NgwError extends Error {\n  name = 'NgwError';\n\n  title!: string;\n  message!: string;\n  detail!: string;\n  exception!: NgwExceptions;\n  status_code!: number | 404 | 500;\n  data?: Record<string, any>;\n  guru_meditation!: string;\n\n  constructor(er?: NgwError) {\n    super();\n    Object.assign(this, er);\n    Object.setPrototypeOf(this, NgwError.prototype);\n  }\n}\n","/**\n * Thrown when...\n */\nexport class NetworkError extends Error {\n  name = 'NetworkError';\n\n  constructor(url: string) {\n    super();\n    Object.setPrototypeOf(this, NetworkError.prototype);\n    this.message = `Unable to request ${url}.\n    Possibly invalid NGW URL entered or CORS not configured to get request from ${location.origin}`; // /control-panel/cors\n  }\n}\n","import {\n  RequestOptions as NgwRequestOptions,\n  RequestMethods,\n} from '../interfaces';\nimport { NgwError } from '../errors/NgwError';\nimport { NetworkError } from '../errors/NetworkError';\n\n// readyState\n// Holds the status of the XMLHttpRequest.\n// 0: request not initialized\n// 1: server connection established\n// 2: request received\n// 3: processing request\n// 4: request finished and response is ready\n\n// status\n// 200: \"OK\"\n// 201 \"Created\"\tThe request has been fulfilled, and a new resource is created\n// 403: \"Forbidden\"\n// 404: \"Page not found\"\n// 500: \"Internal Server Error\"\n// For a complete list go to the Http Messages Reference\n\ntype LoadData = (\n  url: string,\n  callback: (...args: any[]) => any,\n  options: NgwRequestOptions<RequestMethods> | undefined,\n  error: (reason?: any) => void,\n  onCancel: (cancelHandler: () => void) => void,\n) => void;\n\nlet loadData: LoadData;\n// @ts-ignore\nif (__BROWSER__) {\n  loadData = (\n    url: string,\n    callback: (...args: any[]) => any,\n    options: NgwRequestOptions = {},\n    error: (reason?: any) => void,\n    onCancel: (cancelHandler: () => void) => void,\n  ): void => {\n    options.method = options.method || 'GET';\n\n    const xhr = new XMLHttpRequest();\n    xhr.open(options.method || 'GET', url, true); // true for asynchronous\n\n    if (options.responseType === 'blob') {\n      xhr.responseType = options.responseType;\n    }\n    const getResponseText = () => {\n      try {\n        return JSON.parse(xhr.responseText);\n      } catch (er) {\n        return xhr.responseText;\n      }\n    };\n    const processingResponse = (forError = false) => {\n      const cb = forError ? error : callback;\n      if (options.responseType === 'blob') {\n        cb(xhr.response);\n      } else {\n        if (xhr.responseText) {\n          cb(getResponseText());\n        } else {\n          error({ message: '' });\n        }\n      }\n    };\n    xhr.onload = () => {\n      if ([401, 403, 404, 500].indexOf(xhr.status) !== -1) {\n        error(new NgwError(getResponseText()));\n      }\n      processingResponse();\n    };\n\n    // xhr.onreadystatechange = () => {\n    //   if (\n    //     (xhr.readyState === 4 && xhr.status === 200) ||\n    //     (xhr.readyState === 3 && xhr.status === 201)\n    //   ) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 3 && xhr.status === 400) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 4 && xhr.status === 500) {\n    //     processingResponse();\n    //   } else if (xhr.readyState === 4 && xhr.status === 401) {\n    //     error(xhr.statusText);\n    //   } else if (xhr.readyState === 4) {\n    //     error('request error');\n    //   }\n    // };\n\n    xhr.onerror = (er) => {\n      if (xhr.status === 0) {\n        error(new NetworkError(url));\n      } else {\n        error(er);\n      }\n    };\n\n    xhr.upload.onprogress = function (e) {\n      if (e.lengthComputable) {\n        const percentComplete = (e.loaded / e.total) * 100;\n        if (options.onProgress) {\n          options.onProgress(percentComplete, e);\n        }\n        // console.log(percentComplete + '% uploaded');\n      }\n    };\n\n    const headers = options.headers;\n    if (headers) {\n      for (const h in headers) {\n        const header = headers[h];\n        if (typeof header === 'string') {\n          xhr.setRequestHeader(h, header);\n        }\n      }\n    }\n    if (options.withCredentials !== undefined) {\n      xhr.withCredentials = options.withCredentials;\n    }\n\n    let data: FormData | any;\n    if (options.file) {\n      data = new FormData();\n      data.append('file', options.file);\n      if (options.data) {\n        for (const d in data) {\n          data.append(d, data[d]);\n        }\n      }\n    } else {\n      data = options.data\n        ? typeof options.data === 'string'\n          ? options.data\n          : JSON.stringify(options.data)\n        : null;\n    }\n    if (onCancel) {\n      onCancel(() => {\n        xhr.abort();\n      });\n    }\n    xhr.send(data);\n  };\n} else {\n  const url = require('url');\n  const http = require('http');\n  const https = require('https');\n\n  const adapterFor = (inputUrl: string) => {\n    const adapters: Record<string, any> = {\n      'http:': http,\n      'https:': https,\n    };\n    const protocol = url.parse(inputUrl).protocol || 'https:';\n    return adapters[protocol];\n  };\n\n  loadData = (\n    url: string,\n    callback: (...args: any[]) => any,\n    options: NgwRequestOptions<RequestMethods> = {},\n    error: (reason?: any) => void,\n    onCancel: (cancelHandler: () => void) => void,\n  ): Promise<unknown> => {\n    const request = new Promise((resolve, reject) => {\n      const adapter = adapterFor(url);\n      if (adapter) {\n        const requestOpt = {\n          headers: options.headers || {},\n          method: options.method,\n        };\n        const body =\n          typeof options.data === 'string'\n            ? options.data\n            : JSON.stringify(options.data);\n        // https://stackoverflow.com/questions/35589109/node-http-delete-request-no-longer-works-after-upgrading-from-0-10-40\n        if (body !== undefined && options.method !== 'POST') {\n          Object.assign(requestOpt.headers, {\n            'Content-Type': 'application/json',\n            'Content-Length': Buffer.byteLength(body),\n          });\n        }\n        const req = adapter.request(url, requestOpt, (resp: any) => {\n          let data = '';\n          resp.on('data', (chunk: any) => {\n            data += chunk;\n          });\n          resp.on('end', () => {\n            if (data) {\n              let json: Record<string, any> | undefined;\n              try {\n                json = JSON.parse(data);\n                if (json && json.status_code && json.status_code) {\n                  reject(json.message);\n                }\n              } catch (er) {\n                reject(er);\n                // throw new Error(er);\n              }\n              if (json !== undefined) {\n                resolve(json);\n              }\n            }\n            reject('no data');\n          });\n        });\n        req.on('error', (err: any) => {\n          reject(err);\n        });\n        if (body) {\n          req.write(body);\n        }\n        onCancel(() => {\n          req.abort();\n        });\n        req.end();\n      } else {\n        throw new Error(`Given URL '${url}' is not correct`);\n      }\n    });\n    return request\n      .then((data) => {\n        if (callback) {\n          callback(data);\n        }\n        return data;\n      })\n      .catch((er) => {\n        if (error) {\n          error(er);\n        } else {\n          throw new Error(er);\n        }\n      });\n  };\n}\n\nexport { loadData };\n","// https://github.com/Leaflet/Leaflet/blob/b507e21c510b53cd704fb8d3f89bb46ea925c8eb/src/core/Util.js#L165\nconst templateRe = /\\{ *([\\w_-]+) *\\}/g;\n\nexport function template(str: string, data: { [param: string]: any }): string {\n  return str.replace(templateRe, (s, key) => {\n    let value = data[key];\n\n    if (value === undefined) {\n      throw new Error('No value provided for letiable ' + s);\n    } else if (typeof value === 'function') {\n      value = value(data);\n    }\n    return value;\n  });\n}\n","import { NgwError } from './NgwError';\nimport { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when ...\n */\nexport class ResourceNotFoundError extends NgwError {\n  name = 'ResourceNotFoundError';\n  exception: NgwExceptions = 'nextgisweb.resource.exception.ResourceNotFound';\n\n  constructor(obj?: ResourceNotFoundError) {\n    super(obj);\n    Object.setPrototypeOf(this, ResourceNotFoundError.prototype);\n  }\n}\n","import { NgwError } from './NgwError';\nimport { NgwExceptions } from '../interfaces';\n\n/**\n * Thrown when ...\n */\nexport class InsufficientPermissionsError extends NgwError {\n  name = 'InsufficientPermissionsError';\n  exception: NgwExceptions =\n    'nextgisweb.core.exception.InsufficientPermissions';\n\n  constructor(obj: InsufficientPermissionsError) {\n    super(obj);\n    Object.setPrototypeOf(this, InsufficientPermissionsError.prototype);\n  }\n}\n","import { NgwConnectorOptions } from './interfaces';\nimport { NgwConnector } from './NgwConnector';\nimport { objectDeepEqual } from '@nextgis/utils';\n\nexport const CONNECTORS: NgwConnector[] = [];\n\nexport function addConnector(connector: NgwConnector): void {\n  CONNECTORS.push(connector);\n}\n\nexport function findConnector(\n  options: NgwConnectorOptions,\n): NgwConnector | undefined {\n  return CONNECTORS.find((x) => {\n    if (x.options.baseUrl === options.baseUrl) {\n      if (options.auth) {\n        if (x.options.auth) {\n          return objectDeepEqual(x.options.auth, options.auth);\n        }\n      } else {\n        // if auth not in find options; use first connector with same url\n        return true;\n      }\n    }\n  });\n}\n\nexport function removeConnector(connector: NgwConnector): void {\n  const index = CONNECTORS.indexOf(connector);\n  if (index !== -1) {\n    CONNECTORS.splice(index, 1);\n  }\n}\n\nexport function findAndRemoveConnector(options: NgwConnectorOptions): void {\n  const exist = findConnector(options);\n  if (exist) {\n    removeConnector(exist);\n  }\n}\n","export function isObject(val: unknown): val is Record<string | number, any> {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n","import { DeepPartial, defined } from '@nextgis/utils';\nimport { Resource } from '../types/ResourceItem';\nimport { isObject } from './isObject';\n\n/**\n * ```\n * { keyname, parent: { id }} > { keyname, parent__id }\n * ```\n * @param resource - Any property from NGW resource item\n */\nexport function resourceToQuery(\n  resource: DeepPartial<Resource>,\n  prefix = '',\n): Record<string, unknown> {\n  prefix = prefix ? prefix + '__' : '';\n  const query: Record<string, any> = {};\n  Object.entries(resource).forEach(([key, value]) => {\n    if (isObject(value)) {\n      const children = resourceToQuery(value as DeepPartial<Resource>, key);\n      Object.assign(query, children);\n    } else if (defined(value)) {\n      query[prefix + key] = value;\n    }\n  });\n  return query;\n}\n","import CancelablePromise from '@nextgis/cancelable-promise';\nimport { defined } from '@nextgis/utils';\nimport Cache from '@nextgis/cache';\n\nimport { resourceToQuery } from './utils/resourceToQuery';\nimport { resourceCompare } from './utils/resourceCompare';\nimport { ResourceNotFoundError } from './errors/ResourceNotFoundError';\n\nimport { isObject } from './utils/isObject';\n\nimport type { DeepPartial } from '@nextgis/utils';\nimport type { NgwConnector } from './NgwConnector';\nimport type { ResourceItem, Resource } from './types/ResourceItem';\nimport type { RequestOptions, ResourceDefinition } from './interfaces';\n\nexport class ResourcesControl {\n  cache = new Cache<\n    CancelablePromise<ResourceItem | undefined>,\n    { id?: number }\n  >();\n\n  constructor(private connector: NgwConnector) {}\n\n  // -------------------------------------------------------------------------\n  // Resource Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Receive resource from NGW by id, keyname or search-object parameter.\n   * @param resource - Resource id, keyname or search-object\n   *\n   * @remarks\n   * Fetching resource would be cached to speed up next call\n   */\n  getOne(\n    resource: ResourceDefinition,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    const cache = new Cache();\n    const makeRequest = () => {\n      if (typeof resource === 'string') {\n        return this._fetchResourceBy({ keyname: resource }, requestOptions);\n      } else if (typeof resource === 'number') {\n        return this._fetchResourceById(resource, requestOptions);\n      } else if (isObject(resource)) {\n        return this._fetchResourceBy(resource, requestOptions);\n      }\n      return CancelablePromise.resolve(undefined);\n    };\n    return cache.add('resource', makeRequest, { resource });\n  }\n\n  getOneOrFail(resource: ResourceDefinition): CancelablePromise<ResourceItem> {\n    return this.getOne(resource).then((res) => {\n      if (res) {\n        return res;\n      }\n      throw new ResourceNotFoundError();\n    });\n  }\n\n  /**\n   * A fast way to retrieve resource ID for any resource definition.\n   * @param resource - Any available resource definition\n   *\n   * @remarks\n   * There are situations when exactly the resource id is needed\n   * (for example, to compose the correct request to the api)\n   * then this method will come in handy to facilitate the extraction of the identifier\n   * if the resource is specified through a keyname or other parameters.\n   */\n  getId(resource: ResourceDefinition): CancelablePromise<number | undefined> {\n    if (typeof resource === 'number') {\n      return CancelablePromise.resolve(resource);\n    } else if (typeof resource === 'string' || isObject(resource)) {\n      return this.getOne(resource).then((res) => {\n        if (res) {\n          return res.resource.id;\n        }\n      });\n    }\n    return CancelablePromise.resolve(undefined);\n  }\n\n  /**\n   * A fast way to retrieve resource ID for any resource definition.\n   * @param resource - Any available resource definition\n   *\n   * @remarks\n   * Similar with {@link NgwConnector.getResourceId | getResourceId} but rise error if resource is not exist.\n   * To not make one more checks if the resource is definitely exists\n   */\n  getIdOrFail(resource: ResourceDefinition): CancelablePromise<number> {\n    return this.getId(resource).then((resp) => {\n      if (resp === undefined) {\n        throw new Error();\n      }\n      return resp;\n    });\n  }\n\n  getMany(\n    resource: DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem[]> {\n    return this._resourceCacheFilter(resource).then((items) => {\n      if (!items.length) {\n        const query: Record<string, unknown> = {};\n        if (resource.keyname) {\n          query.keyname = resource.keyname;\n        } else {\n          Object.assign(query, resourceToQuery(resource));\n        }\n        return this.connector\n          .get('resource.search', requestOptions, {\n            serialization: 'full',\n            ...query,\n          })\n          .then((resources) => {\n            if (resources) {\n              resources.forEach((x) => {\n                this.cache.add('resource.item', CancelablePromise.resolve(x), {\n                  id: x.resource.id,\n                });\n              });\n            }\n            return resources;\n          });\n      }\n      return items;\n    });\n  }\n\n  getParent(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.connector.getResource(resource).then((child) => {\n      if (child) {\n        return this.connector.getResource(child.resource.parent.id);\n      }\n      return CancelablePromise.resolve(undefined);\n    });\n  }\n\n  getChildrenOf(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.getId(resource).then((parent) => {\n      return this.connector\n        .get(\n          'resource.collection',\n          { cache: true },\n          {\n            parent,\n          },\n        )\n        .then((items) => {\n          for (const i of items) {\n            this.cache.add('resource.item', CancelablePromise.resolve(i), {\n              id: i.resource.id,\n            });\n          }\n          return items;\n        });\n    });\n  }\n\n  update(\n    resource: ResourceDefinition,\n    data: DeepPartial<ResourceItem>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.getId(resource).then((id) => {\n      if (id !== undefined) {\n        return this.connector.put('resource.item', { data }, { id });\n      }\n    });\n  }\n\n  /**\n   * Fast way to delete resource from NGW and clean cache.\n   * @param resource - Resource definition\n   */\n  delete(resource: ResourceDefinition): CancelablePromise<void> {\n    return this.getId(resource).then((id) => {\n      if (id !== undefined) {\n        return this.connector.delete('resource.item', null, { id }).then(() => {\n          this.cache.delete('resource.item', { id });\n          return undefined;\n        });\n      }\n    });\n  }\n\n  private _fetchResourceById(\n    id: number,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    const promise = () =>\n      this.connector.get('resource.item', requestOptions, { id });\n\n    return this.cache\n      .add('resource.item', promise, {\n        id,\n      })\n      .catch((er) => {\n        if (!(er instanceof ResourceNotFoundError)) {\n          throw er;\n        }\n        return undefined;\n      });\n  }\n\n  private _fetchResourceBy(\n    resource: DeepPartial<Resource>,\n    requestOptions?: RequestOptions,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.getMany(resource, requestOptions).then((resources) => {\n      return resources[0];\n    });\n  }\n\n  private _resourceCacheFilter(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem[]> {\n    return CancelablePromise.all(this.cache.matchAll('resource.item')).then(\n      (resources) => {\n        const items: ResourceItem[] = [];\n        resources.filter((x) => {\n          if (x) {\n            // identical by uniq props\n            if (resource.keyname && x.resource.keyname) {\n              return resource.keyname === x.resource.keyname;\n            }\n            if (defined(resource.id) && defined(x.resource.id)) {\n              return resource.id === x.resource.id;\n            }\n            return resourceCompare(resource, x.resource);\n          }\n        });\n        return items;\n      },\n    );\n  }\n}\n","import { objectDeepEqual } from '@nextgis/utils';\nimport type { DeepPartial } from '@nextgis/utils';\nimport type { Resource } from '../types/ResourceItem';\n\nexport function resourceCompare(\n  res1: DeepPartial<Resource>,\n  res2: DeepPartial<Resource>,\n): boolean {\n  return objectDeepEqual(res1, res2);\n}\n","import CancelablePromise from '@nextgis/cancelable-promise';\nimport { template } from './template';\nimport type { NgwConnector } from '../NgwConnector';\nimport type {\n  RequestItemKeys,\n  RequestItemsParams,\n  RequestOptions,\n} from '../interfaces';\nimport type { RequestItemsParamsMap } from '../types/RequestItemsParamsMap';\n\ninterface ApiRequestOptions<K extends keyof RequestItemsParamsMap> {\n  name: string;\n  connector: NgwConnector;\n  params: RequestItemsParams<K>;\n  requestOptions: RequestOptions;\n}\n\nexport function apiRequest<\n  K extends keyof RequestItemsParamsMap,\n  P extends RequestItemKeys = RequestItemKeys,\n>(opt: ApiRequestOptions<K>): CancelablePromise<P[K]> {\n  const params = opt.params;\n  return new CancelablePromise((resolve, reject) => {\n    opt.connector\n      .connect()\n      .then((apiItems) => {\n        let apiItem = apiItems && apiItems[opt.name];\n        if (apiItem) {\n          apiItem = [...apiItem];\n          let url = apiItem.shift();\n          if (apiItem.length) {\n            const replaceParams: {\n              [num: number]: string;\n            } = {};\n            for (let fry = 0; fry < apiItem.length; fry++) {\n              const arg = apiItem[fry];\n              replaceParams[fry] = '{' + arg + '}';\n              if (params[arg] === undefined) {\n                throw new Error(\n                  '`' + arg + '`' + ' url api argument is not specified',\n                );\n              }\n            }\n            if (url) {\n              url = template(url, replaceParams);\n            }\n          }\n          // Transfer part of the parameters from `params` to the URL string\n          if (params) {\n            const paramArray = [];\n            const paramList = params.paramList;\n            if (Array.isArray(paramList)) {\n              delete params.paramList;\n              paramList.forEach((x) => {\n                paramArray.push(`${x[0]}=${x[1]}`);\n              });\n            }\n            for (const p in params) {\n              if (apiItem.indexOf(p) === -1) {\n                paramArray.push(`${p}=${params[p]}`);\n              }\n            }\n            if (paramArray.length) {\n              url = url + '?' + paramArray.join('&');\n            }\n          }\n          if (url) {\n            resolve(opt.connector.makeQuery(url, params, opt.requestOptions));\n          } else {\n            reject(new Error('request url is not set'));\n          }\n        } else {\n          resolve(undefined);\n        }\n      })\n      .catch((er) => {\n        reject(er);\n      });\n  });\n}\n","import { EventEmitter } from 'events';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { objectRemoveEmpty } from '@nextgis/utils';\nimport { fixUrlStr } from '@nextgis/utils';\nimport Cache from '@nextgis/cache';\n\nimport { loadData } from './utils/loadData';\nimport { template } from './utils/template';\nimport { NgwError } from './errors/NgwError';\nimport { ResourceNotFoundError } from './errors/ResourceNotFoundError';\nimport { InsufficientPermissionsError } from './errors/InsufficientPermissionsError';\nimport {\n  addConnector,\n  findConnector,\n  removeConnector,\n} from './activeConnectors';\nimport { ResourcesControl } from './ResourcesControl';\n\nimport type { DeepPartial } from '@nextgis/utils';\nimport type {\n  DeleteRequestItemsResponseMap,\n  PatchRequestItemsResponseMap,\n  PostRequestItemsResponseMap,\n  GetRequestItemsResponseMap,\n  PutRequestItemsResponseMap,\n  ResourceIdKeynameDef,\n  NgwConnectorOptions,\n  ResourceDefinition,\n  RequestItemsParams,\n  RequestItemKeys,\n  RequestHeaders,\n  RequestOptions,\n  PyramidRoute,\n  Credentials,\n  UserInfo,\n  Params,\n} from './interfaces';\nimport type { RequestItemsParamsMap } from './types/RequestItemsParamsMap';\nimport type { ResourceItem, Resource } from './types/ResourceItem';\nimport { apiRequest } from './utils/apiRequest';\n\nlet ID = 0;\n\nexport class NgwConnector {\n  static errors = {\n    NgwError,\n    ResourceNotFoundError,\n  };\n  id = ID++;\n\n  emitter = new EventEmitter();\n  user?: UserInfo;\n\n  resources!: ResourcesControl;\n\n  private routeStr = '/api/component/pyramid/route';\n\n  constructor(public options: NgwConnectorOptions) {\n    const exist = findConnector(options);\n    if (exist) {\n      return exist;\n    } else {\n      if (this.options.route) {\n        this.routeStr = this.options.route;\n      }\n      this.resources = new ResourcesControl(this);\n      addConnector(this);\n    }\n  }\n\n  static create(options: NgwConnectorOptions): NgwConnector {\n    return new this(options);\n  }\n\n  /**\n   * Fast way to specify the connection address to NextGIS Web.\n   * The current connection will be severed.\n   * @param baseUrl - NGW url\n   */\n  setNgw(baseUrl: string): void {\n    this.logout();\n    this.options.baseUrl = baseUrl;\n    addConnector(this);\n  }\n\n  /**\n   * Establishing a connection with NextGIS Web to fulfill all other requests.\n   * @remarks\n   * This method need not be called manually as it is used when forming a request in {@link NgwConnector.apiRequest | apiRequest}.\n   * Can be used to check connection.\n   * @example\n   * ```javascript\n   * const connector = new NgwConnector({baseUrl: 'https://demo.nextgis.com'});\n   * connector.connect()\n   *   .then(() => console.log('Ok'))\n   *   .catch((er) => console.log('Connection problem', er));\n   * ```\n   */\n  connect(): CancelablePromise<PyramidRoute> {\n    const cache = new Cache();\n    const auth = this.options.auth;\n    const makeConnect = () =>\n      new CancelablePromise((resolve, reject) => {\n        const makeQuery = () => {\n          return this.makeQuery(this.routeStr, {}, {})\n            .then((route: PyramidRoute) => {\n              resolve(route);\n            })\n            .catch((er) => {\n              reject(er);\n            });\n        };\n        if (auth) {\n          const { login, password } = auth;\n          if (login && password) {\n            return this.getUserInfo({ login, password })\n              .then(() => {\n                makeQuery();\n              })\n              .catch((er) => reject(er));\n          }\n        }\n        return makeQuery();\n      });\n    return cache.add('route', makeConnect, {\n      id: this.id,\n      auth,\n      baseUrl: this.options.baseUrl,\n    });\n  }\n\n  /**\n   * Quick way to change NextGIS Web user.\n   * @param credentials - New user credentials\n   */\n  login(credentials: Credentials): CancelablePromise<UserInfo> {\n    this.logout();\n    addConnector(this);\n    return this.getUserInfo(credentials);\n  }\n\n  /**\n   * Disconnecting a user. Aborting all current requests\n   */\n  logout(): void {\n    removeConnector(this);\n    this.options.auth = undefined;\n    this.user = undefined;\n    this.emitter.emit('logout');\n    this.resources.cache.clean();\n  }\n\n  getUserInfo(credentials?: Credentials): CancelablePromise<UserInfo> {\n    if (this.user && this.user.id) {\n      return CancelablePromise.resolve(this.user);\n    }\n    if (credentials) {\n      this.options.auth = credentials;\n    }\n    const options: RequestOptions = {\n      headers: this.getAuthorizationHeaders(credentials),\n      // withCredentials: true\n    };\n\n    // Do not use request('auth.current_user') to avoid circular-references\n    return this.makeQuery('/api/component/auth/current_user', {}, options)\n      .then((data: UserInfo) => {\n        this.user = data;\n        this.emitter.emit('login', data);\n        return data;\n      })\n      .catch((er) => {\n        this.emitter.emit('login:error', er);\n        throw er;\n      });\n  }\n\n  /**\n   * Obtaining the required Headers for authentication of requests in the NGW.\n   */\n  getAuthorizationHeaders(\n    credentials?: Credentials,\n  ): RequestHeaders | undefined {\n    const client = this.makeClientId(credentials);\n    if (client) {\n      return {\n        Authorization: 'Basic ' + client,\n      };\n    }\n  }\n\n  makeClientId(credentials?: Credentials): string | undefined {\n    credentials = credentials || this.options.auth;\n    if (credentials) {\n      const { login, password } = credentials;\n      const str = unescape(encodeURIComponent(`${login}:${password}`));\n      // @ts-ignore\n      if (__BROWSER__) {\n        return window.btoa(str);\n      } else {\n        return Buffer.from(str).toString('base64');\n      }\n    }\n  }\n\n  /**\n   * Send request to NGW api router.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param params - Request item params or query params\n   * @param requestOptions - Request options\n   *\n   * @example\n   * ```javascript\n   *\n   * // there is such an NGW route item\n   * // \"feature_layer.feature.item\": [\n   * //   \"/api/resource/{0}/feature/{1}\",\n   * //   \"id\",\n   * //   \"fid\"\n   * // ],\n   *\n   * const connector = new NgwConnector({ baseUrl: 'https://example.nextgis.com' });\n   * connector.apiRequest('feature_layer.feature.item', {\n   *   // request params for {0} and {1}\n   *   'id': 2011,\n   *   'fid': 101,\n   *   // query params\n   *   'srs': 4326,\n   *   'geom_format': 'geojson',\n   * }, { method: 'GET' });\n   * // send get-request to 'https://example.nextgis.com/api/resource/2011/feature/101?srs=4326&geom_format=geojson'\n   *\n   * ```\n   */\n  apiRequest<\n    K extends keyof RequestItemsParamsMap,\n    P extends RequestItemKeys = RequestItemKeys,\n  >(\n    name: K,\n    params_: RequestItemsParams<K> = {},\n    requestOptions: RequestOptions = {},\n  ): CancelablePromise<P[K]> {\n    const { method, headers, withCredentials, responseType } = requestOptions;\n    const params = objectRemoveEmpty(params_);\n    const makeApiRequest = () =>\n      apiRequest({ name, params, requestOptions, connector: this });\n    if (requestOptions.cache && method === 'GET') {\n      const cache = new Cache<CancelablePromise<P[K]>>();\n      return cache.add(name, makeApiRequest, {\n        params,\n        ...objectRemoveEmpty({\n          headers,\n          withCredentials,\n          responseType,\n          baseUrl: this.options.baseUrl,\n          auth: this.options.auth,\n        }),\n      });\n    }\n    return makeApiRequest();\n  }\n\n  /**\n   * Shortcut method for send POST request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   *\n   * @example\n   * ```javascript\n   * connector.post('resource.collection', { data: POST_PAYLOAD })\n   *   .then((newResource) => console.log(newResource))\n   *   .catch((error) => console.warn(error));\n   * ```\n   */\n  post<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions<'POST'>,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PostRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'POST';\n    return this.apiRequest<K, PostRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send GET request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  get<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions | undefined | null,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<GetRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'GET';\n    return this.apiRequest<K, GetRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send PATCH request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  patch<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PatchRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'PATCH';\n    return this.apiRequest<K, PatchRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send PUT request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  put<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<PutRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'PUT';\n    return this.apiRequest<K, PutRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Shortcut method for send DELETE request to NGW.\n   * @param name - NGW route name from {@link https://docs.nextgis.com/docs_ngweb_dev/doc/developer/resource.html#routes | routes}\n   * @param options - Request options\n   * @param params - Request item params or query params\n   */\n  delete<K extends keyof RequestItemsParamsMap>(\n    name: K,\n    options?: RequestOptions | undefined | null,\n    params?: RequestItemsParams<K>,\n  ): CancelablePromise<DeleteRequestItemsResponseMap[K]> {\n    options = options || {};\n    options.method = 'DELETE';\n    return this.apiRequest<K, DeleteRequestItemsResponseMap>(\n      name,\n      params,\n      options,\n    );\n  }\n\n  /**\n   * Send request to NGW.\n   * @param url - URL address to NGW\n   * @param params - Query params\n   * @param options - Request options\n   */\n  makeQuery(\n    url: string,\n    params?: Params,\n    options: RequestOptions = {},\n  ): CancelablePromise<any> {\n    url = (this.options.baseUrl ? this.options.baseUrl : '') + url;\n    if (url) {\n      if (params) {\n        url = template(url, params);\n      }\n      // remove double slash\n      url = fixUrlStr(url);\n      return this._loadData(url, options);\n    } else {\n      throw new Error('Empty `url` not allowed');\n    }\n  }\n\n  // -------------------------------------------------------------------------\n  // Resource Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * {@inheritDoc ResourcesControl.getOne}\n   */\n  getResource(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getOneOrFail}\n   */\n  getResourceOrFail(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem> {\n    return this.resources.getOneOrFail(resource);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceBy(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(resource);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceByKeyname(\n    keyname: string,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(keyname);\n  }\n\n  /**\n   * @deprecated - use {@link NgwConnector.getResource}\n   */\n  getResourceById(id: number): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getOne(id);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getId}\n   */\n  getResourceId(\n    resource: ResourceDefinition,\n  ): CancelablePromise<number | undefined> {\n    return this.resources.getId(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getIdOrFail}\n   */\n  getResourceIdOrFail(resource: ResourceDefinition): CancelablePromise<number> {\n    return this.resources.getIdOrFail(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getMany}\n   */\n  getResourcesBy(\n    resource: DeepPartial<Resource>,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.resources.getMany(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getParent}\n   */\n  getResourceParent(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.getParent(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.getChildrenOf}\n   */\n  getResourceChildren(\n    resource: ResourceDefinition,\n  ): CancelablePromise<ResourceItem[]> {\n    return this.resources.getChildrenOf(resource);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.update}\n   */\n  updateResource(\n    resource: ResourceIdKeynameDef,\n    data: DeepPartial<ResourceItem>,\n  ): CancelablePromise<ResourceItem | undefined> {\n    return this.resources.update(resource, data);\n  }\n\n  /**\n   * {@inheritDoc ResourcesControl.delete}\n   */\n  deleteResource(resource: ResourceIdKeynameDef): CancelablePromise<void> {\n    return this.resources.delete(resource);\n  }\n\n  /**\n   * @internal\n   */\n  protected _loadData(\n    url: string,\n    options: RequestOptions,\n  ): CancelablePromise<any> {\n    options.responseType = options.responseType || 'json';\n    return new CancelablePromise((resolve, reject, onCancel) => {\n      if (this.user) {\n        options = options || {};\n        // options.withCredentials = true;\n        options.headers = {\n          ...this.getAuthorizationHeaders(),\n          ...options.headers,\n        };\n      }\n      loadData(url, resolve, options, reject, onCancel);\n    }).catch((httpError) => {\n      if (httpError instanceof CancelablePromise.CancelError) {\n        // not need to handle cancel error because onCancel method is used\n      } else {\n        // @ts-ignore\n        if (__DEV__) {\n          console.warn(httpError);\n        }\n        const er = this._handleHttpError(httpError);\n        if (er) {\n          throw er;\n        }\n      }\n    });\n  }\n\n  private _handleHttpError(er: Error) {\n    if (er) {\n      if (er instanceof NgwError) {\n        if (er.exception === 'nextgisweb.resource.exception.ResourceNotFound') {\n          throw new ResourceNotFoundError(er);\n        } else if (\n          er.exception === 'nextgisweb.core.exception.InsufficientPermissions'\n        ) {\n          throw new InsufficientPermissionsError(er);\n        }\n      }\n    }\n    return er;\n  }\n}\n","/**\n * A lightweight HTTP client optimized for use with {@link http://docs.nextgis.ru/docs_ngweb_dev/doc/developer/toc.html | NextGIS Web} API\n *\n * @remarks\n * Make sure CORS is registered in the {@link https://docs.nextgis.com/docs_ngcom/source/CORS.html | NextGIS Web settings } to be able to send requests.\n *\n * @packageDocumentation\n * @module ngw-connector\n */\nimport { NgwConnector } from './NgwConnector';\n\nexport * from './interfaces';\nexport * from './types/ResourceItem';\nexport * from './types/FeatureLayer';\nexport * from './types/RequestItemsParamsMap';\nexport * from './types/ResourceStore';\n\n// export { NgwConnector };\nexport default NgwConnector;\n"],"names":["svgPath","brill","circle","rect","marker","cross","star","triangle","plus","minus","asterisk","insertSvg","width","height","stroke","content","s","svg","oParser","DOMParser","oDOM","parseFromString","documentElement","getIcon","opt","shape","color","strokeColor","size","anchor","defSize","scale","pathAlias","path","fistChild","firstChild","transform","setAttribute","String","XMLSerializer","type","iconSize","iconAnchor","html","serializeToString","TreeHelper","item","this","parent","_parent","child","_children","push","filterFunc","getParent","treeFilter","x","tree","toReturn","treeFind","getChildren","treeEvery","treeSome","getDescendants","CheckProperty","name","options","set","get","value","bubble","unBlock","property","properties","Object","assign","propagation","isBlocked","_turnOn","_turnOff","_propagation","getParents","every","turnOff","call","_callOnSet","hierarchy","isGroup","blockChild","turnOn","unblockChild","_blocked","_block","getValue","_unBlock","forEach","_blockChild","_unBlockChild","prop","block","children","fry","length","EventEmitter","_value","getProperty","undefined","parents","find","parentProp","_prepareValue","update","_fireChangeEvent","_container","parentNode","removeChild","_removeEventsListener","onSet","emitter","emit","label","ItemProperties","propertiesList","_propertiesList","_setPropertyHandler","bind","propOpt","handlers","handler","BaseProperty","_properties","list","map","p","destroy","ID","Item","typeAlias","Point","LineString","MultiPoint","Polygon","MultiLineString","MultiPolygon","GeometryCollection","PAINT","opacity","backAliases","a","layerType","backAlias","findMostFrequentGeomType","arr","counts","maxName","c","maxCount","geometryFilter","geometry","indexOf","convertMapClickEvent","evt","coord","containerPoint","latLng","latlng","lat","lngLat","lng","pixel","left","top","y","source","createControl","control","C","Control","onAdd","element","document","createElement","classList","add","bar","margin","style","marginBottom","marginTop","marginLeft","marginRight","appendChild","DomEvent","onRemove","AttributionControl","customAttribution","attributions","Array","isArray","addAttribution","BaseAdapter","order","pane","exist","getPane","createPane","zIndex","Math","round","_options","GeoJsonAdapter","debounce","updateTooltip","unselect","layer","FeatureGroup","paint","selectedPaint","data","addData","_addMapListener","_removeMapListener","findFeatureFun","_layers","filter","_selectLayer","selected","_setPaintEachLayer","_unSelectLayer","_openedPopup","_removePopup","_selectedLayers","feature","_filteredLayers","fun","_filterFun","_map","remove","filteredLayers","addLayer","removeLayer","addTo","visible","target","cb","def","splice","clearLayers","clearLayer","geoJsonOptions","geojson","detectedType","features","f","geometries","g","console","warn","_data","filterGeometries","_getGeoJsonOptions","GeoJSON","_openPopup","layerDef","_updateTooltip","getLayers","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","setPaint","setSelectedPaint","l","_setPaint","labelField","unbindTooltip","message","permanent","labelOnHover","bindTooltip","sticky","minWidth","autoPan","maxWidth","closeButton_","closeButton","selectOnHover","_closeHandlers","onClose","close","popup","createPopupContent","popupContent","bindPopup","closeOnClick","autoClose","popupOptions","unselectOnClose","getPopup","once","setTimeout","openPopup","closePopup","unbindPopup","index","findIndex","closeHandlers","h","isPaintCallback","isPaint","divIcon","_createDivIcon","setIcon","setStyle","_preparePaint","aliases","readyPaint","radius","to","from","paintProp","defined","toLowerCase","Number","defineProperty","enumerable","lopt","pointToLayer","iconOpt","_createPaintToLayer","_createPaintOptions","onEachFeature","ok","selectable","interactive","on","e","_selectOnLayerClick","_handleMouseEvents","createMouseOptions","layer_","event","onClick","onLayerClick","onMouseOut","onMouseOver","onClick_","isSelected","unselectOnSecondClick","_addUnselectCb","multiselect","popupOnSelect","onSelect","icon","toLIconOpt","DivIcon","className","iconClassName","geoJsonPoint","Marker","CircleMarker","paintOptions","unselectOnClick","$unselect","$updateTooltip","off","callAjax","src","callback","headers","xhr","XMLHttpRequest","open","responseType","setRequestHeader","onload","arrayBufferView","Uint8Array","response","blob","Blob","imageUrl","window","URL","webkitURL","createObjectURL","send","abort","ImageOverlay","_abort","img","_image","LImageOverlay","ImageLayer","url","service","request","version","layers","styles","format","transparent","crs","uppercase","attribution","isBack","minZoom","maxZoom","viewPortBuffer","setViewDelay","_url","params","opts","Util","wmsParams","defaultWmsParams","_currentOverlay","cancelLoad","_currentUrl","moveend","updateWmsParams","getImageUrl","pad","overlay","setOpacity","bringToBack","bringToFront","setZIndex","getZoom","getSize","factor","ceil","wmsVersion","parseFloat","projectionKey","nw","project","getNorthWest","se","getSouthEast","code","bbox","CRS","join","pstr","Layer","ImageAdapter","updateWmsParamsFromOpt","makeRemote","Base","args","_update","GridLayer","coords","done","getTileUrl","tile","crossOrigin","alt","tiles","_tiles","tileZoom","_tileZoom","i","z","el","onerror","complete","DomUtil","TileLayer","TileLayerBase","urlTemplate","TL","TileAdapter","tileLayerOptions","nativeOptions","subdomains","WmsLayer","WmsLayerBase","WmsAdapter","layerOptions","WMS","OsmAdapter","LeafletMapAdapter","layerAdapters","controlAdapters","zoom","center","mb","maxBounds","mapAdapterOptions","Map","attributionControl","zoomControl","defPane","_addMapListeners","getContainer","controlContainer","_controlContainer","Error","cursor","setView","animate","setCenter","panTo","getCenter","setZoom","b","offset","padding","fitBounds","link","title","href","HTMLElement","innerHTML","stopPropagation","addEventListener","removeEventListener","createButtonControl","position","replace","addControl","removeControl","converted","events","locate","locationfound","locationerror","locationFound","stop","_unselectCb","onMapClick","_universalEvents","GEOJSON","IMAGE","TILE","OSM","ZOOM","ATTRIBUTION","NgwError","er","setPrototypeOf","prototype","loadData","NetworkError","location","origin","error","onCancel","method","getResponseText","JSON","parse","responseText","processingResponse","forError","status","upload","onprogress","lengthComputable","percentComplete","loaded","total","onProgress","header","withCredentials","file","FormData","append","d","stringify","templateRe","template","str","key","ResourceNotFoundError","obj","InsufficientPermissionsError","CONNECTORS","addConnector","connector","isObject","val","toString","resourceToQuery","resource","prefix","query","entries","ResourcesControl","Cache","requestOptions","_fetchResourceBy","keyname","_fetchResourceById","CancelablePromise","getOne","then","res","id","getId","resp","_resourceCacheFilter","items","serialization","resources","cache","getResource","put","delete","catch","getMany","matchAll","res1","res2","objectDeepEqual","apiRequest","resolve","reject","connect","apiItems","apiItem","shift","replaceParams","arg","paramArray","paramList","makeQuery","NgwConnector","baseUrl","auth","findConnector","route","routeStr","logout","login","password","getUserInfo","credentials","user","clean","getAuthorizationHeaders","client","makeClientId","Authorization","unescape","encodeURIComponent","btoa","params_","objectRemoveEmpty","makeApiRequest","fixUrlStr","_loadData","getOneOrFail","getIdOrFail","getChildrenOf","httpError","_handleHttpError","exception"],"sourceRoot":""}