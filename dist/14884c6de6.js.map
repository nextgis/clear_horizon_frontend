{"version":3,"file":"14884c6de6.js","mappings":"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","sources":["webpack://clear_horizon/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","animation","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","controllers","__proto__","abstract","Error","DateAdapterBase","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","positions","margin","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","setBoxDims","placeBoxes","userPadding","padding","placed","stackWeight","height1","width1","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","includes","_stack","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","newTicks","majorStart","majorEnd","ceil","round","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","result","increment","len","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","tickLength","getTitleHeight","fallback","font","lineHeight","titleAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","autoSkip","source","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","call","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaults","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","PI","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","closePath","ArcElement","borderJoinStyle","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","capBezierPoints","_path","_points","_segments","_pointsUpdated","segments","interpolate","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","skipX","skipY","bounds","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","boundingRects","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_getTarget","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","addedLabels","addIfString","lastIndexOf","findOrAddLabel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","getTextAlignForAngle","yForAngle","pathRadiusLine","getPointPosition","RadialLinearScale","animate","centerPointLabels","drawingArea","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","additionalAngle","getPointLabelContext","plFont","setCenterPoint","extra","outerDistance","pointLabelPosition","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}