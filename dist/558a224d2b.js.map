{"version":3,"sources":["webpack://clear_horizon/./node_modules/leaflet.polylinemeasure/Leaflet.PolylineMeasure.js","webpack://clear_horizon/./node_modules/regenerator-runtime/runtime.js","webpack://clear_horizon/./node_modules/share-buttons/dist/share-buttons.js"],"names":["L","_unicodeClass","Control","PolylineMeasure","extend","options","position","unit","clearMeasurementsOnStop","showBearings","bearingTextIn","bearingTextOut","tooltipTextFinish","tooltipTextDelete","tooltipTextMove","tooltipTextResume","tooltipTextAdd","measureControlTitleOn","measureControlTitleOff","measureControlLabel","measureControlClasses","showClearControl","clearControlTitle","clearControlLabel","clearControlClasses","showUnitControl","distanceShowSameUnit","unitControlTitle","text","metres","landmiles","nauticalmiles","unitControlLabel","kilometres","feet","tempLine","color","weight","fixedLine","startCircle","fillColor","fillOpacity","radius","intermedCircle","currentCircle","endCircle","_arcpoints","_circleNr","_lineNr","_createControl","label","title","classesToAdd","container","fn","context","anchor","document","createElement","innerHTML","setAttribute","forEach","c","classList","add","DomEvent","on","appendChild","onAdd","map","self","this","_mapdragging","_container","disableClickPropagation","classes","indexOf","push","_arrPolylines","_measureControl","_toggleMeasure","_defaultControlBgColor","style","backgroundColor","_clearMeasureControl","_clearAllMeasurements","_unitControl","_changeUnit","onRemove","_measuring","_saveNonpolylineEvents","_nonpolylineTargets","_map","_targets","_polylineTargets","_savePolylineEvents","_oldCursor","cursor","_doubleClickZoom","doubleClickZoom","enabled","disable","_layerPaint","layerGroup","addTo","_mouseMove","_mouseClick","_onKeyDown","_resetPathVariables","remove","off","_resumeFirstpointMousemove","_resumeFirstpointClick","_dragCircleMousemove","_dragCircleMouseup","enable","_cntCircle","_finishPolylinePath","fire","sttus","undefined","clearLayers","getElementById","line","totalDistance","circleCoords","point","point_index","distance","distanceTo","_updateTooltip","tooltips","bind","e","keyCode","_resumeFirstpointFlag","lineNr","removeLayer","_rubberlinePath2","_tooltipNew","circleMarkers","setStyle","_icon","item","index","lastCircleCoords","mouseCoords","prevTooltip","_currentLine","_getDistance","dist","toFixed","value","_polylineArc","_from","_to","_GCinterpolate","f","A","Math","sin","d","B","x","cos","fromLat","fromLng","toLat","toLng","y","z","latInterpol","PI","atan2","sqrt","pow","lngInterpol","diff","trunc","n","lat","lng","asin","npoints","arrArcCoords","delta","i","coordPair","_GCarc","currentTooltip","total","difference","calcAngle","p1","p2","direction","lat1","lat2","lng1","lng2","brng","angleIn","angleOut","totalRound","differenceRound","textCurrent","textPrev","regExp","RegExp","textReplace","replace","_drawArrow","arcLine","midpoint","round","length","P1","P2","diffLng12","diffLat12","center","cssAngle","iconArrow","divIcon","className","iconSize","iconAnchor","html","newArrowMarker","marker","icon","zIndexOffset","bindTooltip","opacity","_clickedArrow","latlng","last","_rubberlinePath","setLatLngs","slice","setLatLng","distanceSegment","_startLine","clickCoords","polyline","interactive","dashArray","bringToBack","polylineState","id","arrowMarkers","polylinePath","handleMarkers","lastCircleMarker","newCircleMarker","CircleMarker","cntLine","cntCircle","_dragCircle","getNewToolTip","addPoint","equals","arc","shift","getLatLngs","concat","arrowMarker","cntArrow","tooltipNew","finalize","pop","unbindTooltip","circle","arrow","_resumePolylinePath","firstTooltip","_finishCircleScreencoords","containerPoint","originalEvent","ctrlKey","target","arrowNr","removeFrom","splice","lineCoords","arc1","arc2","Array","prototype","apply","_e1","dragging","e2","mouseNewLat","mouseNewLng","latDifference","_mouseStartingLat","lngDifference","_mouseStartingLng","currentCircleCoords","latLng","_circleStartingLat","_circleStartingLng","arcpoints","circleNr","newLineSegment1","newLineSegment2","currentCoords","unshift","e1","shiftKey","newLineSegment","totalDistanceUnfinishedLine","arr","_latlng","Map","mergeOptions","PolylineMeasureControl","addInitHook","polylineMeasureControl","PMControl","addControl","control","polylineMeasure","runtime","exports","Op","Object","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","window","m","s","t","u","join","l","encodeURIComponent","querySelectorAll","r","url","desc","o","h","a","location","href","querySelector","addEventListener","attachEvent","getAttribute","p","print","screenLeft","screen","left","screenTop","top","innerWidth","documentElement","clientWidth","width","innerHeight","clientHeight","height","open","focus","update"],"mappings":"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","file":"558a224d2b.js","sourcesContent":["/*********************************************************\n**                                                      **\n**       Leaflet Plugin \"Leaflet.PolylineMeasure\"       **\n**       Version: 2019-10-05                            **\n**                                                      **\n*********************************************************/\n\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['leaflet'], factory);\n    } else if (typeof module !== 'undefined') {\n        // Node/CommonJS\n        module.exports = factory(require('leaflet'));\n    } else {\n        // Browser globals\n        if (typeof window.L === 'undefined') {\n            throw new Error('Leaflet must be loaded first');\n        }\n        factory(window.L);\n    }\n}(function (L) {\n    var _measureControlId = 'polyline-measure-control';\n    var _unicodeClass = 'polyline-measure-unicode-icon';\n\n    /**\n     * Polyline Measure class\n     * @extends L.Control\n     */\n    L.Control.PolylineMeasure = L.Control.extend({\n        /**\n         * Default options for the tool\n         * @type {Object}\n         */\n        options: {\n            /**\n             * Position to show the control. Possible values are: 'topright', 'topleft', 'bottomright', 'bottomleft'\n             * @type {String}\n             * @default\n             */\n            position: 'topleft',\n            /**\n             * Which units the distances are displayed in. Possible values are: 'metres', 'landmiles', 'nauticalmiles'\n             * @type {String}\n             * @default\n             */\n            unit: 'metres',\n            /**\n             * Clear the measurements on stop\n             * @type {Boolean}\n             * @default\n             */\n            clearMeasurementsOnStop: true,\n            /**\n             * Whether bearings are displayed within the tooltips\n             * @type {Boolean}\n             * @default\n             */\n            showBearings: false,\n             /**\n             * Text for the bearing In\n             * @type {String}\n             * @default\n             */\n            bearingTextIn: 'In',\n            /**\n             * Text for the bearing Out\n             * @type {String}\n             * @default\n             */\n            bearingTextOut: 'Out',\n             /**\n             * Text for last point's tooltip\n             * @type {String}\n             * @default\n             */\n            tooltipTextFinish: 'Click to <b>finish line</b><br>',\n            tooltipTextDelete: 'Press SHIFT-key and click to <b>delete point</b>',\n            tooltipTextMove: 'Click and drag to <b>move point</b><br>',\n            tooltipTextResume: '<br>Press CTRL-key and click to <b>resume line</b>',\n            tooltipTextAdd: 'Press CTRL-key and click to <b>add point</b>',\n\n            /**\n             * Title for the control going to be switched on\n             * @type {String}\n             * @default\n             */\n            measureControlTitleOn: \"Turn on PolylineMeasure\",\n            /**\n             * Title for the control going to be switched off\n             * @type {String}\n             * @default\n             */\n            measureControlTitleOff: \"Turn off PolylineMeasure\",\n            /**\n             * Label of the Measure control (maybe a unicode symbol)\n             * @type {String}\n             * @default\n             */\n            measureControlLabel: '&#8614;',\n            /**\n             * Classes to apply to the Measure control\n             * @type {Array}\n             * @default\n             */\n            measureControlClasses: [],\n            /**\n             * Show a control to clear all the measurements\n             * @type {Boolean}\n             * @default\n             */\n            showClearControl: false,\n            /**\n             * Title text to show on the Clear measurements control button\n             * @type {String}\n             * @default\n             */\n            clearControlTitle: 'Clear Measurements',\n            /**\n             * Label of the Clear control (maybe a unicode symbol)\n             * @type {String}\n             * @default\n             */\n            clearControlLabel: '&times;',\n            /**\n             * Classes to apply to Clear control button\n             * @type {Array}\n             * @default\n             */\n            clearControlClasses: [],\n            /**\n             * Show a control to change the units of measurements\n             * @type {Boolean}\n             * @default\n             */\n            showUnitControl: false,\n            /**\n             * Keep same unit in tooltips in case of distance less then 1 km/mi/nm\n             * @type {Boolean}\n             * @default\n             */\n            distanceShowSameUnit: false,\n            /**\n             * Title texts to show on the Unit Control button\n             * @type {Object}\n             * @default\n             */\n            unitControlTitle: {\n               text: 'Change Units',\n               metres: 'metres',\n               landmiles: 'land miles',\n               nauticalmiles: 'nautical miles'\n            },\n            /**\n             * Unit symbols to show in the Unit Control button and measurement labels\n             * @type {Object}\n             * @default\n             */\n            unitControlLabel: {\n               metres: 'm',\n               kilometres: 'km',\n               feet: 'ft',\n               landmiles: 'mi',\n               nauticalmiles: 'nm'\n            },\n            /**\n             * Styling settings for the temporary dashed rubberline\n             * @type {Object}\n             */\n            tempLine: {\n                /**\n                 * Dashed line color\n                 * @type {String}\n                 * @default\n                 */\n                color: '#00f',\n                /**\n                 * Dashed line weight\n                 * @type {Number}\n                 * @default\n                 */\n                weight: 2\n            },\n            /**\n             * Styling for the fixed polyline\n             * @type {Object}\n             */\n            fixedLine: {\n                /**\n                 * Solid line color\n                 * @type {String}\n                 * @default\n                 */\n                color: '#006',\n                /**\n                 * Solid line weight\n                 * @type {Number}\n                 * @default\n                 */\n                weight: 2\n            },\n            /**\n             * Style settings for circle marker indicating the starting point of the polyline\n             * @type {Object}\n             */\n            startCircle: {\n                /**\n                 * Color of the border of the circle\n                 * @type {String}\n                 * @default\n                 */\n                color: '#000',\n                /**\n                 * Weight of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                weight: 1,\n                /**\n                 * Fill color of the circle\n                 * @type {String}\n                 * @default\n                 */\n                fillColor: '#0f0',\n                /**\n                 * Fill opacity of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                fillOpacity: 1,\n                /**\n                 * Radius of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                radius: 3\n            },\n            /**\n             * Style settings for all circle markers between startCircle and endCircle\n             * @type {Object}\n             */\n            intermedCircle: {\n                /**\n                 * Color of the border of the circle\n                 * @type {String}\n                 * @default\n                 */\n                color: '#000',\n                /**\n                 * Weight of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                weight: 1,\n                /**\n                 * Fill color of the circle\n                 * @type {String}\n                 * @default\n                 */\n                fillColor: '#ff0',\n                /**\n                 * Fill opacity of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                fillOpacity: 1,\n                /**\n                 * Radius of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                radius: 3\n            },\n            /**\n             * Style settings for circle marker indicating the latest point of the polyline during drawing a line\n             * @type {Object}\n             */\n            currentCircle: {\n                /**\n                 * Color of the border of the circle\n                 * @type {String}\n                 * @default\n                 */\n                color: '#000',\n                /**\n                 * Weight of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                weight: 1,\n                /**\n                 * Fill color of the circle\n                 * @type {String}\n                 * @default\n                 */\n                fillColor: '#f0f',\n                /**\n                 * Fill opacity of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                fillOpacity: 1,\n                /**\n                 * Radius of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                radius: 6\n            },\n            /**\n             * Style settings for circle marker indicating the end point of the polyline\n             * @type {Object}\n             */\n            endCircle: {\n                /**\n                 * Color of the border of the circle\n                 * @type {String}\n                 * @default\n                 */\n                color: '#000',\n                /**\n                 * Weight of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                weight: 1,\n                /**\n                 * Fill color of the circle\n                 * @type {String}\n                 * @default\n                 */\n                fillColor: '#f00',\n                /**\n                 * Fill opacity of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                fillOpacity: 1,\n                /**\n                 * Radius of the circle\n                 * @type {Number}\n                 * @default\n                 */\n                radius: 3\n            }\n        },\n\n        _arcpoints: 100,  // 100 points = 99 line segments. lower value to make arc less accurate or increase value to make it more accurate.\n        _circleNr: -1,\n        _lineNr: -1,\n\n        /**\n         * Create a control button\n         * @param {String}      label           Label to add\n         * @param {String}      title           Title to show on hover\n         * @param {Array}       classesToAdd    Collection of classes to add\n         * @param {Element}     container       Parent element\n         * @param {Function}    fn              Callback function to run\n         * @param {Object}      context         Context\n         * @returns {Element}                   Created element\n         * @private\n         */\n        _createControl: function (label, title, classesToAdd, container, fn, context) {\n            var anchor = document.createElement('a');\n            anchor.innerHTML = label;\n            anchor.setAttribute('title', title);\n            classesToAdd.forEach(function(c) {\n                anchor.classList.add(c);\n            });\n            L.DomEvent.on (anchor, 'click', fn, context);\n            container.appendChild(anchor);\n            return anchor;\n        },\n\n        /**\n         * Method to fire on add to map\n         * @param {Object}      map     Map object\n         * @returns {Element}           Containing element\n         */\n        onAdd: function(map) {\n            var self = this\n            // needed to avoid creating points by mouseclick during dragging the map\n    \t    map.on('movestart ', function() {\n    \t\t  self._mapdragging = true\n    \t    })\n            this._container = document.createElement('div');\n            this._container.classList.add('leaflet-bar');\n            L.DomEvent.disableClickPropagation(this._container); // otherwise drawing process would instantly start at controls' container or double click would zoom-in map\n            var title = this.options.measureControlTitleOn;\n            var label = this.options.measureControlLabel;\n            var classes = this.options.measureControlClasses;\n            if (label.indexOf('&') != -1) {\n                classes.push(_unicodeClass);\n            }\n\n            // initialize state\n            this._arrPolylines = [];\n            this._measureControl = this._createControl (label, title, classes, this._container, this._toggleMeasure, this);\n            this._defaultControlBgColor = this._measureControl.style.backgroundColor;\n            this._measureControl.setAttribute('id', _measureControlId);\n            if (this.options.showClearControl) {\n                var title = this.options.clearControlTitle;\n                var label = this.options.clearControlLabel;\n                var classes = this.options.clearControlClasses;\n                if (label.indexOf('&') != -1) {\n                    classes.push(_unicodeClass);\n                }\n                this._clearMeasureControl = this._createControl (label, title, classes, this._container, this._clearAllMeasurements, this);\n                this._clearMeasureControl.classList.add('polyline-measure-clearControl')\n            }\n            if (this.options.showUnitControl) {\n                if (this.options.unit == \"metres\") {\n                    var label = this.options.unitControlLabel.metres;\n                    var title = this.options.unitControlTitle.text + \" [\" + this.options.unitControlTitle.metres  + \"]\";\n                }  else if  (this.options.unit == \"landmiles\") {\n                    var label = this.options.unitControlLabel.landmiles;\n                    var title = this.options.unitControlTitle.text + \" [\" + this.options.unitControlTitle.landmiles  + \"]\";\n                } else {\n                    var label = this.options.unitControlLabel.nauticalmiles;\n                    var title = this.options.unitControlTitle.text + \" [\" + this.options.unitControlTitle.nauticalmiles  + \"]\";\n                }\n                var classes = [];\n                this._unitControl = this._createControl (label, title, classes, this._container, this._changeUnit, this);\n                this._unitControl.setAttribute ('id', 'unitControlId');\n            }\n            return this._container;\n        },\n\n        /**\n         * Method to fire on remove from map\n         */\n        onRemove: function () {\n            if (this._measuring) {\n                this._toggleMeasure();\n            }\n        },\n\n        // turn off all Leaflet-own events of markers (popups, tooltips). Needed to allow creating points on top of markers\n        _saveNonpolylineEvents: function () {\n            this._nonpolylineTargets = this._map._targets;\n            if (typeof this._polylineTargets !== 'undefined') {\n                this._map._targets = this._polylineTargets;\n            } else {\n                this._map._targets ={};\n            }\n        },\n\n        // on disabling the measure add-on, save Polyline-measure events and enable the former Leaflet-own events again\n        _savePolylineEvents: function () {\n                this._polylineTargets = this._map._targets;\n                this._map._targets = this._nonpolylineTargets;\n        },\n\n        /**\n         * Toggle the measure functionality on or off\n         * @private\n         */\n        _toggleMeasure: function () {\n            this._measuring = !this._measuring;\n            if (this._measuring) {   // if measuring is going to be switched on\n                this._mapdragging = false;\n                this._saveNonpolylineEvents ();\n                this._measureControl.classList.add ('polyline-measure-controlOnBgColor');\n                this._measureControl.style.backgroundColor = this.options.backgroundColor;\n                this._measureControl.title = this.options.measureControlTitleOff;\n                this._oldCursor = this._map._container.style.cursor;          // save former cursor type\n                this._map._container.style.cursor = 'crosshair';\n                this._doubleClickZoom = this._map.doubleClickZoom.enabled();  // save former status of doubleClickZoom\n                this._map.doubleClickZoom.disable();\n                // create LayerGroup \"layerPaint\" (only) the first time Measure Control is switched on\n                if (!this._layerPaint) {\n                    this._layerPaint = L.layerGroup().addTo(this._map);\n                }\n                this._map.on ('mousemove', this._mouseMove, this);   //  enable listing to 'mousemove', 'click', 'keydown' events\n                this._map.on ('click', this._mouseClick, this);\n                L.DomEvent.on (document, 'keydown', this._onKeyDown, this);\n                this._resetPathVariables();\n            } else {   // if measuring is going to be switched off\n                this._savePolylineEvents ();\n                this._measureControl.classList.remove ('polyline-measure-controlOnBgColor');\n                this._measureControl.style.backgroundColor = this._defaultControlBgColor;\n                this._measureControl.title = this.options.measureControlTitleOn;\n                this._map._container.style.cursor = this._oldCursor;\n                this._map.off ('mousemove', this._mouseMove, this);\n                this._map.off ('click', this._mouseClick, this);\n                this._map.off ('mousemove', this._resumeFirstpointMousemove, this);\n                this._map.off ('click', this._resumeFirstpointClick, this);\n                this._map.off ('mousemove', this._dragCircleMousemove, this);\n                this._map.off ('mouseup', this._dragCircleMouseup, this);\n                L.DomEvent.off (document, 'keydown', this._onKeyDown, this);\n                if(this._doubleClickZoom) {\n                    this._map.doubleClickZoom.enable();\n                }\n                if(this.options.clearMeasurementsOnStop && this._layerPaint) {\n                    this._clearAllMeasurements();\n                }\n                // to remove temp. Line if line at the moment is being drawn and not finished while clicking the control\n                if (this._cntCircle !== 0) {\n                    this._finishPolylinePath();\n                }\n            }\n            // allow easy to connect the measure control to the app, f.e. to disable the selection on the map when the measurement is turned on\n            this._map.fire('polylinemeasure:toggle', {sttus: this._measuring});\n        },\n\n        /**\n         * Clear all measurements from the map\n         */\n        _clearAllMeasurements: function() {\n            if ((this._cntCircle !== undefined) && (this._cntCircle !== 0)) {\n                    this._finishPolylinePath();\n            }\n            if (this._layerPaint) {\n                this._layerPaint.clearLayers();\n            }\n            this._arrPolylines = [];\n        },\n\n        _changeUnit: function() {\n            if (this.options.unit == \"metres\") {\n                this.options.unit = \"landmiles\";\n                document.getElementById(\"unitControlId\").innerHTML = this.options.unitControlLabel.landmiles;\n                this._unitControl.title = this.options.unitControlTitle.text +\" [\" + this.options.unitControlTitle.landmiles  + \"]\";\n            } else if (this.options.unit == \"landmiles\") {\n                this.options.unit = \"nauticalmiles\";\n                document.getElementById(\"unitControlId\").innerHTML = this.options.unitControlLabel.nauticalmiles;\n                this._unitControl.title = this.options.unitControlTitle.text +\" [\" + this.options.unitControlTitle.nauticalmiles  + \"]\";\n            } else {\n                this.options.unit = \"metres\";\n                document.getElementById(\"unitControlId\").innerHTML = this.options.unitControlLabel.metres;\n                this._unitControl.title = this.options.unitControlTitle.text +\" [\" + this.options.unitControlTitle.metres  + \"]\";\n            }\n            this._arrPolylines.map (function(line) {\n                var totalDistance = 0;\n                line.circleCoords.map (function(point, point_index) {\n                    if (point_index >= 1) {\n                        var distance = line.circleCoords [point_index - 1].distanceTo (line.circleCoords [point_index]);\n                        totalDistance += distance;\n                        this._updateTooltip (line.tooltips [point_index], line.tooltips [point_index - 1], totalDistance, distance, line.circleCoords [point_index - 1], line.circleCoords [point_index]);\n                    }\n                }.bind(this));\n            }.bind(this));\n        },\n\n        /**\n         * Event to fire when a keyboard key is depressed.\n         * Currently only watching for ESC key (= keyCode 27). 1st press finishes line, 2nd press turns Measuring off.\n         * @param {Object} e Event\n         * @private\n         */\n        _onKeyDown: function (e) {\n            if (e.keyCode === 27) {\n                // if resuming a line at its first point is active\n                if (this._resumeFirstpointFlag === true) {\n                    this._resumeFirstpointFlag = false;\n                    var lineNr = this._lineNr;\n                    this._map.off ('mousemove', this._resumeFirstpointMousemove, this);\n                    this._map.off ('click', this._resumeFirstpointClick, this);\n                    this._layerPaint.removeLayer (this._rubberlinePath2);\n                    this._layerPaint.removeLayer (this._tooltipNew);\n                    this._arrPolylines[lineNr].circleMarkers [0].setStyle (this.options.startCircle);\n                    var text = '';\n                    var totalDistance = 0;\n                    if (this.options.showBearings === true) {\n                        text = this.options.bearingTextIn+':---°<br>'+this.options.bearingTextOut+':---°';\n                    }\n                    text = text + '<div class=\"polyline-measure-tooltip-difference\">+' + '0</div>';\n                    text = text + '<div class=\"polyline-measure-tooltip-total\">' + '0</div>';\n                    this._arrPolylines[lineNr].tooltips [0]._icon.innerHTML = text;\n                    this._arrPolylines[lineNr].tooltips.map (function (item, index) {\n                        if (index >= 1) {\n                            var distance = this._arrPolylines[lineNr].circleCoords[index-1].distanceTo (this._arrPolylines[lineNr].circleCoords[index]);\n                            var lastCircleCoords = this._arrPolylines[lineNr].circleCoords[index - 1];\n                            var mouseCoords = this._arrPolylines[lineNr].circleCoords[index];\n                            totalDistance += distance;\n                            var prevTooltip = this._arrPolylines[lineNr].tooltips[index-1]\n                            this._updateTooltip (item, prevTooltip, totalDistance, distance, lastCircleCoords, mouseCoords);\n                        }\n                    }.bind (this));\n                    this._map.on ('mousemove', this._mouseMove, this);\n                    return\n                }\n                // if NOT drawing a line, ESC will directly switch of measuring\n                if (!this._currentLine) {\n                    this._toggleMeasure();\n                } else {\n                    this._finishPolylinePath(e);\n                }\n            }\n        },\n\n        /**\n         * Get the distance in the format specified in the options\n         * @param {Number} distance Distance to convert\n         * @returns {{value: *, unit: *}}\n         * @private\n         */\n        _getDistance: function (distance) {\n            var dist = distance;\n            var unit;\n            if (this.options.unit === 'nauticalmiles') {\n                unit = this.options.unitControlLabel.nauticalmiles;\n                if (dist >= 185200) {\n                    dist = (dist/1852).toFixed(0);\n                } else if (dist >= 18520) {\n                    dist = (dist/1852).toFixed(1);\n                } else if (dist >= 1852) {\n                    dist = (dist/1852).toFixed(2);\n                } else  {\n                    if (this.options.distanceShowSameUnit) {\n                        dist = (dist/1852).toFixed(3);\n                    } else {\n                        dist = (dist/0.3048).toFixed(0);\n                        unit = this.options.unitControlLabel.feet;\n                    }\n                }\n            } else if (this.options.unit === 'landmiles') {\n                unit = this.options.unitControlLabel.landmiles;\n                if (dist >= 160934.4) {\n                    dist = (dist/1609.344).toFixed(0);\n                } else if (dist >= 16093.44) {\n                    dist = (dist/1609.344).toFixed(1);\n                } else if (dist >= 1609.344) {\n                    dist = (dist/1609.344).toFixed(2);\n                } else {\n                    if (this.options.distanceShowSameUnit) {\n                        dist = (dist/1609.344).toFixed(3);\n                    } else {\n                        dist = (dist/0.3048).toFixed(0);\n                        unit = this.options.unitControlLabel.feet;\n                    }\n                }\n            }\n            else {\n                unit = this.options.unitControlLabel.kilometres;\n                if (dist >= 100000) {\n                    dist = (dist/1000).toFixed(0);\n                } else if (dist >= 10000) {\n                    dist = (dist/1000).toFixed(1);\n                } else if (dist >= 1000) {\n                    dist = (dist/1000).toFixed(2);\n                } else {\n                    if (this.options.distanceShowSameUnit) {\n                        dist = (dist/1000).toFixed(3);\n                    } else {\n                        dist = (dist).toFixed(0);\n                        unit = this.options.unitControlLabel.metres;\n                    }\n                }\n            }\n            return {value:dist, unit:unit};\n        },\n\n        /**\n         * Calculate Great-circle Arc (= shortest distance on a sphere like the Earth) between two coordinates\n         * formulas: http://www.edwilliams.org/avform.htm\n         * @private\n         */\n        _polylineArc: function (_from, _to) {\n            function _GCinterpolate (f) {\n                var A = Math.sin((1 - f) * d) / Math.sin(d);\n                var B = Math.sin(f * d) / Math.sin(d);\n                var x = A * Math.cos(fromLat) * Math.cos(fromLng) + B * Math.cos(toLat) * Math.cos(toLng);\n                var y = A * Math.cos(fromLat) * Math.sin(fromLng) + B * Math.cos(toLat) * Math.sin(toLng);\n                var z = A * Math.sin(fromLat) + B * Math.sin(toLat);\n                // atan2 better than atan-function cause results are from -pi to +pi\n                // => results of latInterpol, lngInterpol always within range -180° ... +180°  => conversion into values < -180° or > + 180° has to be done afterwards\n                var latInterpol = 180 / Math.PI * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n                var lngInterpol = 180 / Math.PI * Math.atan2(y, x);\n                // don't split polyline if it crosses dateline ( -180° or +180°).  Without the polyline would look like: +179° ==> +180° ==> -180° ==> -179°...\n                // algo: if difference lngInterpol-from.lng is > 180° there's been an unwanted split from +180 to -180 cause an arc can never span >180°\n                var diff = lngInterpol-fromLng*180/Math.PI;\n                function trunc(n) { return Math[n > 0 ? \"floor\" : \"ceil\"](n); }   // alternatively we could use the new Math.trunc method, but Internet Explorer doesn't know it\n                if (diff < 0) {\n                    lngInterpol = lngInterpol  - trunc ((diff - 180)/ 360) * 360;\n                } else {\n                    lngInterpol = lngInterpol  - trunc ((diff +180)/ 360) * 360;\n                }\n                return [latInterpol, lngInterpol];\n            }\n\n            function _GCarc (npoints) {\n                var arrArcCoords = [];\n                var delta = 1.0 / (npoints-1 );\n                // first point of Arc should NOT be returned\n                for (var i = 0; i < npoints; i++) {\n                    var step = delta * i;\n                    var coordPair = _GCinterpolate (step);\n                    arrArcCoords.push (coordPair);\n                }\n                return arrArcCoords;\n            }\n\n            var fromLat = _from.lat;  // work with with copies of object's elements _from.lat and _from.lng, otherwise they would get modiefied due to call-by-reference on Objects in Javascript\n            var fromLng = _from.lng;\n            var toLat = _to.lat;\n            var toLng = _to.lng;\n            fromLat=fromLat * Math.PI / 180;\n            fromLng=fromLng * Math.PI / 180;\n            toLat=toLat * Math.PI / 180;\n            toLng=toLng * Math.PI / 180;\n            var d = 2.0 * Math.asin(Math.sqrt(Math.pow (Math.sin((fromLat - toLat) / 2.0), 2) + Math.cos(fromLat) *  Math.cos(toLat) *  Math.pow(Math.sin((fromLng - toLng) / 2.0), 2)));\n            var arrLatLngs;\n            if (d === 0) {\n                arrLatLngs = [[fromLat, fromLng]];\n            } else {\n                arrLatLngs = _GCarc(this._arcpoints);\n            }\n            return arrLatLngs;\n        },\n\n        /**\n         * Update the tooltip distance\n         * @param {Number} total        Total distance\n         * @param {Number} difference   Difference in distance between 2 points\n         * @private\n         */\n        _updateTooltip: function (currentTooltip, prevTooltip, total, difference, lastCircleCoords, mouseCoords) {\n            // Explanation of formula: http://www.movable-type.co.uk/scripts/latlong.html\n            var calcAngle = function (p1, p2, direction) {\n                var lat1 = p1.lat / 180 * Math.PI;\n                var lat2 = p2.lat / 180 * Math.PI;\n                var lng1 = p1.lng / 180 * Math.PI;\n                var lng2 = p2.lng / 180 * Math.PI;\n                var y = Math.sin(lng2-lng1) * Math.cos(lat2);\n                var x = Math.cos(lat1)*Math.sin(lat2) - Math.sin(lat1)*Math.cos(lat2)*Math.cos(lng2-lng1);\n                if (direction === \"inbound\") {\n                    var brng = (Math.atan2(y, x) * 180 / Math.PI + 180).toFixed(0);\n                } else {\n                    var brng = (Math.atan2(y, x) * 180 / Math.PI + 360).toFixed(0);\n                }\n                return (brng % 360);\n            }\n\n            var angleIn = calcAngle (mouseCoords, lastCircleCoords, \"inbound\");\n            var angleOut = calcAngle (lastCircleCoords, mouseCoords, \"outbound\");\n            var totalRound = this._getDistance (total);\n            var differenceRound = this._getDistance (difference);\n            var textCurrent = '';\n            if (differenceRound.value > 0 ) {\n                if (this.options.showBearings === true) {\n                     textCurrent = this.options.bearingTextIn + ': ' + angleIn + '°<br>'+this.options.bearingTextOut+':---°';\n                }\n                textCurrent += '<div class=\"polyline-measure-tooltip-difference\">+' + differenceRound.value + '&nbsp;' +  differenceRound.unit + '</div>';\n            }\n            textCurrent += '<div class=\"polyline-measure-tooltip-total\">' + totalRound.value + '&nbsp;' +  totalRound.unit + '</div>';\n            currentTooltip._icon.innerHTML = textCurrent;\n            if ((this.options.showBearings === true) && (prevTooltip)) {\n                var textPrev = prevTooltip._icon.innerHTML;\n                var regExp = new RegExp(this.options.bearingTextOut + '.*\\°');\n                var textReplace = textPrev.replace(regExp, this.options.bearingTextOut + ': ' + angleOut + \"°\");\n                prevTooltip._icon.innerHTML = textReplace;\n            }\n        },\n\n        _drawArrow: function (arcLine) {\n            var midpoint = Math.round(arcLine.length/2);\n            var P1 = arcLine[midpoint-1];\n            var P2 = arcLine[midpoint];\n            var diffLng12 = P2[1] - P1[1];\n            var diffLat12 = P2[0] - P1[0];\n            var center = [P1[0] + diffLat12/2, P1[1] + diffLng12/2];  // center of Great-circle distance, NOT of the arc on a Mercator map! reason: a) to complicated b) map not always Mercator c) good optical feature to see where real center of distance is not the \"virtual\" warped arc center due to Mercator projection\n                // angle just an aprroximation, which could be somewhat off if Line runs near high latitudes. Use of *geographical coords* for line segment P1 to P2 is best method. Use of *Pixel coords* for just one arc segement P1 to P2 could create for short lines unexact rotation angles, and the use Use of Pixel coords between endpoints [0] to [99] (in case of 100-point-arc) results in even more rotation difference for high latitudes as with geogrpaphical coords-method\n            var cssAngle = -Math.atan2(diffLat12, diffLng12)*57.29578   // convert radiant to degree as needed for use as CSS value; cssAngle is opposite to mathematical angle.\n            var iconArrow = L.divIcon ({\n                className: \"\",  // to avoid getting a default class with paddings and borders assigned by Leaflet\n                iconSize: [16, 16],\n                iconAnchor: [8, 8],\n                    // html : \"<img src='iconArrow.png' style='background:green; height:100%; vertical-align:top; transform:rotate(\"+ cssAngle +\"deg)'>\"  <<=== alternative method by the use of an image instead of a Unicode symbol.\n                html : \"<div style = 'font-size: 16px; line-height: 16px; vertical-align:top; transform: rotate(\"+ cssAngle +\"deg)'>&#x27a4;</div>\"   // best results if iconSize = font-size = line-height and iconAnchor font-size/2 .both values needed to position symbol in center of L.divIcon for all font-sizes.\n            });\n            var newArrowMarker = L.marker (center, {icon: iconArrow, zIndexOffset:-50}).addTo(this._layerPaint);  // zIndexOffset to draw arrows below tooltips\n            if (!this._currentLine){  // just bind tooltip if not drawing line anymore, cause following the instruction of tooltip is just possible when not drawing a line\n                newArrowMarker.bindTooltip (this.options.tooltipTextAdd, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n            }\n            newArrowMarker.on ('click', this._clickedArrow, this);\n            return newArrowMarker;\n        },\n\n        /**\n         * Event to fire on mouse move\n         * @param {Object} e Event\n         * @private\n         */\n        _mouseMove: function (e) {\n            var mouseCoords = e.latlng;\n            this._map.on ('click', this._mouseClick, this);  // necassary for _dragCircle. If switched on already within _dragCircle an unwanted click is fired at the end of the drag.\n            if(!mouseCoords || !this._currentLine) {\n                return;\n            }\n            var lastCircleCoords = this._currentLine.circleCoords.last();\n            this._rubberlinePath.setLatLngs (this._polylineArc (lastCircleCoords, mouseCoords));\n            var currentTooltip = this._currentLine.tooltips.last();\n            var prevTooltip = this._currentLine.tooltips.slice(-2,-1)[0];\n            currentTooltip.setLatLng (mouseCoords);\n            var distanceSegment = mouseCoords.distanceTo (lastCircleCoords);\n            this._updateTooltip (currentTooltip, prevTooltip, this._currentLine.distance + distanceSegment, distanceSegment, lastCircleCoords, mouseCoords);\n        },\n\n        _startLine: function (clickCoords) {\n            var icon = L.divIcon({\n                className: 'polyline-measure-tooltip',\n                iconAnchor: [-4, -4]\n            });\n            var last = function() {\n                return this.slice(-1)[0];\n            };\n            this._rubberlinePath = L.polyline ([], {\n                // Style of temporary, dashed line while moving the mouse\n                color: this.options.tempLine.color,\n                weight: this.options.tempLine.weight,\n                interactive: false,\n                dashArray: '8,8'\n            }).addTo(this._layerPaint).bringToBack();\n\n            var polylineState = this;   // use \"polylineState\" instead of \"this\" to allow measuring on 2 different maps the same time\n\n            this._currentLine = {\n                id: 0,\n                circleCoords: [],\n                circleMarkers: [],\n                arrowMarkers: [],\n                tooltips: [],\n                distance: 0,\n\n                polylinePath: L.polyline([], {\n                    // Style of fixed, polyline after mouse is clicked\n                    color: this.options.fixedLine.color,\n                    weight: this.options.fixedLine.weight,\n                    interactive: false\n                }).addTo(this._layerPaint).bringToBack(),\n\n                handleMarkers: function (latlng) {\n                    // update style on previous marker\n                    var lastCircleMarker = this.circleMarkers.last();\n                    if (lastCircleMarker) {\n                        lastCircleMarker.bindTooltip (polylineState.options.tooltipTextDelete, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n                        lastCircleMarker.off ('click', polylineState._finishPolylinePath, polylineState);\n                        if (this.circleMarkers.length === 1) {\n                            lastCircleMarker.setStyle (polylineState.options.startCircle);\n                        } else {\n                            lastCircleMarker.setStyle (polylineState.options.intermedCircle);\n                        }\n                    }\n                    var newCircleMarker = new L.CircleMarker (latlng, polylineState.options.currentCircle).addTo(polylineState._layerPaint);\n                    newCircleMarker.bindTooltip (polylineState.options.tooltipTextFinish + polylineState.options.tooltipTextDelete, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n                    newCircleMarker.cntLine = polylineState._currentLine.id;\n                    newCircleMarker.cntCircle = polylineState._cntCircle;\n                    polylineState._cntCircle++;\n                    newCircleMarker.on ('mousedown', polylineState._dragCircle, polylineState);\n                    newCircleMarker.on ('click', polylineState._finishPolylinePath, polylineState);\n                    this.circleMarkers.push (newCircleMarker);\n                },\n\n                getNewToolTip: function(latlng) {\n                    return L.marker (latlng, {\n                        icon: icon,\n                        interactive: false\n                    });\n                },\n\n                addPoint: function (mouseCoords) {\n                    var lastCircleCoords = this.circleCoords.last();\n                    if (lastCircleCoords && lastCircleCoords.equals (mouseCoords)) {    // don't add a new circle if the click was onto the last circle\n                        return;\n                    }\n                    this.circleCoords.push (mouseCoords);\n                    // update polyline\n                    if (this.circleCoords.length > 1) {\n                        var arc = polylineState._polylineArc (lastCircleCoords, mouseCoords);\n                        if (this.circleCoords.length > 2) {\n                            arc.shift();  // remove first coordinate og the arc, cause it is identical with last coordinate of previous arc\n                        }\n                        this.polylinePath.setLatLngs (this.polylinePath.getLatLngs().concat(arc));\n                        // following lines needed especially for Mobile Browsers where we just use mouseclicks. No mousemoves, no tempLine.\n                        var arrowMarker = polylineState._drawArrow (arc);\n                        arrowMarker.cntLine = polylineState._currentLine.id;\n                        arrowMarker.cntArrow = polylineState._cntCircle - 1;\n                        polylineState._currentLine.arrowMarkers.push (arrowMarker);\n                        var distanceSegment = lastCircleCoords.distanceTo (mouseCoords);\n                        this.distance += distanceSegment;\n                        var currentTooltip = polylineState._currentLine.tooltips.last();\n                        var prevTooltip = polylineState._currentLine.tooltips.slice(-1,-2)[0];\n                        polylineState._updateTooltip (currentTooltip, prevTooltip, this.distance, distanceSegment, lastCircleCoords, mouseCoords);\n                    }\n                    // update last tooltip with final value\n                    if (currentTooltip) {\n                        currentTooltip.setLatLng (mouseCoords);\n                    }\n                    // add new tooltip to update on mousemove\n                    var tooltipNew = this.getNewToolTip(mouseCoords);\n                    tooltipNew.addTo(polylineState._layerPaint);\n                    this.tooltips.push (tooltipNew);\n                    this.handleMarkers (mouseCoords);\n                },\n\n                finalize: function() {\n                    // remove tooltip created by last click\n                    polylineState._layerPaint.removeLayer (this.tooltips.last());\n                    this.tooltips.pop();\n                    // remove temporary rubberline\n                    polylineState._layerPaint.removeLayer (polylineState._rubberlinePath);\n                    if (this.circleCoords.length > 1) {\n                        this.tooltips.last()._icon.classList.add('polyline-measure-tooltip-end'); // add Class e.g. another background-color to the Previous Tooltip (which is the last fixed tooltip, cause the moving tooltip is being deleted later)\n                        var lastCircleMarker = this.circleMarkers.last()\n                        lastCircleMarker.setStyle (polylineState.options.endCircle);\n                        // use Leaflet's own tooltip method to shwo a popuo tooltip if user hovers the last circle of a polyline\n                        lastCircleMarker.unbindTooltip ();  // to close the opened Tooltip after it's been opened after click onto point to finish the line\n                        polylineState._currentLine.circleMarkers.map (function (circle) {circle.bindTooltip (polylineState.options.tooltipTextMove + polylineState.options.tooltipTextDelete, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'})});\n                        polylineState._currentLine.circleMarkers[0].bindTooltip (polylineState.options.tooltipTextMove + polylineState.options.tooltipTextDelete + polylineState.options.tooltipTextResume, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n                        lastCircleMarker.bindTooltip (polylineState.options.tooltipTextMove + polylineState.options.tooltipTextDelete + polylineState.options.tooltipTextResume, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n                        polylineState._currentLine.arrowMarkers.map (function (arrow) {arrow.bindTooltip (polylineState.options.tooltipTextAdd, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'})});\n                        lastCircleMarker.off ('click', polylineState._finishPolylinePath, polylineState);\n                        lastCircleMarker.on ('click', polylineState._resumePolylinePath, polylineState);\n                        polylineState._arrPolylines.push(this);\n                    } else {\n                        // if there is only one point, just clean it up\n                        polylineState._layerPaint.removeLayer (this.circleMarkers.last());\n                        polylineState._layerPaint.removeLayer (this.tooltips.last());\n                    }\n                    polylineState._resetPathVariables();\n                }\n            };\n\n            var firstTooltip = L.marker (clickCoords, {\n                icon: icon,\n                interactive: false\n            })\n            firstTooltip.addTo(this._layerPaint);\n            var text = '';\n            if (this.options.showBearings === true) {\n                text = this.options.bearingTextIn+':---°<br>'+this.options.bearingTextOut+':---°';\n            }\n            text = text + '<div class=\"polyline-measure-tooltip-difference\">+' + '0</div>';\n            text = text + '<div class=\"polyline-measure-tooltip-total\">' + '0</div>';\n            firstTooltip._icon.innerHTML = text;\n            this._currentLine.tooltips.push (firstTooltip);\n            this._currentLine.circleCoords.last = last;\n            this._currentLine.tooltips.last = last;\n            this._currentLine.circleMarkers.last = last;\n            this._currentLine.id = this._arrPolylines.length;\n        },\n\n        /**\n         * Event to fire on mouse click\n         * @param {Object} e Event\n         * @private\n         */\n        _mouseClick: function (e) {\n            // skip if there are no coords provided by the event, or this event's screen coordinates match those of finishing CircleMarker for the line we just completed\n            if (!e.latlng || (this._finishCircleScreencoords && this._finishCircleScreencoords.equals(e.containerPoint))) {\n                return;\n            }\n\n            if (!this._currentLine && !this._mapdragging) {\n                this._startLine (e.latlng);\n            }\n            // just create a point if the map isn't dragged during the mouseclick.\n            if (!this._mapdragging) {\n                this._currentLine.addPoint (e.latlng);\n            } else {\n                this._mapdragging = false; // this manual setting to \"false\" needed, instead of a \"moveend\"-Event. Cause the mouseclick of a \"moveend\"-event immediately would create a point too the same time.\n            }\n        },\n\n        /**\n         * Finish the drawing of the path by clicking onto the last circle or pressing ESC-Key\n         * @private\n         */\n        _finishPolylinePath: function (e) {\n            this._currentLine.finalize();\n            if (e) {\n                this._finishCircleScreencoords = e.containerPoint;\n            }\n        },\n\n        /**\n         * Resume the drawing of a polyline by pressing CTRL-Key and clicking onto the last circle\n         * @private\n         */\n        _resumePolylinePath: function (e) {\n            if (e.originalEvent.ctrlKey === true) {    // just resume if user pressed the CTRL-Key while clicking onto the last circle\n                this._currentLine = this._arrPolylines [e.target.cntLine];\n                this._rubberlinePath = L.polyline ([], {\n                    // Style of temporary, rubberline while moving the mouse\n                    color: this.options.tempLine.color,\n                    weight: this.options.tempLine.weight,\n                    interactive: false,\n                    dashArray: '8,8'\n                }).addTo(this._layerPaint).bringToBack();\n                this._currentLine.tooltips.last()._icon.classList.remove ('polyline-measure-tooltip-end');   // remove extra CSS-class of previous, last tooltip\n                var tooltipNew = this._currentLine.getNewToolTip (e.latlng);\n                tooltipNew.addTo (this._layerPaint);\n                this._currentLine.tooltips.push(tooltipNew);\n                this._currentLine.circleMarkers.last().unbindTooltip();   // remove popup-tooltip of previous, last circleMarker\n                this._currentLine.circleMarkers.last().bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n                this._currentLine.circleMarkers.last().setStyle (this.options.currentCircle);\n                this._cntCircle = this._currentLine.circleCoords.length;\n            }\n        },\n\n        /**\n         * After completing a path, reset all the values to prepare in creating the next polyline measurement\n         * @private\n         */\n        _resetPathVariables: function() {\n            this._cntCircle = 0;\n            this._currentLine = null;\n        },\n\n        _clickedArrow: function(e) {\n            if (e.originalEvent.ctrlKey) {\n                var lineNr = e.target.cntLine;\n                var arrowNr = e.target.cntArrow;\n                this._arrPolylines[lineNr].arrowMarkers [arrowNr].removeFrom (this._layerPaint);\n                var newCircleMarker = new L.CircleMarker (e.latlng, this.options.intermedCircle).addTo(this._layerPaint);\n                newCircleMarker.cntLine = lineNr;\n                newCircleMarker.on ('mousedown', this._dragCircle, this);\n                newCircleMarker.bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n                this._arrPolylines[lineNr].circleMarkers.splice (arrowNr+1, 0, newCircleMarker);\n                this._arrPolylines[lineNr].circleMarkers.map (function (item, index) {\n                    item.cntCircle = index;\n                });\n                this._arrPolylines[lineNr].circleCoords.splice (arrowNr+1, 0, e.latlng);\n                lineCoords = this._arrPolylines[lineNr].polylinePath.getLatLngs(); // get Coords of each Point of the current Polyline\n                var arc1 = this._polylineArc (this._arrPolylines[lineNr].circleCoords[arrowNr], e.latlng);\n                arc1.pop();\n                var arc2 = this._polylineArc (e.latlng, this._arrPolylines[lineNr].circleCoords[arrowNr+2]);\n                Array.prototype.splice.apply (lineCoords, [(arrowNr)*(this._arcpoints-1), this._arcpoints].concat (arc1, arc2));\n                this._arrPolylines[lineNr].polylinePath.setLatLngs (lineCoords);\n                var arrowMarker = this._drawArrow (arc1);\n                this._arrPolylines[lineNr].arrowMarkers[arrowNr] = arrowMarker;\n                arrowMarker = this._drawArrow (arc2);\n                this._arrPolylines[lineNr].arrowMarkers.splice(arrowNr+1,0,arrowMarker);\n                this._arrPolylines[lineNr].arrowMarkers.map (function (item, index) {\n                    item.cntLine = lineNr;\n                    item.cntArrow = index;\n                });\n                this._tooltipNew = L.marker (e.latlng, {\n                    icon: L.divIcon({\n                        className: 'polyline-measure-tooltip',\n                        iconAnchor: [-4, -4]\n                    }),\n                    interactive: false\n                });\n                this._tooltipNew.addTo(this._layerPaint);\n                this._arrPolylines[lineNr].tooltips.splice (arrowNr+1, 0, this._tooltipNew);\n                var totalDistance = 0;\n                this._arrPolylines[lineNr].tooltips.map (function (item, index) {\n                    if (index >= 1) {\n                        var distance = this._arrPolylines[lineNr].circleCoords[index-1].distanceTo (this._arrPolylines[lineNr].circleCoords[index]);\n                        var lastCircleCoords = this._arrPolylines[lineNr].circleCoords[index - 1];\n                        var mouseCoords = this._arrPolylines[lineNr].circleCoords[index];\n                        totalDistance += distance;\n                        var prevTooltip = this._arrPolylines[lineNr].tooltips[index-1]\n                        this._updateTooltip (item, prevTooltip, totalDistance, distance, lastCircleCoords, mouseCoords);\n                    }\n                }.bind(this));\n            }\n        },\n\n        _dragCircleMouseup: function () {\n            // bind new popup-tooltip to the last CircleMArker if dragging finished\n            if ((this._circleNr === 0) || (this._circleNr === this._arrPolylines[this._lineNr].circleCoords.length-1)) {\n               this._e1.target.bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete + this.options.tooltipTextResume, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n            } else {\n               this._e1.target.bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n            }\n            this._resetPathVariables();\n            this._map.off ('mousemove', this._dragCircleMousemove, this);\n            this._map.dragging.enable();\n            this._map.on ('mousemove', this._mouseMove, this);\n            this._map.off ('mouseup', this._dragCircleMouseup, this);\n        },\n\n        _dragCircleMousemove: function (e2) {\n            var mouseNewLat = e2.latlng.lat;\n            var mouseNewLng = e2.latlng.lng;\n            var latDifference = mouseNewLat - this._mouseStartingLat;\n            var lngDifference = mouseNewLng - this._mouseStartingLng;\n            var currentCircleCoords = L.latLng (this._circleStartingLat + latDifference, this._circleStartingLng + lngDifference);\n            var arcpoints = this._arcpoints;\n            var lineNr = this._e1.target.cntLine;\n            this._lineNr = lineNr;\n            var circleNr = this._e1.target.cntCircle;\n            this._circleNr = circleNr;\n            this._e1.target.setLatLng (currentCircleCoords);\n            this._e1.target.unbindTooltip();    // unbind popup-tooltip cause otherwise it would be annoying during dragging, or popup instantly again if it's just closed\n            this._arrPolylines[lineNr].circleCoords[circleNr] = currentCircleCoords;\n            var lineCoords = this._arrPolylines[lineNr].polylinePath.getLatLngs(); // get Coords of each Point of the current Polyline\n            if (circleNr >= 1) {   // redraw previous arc just if circle is not starting circle of polyline\n                var newLineSegment1 = this._polylineArc(this._arrPolylines[lineNr].circleCoords[circleNr-1], currentCircleCoords);\n                // the next line's syntax has to be used since Internet Explorer doesn't know new spread operator (...) for inserting the individual elements of an array as 3rd argument of the splice method; Otherwise we could write: lineCoords.splice (circleNr*(arcpoints-1), arcpoints, ...newLineSegment1);\n                Array.prototype.splice.apply (lineCoords, [(circleNr-1)*(arcpoints-1), arcpoints].concat (newLineSegment1));\n                var arrowMarker = this._drawArrow (newLineSegment1);\n                arrowMarker.cntLine = lineNr;\n                arrowMarker.cntArrow = circleNr-1;\n                this._arrPolylines[lineNr].arrowMarkers [circleNr-1].removeFrom (this._layerPaint);\n                this._arrPolylines[lineNr].arrowMarkers [circleNr-1] = arrowMarker;\n            }\n            if (circleNr < this._arrPolylines[lineNr].circleCoords.length-1) {   // redraw following arc just if circle is not end circle of polyline\n                var newLineSegment2 = this._polylineArc (currentCircleCoords, this._arrPolylines[lineNr].circleCoords[circleNr+1]);\n                Array.prototype.splice.apply (lineCoords, [circleNr*(arcpoints-1), arcpoints].concat (newLineSegment2));\n                arrowMarker = this._drawArrow (newLineSegment2);\n                arrowMarker.cntLine = lineNr;\n                arrowMarker.cntArrow = circleNr;\n                this._arrPolylines[lineNr].arrowMarkers [circleNr].removeFrom (this._layerPaint);\n                this._arrPolylines[lineNr].arrowMarkers [circleNr] = arrowMarker;\n            }\n            this._arrPolylines[lineNr].polylinePath.setLatLngs (lineCoords);\n            if (circleNr >= 0) {     // just update tooltip position if moved circle is 2nd, 3rd, 4th etc. circle of a polyline\n                    this._arrPolylines[lineNr].tooltips[circleNr].setLatLng (currentCircleCoords);\n            }\n            var totalDistance = 0;\n            // update tooltip texts of each tooltip\n            this._arrPolylines[lineNr].tooltips.map (function (item, index) {\n                if (index >= 1) {\n                    var distance = this._arrPolylines[lineNr].circleCoords[index-1].distanceTo (this._arrPolylines[lineNr].circleCoords[index]);\n                    var lastCircleCoords = this._arrPolylines[lineNr].circleCoords[index - 1];\n                    var mouseCoords = this._arrPolylines[lineNr].circleCoords[index];\n                    totalDistance += distance;\n                    var prevTooltip = this._arrPolylines[lineNr].tooltips[index-1]\n                    this._updateTooltip (item, prevTooltip, totalDistance, distance, lastCircleCoords, mouseCoords);\n                }\n            }.bind(this));\n            this._map.on ('mouseup', this._dragCircleMouseup, this);\n        },\n\n        _resumeFirstpointMousemove: function (e) {\n            var lineNr = this._lineNr;\n            this._map.on ('click', this._resumeFirstpointClick, this);  // necassary for _dragCircle. If switched on already within _dragCircle an unwanted click is fired at the end of the drag.\n            var mouseCoords = e.latlng;\n            this._rubberlinePath2.setLatLngs (this._polylineArc (mouseCoords, currentCircleCoords));\n            this._tooltipNew.setLatLng (mouseCoords);\n            var totalDistance = 0;\n            var distance = mouseCoords .distanceTo (this._arrPolylines[lineNr].circleCoords[0]);\n            var lastCircleCoords = mouseCoords;\n            var currentCoords = this._arrPolylines[lineNr].circleCoords[0];\n            totalDistance += distance;\n            var prevTooltip = this._tooltipNew;\n            var currentTooltip = this._arrPolylines[lineNr].tooltips[0]\n            this._updateTooltip (currentTooltip, prevTooltip, totalDistance, distance, lastCircleCoords, currentCoords);\n            this._arrPolylines[lineNr].tooltips.map (function (item, index) {\n                if (index >= 1) {\n                    var distance = this._arrPolylines[lineNr].circleCoords[index-1].distanceTo (this._arrPolylines[lineNr].circleCoords[index]);\n                    var lastCircleCoords = this._arrPolylines[lineNr].circleCoords[index - 1];\n                    var mouseCoords = this._arrPolylines[lineNr].circleCoords[index];\n                    totalDistance += distance;\n                    var prevTooltip = this._arrPolylines[lineNr].tooltips[index-1]\n                    this._updateTooltip (item, prevTooltip, totalDistance, distance, lastCircleCoords, mouseCoords);\n                }\n            }.bind (this));\n        },\n\n        _resumeFirstpointClick: function (e) {\n            var lineNr = this._lineNr;\n            this._resumeFirstpointFlag = false;\n            this._map.off ('mousemove', this._resumeFirstpointMousemove, this);\n            this._map.off ('click', this._resumeFirstpointClick, this);\n            this._layerPaint.removeLayer (this._rubberlinePath2);\n            this._arrPolylines[lineNr].circleMarkers [0].setStyle (this.options.intermedCircle);\n            this._arrPolylines[lineNr].circleMarkers [0].unbindTooltip();\n            this._arrPolylines[lineNr].circleMarkers [0].bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n            var newCircleMarker = new L.CircleMarker (e.latlng, this.options.startCircle).addTo(this._layerPaint);\n            newCircleMarker.cntLine = lineNr;\n            newCircleMarker.cntCircle = 0;\n            newCircleMarker.on ('mousedown', this._dragCircle, this);\n            newCircleMarker.bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete + this.options.tooltipTextResume, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n            this._arrPolylines[lineNr].circleMarkers.unshift(newCircleMarker);\n            this._arrPolylines[lineNr].circleMarkers.map (function (item, index) {\n                item.cntCircle = index;\n            });\n            this._arrPolylines[lineNr].circleCoords.unshift(e.latlng);\n            var arc = this._polylineArc (e.latlng, currentCircleCoords);\n            var arrowMarker = this._drawArrow (arc);\n            this._arrPolylines[lineNr].arrowMarkers.unshift(arrowMarker);\n            this._arrPolylines[lineNr].arrowMarkers.map (function (item, index) {\n                item.cntLine = lineNr;\n                item.cntArrow = index;\n            });\n            arc.pop();  // remove last coordinate of arc, cause it's already part of the next arc.\n            this._arrPolylines[lineNr].polylinePath.setLatLngs (arc.concat(this._arrPolylines[lineNr].polylinePath.getLatLngs()));\n            this._arrPolylines[lineNr].tooltips.unshift(this._tooltipNew);\n            this._map.on ('mousemove', this._mouseMove, this);\n        },\n\n\n        // not just used for dragging Cirles but also for deleting circles and resuming line at its starting point.\n        _dragCircle: function (e1) {\n            var arcpoints = this._arcpoints;\n            if (e1.originalEvent.ctrlKey) {   // if user wants to resume drawing a line\n                this._map.off ('click', this._mouseClick, this); // to avoid unwanted creation of a new line if CTRL-clicked onto a point\n                // if user wants resume the line at its starting point\n                if (e1.target.cntCircle === 0) {\n                    this._resumeFirstpointFlag = true;\n                    this._lineNr = e1.target.cntLine;\n                    var lineNr = this._lineNr;\n                    this._circleNr = e1.target.cntCircle;\n                    currentCircleCoords = e1.latlng;\n                    this._arrPolylines[lineNr].circleMarkers [0].setStyle (this.options.currentCircle);\n                    this._rubberlinePath2 = L.polyline ([], {\n                        // Style of temporary, rubberline while moving the mouse\n                        color: this.options.tempLine.color,\n                        weight: this.options.tempLine.weight,\n                        interactive: false,\n                        dashArray: '8,8'\n                    }).addTo(this._layerPaint).bringToBack();\n                    this._tooltipNew = L.marker (currentCircleCoords, {\n                        icon: L.divIcon({\n                            className: 'polyline-measure-tooltip',\n                            iconAnchor: [-4, -4]\n                        }),\n                        interactive: false\n                    });\n                    this._tooltipNew.addTo(this._layerPaint);\n                    var text='';\n                    if (this.options.showBearings === true) {\n                        text = text + this.options.bearingTextIn+':---°<br>'+this.options.bearingTextOut+':---°';\n                    }\n                    text = text + '<div class=\"polyline-measure-tooltip-difference\">+' + '0</div>';\n                    text = text + '<div class=\"polyline-measure-tooltip-total\">' + '0</div>';\n                    this._tooltipNew._icon.innerHTML = text;\n                    this._map.off ('mousemove', this._mouseMove, this);\n                    this._map.on ('mousemove', this._resumeFirstpointMousemove, this);\n                }\n                return;\n            }\n\n            // if user wants to delete a circle\n            if (e1.originalEvent.shiftKey) {    // it's not possible to use \"ALT-Key\" instead, cause this won't work in some Linux distributions (there it's the default hotkey for moving windows)\n                this._lineNr = e1.target.cntLine;\n                var lineNr = this._lineNr;\n                this._circleNr = e1.target.cntCircle;\n                var circleNr = this._circleNr;\n\n                // if there is a polyline with this number in finished ones\n                if(this._arrPolylines[lineNr]) {\n                    this._arrPolylines[lineNr].circleCoords.splice(circleNr,1);\n                    this._arrPolylines[lineNr].circleMarkers [circleNr].removeFrom (this._layerPaint);\n                    this._arrPolylines[lineNr].circleMarkers.splice(circleNr,1);\n                    this._arrPolylines[lineNr].circleMarkers.map (function (item, index) {\n                        item.cntCircle = index;\n                    });\n                    var lineCoords = this._arrPolylines[lineNr].polylinePath.getLatLngs();\n                    this._arrPolylines[lineNr].tooltips [circleNr].removeFrom (this._layerPaint);\n                    this._arrPolylines[lineNr].tooltips.splice(circleNr,1);\n\n                    // if the last Circle in polyline is being removed (in the code above, so length will be equal 0)\n                    if(!this._arrPolylines[lineNr].circleMarkers.length) {\n                    \tthis._arrPolylines.splice(lineNr, 1);\n                    \t// when you delete the line in the middle of array, other lines indexes change, so you need to update line number of markers and circles\n\t                    this._arrPolylines.forEach(function(line, index) {\n\t\t                    line.circleMarkers.map(function (item) {\n\t\t\t                    item.cntLine = index;\n\t\t                    });\n\t\t                    line.arrowMarkers.map(function (item) {\n\t\t\t                    item.cntLine = index;\n\t\t                    });\n\t                    });\n\n\t                    return;\n                    }\n                    // if first Circle is being removed\n                    if (circleNr === 0) {\n                        this._arrPolylines[lineNr].circleMarkers [0].setStyle (this.options.startCircle);\n                        lineCoords.splice (0, arcpoints-1);\n                        this._arrPolylines[lineNr].circleMarkers [0].bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete + this.options.tooltipTextResume, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n                        this._arrPolylines[lineNr].arrowMarkers [circleNr].removeFrom (this._layerPaint);\n                        this._arrPolylines[lineNr].arrowMarkers.splice(0,1);\n                        var text='';\n                        if (this.options.showBearings === true) {\n                            text = this.options.bearingTextIn+':---°<br>'+this.options.bearingTextOut+':---°';\n                        }\n                        text = text + '<div class=\"polyline-measure-tooltip-difference\">+' + '0</div>';\n                        text = text + '<div class=\"polyline-measure-tooltip-total\">' + '0</div>';\n                        this._arrPolylines[lineNr].tooltips [0]._icon.innerHTML = text;\n                        // if last Circle is being removed\n                    } else if (circleNr === this._arrPolylines[lineNr].circleCoords.length) {\n                        this._arrPolylines[lineNr].circleMarkers [circleNr-1].on ('click', this._resumePolylinePath, this);\n                        this._arrPolylines[lineNr].circleMarkers [circleNr-1].bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete + this.options.tooltipTextResume, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n                        this._arrPolylines[lineNr].circleMarkers.slice(-1)[0].setStyle (this.options.endCircle);  // get last element of the array\n                        this._arrPolylines[lineNr].tooltips.slice(-1)[0]._icon.classList.add('polyline-measure-tooltip-end');\n                        lineCoords.splice (-(arcpoints-1), arcpoints-1);\n                        this._arrPolylines[lineNr].arrowMarkers [circleNr-1].removeFrom (this._layerPaint);\n                        this._arrPolylines[lineNr].arrowMarkers.splice(-1,1);\n                        // if intermediate Circle is being removed\n                    } else {\n                        newLineSegment = this._polylineArc (this._arrPolylines[lineNr].circleCoords[circleNr-1], this._arrPolylines[lineNr].circleCoords[circleNr]);\n                        Array.prototype.splice.apply (lineCoords, [(circleNr-1)*(arcpoints-1), (2*arcpoints-1)].concat (newLineSegment));\n                        this._arrPolylines[lineNr].arrowMarkers [circleNr-1].removeFrom (this._layerPaint);\n                        this._arrPolylines[lineNr].arrowMarkers [circleNr].removeFrom (this._layerPaint);\n                        var arrowMarker = this._drawArrow (newLineSegment);\n                        this._arrPolylines[lineNr].arrowMarkers.splice(circleNr-1,2,arrowMarker);\n                    }\n                    this._arrPolylines[lineNr].polylinePath.setLatLngs (lineCoords);\n                    this._arrPolylines[lineNr].arrowMarkers.map (function (item, index) {\n                        item.cntLine = lineNr;\n                        item.cntArrow = index;\n                    });\n                    var totalDistance = 0;\n                    this._arrPolylines[lineNr].tooltips.map (function (item, index) {\n                        if (index >= 1) {\n                            var distance = this._arrPolylines[lineNr].circleCoords[index-1].distanceTo (this._arrPolylines[lineNr].circleCoords[index]);\n                            var lastCircleCoords = this._arrPolylines[lineNr].circleCoords[index - 1];\n                            var mouseCoords = this._arrPolylines[lineNr].circleCoords[index];\n                            totalDistance += distance;\n                            var prevTooltip = this._arrPolylines[lineNr].tooltips[index-1];\n                            this._updateTooltip (item, prevTooltip, totalDistance, distance, lastCircleCoords, mouseCoords);\n                        }\n                    }.bind (this));\n                // if this is the first line and it's not finished yet\n                } else {\n\t                // when you're drawing and deleting point you need to take it into account by decreasing _cntCircle\n                  this._cntCircle--;\n                  // if the last Circle in polyline is being removed\n                  if(this._currentLine.circleMarkers.length === 1) {\n                      this._currentLine.finalize();\n                      return;\n                  }\n\n\t                this._currentLine.circleCoords.splice(circleNr,1);\n\t                this._currentLine.circleMarkers [circleNr].removeFrom (this._layerPaint);\n\t                this._currentLine.circleMarkers.splice(circleNr,1);\n\t                this._currentLine.circleMarkers.map (function (item, index) {\n\t\t                item.cntCircle = index;\n\t                });\n\t                lineCoords = this._currentLine.polylinePath.getLatLngs();\n\t                this._currentLine.tooltips [circleNr].removeFrom (this._layerPaint);\n\t                this._currentLine.tooltips.splice(circleNr,1);\n\n\t                // if first Circle is being removed\n\t                if (circleNr === 0) {\n                    if(this._currentLine.circleMarkers.length === 1) {\n                        this._currentLine.circleMarkers [0].setStyle (this.options.currentCircle);\n                    } else {\n                        this._currentLine.circleMarkers [0].setStyle (this.options.startCircle);\n                    }\n\t\t                lineCoords.splice (0, arcpoints-1);\n\t\t                this._currentLine.circleMarkers [0].bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete + this.options.tooltipTextResume, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n\t\t                this._currentLine.arrowMarkers [circleNr].removeFrom (this._layerPaint);\n\t\t                this._currentLine.arrowMarkers.splice(0,1);\n\t\t                var text='';\n\t\t                if (this.options.showBearings === true) {\n\t\t\t                text = this.options.bearingTextIn+':---°<br>'+this.options.bearingTextOut+':---°';\n\t\t                }\n\t\t                text = text + '<div class=\"polyline-measure-tooltip-difference\">+' + '0</div>';\n\t\t                text = text + '<div class=\"polyline-measure-tooltip-total\">' + '0</div>';\n\t\t                this._currentLine.tooltips [0]._icon.innerHTML = text;\n\t\t                // if last Circle is being removed\n\t                } else if (circleNr === this._currentLine.circleCoords.length) {\n\t\t                this._currentLine.circleMarkers [circleNr-1].on ('click', this._resumePolylinePath, this);\n\t\t                this._currentLine.circleMarkers [circleNr-1].bindTooltip (this.options.tooltipTextMove + this.options.tooltipTextDelete + this.options.tooltipTextResume, {direction:'top', opacity:0.7, className:'polyline-measure-popupTooltip'});\n\t\t                this._currentLine.circleMarkers.slice(-1)[0].setStyle (this.options.currentCircle);  // get last element of the array\n\t\t                this._currentLine.tooltips.slice(-1)[0]._icon.classList.add('polyline-measure-tooltip-end');\n\t\t                lineCoords.splice (-(arcpoints-1), arcpoints-1);\n\t\t                this._currentLine.arrowMarkers [circleNr-1].removeFrom (this._layerPaint);\n\t\t                this._currentLine.arrowMarkers.splice(-1,1);\n\t\t                // if intermediate Circle is being removed\n\t                } else {\n\t\t                newLineSegment = this._polylineArc (this._currentLine.circleCoords[circleNr-1], this._currentLine.circleCoords[circleNr]);\n\t\t                Array.prototype.splice.apply (lineCoords, [(circleNr-1)*(arcpoints-1), (2*arcpoints-1)].concat (newLineSegment));\n\t\t                this._currentLine.arrowMarkers [circleNr-1].removeFrom (this._layerPaint);\n\t\t                this._currentLine.arrowMarkers [circleNr].removeFrom (this._layerPaint);\n\t\t                arrowMarker = this._drawArrow (newLineSegment);\n\t\t                this._currentLine.arrowMarkers.splice(circleNr-1,2,arrowMarker);\n\t                }\n\t                this._currentLine.polylinePath.setLatLngs (lineCoords);\n\t                this._currentLine.arrowMarkers.map (function (item, index) {\n\t\t                item.cntLine = lineNr;\n\t\t                item.cntArrow = index;\n\t                });\n\t                var totalDistanceUnfinishedLine = 0;\n\t                this._currentLine.tooltips.map (function (item, index, arr) {\n\t\t                if (index >= 1) {\n                      var distance, mouseCoords;\n                      var prevTooltip = this._currentLine.tooltips[index-1];\n                      var lastCircleCoords = this._currentLine.circleCoords[index - 1];\n                      if(index === arr.length - 1) {\n                          distance = this._currentLine.circleCoords[index-1].distanceTo (e1.latlng);\n                          mouseCoords = e1.latlng;\n                          // if this is the last Circle (mouse cursor) then don't sum the distance, but update tooltip like it was summed\n                          this._updateTooltip (item, prevTooltip, totalDistanceUnfinishedLine + distance, distance, lastCircleCoords, mouseCoords);\n                      } else {\n                          distance = this._currentLine.circleCoords[index-1].distanceTo (this._currentLine.circleCoords[index]);\n                          mouseCoords = this._currentLine.circleCoords[index];\n                          // if this is not the last Circle (mouse cursor) then sum the distance\n                          totalDistanceUnfinishedLine += distance;\n                          this._updateTooltip (item, prevTooltip, totalDistanceUnfinishedLine, distance, lastCircleCoords, mouseCoords);\n                      }\n\t\t                }\n\t                }.bind (this));\n\n\t                // update _currentLine distance after point deletion\n\t                this._currentLine.distance = totalDistanceUnfinishedLine;\n                }\n\n                return;\n            }\n            this._e1 = e1;\n            if ((this._measuring) && (this._cntCircle === 0)) {    // just execute drag-function if Measuring tool is active but no line is being drawn at the moment.\n                this._map.dragging.disable();  // turn of moving of the map during drag of a circle\n                this._map.off ('mousemove', this._mouseMove, this);\n                this._map.off ('click', this._mouseClick, this);\n                this._mouseStartingLat = e1.latlng.lat;\n                this._mouseStartingLng = e1.latlng.lng;\n                this._circleStartingLat = e1.target._latlng.lat;\n                this._circleStartingLng = e1.target._latlng.lng;\n                this._map.on ('mousemove', this._dragCircleMousemove, this);\n            }\n        }\n    });\n\n//======================================================================================\n\n    L.Map.mergeOptions({\n        PolylineMeasureControl: false\n    });\n\n    L.Map.addInitHook(function () {\n        if (this.options.polylineMeasureControl) {\n            this.PMControl = new L.Control.PolylineMeasure();\n            this.addControl(this.PMControl);\n        }\n    });\n\n    L.control.polylineMeasure = function (options) {\n        return new L.Control.PolylineMeasure (options);\n    };\n\n    return L.Control.PolylineMeasure;\n    // to allow\n    // import PolylineMeasure from 'leaflet.polylinemeasure';\n    // const measureControl = new PolylineMeasure();\n    // together with\n    // import 'leaflet.polylinemeasure';\n    // const measureControl = new L.Control.PolylineMeasure();\n\n}));\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).ShareButtons=t()}(this,function(){\"use strict\";var f=window,m=f.document;var e=new function(){function s(e,n){return e.replace(/\\{(\\d+)\\}/g,function(e,t){return n[t]||e})}function u(e){return e.join(\" - \")}function l(e){return encodeURIComponent(e)}this.i=function(){var e,t=m.querySelectorAll(\".share-btn\");for(e=t.length;e--;)n(t[e])};var n=function(e){var t,n=e.querySelectorAll(\"a\");for(t=n.length;t--;)r(n[t],{id:\"\",url:i(e),title:c(e),desc:o(e)})},r=function(e,t){t.id=h(e,\"data-id\"),t.id&&a(e,\"click\",t)},i=function(e){return h(e,\"data-url\")||location.href||\" \"},c=function(e){return h(e,\"data-title\")||m.title||\" \"},o=function(e){var t=m.querySelector(\"meta[name=description]\");return h(e,\"data-desc\")||t&&h(t,\"content\")||\" \"},a=function(e,t,n){function r(){d(n.id,n.url,n.title,n.desc)}e.addEventListener?e.addEventListener(t,r):e.attachEvent(\"on\"+t,function(){r.call(e)})},h=function(e,t){return e.getAttribute(t)},d=function(e,t,n,r){var i=l(t),c=l(r),o=l(n),a=o||c||\"\";switch(e){case\"fb\":p(s(\"https://www.facebook.com/sharer/sharer.php?u={0}\",[i]),n);break;case\"vk\":p(s(\"https://vk.com/share.php?url={0}&title={1}\",[i,u([o,c])]),n);break;case\"tw\":p(s(\"https://twitter.com/intent/tweet?url={0}&text={1}\",[i,u([o,c])]),n);break;case\"tg\":p(s(\"https://t.me/share/url?url={0}&text={1}\",[i,u([o,c])]),n);break;case\"pk\":p(s(\"https://getpocket.com/edit?url={0}&title={1}\",[i,u([o,c])]),n);break;case\"re\":p(s(\"https://reddit.com/submit/?url={0}\",[i]),n);break;case\"ev\":p(s(\"https://www.evernote.com/clip.action?url={0}&t={1}\",[i,o]),n);break;case\"in\":p(s(\"https://www.linkedin.com/shareArticle?mini=true&url={0}&title={1}&summary={2}&source={0}\",[i,o,u([o,c])]),n);break;case\"pi\":p(s(\"https://pinterest.com/pin/create/button/?url={0}&media={0}&description={1}\",[i,u([o,c])]),n);break;case\"sk\":p(s(\"https://web.skype.com/share?url={0}&source=button&text={1}\",[i,u([o,c])]),n);break;case\"wa\":p(s(\"whatsapp://send?text={0}%20{1}\",[u([o,c]),i]),n);break;case\"ok\":p(s(\"https://connect.ok.ru/dk?st.cmd=WidgetSharePreview&service=odnoklassniki&st.shareUrl={0}\",[i]),n);break;case\"tu\":p(s(\"https://www.tumblr.com/widgets/share/tool?posttype=link&title={0}&caption={0}&content={1}&canonicalUrl={1}&shareSource=tumblr_share_button\",[u([o,c]),i]),n);break;case\"hn\":p(s(\"https://news.ycombinator.com/submitlink?t={0}&u={1}\",[u([o,c]),i]),n);break;case\"xi\":p(s(\"https://www.xing.com/app/user?op=share;url={0};title={1}\",[i,u([o,c])]),n);break;case\"mail\":0<o.length&&0<c.length&&(a=u([o,c])),0<a.length&&(a+=\" / \"),0<o.length&&(o+=\" / \"),location.href=s(\"mailto:?Subject={0}{1}&body={2}{3}\",[o,n,a,i]);break;case\"print\":window.print()}},p=function(e,t){var n=void 0!==f.screenLeft?f.screenLeft:screen.left,r=void 0!==f.screenTop?f.screenTop:screen.top,i=(f.innerWidth||m.documentElement.clientWidth||screen.width)/2-300+n,c=(f.innerHeight||m.documentElement.clientHeight||screen.height)/3-400/3+r,o=f.open(e,\"\",s(\"resizable,toolbar=yes,location=yes,scrollbars=yes,menubar=yes,width={0},height={1},top={2},left={3}\",[600,400,c,i]));null!==o&&o.focus&&o.focus()}};return e.i(),{update:function(){e.i()}}});"],"sourceRoot":""}