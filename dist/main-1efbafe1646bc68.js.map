{"version":3,"file":"main-1efbafe1646bc68.js","mappings":"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","sources":["webpack://clear_horizon/./@nextgis/packages/webmap/src/utils/geometryTypes.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/utils/updateGeoJsonAdapterOptions.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/components/keys/KeysCodes.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/components/keys/Keys.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/components/mapStates/StateItem.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/components/mapStates/CenterState.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/components/mapStates/ZoomState.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/WebMapMain.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/utils/clearObject.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/WebMapLayers.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/components/controls/createToggleControl.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/WebMapControls.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/container.ts","webpack://clear_horizon/./@nextgis/packages/webmap/src/WebMap.ts"],"sourcesContent":["import type {\n  GeoJsonObject,\n  GeoJsonGeometryTypes,\n  FeatureCollection,\n  GeometryCollection,\n  Feature,\n} from 'geojson';\n\n/**\n * @internal\n */\nexport function findMostFrequentGeomType(\n  arr: GeoJsonGeometryTypes[],\n): GeoJsonGeometryTypes {\n  const counts: { [x: string]: number } = {};\n  for (let fry = 0; fry < arr.length; fry++) {\n    counts[arr[fry]] = 1 + (counts[arr[fry]] || 0);\n  }\n  let maxName;\n  for (const c in counts) {\n    const count = maxName !== undefined ? counts[maxName] : 0;\n    if (counts[c] > (count || 0)) {\n      maxName = c;\n    }\n  }\n  return maxName as GeoJsonGeometryTypes;\n}\n\n/**\n * @internal\n */\nexport function detectGeometryType(\n  geojson: GeoJsonObject,\n): GeoJsonGeometryTypes {\n  let geometry: GeoJsonGeometryTypes;\n  if (geojson.type === 'FeatureCollection') {\n    const featuresTypes = (geojson as FeatureCollection).features.map(\n      (f) => f.geometry.type,\n    );\n    geometry = findMostFrequentGeomType(featuresTypes);\n  } else if (geojson.type === 'GeometryCollection') {\n    const geometryTypes = (geojson as GeometryCollection).geometries.map(\n      (g) => g.type,\n    );\n    geometry = findMostFrequentGeomType(geometryTypes);\n  } else if (geojson.type === 'Feature') {\n    geometry = (geojson as Feature).geometry.type;\n  } else {\n    geometry = geojson.type;\n  }\n  return geometry;\n}\n","import { isPaint } from '@nextgis/paint';\nimport { detectGeometryType } from './geometryTypes';\n\nimport type {\n  GeoJsonAdapterOptions,\n  VectorAdapterLayerType,\n} from '../interfaces/LayerAdapter';\n\n/**\n * @internal\n */\nexport const paintTypeAlias: Record<VectorAdapterLayerType, any> = {\n  polygon: 'path',\n  line: 'path',\n  point: 'circle',\n};\n\nexport const typeAlias: { [x: string]: VectorAdapterLayerType } = {\n  Point: 'point',\n  LineString: 'line',\n  MultiPoint: 'point',\n  Polygon: 'polygon',\n  MultiLineString: 'line',\n  MultiPolygon: 'polygon',\n};\n\n/**\n * @internal\n */\nexport function updateGeoJsonAdapterOptions<\n  O extends GeoJsonAdapterOptions = GeoJsonAdapterOptions,\n>(opt: O): O {\n  if (opt.data) {\n    const geomType = typeAlias[detectGeometryType(opt.data)];\n    const p = opt.paint;\n    if (p && isPaint(p)) {\n      // define parameter if not specified\n      p.type = p.type\n        ? p.type\n        : geomType === 'polygon' || geomType === 'line'\n        ? 'path'\n        : 'html' in p || 'className' in p\n        ? 'icon'\n        : paintTypeAlias[geomType];\n    }\n    opt.type = opt.type || geomType;\n  }\n  return opt;\n}\n","export class KeyCodes {\n  'backspace' = 8;\n  'tab' = 9;\n  'enter' = 13;\n  'shift' = 16;\n  'ctrl' = 17;\n  'alt' = 18;\n  'pause/break' = 19;\n  'caps_lock' = 20;\n  'escape' = 27;\n  'page_up' = 33;\n  'page_down' = 34;\n  'end' = 35;\n  'home' = 36;\n  'left_arrow' = 37;\n  'up_arrow' = 38;\n  'right_arrow' = 39;\n  'down_arrow' = 40;\n  'insert' = 45;\n  'delete' = 46;\n  'left_window_key' = 91;\n  'right_window_key' = 92;\n  'select_key' = 93;\n  'numpad_0' = 96;\n  'numpad_1' = 97;\n  'numpad_2' = 98;\n  'numpad_3' = 99;\n  'numpad_4' = 100;\n  'numpad_5' = 101;\n  'numpad_6' = 102;\n  'numpad_7' = 103;\n  'numpad_8' = 104;\n  'numpad_9' = 105;\n  'multiply' = 106;\n  'add' = 107;\n  'subtract' = 109;\n  'decimal_point' = 110;\n  'divide' = 111;\n  'f1' = 112;\n  'f2' = 113;\n  'f3' = 114;\n  'f4' = 115;\n  'f5' = 116;\n  'f6' = 117;\n  'f7' = 118;\n  'f8' = 119;\n  'f9' = 120;\n  'f10' = 121;\n  'f11' = 122;\n  'f12' = 123;\n  'num_lock' = 144;\n  'scroll_lock' = 145;\n  'semi-colon' = 186;\n  'equal_sign' = 187;\n  ',' = 188; // \"comma\";\n  '-' = 189; // \"dash\";\n  '.' = 190; // \"period\";\n  '/' = 191; // \"forward slash\";\n  '`' = 192; // \"grave accent\";\n  '[' = 219; // \"open bracket\";\n  '\\\\' = 220; // \"back slash\";\n  ']' = 221; // \"close braket\";\n  \"'\" = 222; // \"single quote\"\n}\n","import { KeyCodes } from './KeysCodes';\n\n/**\n * @param {string} key - key symbol\n * @param {string} func - action on key press\n * @param {number} [keyCode] - key code for special button like tab\n *\n * @export\n * @interface KeyControl\n */\nexport interface KeyControl {\n  key?: string;\n  keyCode?: number;\n  func: () => void;\n}\n\nexport class Keys {\n  keyCodeAlias = new KeyCodes();\n\n  keys: { [keyCode: number]: boolean } = {};\n\n  private _windowOnFocus: () => void;\n  private _keysPressed: (e: KeyboardEvent) => void;\n  private _keysReleased: (e: KeyboardEvent) => void;\n\n  constructor() {\n    this._windowOnFocus = this.windowOnFocus.bind(this);\n    this._keysPressed = this.keysPressed.bind(this);\n    this._keysReleased = this.keysReleased.bind(this);\n    this.addKeyboardEventsListener();\n  }\n\n  pressed(keyName: keyof KeyCodes): boolean {\n    const code = this.keyCodeAlias[keyName];\n    return !!code && this.keys[code];\n  }\n\n  addKeyboardEventsListener(): void {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('focus', this._windowOnFocus, false);\n      window.addEventListener('keydown', this._keysPressed, false);\n      window.addEventListener('keyup', this._keysReleased, false);\n    }\n  }\n\n  removeKeyboardEventsListener(): void {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('focus', this._windowOnFocus, false);\n      window.removeEventListener('keydown', this._keysPressed, false);\n      window.removeEventListener('keyup', this._keysReleased, false);\n    }\n  }\n\n  private keysPressed(e: KeyboardEvent) {\n    e.stopPropagation();\n    if (!this.keys[e.keyCode]) {\n      this.keys[e.keyCode] = true;\n    }\n  }\n\n  private keysReleased(e: KeyboardEvent) {\n    e.stopPropagation();\n    this.keys[e.keyCode] = false;\n  }\n\n  private windowOnFocus() {\n    this.keys = {};\n  }\n}\n","import type { WebMap } from '../../WebMap';\nimport type { MapStateItem } from '../../interfaces/MapState';\nimport type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\n\nexport abstract class StateItem<V extends any | undefined = any | undefined>\n  implements MapStateItem<V | undefined>\n{\n  name!: keyof MapOptions;\n  event!: keyof WebMapEvents;\n  protected value?: V;\n\n  constructor(\n    protected webMap: WebMap,\n    opt?: { name?: keyof MapOptions; event?: keyof WebMapEvents; value?: V },\n  ) {\n    if (opt) {\n      if (opt.value) {\n        this.setValue(opt.value);\n      }\n      if (opt.name) {\n        this.name = opt.name;\n      }\n      if (opt.event) {\n        this.event = opt.event;\n      }\n    }\n  }\n\n  getValue(): V | undefined {\n    return this.value;\n  }\n\n  setValue(val: V): void {\n    this.value = val;\n  }\n\n  abstract toString(data: unknown): string;\n  abstract parse(str: string): V;\n}\n","import { StateItem } from './StateItem';\n\nimport type { LngLatArray } from '@nextgis/utils';\nimport type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\n\nexport class CenterState extends StateItem<LngLatArray> {\n  name: keyof MapOptions = 'center';\n  event: keyof WebMapEvents = 'moveend';\n\n  getValue(): LngLatArray | undefined {\n    return this.webMap.getCenter();\n  }\n  setValue(val: LngLatArray): void {\n    this.webMap.setCenter(val);\n  }\n  toString(data: LngLatArray): string {\n    const d = data.map((x) => x.toFixed(5));\n    return d[0] + '_' + d[1];\n  }\n  parse(str: string): LngLatArray {\n    const lngLat = str.split('_').map(Number) as LngLatArray;\n    return lngLat;\n  }\n}\n","import { StateItem } from './StateItem';\nimport type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\n\nexport class ZoomState extends StateItem<number> {\n  name: keyof MapOptions = 'zoom';\n  event: keyof WebMapEvents = 'zoomend';\n  getValue(): number | undefined {\n    const zoom = this.webMap.getZoom();\n    return zoom !== undefined ? Math.round(zoom) : undefined;\n  }\n  setValue(val: number): void {\n    this.webMap.setZoom(val);\n  }\n  toString(val: number): string {\n    return String(val);\n  }\n  parse(str: string): number {\n    return Number(str);\n  }\n}\n","import { EventEmitter } from 'events';\n\nimport { deepmerge, defined, getBoundsFeature } from '@nextgis/utils';\nimport { GetPaintFunction } from '@nextgis/paint';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { deprecatedMapClick } from '@nextgis/utils';\n\nimport { Keys } from './components/keys/Keys';\nimport { CenterState } from './components/mapStates/CenterState';\nimport { StateItem } from './components/mapStates/StateItem';\nimport { ZoomState } from './components/mapStates/ZoomState';\nimport { clearObject } from './utils/clearObject';\n\nimport type StrictEventEmitter from 'strict-event-emitter-types';\nimport type { Feature, Polygon } from 'geojson';\nimport type {\n  Type,\n  TileJson,\n  LngLatArray,\n  LngLatBoundsArray,\n} from '@nextgis/utils';\nimport type { Cursor } from './interfaces/BaseTypes';\nimport type {\n  LocationEvents,\n  MapClickEvent,\n  LocateOptions,\n  FitOptions,\n  MapAdapter,\n  Locate,\n} from './interfaces/MapAdapter';\nimport type { StarterKit } from './interfaces/StarterKit';\nimport type { LayerAdapter } from './interfaces/LayerAdapter';\nimport type { RuntimeParams } from './interfaces/RuntimeParams';\nimport type { MapOptions, ViewOptions } from './interfaces/MapOptions';\nimport type { WebMapEvents, MainMapEvents } from './interfaces/Events';\n\ntype EmitStatusEventData = any;\n\nlet ID = 0;\n\nconst OPTIONS: MapOptions = {\n  minZoom: 0,\n  maxZoom: 22,\n  paint: {\n    color: '#0000ff', // blue\n    opacity: 0.4,\n    strokeOpacity: 1,\n    stroke: true,\n    radius: 8,\n    weight: 1,\n  },\n  selectedPaint: {\n    color: '#00008b', // darkblue\n    opacity: 0.4,\n    strokeOpacity: 1,\n    stroke: true,\n    radius: 12,\n    weight: 1,\n  },\n  create: true,\n};\n\ninterface AddEventsListenersOptions {\n  include: (keyof MainMapEvents)[];\n}\n\nexport class WebMapMain<\n  M = any,\n  E extends WebMapEvents = WebMapEvents,\n  O extends MapOptions = MapOptions,\n> {\n  static keys: Keys = new Keys();\n\n  static getPaintFunctions: { [name: string]: GetPaintFunction };\n\n  options: O = OPTIONS as O;\n  // `WebMapEvents` must be `E` but its not work correct\n  readonly emitter: StrictEventEmitter<EventEmitter, WebMapEvents> =\n    new EventEmitter();\n  readonly keys = WebMapMain.keys;\n\n  readonly mapAdapter: MapAdapter<M>;\n  readonly runtimeParams: RuntimeParams[] = [];\n\n  getPaintFunctions = WebMapMain.getPaintFunctions;\n  mapState: Type<StateItem>[] = [CenterState, ZoomState];\n  id = ID++;\n\n  /**\n   * From runtime params\n   */\n  protected _initMapState: Record<string, any> = {};\n  protected readonly _starterKits: StarterKit[];\n  private _mapState: StateItem[] = [];\n  private _extent?: LngLatBoundsArray;\n  private readonly _eventsStatus: { [key in keyof E]?: boolean } = {};\n  private _coordFromMapClickPromise?: CancelablePromise<LngLatArray>;\n\n  private readonly _mapEvents: {\n    [key in keyof MainMapEvents]?: (...args: any[]) => void;\n  } = {};\n\n  constructor(mapOptions: O) {\n    this.mapAdapter = mapOptions.mapAdapter as MapAdapter<M>;\n    this._starterKits = mapOptions.starterKits || [];\n    if (mapOptions) {\n      this.options = deepmerge((OPTIONS as O) || {}, mapOptions) as O;\n    }\n    if (this.options.runtimeParams) {\n      this.runtimeParams = this.options.runtimeParams;\n    }\n    this._addEventsListeners();\n\n    if (this.options.tileJson) {\n      this._setTileJsonOptions(this.options.tileJson);\n    }\n    if (this.options.create) {\n      this.create();\n    }\n  }\n\n  getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Manual way to create a map (If {@link MapOptions.create} is `false`).\n   * @example\n   * ```javascript\n   * const webMap = new WebMap(options);\n   * webMap.create().then(() => doSomething());\n   * ```\n   */\n  async create(): Promise<this> {\n    if (!this.getEventStatus('create')) {\n      await this._setInitMapState(this.mapState);\n      await this._setupMap();\n      this._emitStatusEvent('create', this);\n    }\n    return this;\n  }\n\n  setRuntimeParams(params: RuntimeParams): void {\n    this.runtimeParams.push(params);\n  }\n\n  /**\n   * Destroys WebMap, MapAdapter, clears all layers and turn off all event listeners\n   */\n  destroy(): void {\n    this._removeEventListeners();\n    clearObject(this._emitStatusEvent);\n    if (this.mapAdapter.destroy) {\n      this.mapAdapter.destroy();\n    }\n  }\n\n  getState(): Record<string, any> {\n    const state: Record<string, any> = {};\n    this._mapState.forEach((x) => {\n      state[x.name] = x.getValue();\n    });\n    return state;\n  }\n\n  getRuntimeParams(): Record<string, any> {\n    const state: Record<string, any> = {};\n    this._mapState.forEach((x) => {\n      for (const r of this.runtimeParams) {\n        const val = r.get(x.name);\n        if (val !== undefined) {\n          state[x.name] = x.parse(val);\n          break;\n        }\n      }\n    });\n    return state;\n  }\n\n  /**\n   * Returns the HTML element that contains the map.\n   * @returns The map's container\n   */\n  getContainer(): HTMLElement | undefined {\n    if (this.mapAdapter.getContainer) {\n      return this.mapAdapter.getContainer();\n    } else if (this.options.target) {\n      if (this.options.target instanceof HTMLElement) {\n        return this.options.target;\n      } else if (typeof this.options.target === 'string') {\n        const element = document.getElementById(this.options.target);\n        if (element) {\n          return element;\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the cursor icon to be displayed when hover icon on the map container.\n   * @param cursor - Available cursor name from https://developer.mozilla.org/ru/docs/Web/CSS/cursor\n   */\n  setCursor(cursor: Cursor): void {\n    if (this.mapAdapter.setCursor) {\n      this.mapAdapter.setCursor(cursor);\n    }\n  }\n\n  getCursor(): Cursor | undefined {\n    if (this.mapAdapter.getCursor) {\n      return this.mapAdapter.getCursor() as Cursor;\n    }\n    const container = this.getContainer();\n    if (container) {\n      return container.style.cursor as Cursor;\n    }\n  }\n\n  /**\n   * Set the center of the current view.\n   * @param lngLat - Array of two numbers representing longitude and latitude of the center of the map view.\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.setCenter([86.925278, 27.988056]);\n   * ```\n   */\n  setCenter(lngLat: LngLatArray): this {\n    this.mapAdapter.setCenter(lngLat);\n    return this;\n  }\n\n  /**\n   * Returns the map's geographical centerpoint.\n   * @returns lngLat Array of two numbers representing longitude and latitude of the center of the map view.\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.getCenter(); // [86.925278, 27.988056]\n   * ```\n   */\n  getCenter(): LngLatArray | undefined {\n    return this.mapAdapter.getCenter();\n  }\n\n  getBounds(): LngLatBoundsArray | undefined {\n    if (this.mapAdapter.getBounds) {\n      return this.mapAdapter.getBounds();\n    }\n  }\n\n  getBoundsPolygon(): Feature<Polygon> | undefined {\n    const bounds = this.getBounds();\n    if (bounds) {\n      const feature = getBoundsFeature(bounds);\n      return feature;\n    }\n  }\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param zoom - The zoom level to set (0-24).\n   */\n  setZoom(zoom: number): this {\n    this.mapAdapter.setZoom(zoom);\n    return this;\n  }\n\n  /**\n   * Returns the map's current zoom level.\n   * @returns The map's current zoom level (0-24).\n   */\n  getZoom(): number | undefined {\n    const zoom = this.mapAdapter.getZoom();\n    if (typeof zoom === 'number') {\n      return zoom;\n    }\n    // throw Error(\n    //   'Unable to get zoom level. Perhaps the map is not have been initialized yet',\n    // );\n  }\n\n  zoomIn(): void {\n    if (this.mapAdapter.zoomIn) {\n      this.mapAdapter.zoomIn();\n    } else {\n      const zoom = this.getZoom();\n      if (zoom !== undefined) {\n        const toZoom = zoom + 1;\n        this.setZoom(toZoom);\n      }\n    }\n  }\n\n  zoomOut(): void {\n    if (this.mapAdapter.zoomOut) {\n      this.mapAdapter.zoomOut();\n    } else {\n      const zoom = this.getZoom();\n      if (zoom !== undefined) {\n        const toZoom = zoom - 1;\n        this.setZoom(toZoom);\n      }\n    }\n  }\n\n  /**\n   * Sets the view of the map geographical center and zoom\n   * @param lngLat - Array of two numbers representing longitude and latitude of the center of the map view.\n   * @param zoom - The zoom level to set (0-24).\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.setView([86.925278, 27.988056], 12)\n   * ```\n   */\n  setView(lngLatOr: LngLatArray, zoom?: number): void;\n\n  setView(options: ViewOptions): void;\n\n  setView(lngLatOrOpt: LngLatArray | ViewOptions, zoom?: number): void {\n    if (Array.isArray(lngLatOrOpt)) {\n      const lngLat = lngLatOrOpt;\n      if (this.mapAdapter.setView && lngLat && defined(zoom)) {\n        this.mapAdapter.setView(lngLat, zoom);\n      } else {\n        if (lngLat) {\n          this.mapAdapter.setCenter(lngLat);\n        }\n        if (defined(zoom)) {\n          this.mapAdapter.setZoom(zoom);\n        }\n      }\n    } else {\n      const viewOpt = lngLatOrOpt;\n      if (this.mapAdapter.setView) {\n        this.mapAdapter.setView(viewOpt);\n      }\n    }\n  }\n\n  /**\n   * Sets a map view that contains the given geographical bounds.\n   * @param bounds - Array of coordinates, measured in degrees, in [west, south, east, north] order.\n   *\n   * @example\n   * ```javascript\n   * // Whole world\n   * webMap.fitBounds([0, -90, 180, 90]);\n   * ```\n   */\n  fitBounds(bounds: LngLatBoundsArray, options?: FitOptions): this {\n    if (bounds.every((x) => defined(x))) {\n      if (bounds[1] < -85.06) {\n        bounds[1] = -85.06;\n      }\n      if (bounds[3] > 85.06) {\n        bounds[3] = 85.06;\n      }\n      this.mapAdapter.fitBounds(bounds, options);\n    }\n    return this;\n  }\n\n  /**\n   * Checking the status of any asynchronous operation\n   * @param event - The name of the event whose status is checked\n   *\n   * @example\n   * ```javascript\n   * var webMap = new WebMap(options);\n   * webMap.getEventStatus('create'); // false\n   * webMap.emitter.on('create', function () {\n   *   webMap.getEventStatus('create'); // true\n   * })\n   * ```\n   */\n  getEventStatus(event: keyof E): boolean {\n    // ugly hack to disable type checking error\n    const _eventName = event as keyof WebMapEvents;\n    const status = this._eventsStatus[_eventName];\n    return status ?? false;\n  }\n\n  /**\n   * helper method to wait for events to load. By default, card creation is tracked\n   * @param event - The name of the event whose status is checked\n   *\n   * @example\n   * ```javascript\n   * var webMap = new WebMap(options);\n   * webMap.onLoad().then(function () {\n   *   webMap.getEventStatus('create'); // true\n   * })\n   *\n   * // use async/await syntax\n   * async function () {\n   *   await webMap.onLoad();\n   *   doSomething();\n   * }\n   *\n   * ```\n   */\n  onLoad(event: keyof WebMapEvents = 'create'): Promise<this> {\n    return new Promise((res) => {\n      if (this.getEventStatus(event)) {\n        res(this);\n      } else {\n        this.emitter.once(event, () => {\n          res(this);\n        });\n      }\n    });\n  }\n\n  onMapLoad(cb?: (mapAdapter: MapAdapter) => void): Promise<MapAdapter> {\n    return new Promise((res) => {\n      const _resolve = () => {\n        const mapAdapter = this.mapAdapter;\n        if (cb) {\n          cb(mapAdapter);\n        }\n        if (mapAdapter) {\n          res(mapAdapter);\n        }\n      };\n      const isLoaded = this.mapAdapter.isLoaded ?? true;\n      if (this.mapAdapter.map && isLoaded) {\n        _resolve();\n      } else {\n        this.mapAdapter.emitter.once('create', () => {\n          _resolve();\n        });\n      }\n    });\n  }\n\n  getLayerAdapters(): { [name: string]: Type<LayerAdapter> } {\n    return this.mapAdapter.layerAdapters;\n  }\n\n  getLayerAdapter(name: string): Type<LayerAdapter> {\n    const adapter = this.mapAdapter.layerAdapters[name];\n    return adapter;\n  }\n\n  locate(opt: LocateOptions, events?: LocationEvents): Locate {\n    if (this.mapAdapter && this.mapAdapter.locate) {\n      return this.mapAdapter.locate(opt, events);\n    }\n    const stop = () => ({});\n    return { stop };\n  }\n\n  stopGetCoordFromMapClick(): void {\n    if (this._coordFromMapClickPromise) {\n      this._coordFromMapClickPromise.cancel();\n    }\n  }\n\n  getCoordFromMapClick(): CancelablePromise<LngLatArray> {\n    if (!this._coordFromMapClickPromise) {\n      this._coordFromMapClickPromise = new CancelablePromise(\n        (resolve, reject, onCancel) => {\n          const cursor: Cursor = this.getCursor() || 'grab';\n          this._removeEventListeners({ include: ['click'] });\n          this.setCursor('crosshair');\n          const onCancel_ = (): void => {\n            this.setCursor(cursor);\n            this._addEventsListeners({ include: ['click'] });\n            this.mapAdapter.emitter.off('click', onMapClick);\n            this._coordFromMapClickPromise = undefined;\n          };\n          const onMapClick = (e: MapClickEvent) => {\n            onCancel_();\n            deprecatedMapClick(e);\n            resolve(e.lngLat);\n          };\n          this.mapAdapter.emitter.once('click', onMapClick);\n          onCancel(onCancel_);\n        },\n      );\n    } else {\n      return this.getCoordFromMapClick();\n    }\n    return this._coordFromMapClickPromise;\n  }\n\n  protected _emitStatusEvent(\n    eventName: keyof E,\n    data?: EmitStatusEventData,\n  ): void {\n    // ugly hack to disable type checking error\n    const _eventName = eventName as keyof WebMapEvents;\n    this._eventsStatus[_eventName] = true;\n    this.emitter.emit(_eventName, data);\n  }\n\n  protected async _addLayerProviders(): Promise<void> {\n    //\n  }\n\n  protected async _onLoadSync(): Promise<void> {\n    //\n  }\n\n  private async _setupMap(): Promise<this> {\n    if (!this.mapAdapter) {\n      throw new Error('WebMap `mapAdapter` option is not set');\n    }\n    await this.mapAdapter.create(this.options);\n    this._zoomToInitialExtent();\n\n    await this._addLayerProviders();\n    await this._onLoadSync();\n\n    this._emitStatusEvent('build-map', this.mapAdapter);\n    return this;\n  }\n\n  private _setTileJsonOptions(tileJson: TileJson): void {\n    if (tileJson.center) {\n      this.options.center = tileJson.center;\n    }\n    if (tileJson.bounds) {\n      this.options.bounds = tileJson.bounds;\n    }\n    if (defined(tileJson.maxzoom)) {\n      this.options.maxZoom = tileJson.maxzoom;\n      this.options.zoom = tileJson.maxzoom;\n    }\n    if (defined(tileJson.minzoom)) {\n      this.options.minZoom = tileJson.minzoom;\n      this.options.zoom = tileJson.minzoom;\n    }\n    if (defined(tileJson.maxzoom) && defined(tileJson.minzoom)) {\n      this.options.zoom = (tileJson.maxzoom + tileJson.minzoom) / 2;\n    }\n  }\n\n  private _zoomToInitialExtent(): void {\n    const { center, zoom, bounds } = this.options;\n    if (this._extent) {\n      this.fitBounds(this._extent);\n    } else if (center && zoom) {\n      this.setView(center, zoom);\n    } else if (bounds) {\n      this.fitBounds(bounds);\n    }\n  }\n\n  private _setInitMapState(states: Type<StateItem>[]): void {\n    for (const X of states) {\n      const state = new X(this);\n      this._mapState.push(state);\n      for (const r of this.runtimeParams) {\n        const str = r.get(state.name);\n        if (str !== undefined) {\n          const val = state.parse(str);\n          // state.setValue(val);\n          this._initMapState[state.name] = val;\n          Object.defineProperty(this.options, state.name, {\n            value: val,\n            configurable: true,\n            enumerable: true,\n          });\n          break;\n        }\n      }\n    }\n  }\n\n  private _addEventsListeners(opt?: AddEventsListenersOptions): void {\n    let events: (keyof MainMapEvents)[] = [\n      'preclick',\n      'click',\n      'zoomstart',\n      'zoom',\n      'zoomend',\n      'movestart',\n      'move',\n      'moveend',\n      'mousemove',\n      'mouseout',\n      'mouseover',\n    ];\n\n    if (opt && opt.include) {\n      events = events.filter((x) => opt.include.includes(x));\n    }\n    events.forEach((x) => {\n      this._mapEvents[x] = (data): void => {\n        if (this.runtimeParams.length) {\n          const mapStatusEvent = this._mapState.find((y) => y.event === x);\n          if (mapStatusEvent) {\n            const value = mapStatusEvent.toString(mapStatusEvent.getValue());\n            this.runtimeParams.forEach((r) => {\n              r.set(mapStatusEvent.name, value);\n            });\n          }\n        }\n        if (this._eventsStatus) {\n          this.emitter.emit(x, data);\n        }\n      };\n      const mapEvent = this._mapEvents[x];\n      if (mapEvent) {\n        this.mapAdapter.emitter.on(x, mapEvent);\n      }\n    });\n  }\n\n  private _removeEventListeners(opt?: AddEventsListenersOptions): void {\n    let events = Object.entries(this._mapEvents) as [\n      keyof MainMapEvents,\n      ((...args: any[]) => void) | undefined,\n    ][];\n    if (opt && opt.include) {\n      events = events.filter((x) => opt.include.includes(x[0]));\n    }\n    events.forEach(([x, event]) => {\n      if (event) {\n        this.mapAdapter.emitter.removeListener(x as keyof MainMapEvents, event);\n      }\n    });\n  }\n}\n","/**\n * @internal\n */\nexport function clearObject(obj: Record<any, any>): void {\n  for (const member in obj) {\n    delete obj[member];\n  }\n}\n","import { defined } from '@nextgis/utils';\nimport { Paint, preparePaint } from '@nextgis/paint';\nimport { propertiesFilter } from '@nextgis/properties-filter';\n\nimport { updateGeoJsonAdapterOptions } from './utils/updateGeoJsonAdapterOptions';\nimport { WebMapMain } from './WebMapMain';\n\nimport type { Feature, GeoJsonObject, Geometry } from 'geojson';\nimport type { FeatureProperties, TileJson, Type } from '@nextgis/utils';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\n\nimport type {\n  LayerAdapter,\n  LayerAdapters,\n  FilterOptions,\n  AdapterOptions,\n  LayerDefinition,\n  DataLayerFilter,\n  MainLayerAdapter,\n  AdapterConstructor,\n  VectorLayerAdapter,\n  TileAdapterOptions,\n  FeatureLayerAdapter,\n  ImageAdapterOptions,\n  OnLayerMouseOptions,\n  LayerAdaptersOptions,\n  OnLayerSelectOptions,\n  GeoJsonAdapterOptions,\n  LayerAdapterDefinition,\n} from './interfaces/LayerAdapter';\nimport type { LayerDef } from './interfaces/BaseTypes';\nimport type {\n  GetAttributionsOptions,\n  ToggleLayerOptions,\n  MapOptions,\n} from './interfaces/MapOptions';\nimport type { WebMapEvents } from './interfaces/Events';\nimport type { FitOptions } from './interfaces/MapAdapter';\n\ntype AddedLayers<M = any, L = any> = { [id: string]: LayerAdapter<M, L> };\n\nexport class WebMapLayers<\n  M = any,\n  L = any,\n  E extends WebMapEvents = WebMapEvents,\n  O extends MapOptions = MapOptions,\n> extends WebMapMain<M, E, O> {\n  private _layersIdCounter = 1;\n  private _layersOrderCounter = 1;\n  private readonly _baselayers: string[] = [];\n  private readonly _layers: AddedLayers<M, L> = {};\n  private readonly _selectedLayers: string[] = [];\n\n  constructor(mapOptions: O) {\n    super(mapOptions);\n    const tileJson = this.options.tileJson;\n    if (tileJson) {\n      this.emitter.once('build-map', () => this.addTileJsonLayer(tileJson));\n    }\n  }\n\n  /**\n   * Try to fit map view by given layer bounds.\n   * But not all layers have borders\n   */\n  async fitLayer(layerDef: LayerDef, options?: FitOptions): Promise<void> {\n    const layer = this.getLayer(layerDef);\n    // TODO: remove backward compatibility for `getExtent`\n    const getBounds = layer && (layer.getBounds || layer.getExtent);\n    if (getBounds) {\n      const extent = await getBounds.call(layer);\n      if (extent) {\n        this.fitBounds(extent, options);\n      }\n    }\n  }\n\n  /**\n   * Check if given layer is baselayer\n   */\n  isBaseLayer(layerDef: LayerDef): boolean | undefined {\n    const layer = this.getLayer(layerDef);\n    if (layer && layer.id) {\n      return this._baselayers.indexOf(layer.id) !== -1;\n    }\n    return undefined;\n  }\n\n  getBaseLayers(): LayerAdapter[] {\n    const baselayers: LayerAdapter[] = [];\n    this._baselayers.forEach((x) => {\n      const baselayer = this._layers[x];\n      if (baselayer) {\n        baselayers.push(baselayer);\n      }\n    });\n    return baselayers;\n  }\n\n  getBaseLayersIds(): string[] {\n    return this._baselayers;\n  }\n\n  /**\n   * Helper method to return added layer object by any definition type.\n   */\n  getLayer<LA extends LayerAdapter = LayerAdapter>(\n    layerDef: LayerDef,\n  ): LA | undefined {\n    if (typeof layerDef === 'string') {\n      return this._layers[layerDef] as LA;\n    }\n    return layerDef as LA;\n  }\n\n  /**\n   * Helper method to return added layer identificator by any definition type.\n   */\n  getLayerId(layerDef: LayerDef): string | undefined {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.id) {\n        return layer?.id;\n      }\n      if (layer && layer.options) {\n        return layer.options.id;\n      }\n    }\n    throw new Error('No id for layer');\n  }\n\n  /**\n   * Return array of all added layer identifications.\n   */\n  getLayers(): string[] {\n    return Object.keys(this._layers);\n  }\n\n  // TODO: rename to getLayers, getLayers rename to getLayersIds\n  allLayers(): AddedLayers<M, L> {\n    return this._layers;\n  }\n\n  orderedLayers<LA extends LayerAdapter<M, L> = LayerAdapter<M, L>>(): LA[] {\n    return Object.values(this._layers).sort((a, b) =>\n      a.order && b.order ? a.order - b.order : 0,\n    ) as LA[];\n  }\n\n  findLayer<T extends LayerAdapter = LayerAdapter>(\n    filter: (adapter: T) => boolean,\n  ): T | undefined {\n    for (const l in this._layers) {\n      const layerAdapter = this._layers[l] as T;\n      const isFit = filter(layerAdapter);\n      if (isFit) {\n        return layerAdapter;\n      }\n    }\n  }\n\n  /**\n   * Check if the given layer on the map\n   */\n  isLayerVisible(layerDef: LayerDef): boolean {\n    const layer = this.getLayer(layerDef);\n    return layer && layer.options.visibility !== undefined\n      ? layer.options.visibility\n      : false;\n  }\n\n  /**\n   * Shortcut method to create base layer\n   */\n  async addBaseLayer<\n    K extends keyof LayerAdapters,\n    O extends AdapterOptions = AdapterOptions,\n  >(\n    adapter: K | Type<LayerAdapters[K]>,\n    options?: O | LayerAdaptersOptions[K],\n  ): Promise<LayerAdapter> {\n    const layer = await this.addLayer(\n      adapter,\n      {\n        ...options,\n        baselayer: true,\n      },\n      undefined,\n    );\n\n    return layer;\n  }\n\n  /**\n   * Registration of map layer.\n   *\n   * @param adapter - The name of layer adapter from [MapAdapter.layerAdapters](webmap#MapAdapter.layerAdapters).\n   *                May be custom object or class implemented by [MainLayerAdapter](webmap#MainLayerAdapter).\n   * @param options - Specific options for given adapter\n   *\n   * @example\n   * ```javascript\n   * webMap.addLayer('TILE', options).then((layer) => webMap.showLayer(layer));\n   *\n   * webMap.addLayer(CustomLayerAdapter, options);\n   * ```\n   */\n  async addLayer<\n    K extends keyof LayerAdapters,\n    LO extends AdapterOptions = AdapterOptions,\n  >(\n    adapter: LayerAdapterDefinition<K>,\n    options: LO | LayerAdaptersOptions[K] = {},\n    order?: number,\n  ): Promise<LayerAdapter> {\n    const id = this._layersIdCounter++;\n    const _order = defined(order)\n      ? order\n      : options.order !== undefined\n      ? options.order\n      : this.reserveOrder();\n    let adapterEngine: Type<LayerAdapter<M, L, LO>> | undefined;\n    if (typeof adapter === 'string') {\n      adapterEngine = this.getLayerAdapter(adapter) as Type<\n        LayerAdapter<M, L, LO>\n      >;\n    } else if (typeof adapter === 'function') {\n      adapterEngine = adapter as Type<LayerAdapter<M, L, LO>>;\n    } else if (\n      'then' in (adapter as Promise<Type<LayerAdapters[K]> | undefined>)\n    ) {\n      adapterEngine = (await adapter) as Type<LayerAdapter<M, L, LO>>;\n    }\n\n    const geoJsonOptions = options as GeoJsonAdapterOptions;\n\n    this._updateGeoJsonOptions(geoJsonOptions);\n\n    options = {\n      id: String(id),\n      order: _order,\n      ...options,\n    };\n\n    // options.visibility is a layer global state\n    const visibility = options.visibility ?? true;\n    options.visibility = false;\n\n    if (options.baselayer) {\n      options.order = 0;\n    }\n    if (this.options.onBeforeAddLayer) {\n      const modified = this.options.onBeforeAddLayer({\n        options,\n        adapter: adapterEngine,\n      });\n      if (modified) {\n        if (modified.options) {\n          options = modified.options;\n        }\n        if (modified.adapter) {\n          adapterEngine = modified.adapter as Type<LayerAdapter<M, L, LO>>;\n        }\n      }\n    }\n    if (adapterEngine !== undefined) {\n      const _adapter = new adapterEngine(this.mapAdapter.map, options);\n      _adapter.options = { ...options, ..._adapter.options };\n\n      if (_adapter.options.baselayer) {\n        options.baselayer = true;\n        options.order = 0;\n        _adapter.options.order = 0;\n      }\n\n      let layerId: string | undefined;\n      if (_adapter.options.id) {\n        layerId = String(_adapter.options.id);\n\n        this._layers[layerId] = _adapter;\n      }\n      this._emitLayerEvent('layer:preadd', layerId || '', _adapter);\n      await this.onMapLoad();\n      _adapter.map = this.mapAdapter.map;\n      const layer = await _adapter.addLayer(_adapter.options);\n      // checking that the original layer was inserted into the adapter anyway\n      _adapter.layer = layer;\n      // think about how to move `id` to the adapter's constructor,\n      // but that it is not required in the options\n      _adapter.id = _adapter.options.id || String(id);\n      _adapter.options.id = _adapter.id;\n      if (options.baselayer) {\n        _adapter.options.order = 0;\n      }\n      _adapter.order = _adapter.options.order ?? _order;\n      if (layerId) {\n        delete this._layers[layerId];\n      }\n      layerId = String(_adapter.id);\n      if (this._layers[layerId]) {\n        throw Error(`layer with id '${layerId}' already exist`);\n      }\n      if (layerId) {\n        this._layers[layerId] = _adapter;\n\n        if (geoJsonOptions.filter) {\n          this.filterLayer(_adapter, geoJsonOptions.filter);\n        }\n        if (options.baselayer) {\n          this._baselayers.push(layerId);\n        }\n\n        if (visibility) {\n          await this.showLayer(layerId);\n        }\n      }\n      const opacity = options.opacity;\n      if (opacity !== undefined && opacity <= 1) {\n        this.setLayerOpacity(_adapter, opacity);\n      }\n      // TODO: remove backward compatibility for `getExtent`\n      const getBounds = layer && (_adapter.getBounds || _adapter.getExtent);\n      if (options.fit && getBounds) {\n        const extent = await getBounds.call(_adapter);\n        if (extent) {\n          await this.fitBounds(extent);\n        }\n      }\n      if (options.onAdded) {\n        options.onAdded(_adapter);\n      }\n      this._emitLayerEvent('layer:add', layerId, _adapter);\n      return _adapter;\n    }\n    return Promise.reject('No adapter');\n  }\n\n  async addLayerFromAsyncAdapter<\n    K extends keyof LayerAdapters,\n    O extends AdapterOptions = AdapterOptions,\n  >(\n    adapter: AdapterConstructor,\n    options: O | LayerAdaptersOptions[K],\n    order?: number,\n  ): Promise<LayerAdapter> {\n    const _order =\n      order || options.order !== undefined\n        ? options.order\n        : 0 || this.reserveOrder();\n    const adapterConstructor = adapter as AdapterConstructor;\n    const adapterConstructorPromise = adapterConstructor();\n    const adapterEngine = await adapterConstructorPromise;\n    if (adapterEngine) {\n      return this.addLayer(adapterEngine, options, _order);\n    }\n    return Promise.reject('No adapter');\n  }\n\n  /**\n   * Remove all layer from map and memory.\n   */\n  removeLayers(\n    allowCb?: (layer: string, adapter: LayerAdapter) => boolean,\n  ): void {\n    for (const l in this._layers) {\n      let allow = true;\n      if (allowCb) {\n        allow = allowCb(l, this._layers[l]);\n      }\n      if (allow) {\n        this.removeLayer(l);\n        delete this._layers[l];\n      }\n    }\n  }\n\n  reserveOrder(): number {\n    return this._layersOrderCounter++;\n  }\n\n  /**\n   * Remove all layers but not remove basemap.\n   */\n  removeOverlays(): void {\n    this.removeLayers((layerId, layer) => {\n      if (layer && layer.options && layer.options.baselayer) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  /**\n   * Remove specific layer from map and memory by its definition.\n   */\n  removeLayer(layerDef: LayerDef): void {\n    const layer = this.getLayer(layerDef);\n    const layerId = layer && this.getLayerId(layer);\n    if (layer && layerId) {\n      this.emitter.emit('layer:preremove', layer);\n      if (layer.beforeRemove) {\n        layer.beforeRemove();\n      }\n      if (layer.removeLayer) {\n        layer.removeLayer();\n      } else {\n        this.mapAdapter.removeLayer(layer.layer);\n      }\n      if (layer.options && layer.options.baselayer) {\n        const index = this._baselayers.indexOf(layerId);\n        if (index) {\n          this._baselayers.splice(index, 1);\n        }\n      }\n      delete this._layers[layerId];\n      this.emitter.emit('layer:remove', layer);\n    }\n  }\n\n  /**\n   * Create layer from GeoJson data. Set style and behavior for selection.\n   *\n   * @example\n   * ```javascript\n   * // Add simple layer\n   * webMap.addGeoJsonLayer({ data: geojson, paint: { color: 'red' } });\n   *\n   * // Add styled by feature property layer with selection behavior\n   * webMap.addGeoJsonLayer({\n   *   data: geojson,\n   *   paint: function (feature) {\n   *     return { color: feature.properties.color, opacity: 0.5 }\n   *   },\n   *  selectedPaint: function (feature) {\n   *    return { color: feature.properties.selcolor, opacity: 1 }\n   *  },\n   *  selectable: true,\n   *  multiselect: true\n   * });\n   *\n   * // Add marker layer styled with use [Icons](icons)\n   * webMap.addGeoJsonLayer({ data: geojson, paint: webMap.getIcon({ color: 'orange' })});\n   *\n   * // work with added layer\n   * const layer = webMap.addGeoJsonLayer({ data: geojson, id: 'my_layer_name'});\n   * // access layer by id\n   * webMap.showLayer('my_layer_name');\n   * // or access layer by instance\n   * webMap.showLayer(layer);\n   * ```\n   */\n  addGeoJsonLayer<\n    K extends keyof LayerAdapters = keyof LayerAdapters,\n    O extends GeoJsonAdapterOptions<any, any> = GeoJsonAdapterOptions,\n  >(\n    opt: O = {} as O,\n    adapter?: LayerAdapterDefinition<K>,\n  ): Promise<VectorLayerAdapter<any, any, any>> {\n    opt = opt || ({} as O);\n    opt.multiselect = opt.multiselect !== undefined ? opt.multiselect : false;\n    opt.unselectOnSecondClick =\n      opt.unselectOnSecondClick !== undefined\n        ? opt.unselectOnSecondClick\n        : true;\n    if (!adapter) {\n      opt = updateGeoJsonAdapterOptions(opt);\n    }\n    opt.paint = opt.paint || {};\n    return this.addLayer(adapter || 'GEOJSON', opt);\n  }\n\n  /** Shortcut for {@link WebMapLayers.addGeoJsonLayer} to create GeoJson adapter with generic types for working in typescript */\n  addFeatureLayer<\n    P extends FeatureProperties = FeatureProperties,\n    G extends Geometry = Geometry,\n    O extends GeoJsonAdapterOptions<Feature<G, P>> = GeoJsonAdapterOptions<\n      Feature<G, P>\n    >,\n  >(options = {} as O): Promise<FeatureLayerAdapter<P, G>> {\n    return this.addGeoJsonLayer<'GEOJSON', O>(options) as Promise<\n      FeatureLayerAdapter<P, G>\n    >;\n  }\n\n  /** Shortcut for {@link WebMapLayers.addLayer} to create TileLayer adapter */\n  addTileLayer(\n    url: string,\n    options: Omit<TileAdapterOptions, 'url'> = {},\n  ): Promise<MainLayerAdapter<M, L, TileAdapterOptions>> {\n    return this.addLayer('TILE', { ...options, url }) as Promise<\n      MainLayerAdapter<M, L, TileAdapterOptions>\n    >;\n  }\n\n  /** Shortcut for {@link WebMapLayers.addLayer} to create TileLayer adapter */\n  addImageLayer(\n    url: string,\n    options: Omit<ImageAdapterOptions, 'url'>,\n  ): Promise<MainLayerAdapter<M, L, ImageAdapterOptions>>;\n  addImageLayer(\n    options: ImageAdapterOptions,\n  ): Promise<MainLayerAdapter<M, L, ImageAdapterOptions>>;\n  addImageLayer(\n    urlOrOptions: string | ImageAdapterOptions,\n    options?: Omit<ImageAdapterOptions, 'url'>,\n  ): Promise<MainLayerAdapter<M, L, ImageAdapterOptions>> {\n    let url;\n    if (typeof urlOrOptions === 'string') {\n      url = urlOrOptions;\n    } else {\n      url = urlOrOptions.url;\n      options = urlOrOptions;\n    }\n\n    return this.addLayer('IMAGE', { ...options, url }) as Promise<\n      MainLayerAdapter<M, L, ImageAdapterOptions>\n    >;\n  }\n\n  /**\n   * Show added layer on the map by it definition.\n   */\n  showLayer(\n    layerDef: LayerDef,\n    options: ToggleLayerOptions = {},\n  ): Promise<void> {\n    return this.toggleLayer(layerDef, true, options);\n  }\n\n  /**\n   * Hide added layer on the map by it definition.\n   */\n  hideLayer(\n    layerDef: LayerDef,\n    options: ToggleLayerOptions = {},\n  ): Promise<void> {\n    return this.toggleLayer(layerDef, false, options);\n  }\n\n  /**\n   * Change added layer visibility on the map by given status or inverse current status.\n   *\n   * @example\n   * ```javascript\n   * webMap.addLayer('TILE', {id: 'my_layer', url: ''}).then((layer) => {\n   *   webMap.toggleLayer(layer, true);\n   *   webMap.toggleLayer('my_layer', false);\n   *   webMap.toggleLayer('my_layer');\n   *   webMap.isLayerVisible(layer); // true\n   * });\n   * ```\n   */\n  toggleLayer(\n    layerDef: LayerDef,\n    status?: boolean,\n    options: ToggleLayerOptions = {},\n  ): Promise<void> {\n    const layer = this.getLayer(layerDef);\n\n    const onMap = layer && layer.options.visibility;\n    const toStatus = status !== undefined ? status : !onMap;\n    const silent = options.silent !== undefined ? options.silent : false;\n    const action = async (l: LayerAdapter) => {\n      const id = String(l.id);\n      const preEventName = toStatus ? 'layer:preshow' : 'layer:prehide';\n      const eventName = toStatus ? 'layer:show' : 'layer:hide';\n      if (!silent) {\n        this._emitLayerEvent(preEventName, id, l);\n        this._emitLayerEvent('layer:pretoggle', id, l);\n      }\n      if (toStatus && this.mapAdapter) {\n        const order = l.options.baselayer ? 0 : l.options.order;\n\n        // do not show baselayer if another on the map\n        if (l.options.baselayer && this._baselayers.length) {\n          const anotherVisibleBaselayers = this._baselayers.filter((x) => {\n            return x !== l.id && this.isLayerVisible(x);\n          });\n          for (const bl of anotherVisibleBaselayers) {\n            await this.hideLayer(bl);\n          }\n        }\n        if (l.showLayer) {\n          await l.showLayer.call(l, l.layer);\n        } else if (l.layer !== undefined) {\n          await this.mapAdapter.showLayer(l.layer);\n        }\n        if (order !== undefined) {\n          this.mapAdapter.setLayerOrder(l.layer, order, this._layers);\n        }\n      } else {\n        if (l.hideLayer) {\n          await l.hideLayer.call(l, l.layer);\n        } else if (l.layer !== undefined) {\n          await this.mapAdapter.hideLayer(l.layer);\n        }\n      }\n      l.options.visibility = toStatus;\n      if (!silent) {\n        this._emitLayerEvent(eventName, id, l);\n        this._emitLayerEvent('layer:toggle', id, l);\n      }\n    };\n    if (layer) {\n      return this.onMapLoad().then(() => action(layer));\n    }\n    return Promise.resolve();\n  }\n\n  updateLayer(layerDef: LayerDef): Promise<void> {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.updateLayer) {\n        return Promise.resolve(layer.updateLayer());\n      } else if (this.isLayerVisible(layer)) {\n        return this.hideLayer(layer, { silent: true }).then(() => {\n          return this.showLayer(layer, { silent: true });\n        });\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Set transparency for a given layer by number from 0 to 1\n   */\n  setLayerOpacity(layerDef: LayerDef, value: number): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.setOpacity) {\n        layer.setOpacity(value);\n      } else if (this.mapAdapter.setLayerOpacity) {\n        this.mapAdapter.setLayerOpacity(layer.layer, value);\n      }\n    }\n  }\n\n  // requestGeomString(pixel: Pixel, pixelRadius: number) {\n  //   if (this.mapAdapter.requestGeomString) {\n  //     return this.mapAdapter.requestGeomString(pixel, pixelRadius);\n  //   }\n  // }\n\n  /**\n   * Mark the layer as selected.\n   * If the adapter is a vector layer and supports data selection,\n   * you can pass a callback function to specify which data will be selected.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.selectLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n\n   */\n  selectLayer(layerDef: LayerDef, findFeatureFun?: DataLayerFilter): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer as VectorLayerAdapter;\n      if (adapter && adapter.select) {\n        adapter.select(findFeatureFun);\n      }\n      const layerId = this.getLayerId(layer);\n      if (layerId) {\n        this._selectedLayers.push(layerId);\n      }\n    }\n  }\n\n  /**\n   * Unselect the given layer.\n   * If the adapter is a vector layer and supports data selection,\n   * you can pass a callback function to specify which data will be unselected.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.unSelectLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n   *\n   */\n  unSelectLayer(layerDef: LayerDef, findFeatureFun?: DataLayerFilter): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer && (layer as VectorLayerAdapter);\n      if (adapter.unselect) {\n        adapter.unselect(findFeatureFun);\n      }\n      const layerId = this.getLayerId(layer);\n      if (layerId) {\n        const index = this._selectedLayers.indexOf(layerId);\n        if (index !== -1) {\n          this._selectedLayers.splice(index, 1);\n        }\n      }\n    }\n  }\n  /** Remove selection from any selected selectable layer */\n  unSelectLayers(): void {\n    const layers = Object.values(this.allLayers());\n    let l: VectorLayerAdapter;\n    for (l of layers) {\n      if (l.unselect) {\n        l.unselect();\n      }\n    }\n  }\n\n  /**\n   * Hide features from a vector layer using a callback function.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.filterLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n   *\n   */\n  filterLayer(\n    layerDef: LayerDef,\n    filter: DataLayerFilter<Feature, L>,\n  ): LayerDefinition<Feature, L>[] {\n    const layer = this.getLayer(layerDef);\n    const adapter = layer as VectorLayerAdapter;\n    if (adapter.filter) {\n      return adapter.filter(filter);\n    }\n    return [];\n  }\n\n  propertiesFilter(\n    layerDef: LayerDef,\n    filters: PropertiesFilter,\n    options?: FilterOptions,\n  ): Promise<void> {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer as VectorLayerAdapter;\n      if (adapter.propertiesFilter) {\n        return adapter.propertiesFilter(filters, options);\n      } else if (adapter.filter) {\n        this.filterLayer(adapter, (e) => {\n          if (e.feature && e.feature.properties) {\n            return propertiesFilter(e.feature.properties, filters);\n          }\n          return true;\n        });\n      }\n    }\n    return Promise.resolve();\n  }\n\n  removeLayerFilter(layerDef: LayerDef): void {\n    const layer = this.getLayer(layerDef);\n    const adapter = layer as VectorLayerAdapter;\n    if (adapter.removeFilter) {\n      adapter.removeFilter();\n    } else if (adapter.filter) {\n      adapter.filter(() => {\n        return true;\n      });\n    }\n  }\n\n  /**\n   * Sets the GeoJSON data for given vector layer.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON').then((layer) => {\n   *   webMap.setLayerData(layer, geojson);\n   * });\n   * ```\n   */\n  setLayerData(layerDef: LayerDef, data: GeoJsonObject): void | Promise<void> {\n    const vectorAdapter = this.getLayer(layerDef);\n    const adapter = vectorAdapter as VectorLayerAdapter;\n    if (adapter) {\n      if (adapter.setData) {\n        return adapter.setData(data);\n      } else if (adapter.clearLayer && adapter.addData) {\n        adapter.clearLayer();\n        return adapter.addData(data);\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Push new the GeoJSON features into given vector layer.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson_features_5}).then((layer) => {\n   *   console.log(layer.getLayers().length) // > 5;\n   *   webMap.addLayerData(layer, geojson_features_3);\n   *   console.log(layer.getLayers().length) // > 8;\n   * });\n   * ```\n   */\n  addLayerData(layerDef: LayerDef, data: GeoJsonObject): void {\n    const layerMem = this.getLayer(layerDef);\n    const adapter = layerMem as VectorLayerAdapter;\n    if (adapter.addData) {\n      adapter.addData(data);\n    }\n  }\n\n  /**\n   * Remove from vector layer all features.\n   * it is possible to remove only some objects if you specify a callback function.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.clearLayerData(layer, (feture) => feture.id === 42);\n   *   webMap.clearLayerData(layer);\n   * });\n   * ```\n   */\n  clearLayerData(layerDef: LayerDef, cb?: (feature: Feature) => boolean): void {\n    const layerMem = this.getLayer(layerDef);\n    const adapter = layerMem as VectorLayerAdapter;\n    if (adapter && adapter.clearLayer) {\n      adapter.clearLayer(cb);\n    }\n  }\n\n  setLayerPaint(layerDef: LayerDef, paint?: Paint | null): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.setPaint) {\n      layer.setPaint(paint);\n    }\n  }\n  setLayerSelectedPaint(layerDef: LayerDef, paint?: Paint | null): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.setSelectedPaint) {\n      layer.setSelectedPaint(paint);\n    }\n  }\n  updateLayerPaint(layerDef: LayerDef, paint: Partial<Paint>): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.updatePaint) {\n      layer.updatePaint(paint);\n    }\n  }\n  updateLayerSelectedPaint(layerDef: LayerDef, paint: Partial<Paint>): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.updateSelectedPaint) {\n      layer.updateSelectedPaint(paint);\n    }\n  }\n\n  getAttributions(options: GetAttributionsOptions): string[] {\n    const attributions: string[] = [];\n    for (const l in this._layers) {\n      const layerCache = this._layers[l];\n      const onlyVisible =\n        options.onlyVisible !== undefined ? options.onlyVisible : true;\n      let useLayerAttr = onlyVisible ? layerCache.options.visibility : true;\n      if (useLayerAttr && options.onlyBaselayer) {\n        useLayerAttr = this._baselayers.includes(l);\n      }\n      if (useLayerAttr) {\n        const attr = layerCache.options && layerCache.options.attribution;\n        if (attr) {\n          attributions.push(attr);\n        }\n      }\n    }\n\n    return attributions;\n  }\n\n  getActiveBaseLayer(): MainLayerAdapter<M, any, AdapterOptions> | undefined {\n    const visibleLayerBaseLayer = this.getBaseLayers().find((x) => {\n      return this.isLayerVisible(x);\n    });\n    if (visibleLayerBaseLayer) {\n      return this.getLayer(visibleLayerBaseLayer);\n    }\n  }\n\n  addTileJsonLayer(\n    tileJson: TileJson,\n  ): Promise<MainLayerAdapter<M, any, TileAdapterOptions>> {\n    // if (this.mapAdapter.createTileJsonlayer) {\n    // } else {\n\n    const url = tileJson.tiles[0];\n    return this.addLayer('TILE', {\n      url,\n      maxZoom: tileJson.maxzoom,\n      minZoom: tileJson.minzoom,\n      subdomains: tileJson.scheme,\n      attribution: tileJson.attribution,\n    }) as Promise<MainLayerAdapter<M, any, TileAdapterOptions>>;\n  }\n\n  /** @internal */\n  _emitLayerEvent(name: keyof E, id: string, options?: unknown) {\n    const name_ = String(name);\n    if (defined(id) && name_.startsWith('layer:')) {\n      const specificLayerName = name_.replace('layer:', 'layer-' + id + ':');\n      // @ts-ignore can't paste template literal key for interface\n      this.emitter.emit(specificLayerName, options);\n    }\n    // @ts-ignore\n    this.emitter.emit(name, options);\n  }\n\n  private async _onLayerClick(options: OnLayerMouseOptions) {\n    const id = options.layer.id;\n    this._emitLayerEvent('layer:click', id || '', options);\n    return Promise.resolve(options);\n  }\n\n  private async _onLayerSelect(options: OnLayerSelectOptions) {\n    this._emitLayerEvent('layer:select', options.layer.id || '', options);\n    return Promise.resolve(options);\n  }\n\n  private _updateGeoJsonOptions(options: GeoJsonAdapterOptions) {\n    const {\n      onSelect,\n      onLayerSelect,\n      onClick,\n      onLayerClick,\n      onMouseOut,\n      onMouseOver,\n    } = options;\n    const onLayerClickFromOpt = onClick || onLayerClick;\n    options.onClick = (e) => {\n      if (onLayerClickFromOpt) {\n        onLayerClickFromOpt(e);\n      }\n      return this._onLayerClick(e);\n    };\n\n    options.onMouseOut = (e) => {\n      const id = e.layer.id;\n      onMouseOut && onMouseOut(e);\n      if (defined(id)) {\n        this._emitLayerEvent(`layer:mouseout`, id, e);\n      }\n    };\n\n    options.onMouseOver = (e) => {\n      const id = e.layer.id;\n      onMouseOver && onMouseOver(e);\n      if (defined(id)) {\n        this._emitLayerEvent(`layer:mouseover`, id, e);\n      }\n    };\n\n    // TODO: remove backward compatibility for onLayerSelect\n    const onLayerSelectFromOpt = onSelect || onLayerSelect;\n    options.onSelect = (e) => {\n      if (onLayerSelectFromOpt) {\n        onLayerSelectFromOpt(e);\n      }\n      return this._onLayerSelect(e);\n    };\n\n    if (!options.nativePaint) {\n      if (this.options.paint) {\n        options.paint = preparePaint(\n          options.paint || {},\n          this.options.paint,\n          this.getPaintFunctions,\n        );\n      }\n      if (options.selectedPaint && this.options.selectedPaint) {\n        options.selectedPaint = preparePaint(\n          options.selectedPaint,\n          this.options.selectedPaint,\n          this.getPaintFunctions,\n        );\n      }\n    }\n  }\n}\n","import type {\n  ToggleControlOptions,\n  ToggleControl,\n  ButtonControlOptions,\n} from '../../interfaces/MapControl';\n\n/**\n * The toggle is a button with status.\n * @internal\n */\nexport function createToggleControl<C = any>(\n  createButtonControl: (options: ButtonControlOptions) => C,\n  options: ToggleControlOptions,\n): C & ToggleControl {\n  const link = document.createElement('div');\n\n  let status = false;\n  if (options.getStatus) {\n    status = options.getStatus();\n  } else if (options.status) {\n    status = options.status;\n  }\n\n  const title = options.title || '';\n  const html = options.html;\n\n  function setTitle() {\n    if (title) {\n      if (typeof title === 'string') {\n        link.title = title;\n      } else {\n        link.title = status ? title.on : title.off;\n      }\n      link.setAttribute('aria-label', link.title);\n    }\n  }\n  setTitle();\n\n  // DomEvent.disableClickPropagation(link);\n  // DomEvent.on(link, 'click', DomEvent.stop);\n\n  function _setHtml(htmlDef: string | HTMLElement) {\n    if (htmlDef instanceof HTMLElement) {\n      link.innerHTML = '';\n      link.appendChild(htmlDef);\n    } else if (typeof htmlDef === 'string') {\n      link.innerHTML = htmlDef;\n    }\n  }\n  function setHtml() {\n    if (html) {\n      if (typeof html === 'string' || html instanceof HTMLElement) {\n        _setHtml(html);\n      } else {\n        _setHtml(status ? html.on : html.off);\n      }\n      link.setAttribute('aria-label', link.title);\n    }\n  }\n  setHtml();\n\n  function _setClass(addClass: string, impact: boolean) {\n    addClass.split(' ').forEach((x) => {\n      if (impact) {\n        link.classList.add(x);\n      } else {\n        link.classList.remove(x);\n      }\n    });\n  }\n\n  function setClass() {\n    if (options.addClassOn) {\n      _setClass(options.addClassOn, status);\n    }\n    if (options.addClassOff) {\n      _setClass(options.addClassOff, !status);\n    }\n  }\n\n  if (options.addClass) {\n    _setClass(options.addClass, true);\n  }\n  setClass();\n\n  const changeStatus = (status_?: boolean) => {\n    if (status_ !== undefined) {\n      status = status_;\n    }\n    setHtml();\n    setTitle();\n    setClass();\n  };\n\n  const onClick = (status_?: boolean) => {\n    status = status_ !== undefined ? status_ : !status;\n    if (options.onClick) {\n      const afterClick = options.onClick(status);\n      Promise.resolve(afterClick)\n        .then(() => changeStatus())\n        .catch(() => (status = !status));\n    } else {\n      changeStatus();\n    }\n  };\n\n  const buttonControl = createButtonControl({\n    html: link,\n    onClick,\n  }) as C & ToggleControl;\n  buttonControl.onClick = onClick;\n  buttonControl.changeStatus = changeStatus;\n  return buttonControl;\n}\n","import { WebMapLayers } from './WebMapLayers';\nimport { createToggleControl } from './components/controls/createToggleControl';\n\nimport type { WebMapMain } from './WebMapMain';\nimport type { MapOptions } from './interfaces/MapOptions';\nimport type { WebMapEvents } from './interfaces/Events';\nimport type {\n  MapControl,\n  CreateControlOptions,\n  ButtonControlOptions,\n  ToggleControlOptions,\n  ToggleControl,\n  MapControls,\n} from './interfaces/MapControl';\nimport type { ControlPosition } from './interfaces/MapAdapter';\n\n/**\n * Collection of methods for managing map controls\n */\nexport class WebMapControls<\n    M = any,\n    L = any,\n    C extends object = any,\n    E extends WebMapEvents = WebMapEvents,\n    O extends MapOptions = MapOptions,\n  >\n  extends WebMapLayers<M, L, E, O>\n  implements WebMapLayers, WebMapMain\n{\n  static controls: {\n    [name: string]: (webMap: WebMapControls, options?: any) => any;\n  } = {\n    CONTROL: (\n      webMap: WebMapControls,\n      options: {\n        control: MapControl;\n        options?: CreateControlOptions;\n      },\n    ) => {\n      return webMap.createControl(options.control, options.options);\n    },\n    BUTTON: (webMap: WebMapControls, options: ButtonControlOptions) => {\n      return webMap.createButtonControl(options);\n    },\n    TOGGLE: (webMap: WebMapControls, options: ToggleControlOptions) => {\n      return webMap.createToggleControl(options);\n    },\n  };\n\n  private _loadControlQueue: {\n    [key in ControlPosition]: (() => Promise<any>)[];\n  } = {\n    'top-right': [],\n    'bottom-right': [],\n    'top-left': [],\n    'bottom-left': [],\n  };\n  private _isControlLoading: { [key in ControlPosition]: boolean } = {\n    'top-right': false,\n    'bottom-right': false,\n    'top-left': false,\n    'bottom-left': false,\n  };\n\n  async addControl<K extends keyof MapControls>(\n    controlDef: K | C,\n    position: ControlPosition,\n    options?: MapControls[K],\n  ): Promise<any> {\n    let control: C | undefined;\n    position = position ?? 'top-left';\n    if (typeof controlDef === 'string') {\n      control = this.getControl(controlDef, options);\n    } else {\n      control = controlDef as C;\n    }\n    if (control) {\n      return new Promise<() => Promise<any>>((resolve) => {\n        const promise = async () => {\n          const _control = await control;\n          const c = this.mapAdapter.addControl(_control, position);\n          resolve(c);\n        };\n        this._setControlQueue(position, promise);\n      });\n    }\n  }\n\n  /**\n   * Creating a universal map layout control element. Can be used with any map adapter.\n   *\n   * @example\n   * ```javascript\n   * const control = webMap.createControl({\n   *   onAdd() {\n   *     return document.createElement('div');\n   *   }\n   * });\n   * ```\n   */\n  async createControl(\n    control: MapControl,\n    options?: CreateControlOptions,\n  ): Promise<C | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createControl) {\n      return this.mapAdapter.createControl(control, options);\n    }\n  }\n\n  async createButtonControl(\n    options: ButtonControlOptions,\n  ): Promise<C | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createButtonControl) {\n      return this.mapAdapter.createButtonControl(options);\n    }\n  }\n\n  /**\n   * Create any toggler control button\n   * @param options - Options for control layout customization and assigning a callback function\n   *\n   * @example\n   * ```javascript\n   * const toggleControl = ngwMap.createToggleControl({\n   *   getStatus: () => webMap.isLayerVisible('any-layer-id'),\n   *   onClick: (status) => ngwMap.toggleLayer('webmap', status),\n   *   html: {\n   *     on: 'ON',\n   *     off: 'OFF'\n   *   },\n   *   title: 'Toggle layer visibility'\n   * });\n   * webMap.addControl(toggleControl, 'top-right');\n   * ```\n   * {@link http://code.nextgis.com/demo-examples-toggle-control | Toggle button control example}\n   */\n  async createToggleControl(\n    options: ToggleControlOptions,\n  ): Promise<(C & ToggleControl) | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createToggleControl) {\n      return this.mapAdapter.createToggleControl(options);\n    } else {\n      if (this.mapAdapter.createButtonControl) {\n        return createToggleControl<C>(\n          this.mapAdapter.createButtonControl,\n          options,\n        );\n      }\n    }\n  }\n\n  /**\n   *\n   * @param control - Instance of WEB-GIS framework control.\n   *                  What is returned by the {@Link WebMapControls.createControl | create} method\n   */\n  removeControl(control: C): void {\n    if ('remove' in control) {\n      // @ts-ignore TODO: ugly code, rewrite\n      control.remove();\n    } else if (this.mapAdapter.removeControl) {\n      Promise.resolve(control).then((c) => {\n        this.mapAdapter.removeControl(c);\n      });\n    }\n  }\n\n  /**\n   * Get instance of registered control\n   * @param control - Any registered control string name\n   * @param options - Custom control options\n   */\n  getControl<K extends keyof MapControls>(\n    control: K,\n    options?: MapControls[K],\n  ): C | undefined {\n    const engine = this.mapAdapter.controlAdapters[control];\n    if (engine) {\n      return new engine(options);\n    } else {\n      const createFun = WebMapControls.controls[control];\n      if (createFun) {\n        return createFun(this, options);\n      }\n    }\n  }\n\n  getControlContainer(): HTMLElement | undefined {\n    if (this.mapAdapter.getControlContainer) {\n      return this.mapAdapter.getControlContainer();\n    }\n  }\n\n  private _setControlQueue(position: ControlPosition, cb: () => Promise<any>) {\n    this._loadControlQueue[position].push(cb);\n    if (!this._isControlLoading[position]) {\n      this._applyControls(position);\n    }\n  }\n\n  private async _applyControls(position: ControlPosition) {\n    if (this._loadControlQueue[position].length) {\n      this._isControlLoading[position] = true;\n      const controlCb = this._loadControlQueue[position][0];\n      await controlCb();\n      this._loadControlQueue[position].splice(0, 1);\n      this._applyControls(position);\n    } else {\n      this._isControlLoading[position] = false;\n    }\n  }\n}\n","import type { WebMap } from './WebMap';\n\nconst WEB_MAP_CONTAINER: Record<number, any> = {};\n\nexport function getWebMap<T extends WebMap = WebMap>(id: number): T {\n  return WEB_MAP_CONTAINER[id];\n}\n\nexport function setWebMap(id: number, webMap: WebMap) {\n  WEB_MAP_CONTAINER[id] = webMap;\n}\n","/**\n * @privateRemarks\n * Since it was not possible to split the code through mixins, inheritance was used.\n * The `ts-mixin` plugin worked fine, but led to errors in IE.\n *\n * Now inheritance is as follow:\n * BaseWebMap \\> WebMapLayers \\> WebMap\n *\n * Will need to be done this way:\n * ```javascript\n * class WebMap extend mixin(WebMapLayers, WebMapControls) {}\n * ```\n *\n * This approach can also be considered\n * ```javascript\n * class WebMap {\n *   layers: WebMapLayers;\n *   controls  WebMapControls\n * }\n * ```\n * and then\n *\n * const webMap = new WebMap(...);\n * webMap.layers.addLayer(...)\n *\n * looks good, but will add difficulty in inheriting from WebMap\n *\n * old:\n * ```javascript\n * class NgwMap extends WebMap {\n *   addLayer(...) {\n *      super.addLayer(...)\n *   }\n * }\n * ```\n * new:\n * ```javascript\n * class NgwLayers extends WebMapLayers {\n *   addLayer(...) {\n *     super.addLayer(...)\n *   }\n * }\n *\n * class NgwMap extends WebMap {\n *   layersClass = NgwLayers\n * }\n * ```\n * ...and there will be compatibility issues\n */\n\nimport { WebMapMain } from './WebMapMain';\nimport { WebMapControls } from './WebMapControls';\n\nimport type { MapOptions } from './interfaces/MapOptions';\nimport type { ControlOptions } from './interfaces/MapControl';\nimport type { WebMapEvents } from './interfaces/Events';\nimport type { WebMapLayers } from './WebMapLayers';\nimport { getWebMap, setWebMap } from './container';\n\n/**\n * The core component for managing map adapters.\n * It contains methods for adding and manipulation with\n * {@link WebMapMain | map}, {@link WebMapLayers | layers} and {@link WebMapControls | controls}.\n *\n * @example\n * ```javascript\n * import { WebMap } from '@nextgis/webmap';\n * import MapAdapter from '@nextgis/ol-map-adapter';\n *\n * const webMap = new WebMap({\n *   mapAdapter: new MapAdapter(),\n *   target: 'map',\n * });\n * ```\n *\n * @typeParam M - Interactive Map used in the adapter\n * @typeParam L - Layer\n * @typeParam C - Control\n * @typeParam E - Events\n *\n */\nexport class WebMap<\n    M = any,\n    L = any,\n    C extends object = any,\n    E extends WebMapEvents = WebMapEvents,\n    O extends MapOptions = MapOptions,\n  >\n  extends WebMapControls<M, L, C, E, O>\n  implements WebMapControls, WebMapLayers, WebMapMain\n{\n  constructor(mapOptions: O) {\n    super(mapOptions);\n    this._addControls();\n    setWebMap(this.id, this);\n  }\n\n  static get<T extends WebMap = WebMap>(id: number): T {\n    return getWebMap<T>(id);\n  }\n\n  /**\n   * @internal\n   */\n  protected async _addLayerProviders(): Promise<void> {\n    for await (const kit of this._starterKits) {\n      if (kit.getLayerAdapters) {\n        const adapters = await kit.getLayerAdapters.call(kit);\n        if (adapters) {\n          for await (const adapter of adapters) {\n            const newAdapter = await adapter.createAdapter(this);\n            if (newAdapter) {\n              this.mapAdapter.layerAdapters[adapter.name] = newAdapter;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  protected async _onLoadSync(): Promise<void> {\n    for await (const kit of this._starterKits) {\n      if (kit.onLoadSync) {\n        try {\n          await kit.onLoadSync.call(kit, this);\n        } catch (er) {\n          console.error(er);\n        }\n      }\n    }\n  }\n\n  private _addControls(): void {\n    if (this.options.controls) {\n      this.options.controls.forEach((x) => {\n        let controlAdapterName = x;\n        let controlOptions: ControlOptions = {};\n        if (typeof x === 'string' && this.options.controlsOptions) {\n          if (this.options.controlsOptions[x]) {\n            controlOptions = this.options.controlsOptions[x];\n            if (controlOptions.control !== undefined) {\n              controlAdapterName = controlOptions.control;\n            }\n          }\n        }\n        const { position, ...options } = controlOptions;\n        this.addControl(controlAdapterName, position || 'top-left', options);\n      });\n    }\n    this._emitStatusEvent('controls:create');\n  }\n}\n"],"names":["findMostFrequentGeomType","arr","maxName","counts","fry","length","c","count","undefined","paintTypeAlias","polygon","line","point","typeAlias","Point","LineString","MultiPoint","Polygon","MultiLineString","MultiPolygon","KeyCodes","_createClass","_classCallCheck","_defineProperty","Keys","this","_windowOnFocus","windowOnFocus","bind","_keysPressed","keysPressed","_keysReleased","keysReleased","addKeyboardEventsListener","key","value","keyName","code","keyCodeAlias","keys","window","addEventListener","removeEventListener","e","stopPropagation","keyCode","StateItem","webMap","opt","setValue","name","event","val","CenterState","_StateItem","_inherits","_super","_this","_len","arguments","args","Array","_key","_assertThisInitialized","call","apply","concat","getCenter","setCenter","data","d","map","x","toFixed","str","split","Number","ZoomState","zoom","getZoom","Math","round","setZoom","String","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_defineProperties","target","props","descriptor","_toPropertyKey","input","hint","prim","toPrimitive","res","_toPrimitive","ID","OPTIONS","minZoom","maxZoom","paint","color","opacity","strokeOpacity","stroke","radius","weight","selectedPaint","WebMapMain","mapOptions","instance","Constructor","EventEmitter","getPaintFunctions","mapAdapter","_starterKits","starterKits","options","deepmerge","runtimeParams","_addEventsListeners","tileJson","_setTileJsonOptions","protoProps","_setupMap2","_onLoadSync2","_addLayerProviders2","_create","id","_callee","_context","getEventStatus","_setInitMapState","mapState","_setupMap","_emitStatusEvent","params","_removeEventListeners","member","clearObject","destroy","_mapState","getValue","_step","_iterator","_createForOfIteratorHelper","s","n","get","parse","f","getContainer","HTMLElement","element","document","getElementById","cursor","setCursor","getCursor","container","style","lngLat","getBounds","bounds","getBoundsFeature","zoomIn","toZoom","zoomOut","lngLatOrOpt","isArray","setView","defined","viewOpt","every","fitBounds","_eventName","status","_eventsStatus","_this2","emitter","once","cb","_this3","_this3$mapAdapter$isL","_resolve","isLoaded","layerAdapters","events","locate","_coordFromMapClickPromise","cancel","_this4","getCoordFromMapClick","CancelablePromise","onCancel","include","onCancel_","off","onMapClick","deprecatedMapClick","eventName","emit","_callee2","_context2","_callee3","_context3","_callee4","_context4","_zoomToInitialExtent","_addLayerProviders","_onLoadSync","center","maxzoom","minzoom","_this$options","_extent","states","_step2","_iterator2","X","_step3","_iterator3","_initMapState","_this5","filter","includes","_mapEvents","mapStatusEvent","find","y","toString","r","set","mapEvent","on","_this6","entries","_ref","_ref2","removeListener","_setPrototypeOf","o","p","ReferenceError","_getPrototypeOf","WebMapLayers","_WebMapMain","subClass","superClass","_onLayerSelect2","_onLayerClick2","_addLayerFromAsyncAdapter","_addLayer","_addBaseLayer","_fitLayer","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","Super","NewTarget","_possibleConstructorReturn","addTileJsonLayer","layerDef","layer","extent","getLayer","getExtent","_x","_x2","_baselayers","indexOf","baselayers","baselayer","_layers","sort","a","b","order","l","layerAdapter","visibility","adapter","addLayer","_objectSpread","_x3","_x4","_options$visibility","_order","adapterEngine","geoJsonOptions","modified","_adapter$options$orde","_adapter","layerId","_layer","_args3","_layersIdCounter","reserveOrder","getLayerAdapter","_updateGeoJsonOptions","onBeforeAddLayer","_emitLayerEvent","onMapLoad","filterLayer","showLayer","setLayerOpacity","fit","onAdded","_x5","adapterConstructorPromise","_x6","_x7","_x8","allowCb","allow","removeLayer","_layersOrderCounter","removeLayers","getLayerId","beforeRemove","index","splice","multiselect","unselectOnSecondClick","geomType","geojson","features","geometry","geometries","g","isPaint","updateGeoJsonAdapterOptions","addGeoJsonLayer","url","urlOrOptions","toggleLayer","onMap","toStatus","silent","action","_callee5","preEventName","anotherVisibleBaselayers","bl","_context5","isLayerVisible","hideLayer","t0","setLayerOrder","_x9","updateLayer","setOpacity","findFeatureFun","select","_selectedLayers","unselect","_i","allLayers","filters","propertiesFilter","feature","properties","removeFilter","setData","clearLayer","addData","setPaint","setSelectedPaint","updatePaint","updateSelectedPaint","attributions","layerCache","useLayerAttr","onlyVisible","onlyBaselayer","attr","attribution","visibleLayerBaseLayer","getBaseLayers","tiles","subdomains","scheme","name_","startsWith","specificLayerName","replace","_callee6","_context6","_x10","_callee7","_context7","_x11","onSelect","onLayerSelect","onClick","onLayerClick","onMouseOut","onMouseOver","onLayerClickFromOpt","_onLayerClick","onLayerSelectFromOpt","_onLayerSelect","nativePaint","preparePaint","createToggleControl","createButtonControl","link","createElement","getStatus","title","html","setTitle","setAttribute","_setHtml","htmlDef","innerHTML","appendChild","setHtml","_setClass","addClass","impact","classList","add","remove","setClass","addClassOn","addClassOff","changeStatus","status_","afterClick","buttonControl","WebMapControls","_applyControls2","_createToggleControl2","_createButtonControl","_createControl","_addControl","controlDef","position","_position","control","getControl","promise","_control","addControl","_setControlQueue","onLoad","createControl","removeControl","engine","controlAdapters","createFun","controls","getControlContainer","_loadControlQueue","_isControlLoading","_applyControls","controlCb","CONTROL","BUTTON","TOGGLE","WEB_MAP_CONTAINER","_asyncIterator","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","ret","throw","thr","WebMap","staticProps","_addControls","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","kit","adapters","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","newAdapter","getLayerAdapters","createAdapter","t1","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","onLoadSync","console","controlAdapterName","controlOptions","controlsOptions","_controlOptions","_objectWithoutProperties","_excluded","getWebMap"],"sourceRoot":""}