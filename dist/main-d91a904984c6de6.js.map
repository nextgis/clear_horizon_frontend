{"version":3,"file":"main-d91a904984c6de6.js","mappings":"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","sources":["webpack://clear_horizon/./src/bulma.ts","webpack://clear_horizon/./src/utils/fetchSensorData.ts","webpack://clear_horizon/./src/utils/createSensorPopupContent.ts","webpack://clear_horizon/./src/components/Popup.ts","webpack://clear_horizon/./src/utils/index.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/CollapsiblePanel.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/WebmapTreeItem.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BaseMapsContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BookmarksContainer.ts","webpack://clear_horizon/./src/utils/formatTime.ts","webpack://clear_horizon/./src/utils/daysBehindRange.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/LayersContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/FiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/createCalendar.ts","webpack://clear_horizon/./src/utils/layerTimestampExtremum.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/MapSettingsPanel.ts","webpack://clear_horizon/./src/components/GetCoordinateControl/GetCoordinateControl.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/i18n.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/utils.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureLabel.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureAction.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/Measure.ts","webpack://clear_horizon/./src/components/ToggleControl.ts","webpack://clear_horizon/./src/components/createMeasureControl.ts","webpack://clear_horizon/./src/components/ActionMap.ts","webpack://clear_horizon/./src/constants.ts","webpack://clear_horizon/./src/config.ts","webpack://clear_horizon/./src/main.ts"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(\n    document.querySelectorAll('.navbar-burger'),\n    0,\n  );\n\n  // Check if there are any navbar burgers\n  if ($navbarBurgers.length > 0) {\n    // Add a click event on each of them\n    $navbarBurgers.forEach((el) => {\n      el.addEventListener('click', () => {\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target);\n\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n        el.classList.toggle('is-active');\n        if ($target) {\n          $target.classList.toggle('is-active');\n        }\n      });\n    });\n  }\n});\n","import { SENSOR_MEASUREMENT_API } from '../constants';\nimport type { SensorMeasureItem, SensorMeasureValueType } from '../interfaces';\n\nexport interface FetchSensorData {\n  sensorId: string;\n  valueType?: SensorMeasureValueType;\n  lastHours?: number;\n  start?: Date;\n  end?: Date;\n}\n\nexport function fetchSensorData({\n  valueType,\n  lastHours,\n  sensorId,\n  start,\n  end,\n}: FetchSensorData): Promise<SensorMeasureItem[]> {\n  const params: Record<string, string> = {\n    sensor_id: sensorId,\n  };\n  if (valueType) {\n    params.value_type = valueType;\n  }\n  if (lastHours) {\n    params.lasthours = String(lastHours);\n  } else {\n    if (start) {\n      params.start = start.toISOString();\n    }\n    if (end) {\n      params.end = end.toISOString();\n    }\n  }\n\n  const apiUrl = SENSOR_MEASUREMENT_API;\n\n  return fetch(\n    `${apiUrl}api/v1/measurements?${new URLSearchParams(params).toString()}`,\n    {\n      method: 'GET',\n    },\n  ).then((resp) => {\n    return resp.json();\n  });\n}\n","import { fetchSensorData } from './fetchSensorData';\n\nimport type { Feature } from 'geojson';\n\nimport type { SensorMeasureValueType } from '../interfaces';\n\nexport interface CreateExportPopupContentProps {\n  feature: Feature;\n  end?: Date;\n  start?: Date;\n}\n\nexport async function createSensorPopupContent({\n  feature,\n}: CreateExportPopupContentProps): Promise<HTMLElement> {\n  const popupElement = document.createElement('div');\n  const sensorId = feature.properties?.SID_T;\n  if (sensorId !== undefined) {\n    const sensor = await fetchSensorData({\n      sensorId,\n      // end,\n      // start,\n      lastHours: 24,\n      // valueType: 'P1',\n    });\n    if (sensor.length) {\n      const chartCanvas = document.createElement('canvas');\n      sensor.reverse();\n      // @ts-ignore\n      await import('chartjs-adapter-moment');\n      const { Chart } = await import('chart.js/auto');\n\n      const types: SensorMeasureValueType[] = ['P1', 'P2'];\n\n      new Chart(chartCanvas, {\n        data: {\n          datasets: types.map((t) => {\n            return {\n              type: 'line',\n              label: t,\n              // pointRadius: 0,\n\n              data: sensor\n                .filter((s) => s.value_type === t)\n                .map((row) => {\n                  const x = new Date(row.datetime).getTime();\n                  return {\n                    x,\n                    y: row.value,\n                  };\n                }),\n            };\n          }),\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                unit: 'hour',\n                displayFormats: {\n                  hour: 'HH:mm',\n                },\n              },\n            },\n          },\n        },\n      });\n\n      popupElement.appendChild(chartCanvas);\n    } else {\n      const notFoundDiv = document.createElement('div');\n      notFoundDiv.innerHTML = `Данные для приёмника #${sensorId} за последние '24 часа' не найдены`;\n      popupElement.appendChild(notFoundDiv);\n    }\n  }\n  return popupElement;\n}\n","// @ts-ignore\nimport bulmaCarousel from 'bulma-carousel';\n\nimport type {\n  FeatureItemAttachment,\n  ResourceItem,\n} from '@nextgis/ngw-connector';\nimport type { Feature, Geometry } from 'geojson';\n\nimport { prepareColumnValue } from '../utils';\nimport { createSensorPopupContent } from '../utils/createSensorPopupContent';\n\nimport type { NgwMap } from '@nextgis/ngw-map';\n\nimport type { CreateExportPopupContentProps } from '../utils/createSensorPopupContent';\ninterface CollectorDate {\n  year: number;\n  month: number;\n  day: number;\n}\ninterface CollectorTime {\n  hour: number;\n  minute: number;\n  second: number;\n}\n\ninterface KeyValue {\n  key: string;\n  value: any;\n}\n\ntype CollectorProperty = string | number | CollectorDate | CollectorTime;\n\nexport class Popup {\n  private ngwMap!: NgwMap;\n  private _resourceItems: { [resourceId: number]: ResourceItem } = {};\n\n  setNgwMap(ngwMap: NgwMap): void {\n    this.ngwMap = ngwMap;\n  }\n\n  async createSensorPopupContent(\n    props: CreateExportPopupContentProps,\n  ): Promise<HTMLElement> {\n    return createSensorPopupContent(props);\n  }\n\n  createPopupContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(\n    feature: Feature<G, P>,\n    resourceId?: number,\n    attachment?: FeatureItemAttachment[],\n  ): HTMLElement {\n    const popupElement = document.createElement('div');\n    const props = feature.properties;\n    const propContainer = document.createElement('div');\n    if (props) {\n      propContainer.className = 'properties';\n      const propertiesList: KeyValue[] = Object.entries(props).map(\n        ([key, value]) => {\n          return {\n            key,\n            value,\n          };\n        },\n      );\n      propContainer.innerHTML = this.createPropertiesHtml(propertiesList);\n    }\n\n    if (resourceId) {\n      const pre = document.createElement('div');\n      pre.appendChild(propContainer);\n      popupElement.innerHTML = 'Загрузка';\n      this.updateElementContent(pre, resourceId, feature).then(() => {\n        popupElement.innerHTML = '';\n        popupElement.appendChild(pre);\n      });\n      if (attachment && attachment.length) {\n        this._addPhotos(\n          popupElement,\n          attachment,\n          resourceId,\n          Number(feature.id),\n        );\n      }\n    } else {\n      popupElement.appendChild(propContainer);\n    }\n    return popupElement;\n  }\n\n  createPropertiesHtml(\n    properties: Array<{ key: string; value: CollectorProperty }>,\n  ): string {\n    let elem = '';\n    properties.forEach(({ key, value }) => {\n      if (typeof value === 'object' && value) {\n        if ('year' in value) {\n          value = [value.day, value.month, value.year].join('.');\n        } else if ('hour' in value) {\n          value = [value.hour, value.minute].join(':');\n        }\n      }\n      elem += `\n      <div class=\"columns is-mobile\">\n        <div class=\"column is-two-fifths\">${key}</div>\n        <div class=\"column\">${prepareColumnValue(value)}</div>\n      </div>\n      `;\n    });\n    return elem;\n  }\n\n  async updateElementContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(\n    element: HTMLElement,\n    resourceId: number,\n    feature: Feature<G, P>,\n  ): Promise<ResourceItem> {\n    const item = await this._getResourceItem(resourceId);\n    if (item.feature_layer) {\n      const newProperties: KeyValue[] = [];\n      item.feature_layer.fields.forEach((x) => {\n        if (x.grid_visibility) {\n          let property = feature.properties[x.keyname];\n          if (property) {\n            if (typeof property === 'string') {\n              property = property.replace(/\\w+(;)\\w+/g, (a, b) =>\n                a.replace(b, b + ' '),\n              );\n            }\n            newProperties.push({ key: x.display_name, value: property });\n          }\n        }\n      });\n      const newContent = this.createPropertiesHtml(newProperties);\n      const pre = element.getElementsByClassName('properties')[0];\n      if (pre) {\n        pre.innerHTML = newContent;\n      }\n    }\n    return item;\n  }\n\n  async _addPhotos(\n    element: HTMLElement,\n    attachment: FeatureItemAttachment[],\n    id: number,\n    fid: number,\n  ): Promise<void> {\n    const attachmentElement = document.createElement('div');\n\n    attachmentElement.className = 'carousel attachment';\n    for (const img of attachment) {\n      const width = 300;\n      const height = 300;\n      const figure = document.createElement('figure');\n      figure.className = `image is-${width}x${height}`;\n      figure.style.maxHeight = height + 'px';\n      figure.style.maxWidth = width + 'px';\n      const src = await this._loadImage(img, {\n        width,\n        height,\n        id,\n        fid,\n      });\n      const imgElem = document.createElement('img');\n      imgElem.src = src;\n      figure.appendChild(imgElem);\n      attachmentElement.appendChild(figure);\n    }\n    element.appendChild(attachmentElement);\n    bulmaCarousel.attach(attachmentElement);\n  }\n\n  private async _getResourceItem(resourceId: number) {\n    if (!this._resourceItems[resourceId]) {\n      const item = await this.ngwMap.connector.get('resource.item', null, {\n        id: resourceId,\n      });\n      this._resourceItems[resourceId] = item;\n    }\n    return this._resourceItems[resourceId];\n  }\n\n  private _loadImage(\n    img: FeatureItemAttachment,\n    options: { id: number; fid: number; width?: number; height?: number },\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const { width, height } = options;\n      const url =\n        '/api/resource/' +\n        options.id +\n        '/feature/' +\n        options.fid +\n        `/attachment/${img.id}/image` +\n        (width && height ? `?size=${width}x${height}` : '');\n      this.ngwMap.connector\n        .makeQuery<Blob>(url, {}, { responseType: 'blob' })\n        .then((blob) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            resolve(reader.result as string);\n          };\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n}\n","export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function objToUrlStr(obj: { [param: string]: any }): string {\n  let str = '';\n  for (const key in obj) {\n    if (str !== '') {\n      str += '&';\n    }\n    str += key + '=' + encodeURIComponent(obj[key]);\n  }\n  return str;\n}\n\nfunction isValidUrl(str: string): boolean {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function prepareColumnValue(value: unknown): unknown | string {\n  if (typeof value === 'string') {\n    if (isValidUrl(value)) {\n      return `<a href=\"${value}\" target=\"_blank\">${value}</a>`;\n    }\n  }\n  return value;\n}\n","import './CollapsiblePanel.css';\n\ntype GetHTML = () => HTMLElement | Promise<HTMLElement>;\n\nconst LOADING_TEXT = 'Загрузка данных...';\n\nexport interface CollapsiblePanelOptions {\n  title?: string;\n  content: HTMLElement | GetHTML;\n  open?: boolean;\n  parent?: HTMLElement;\n}\n\nexport class CollapsiblePanel {\n  private readonly _container = document.createElement('div');\n  private _content?: HTMLElement;\n  private _toggle?: HTMLElement;\n  private status: boolean;\n\n  constructor(private options: CollapsiblePanelOptions) {\n    this.status = this.options.open !== undefined ? this.options.open : true;\n    this._updateContainer();\n    if (this.options.parent) {\n      this.options.parent.appendChild(this.getContainer());\n    }\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  open(): void {\n    if (\n      this._content &&\n      (!this._content.innerHTML || this._content.innerHTML === LOADING_TEXT)\n    ) {\n      this._updateContent();\n    }\n    // this._container.appendChild(this._content);\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-up');\n    }\n    this.status = true;\n  }\n\n  close(): void {\n    this._cleanContent();\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-down');\n    }\n    this.status = false;\n  }\n\n  toggle(): void {\n    if (this.status) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _getToggleButtonHtml(icon?: string) {\n    return `\n    <a class=\"button is-small\">\n    <span class=\"icon is-small\">\n      <i class=\"${icon}\"></i>\n    </span>\n    </a>\n    `;\n  }\n\n  private _updateContainer() {\n    this._container.innerHTML = '';\n    if (this.options.title) {\n      const header = this._createHeader();\n      this._container.appendChild(header);\n    }\n    const content = document.createElement('div');\n    content.innerHTML = LOADING_TEXT;\n    content.className = 'panel-content';\n    this._content = content;\n    this._container.appendChild(content);\n\n    if (this.status) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  private _createHeader() {\n    const header = document.createElement('div');\n    header.className = 'level is-mobile panel-header';\n\n    const leftLevel = document.createElement('div');\n    leftLevel.className = 'level-left';\n\n    const title = document.createElement('div');\n    title.className = 'level-item panel-header__title';\n    title.innerHTML = this.options.title || '';\n    leftLevel.appendChild(title);\n\n    const rightLevel = document.createElement('div');\n    rightLevel.className = 'level-right';\n    const toggle = document.createElement('div');\n    toggle.className = 'level-item panel-header__toggle';\n    rightLevel.appendChild(toggle);\n\n    toggle.onclick = () => {\n      this.toggle();\n    };\n    this._toggle = toggle;\n\n    header.appendChild(leftLevel);\n    header.appendChild(rightLevel);\n\n    return header;\n  }\n\n  private _cleanContent() {\n    if (this._content) {\n      this._content.innerHTML = '';\n    }\n  }\n\n  private async _updateContent() {\n    this._cleanContent();\n    if (this._content) {\n      const html =\n        typeof this.options.content === 'function'\n          ? await this.options.content()\n          : this.options.content;\n\n      this._content.appendChild(html);\n    }\n    return this._content;\n  }\n}\n","import { WebMap } from '@nextgis/webmap';\nimport { CheckProperty, ChangeEvent } from '@nextgis/item';\nimport { NgwWebmapItem, TreeGroup, TreeLayer } from '@nextgis/ngw-kit';\n\nexport class WebmapTreeItem {\n  private _container?: HTMLElement;\n\n  constructor(layer: NgwWebmapItem) {\n    const container = this._createTreeItem(layer);\n    if (container) {\n      this._container = container;\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  private _createTreeBranch(layers: NgwWebmapItem[]) {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item-children';\n    layers.forEach((x) => {\n      if (x.item) {\n        const item = this._createTreeItem(x);\n        if (item) {\n          elem.appendChild(item);\n        }\n      }\n    });\n    return elem;\n  }\n\n  private _createTreeItem(layer: NgwWebmapItem) {\n    const item: TreeGroup | TreeLayer = layer.item;\n    if (!item) {\n      return false;\n    }\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    if (item.display_name) {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'checkbox');\n      // const value = item.item_type === 'layer' ? item.layer_enabled : true;\n      const visibility = layer.properties.property(\n        'visibility',\n      ) as CheckProperty;\n      input.checked = !!visibility.get();\n\n      if (visibility) {\n        visibility.emitter.on('change', (ev: ChangeEvent) => {\n          input.checked = ev.value;\n        });\n        input.onclick = () => {\n          visibility.set(input.checked, {\n            propagation: WebMap.keys.pressed('ctrl'),\n          });\n        };\n      }\n\n      const name = document.createElement('span');\n      name.innerHTML = item.display_name;\n\n      elem.appendChild(input);\n      elem.appendChild(name);\n    }\n\n    if (\n      item.item_type === 'group' ||\n      (item.item_type === 'root' && item.children.length)\n    ) {\n      const children = layer.tree.getChildren() as NgwWebmapItem[];\n      const treeBranch = this._createTreeBranch(children.reverse());\n      elem.appendChild(treeBranch);\n    }\n    return elem;\n  }\n}\n","import './BaseMapsContainer.css';\n\nimport { NgwMap, LayerAdapter } from '@nextgis/ngw-map';\n\nexport interface BaseMapsContainerOptions {\n  ngwMap: NgwMap;\n}\n\nexport class BaseMapsContainer {\n  private readonly ngwMap: NgwMap;\n  private _container: HTMLElement;\n  private _baseMapsContainer?: HTMLElement;\n\n  constructor(private options: BaseMapsContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n    this.ngwMap.emitter.on('layer:add', (e) => {\n      if (this.ngwMap.isBaseLayer(e)) {\n        this._updateBaseMapContainer();\n      }\n    });\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  private _createContainer() {\n    const container = document.createElement('div');\n    container.className = 'basemaps-contentainer panel-content-padding control';\n\n    const basemaps = document.createElement('div');\n    basemaps.className = 'basemaps-contentainer__layers';\n    this._baseMapsContainer = basemaps;\n    container.appendChild(basemaps);\n    this._updateBaseMapContainer();\n    return container;\n  }\n\n  private _updateBaseMapContainer() {\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.innerHTML = '';\n    }\n    // first checkbox to remove any basemap\n    this._createBaseMapItem();\n    this.ngwMap.getBaseLayers().forEach((x) => {\n      const layer = this.ngwMap.getLayer(x);\n      if (layer) {\n        this._createBaseMapItem(layer);\n      }\n    });\n  }\n\n  private _createBaseMapItem(baseMap?: LayerAdapter) {\n    const control = document.createElement('div');\n    control.className = 'control';\n    const elem = document.createElement('label');\n    elem.className = 'radio basemap-container__item';\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'radio');\n    input.setAttribute('name', 'basemap');\n\n    input.checked = !!baseMap && this.ngwMap.isLayerVisible(baseMap);\n\n    // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n    //   input.checked = ev.value;\n    // });\n    input.onclick = () => {\n      if (baseMap && baseMap.id) {\n        this.ngwMap.toggleLayer(baseMap.id, input.checked);\n      } else {\n        const activeBaseLayer = this.ngwMap.getActiveBaseLayer();\n        if (activeBaseLayer) {\n          this.ngwMap.hideLayer(activeBaseLayer);\n        }\n      }\n    };\n    const layerName = baseMap && (baseMap.name || baseMap.options.name);\n    const displayName = layerName || 'Blank';\n    const name = document.createTextNode(displayName);\n\n    elem.appendChild(input);\n\n    elem.appendChild(name);\n\n    control.appendChild(elem);\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.appendChild(control);\n    }\n  }\n}\n","import './BookmarksContainer.css';\n\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { ResourceHierarchy, FeatureItem } from '@nextgis/ngw-connector';\nimport { GeoJSON, Map } from 'leaflet';\nimport { Polygon } from 'geojson';\nimport { Bookmark } from '../../interfaces';\n\nexport interface BookmarksContainerOptions {\n  ngwMap: NgwMap<Map>;\n  bookmarks: ResourceHierarchy[];\n}\n\nexport class BookmarksContainer {\n  private readonly ngwMap: NgwMap<Map>;\n  private _container: HTMLElement;\n\n  constructor(private options: BookmarksContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'bookmarks-contentainer panel-content-padding ';\n\n    const bookmarksContainer = document.createElement('div');\n    bookmarksContainer.className = 'bookmarks-contentainer__layers';\n    this.options.bookmarks.forEach((b) => {\n      this.ngwMap.connector\n        .get('resource.item', null, { id: b.id })\n        .then((resource) => {\n          if (resource.feature_layer) {\n            const labelField = resource.feature_layer.fields.find(\n              (x) => x.label_field,\n            );\n            if (labelField) {\n              this.ngwMap\n                .fetchNgwLayerItems<Bookmark, Polygon>({ resourceId: b.id })\n                .then((items) => {\n                  items.forEach((x) => {\n                    const elem = this._createBookmarkItem(\n                      x,\n                      labelField.keyname as keyof Bookmark,\n                    );\n                    container.appendChild(elem);\n                  });\n                });\n            }\n          }\n        });\n    });\n    container.appendChild(bookmarksContainer);\n\n    return container;\n  }\n\n  _createBookmarkItem<B extends Bookmark = Bookmark>(\n    bookmark: FeatureItem<B, Polygon>,\n    nameField: keyof B = 'name',\n  ): HTMLElement {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item bookmark';\n    const bookmarkBlock = document.createElement('div');\n    const nameValue = bookmark.fields[nameField];\n    bookmarkBlock.innerHTML = String(nameValue);\n    bookmarkBlock.onclick = () => {\n      const geoJson = new GeoJSON(bookmark.geom);\n      const lMap = this.ngwMap.mapAdapter.map;\n      lMap && lMap.fitBounds(geoJson.getBounds());\n    };\n    elem.appendChild(bookmarkBlock);\n    return elem;\n  }\n}\n","import type { TimeUnit } from '../interfaces';\n\nexport function formatTime(dt: Date, unit: TimeUnit = 'ms'): number | string {\n  const t = dt.getTime();\n  return unit === 's' ? t / 1000 : dt.toISOString();\n}\n","import type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { FiresAdapterOptions, TimeUnit } from '../interfaces';\n\nexport function daysBehindRange(days: number, to?: Date): [Date, Date] {\n  const to_ = to ? to.getTime() : Date.now();\n  const from = to_ - Number(days) * 1000 * 60 * 60;\n  return [from, to_].map((x) => new Date(x)) as [Date, Date];\n}\n\nexport function daysBehindRangeFormat(\n  days: number,\n  unit: TimeUnit = 's',\n  to?: Date,\n): [number | string, number | string] {\n  return daysBehindRange(days, to).map((x) =>\n    unit === 'ISO'\n      ? new Date(x).toISOString()\n      : unit === 's'\n      ? Math.ceil(x.getTime()) / 1000\n      : x.getTime(),\n  ) as [number | string, number | string];\n}\n\nexport function daysBehindFilter(\n  days: number,\n  layer: FiresAdapterOptions,\n  to?: Date,\n): PropertiesFilter {\n  const { timeUnit, dateField } = layer.props;\n  const range = daysBehindRangeFormat(days, timeUnit, to);\n  return range.map((x, i) => [dateField, i ? 'le' : 'ge', x]);\n}\n","import './FiresContainer.css';\n\nimport { defined } from '@nextgis/utils';\n\nimport type { LayerAdapter, NgwMap } from '@nextgis/ngw-map';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { ResourceAdapter, NgwLayerOptions } from '@nextgis/ngw-kit';\nimport { FireResource } from '../../interfaces';\n\nexport interface LayersContainerOptions {\n  ngwMap: NgwMap;\n  layers: NgwLayerOptions<'GEOJSON'>[];\n}\n\nexport class LayersContainer<\n  O extends LayersContainerOptions = LayersContainerOptions,\n> {\n  protected readonly ngwMap: NgwMap;\n  protected _container: HTMLElement;\n\n  constructor(protected options: O) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  protected _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'fires-contentainer panel-content-padding ';\n\n    const firesEl = document.createElement('div');\n    firesEl.className = 'fires-contentainer__layers';\n    for (const f of this.options.layers) {\n      this._createFireItem(f, firesEl);\n    }\n    container.appendChild(firesEl);\n\n    return container;\n  }\n\n  protected onLayerAdd(id: string, cb: (layer: ResourceAdapter) => void): void {\n    const ngwMap = this.options.ngwMap;\n    const layer = ngwMap && (ngwMap.getLayer(id) as ResourceAdapter);\n    if (layer) {\n      cb(layer);\n    } else {\n      const onLayerAdd = (e: LayerAdapter) => {\n        if (e.id === id) {\n          cb(e as ResourceAdapter);\n          this.ngwMap.emitter.off('layer:add', onLayerAdd);\n        }\n      };\n      this.ngwMap.emitter.on('layer:add', onLayerAdd);\n    }\n  }\n\n  private _createFireItem(fire: FireResource, container: HTMLElement): void {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    const id = fire.id;\n    if (!defined(id)) return;\n\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = 'загрузка...';\n    container.appendChild(wrapper);\n\n    const createItem = (layer_: ResourceAdapter): void => {\n      const item = layer_.item;\n      wrapper.innerHTML = '';\n      if (item) {\n        const input = document.createElement('input');\n        input.setAttribute('type', 'checkbox');\n\n        input.checked = true;\n\n        // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n        //   input.checked = ev.value;\n        // });\n        input.onclick = () => {\n          this.ngwMap.toggleLayer(id, input.checked);\n        };\n\n        const name = document.createElement('span');\n        const displayName = item.resource.display_name.split('__')[0];\n        name.innerHTML = displayName.replace('fires', '').trim();\n        const symbol = this._createSymbol(fire);\n        elem.appendChild(input);\n        elem.appendChild(symbol);\n        elem.appendChild(name);\n        wrapper.appendChild(elem);\n      }\n    };\n    this.onLayerAdd(id, (layer) => createItem(layer));\n  }\n\n  private _createSymbol(fire: FireResource): HTMLElement {\n    const symbol = document.createElement('span');\n    symbol.className = 'item-symbol';\n    if (fire.adapterOptions?.paint) {\n      const { color, stroke, strokeColor } = fire.adapterOptions\n        ?.paint as CirclePaint;\n      if (typeof color === 'string') {\n        symbol.style.color = color;\n        symbol.style.backgroundColor = color;\n      }\n      if (stroke && typeof strokeColor === 'string') {\n        symbol.style.borderColor = strokeColor;\n      }\n    }\n    return symbol;\n  }\n}\n","import { formatTime } from '../../utils/formatTime';\nimport { createCalendar } from './createCalendar';\nimport { LayersContainer, LayersContainerOptions } from './LayersContainer';\n\nimport type { ResourceAdapter } from '@nextgis/ngw-kit';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { CreateCalendarOptions } from './createCalendar';\nimport type { FiresLayerProps } from '../../interfaces';\n\nexport interface FiresContainerOptions extends LayersContainerOptions {\n  dateRange: [Date | undefined, Date | undefined];\n  defaultDateRange: [Date | undefined, Date | undefined];\n  timedelta: number;\n  onDateChange?: () => void;\n}\n\nexport class FiresContainer extends LayersContainer<FiresContainerOptions> {\n  protected _createContainer(): HTMLElement {\n    const container = super._createContainer();\n\n    const calendarWrapper = this._createCalendar();\n    container.insertBefore(calendarWrapper, container.firstChild);\n    return container;\n  }\n\n  private _createCalendar(): HTMLElement {\n    const calendarWrapper = document.createElement('div');\n    const fires = this.options.layers;\n\n    const promises: Promise<ResourceAdapter>[] = [];\n    fires.forEach((x) => {\n      const id = x.id;\n      if (id) {\n        const promise = new Promise<ResourceAdapter>((resolve) => {\n          this.onLayerAdd(id, resolve);\n        });\n        promises.push(promise);\n      }\n    });\n    Promise.all(promises).then((fires) => {\n      const block = this._buildCalendarBlock(\n        fires,\n        this.options.dateRange,\n        this.options.defaultDateRange,\n      );\n      calendarWrapper.appendChild(block);\n    });\n\n    return calendarWrapper;\n  }\n\n  private _buildCalendarBlock(\n    layers: ResourceAdapter[],\n    extremeItems: [Date?, Date?],\n    defaultItems: [Date?, Date?],\n  ) {\n    const [min, max]: (Date | undefined)[] = extremeItems;\n    const [startDate, endDate]: (Date | undefined)[] = defaultItems;\n    const opt: CreateCalendarOptions = {\n      timedelta: this.options.timedelta,\n      onChange: (e) => {\n        for (const l of layers) {\n          const { dateField, timeUnit } = (l.options.props ||\n            {}) as FiresLayerProps;\n          if (dateField) {\n            const filter: PropertiesFilter = [];\n            if (e.start) {\n              filter.push([dateField, 'ge', formatTime(e.start, timeUnit)]);\n            }\n            if (e.end) {\n              filter.push([dateField, 'le', formatTime(e.end, timeUnit)]);\n            }\n            if (l.propertiesFilter) {\n              l.propertiesFilter(filter);\n            }\n          }\n        }\n        if (this.options.onDateChange) {\n          this.options.onDateChange();\n        }\n      },\n    };\n    if (min) {\n      opt.minDate = min;\n    }\n    if (startDate) {\n      opt.startDate = startDate;\n    }\n    if (max) {\n      opt.maxDate = max;\n    }\n    if (endDate) {\n      opt.endDate = endDate;\n    }\n    return createCalendar(opt);\n  }\n}\n","import 'flatpickr/dist/flatpickr.min.css';\nimport flatpickr from 'flatpickr';\n// import rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\nimport { Russian } from 'flatpickr/dist/l10n/ru.js';\nimport { DATE_RANGE_SELECT } from '../../constants';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { debounce } from '../../../@nextgis/packages/utils/src';\nexport interface CreateCalendarOptions {\n  maxDate?: Date;\n  minDate?: Date;\n  startDate?: Date;\n  endDate?: Date;\n  timedelta: number;\n  onChange: (val: { start?: Date; end?: Date }) => void;\n}\n\nexport function createCalendar(options: CreateCalendarOptions): HTMLElement {\n  const { onChange, maxDate, minDate, startDate, endDate, timedelta } = options;\n  const html = document.createElement('div');\n  html.className = 'field is-horizontal';\n  html.innerHTML = `\n  <button class=\"button calendar-open calendar-control-btn is-small\">\n    <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n  </button>\n    <div class=\"field\">\n        <input class=\"input input-from is-small\" type=\"text\" >\n    </div>\n\n    <div class=\"select is-small\">\n      <select class=\"select-input\">\n        ${DATE_RANGE_SELECT.map((x) => {\n          return `<option ${timedelta === x[0] ? 'selected' : ''} value=${\n            x[0]\n          }>${x[1]}</option>`;\n        })}\n      </select>\n    </div>\n    <button class=\"button calendar-clean calendar-control-btn is-small\">✖</button>\n    `;\n\n  // <div class=\"field\">\n  //     <input class=\"input input-to is-small\" type=\"text\" >\n  // </div>\n\n  const select = html.querySelector('.select-input') as HTMLSelectElement;\n  const inputFrom = html.querySelector('.input.input-from') as HTMLInputElement;\n  const calendarCleanBtn = html.querySelector(\n    '.calendar-clean',\n  ) as HTMLButtonElement;\n  const calendarOpenBtn = html.querySelector(\n    '.calendar-open',\n  ) as HTMLButtonElement;\n  const today = new Date();\n\n  const changeFunction = debounce((prop: { start: Date; end: Date }) => {\n    if (prop.start && prop.end) {\n      onChange(prop);\n    }\n  });\n\n  const defaultDate = startDate && endDate ? [startDate, endDate] : undefined;\n\n  const datepicker = flatpickr(inputFrom, {\n    mode: 'range',\n    locale: Russian,\n    allowInput: true,\n    maxDate: maxDate || today,\n    minDate,\n    defaultDate,\n    // plugins: [rangePlugin({ input: inputTo })],\n    onChange: ([start, end]) => {\n      select.value = '';\n      updateCleanBtnDisplay();\n      changeFunction({ start, end });\n    },\n  });\n  const updateCleanBtnDisplay = () => {\n    calendarCleanBtn.style.display =\n      Number(select.value) === timedelta ? 'none' : 'block';\n  };\n  updateCleanBtnDisplay();\n\n  const setRange = (val: number) => {\n    updateCleanBtnDisplay();\n    const [start, end] = daysBehindRange(val, endDate);\n    datepicker.setDate([start, end]);\n    changeFunction({ start, end });\n  };\n  calendarOpenBtn.onclick = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    datepicker.isOpen ? datepicker.close() : datepicker.open();\n  };\n  calendarCleanBtn.onclick = () => {\n    select.value = String(timedelta);\n    setRange(timedelta);\n  };\n\n  select.onchange = () => {\n    updateCleanBtnDisplay();\n    setRange(Number(select.value));\n  };\n\n  // calendar.on('select', () => {\n  //   // const val = calendar.value(); // string - string\n  //   onChange({ ...calendar.date });\n  // });\n\n  return html;\n}\n","import { fetchNgwLayerItems } from '@nextgis/ngw-kit';\nimport { NgwDateFormat } from '@nextgis/ngw-connector';\nimport { NOW } from '../constants';\n\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { FetchNgwItemsOptions, NgwLayerOptions } from '@nextgis/ngw-kit';\n\nexport function layerTimestampExtremum({\n  connector,\n  layer,\n}: {\n  connector: NgwConnector;\n  layer: NgwLayerOptions<'GEOJSON'>;\n}): Promise<[Date | undefined, Date | undefined]> {\n  const resource = layer.resource;\n  if (layer && resource && connector) {\n    const dateField = layer.adapterOptions?.props?.dateField || 'field_9';\n    return connector.getResourceIdOrFail(resource).then((resourceId) => {\n      const extremeReqOpt: FetchNgwItemsOptions = {\n        resourceId,\n        fields: [dateField],\n        geom: false,\n        connector,\n        limit: 1,\n      };\n      const extremePromises = [\n        fetchNgwLayerItems({ ...extremeReqOpt, orderBy: [dateField] }),\n        // fetchNgwLayerItems({ ...extremeReqOpt, orderBy: ['-' + dateField] }),\n      ];\n      return Promise.all(extremePromises).then(([minItem, maxItem]) => {\n        const [min] = [minItem, maxItem].map((items) => {\n          const item = items && items[0];\n          if (item) {\n            const ngwDate = item.fields[dateField] as NgwDateFormat;\n            if (ngwDate) {\n              return parseNgwDate(ngwDate);\n            }\n          }\n          return undefined;\n        });\n        const max = NOW;\n        return [min, max];\n      });\n    });\n  }\n  return Promise.resolve([undefined, undefined]);\n}\n\nfunction parseNgwDate(dt: NgwDateFormat): Date {\n  return new Date(dt.year, dt.month - 1, dt.day);\n}\n","import './MapSettingsPanel.css';\n// @ts-ignore\nimport Sidebar from 'leaflet-sidebar';\nimport 'leaflet-sidebar/src/L.Control.Sidebar.css';\n// import Sidebar from '../../assets/SidebarControl';\n// import '../../assets/SidebarControl/SidebarControl.scss';\nimport '../../assets/SidebarControl/SidebarControlLeaflet.scss';\n\nimport { NgwLayers } from '@nextgis/ngw-map';\n\nimport { ActionMap } from '../ActionMap';\nimport { CollapsiblePanel } from './CollapsiblePanel';\nimport { WebmapTreeItem } from './WebmapTreeItem';\nimport { BaseMapsContainer } from './BaseMapsContainer';\nimport { BookmarksContainer } from './BookmarksContainer';\nimport { FiresContainer } from './FiresContainer';\n\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type { MapSettingsPanelOptions } from './interfaces';\nimport { layerTimestampExtremum } from '../../utils/layerTimestampExtremum';\nimport { daysBehindRange } from '../../utils/daysBehindRange';\nimport { NOW } from '../../constants';\nimport { LayersContainer } from './LayersContainer';\n\nconst OPTIONS: Partial<MapSettingsPanelOptions> = {\n  target: 'tree',\n  // width: 300\n};\n\nexport class MapSettingsPanel {\n  options: MapSettingsPanelOptions;\n\n  sidebar: Sidebar;\n\n  private _container: HTMLElement;\n  private _target: HTMLElement;\n\n  private ngwLayers!: NgwLayers;\n\n  constructor(private actionMap: ActionMap, options: MapSettingsPanelOptions) {\n    this.options = { ...OPTIONS, ...options };\n    if (typeof this.options.target === 'string') {\n      const target = document.getElementById(this.options.target);\n      if (target) {\n        this._target = target;\n      } else {\n        throw new Error(\n          `No element with ID #${this.options.target} in document for webmap tree`,\n        );\n      }\n    } else if (this.options.target instanceof HTMLElement) {\n      this._target = this.options.target;\n    } else {\n      throw new Error('`target` option is not set');\n    }\n    this.sidebar = new Sidebar(this._target, {\n      closeButton: false,\n      position: 'left',\n      autoPan: false,\n    });\n\n    this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n    // this.actionMap.ngwMap.createControl(this.sidebar).then((x) => {\n    //   x.onAdd(this.actionMap.ngwMap.mapAdapter);\n    // });\n\n    // this.actionMap.ngwMap.addControl(sidebarControl, 'top-left');\n    // this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n\n    this.ngwLayers = this.options.ngwLayers;\n\n    this._container = this._createContainer();\n    if (!this.options.status) {\n      this.hide();\n    }\n    this._target && this._target.appendChild(this._container);\n  }\n\n  show(): void {\n    this._container.classList.remove('hidden');\n    this.sidebar.show();\n  }\n\n  hide(): void {\n    this.sidebar.hide();\n    this._container.classList.add('hidden');\n  }\n\n  private _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'tree-container';\n\n    if (this.options.width !== undefined) {\n      container.style.width = this.options.width + 'px';\n    }\n\n    if (this.options.userFires || this.options.firms) {\n      new CollapsiblePanel({\n        title: 'Пожары',\n        content: () => this._createFiresContainer(),\n        parent: container,\n      });\n    }\n    if (this.options.sensors) {\n      new CollapsiblePanel({\n        title: 'Датчики',\n        content: () => this._createSensorContainer(),\n        parent: container,\n      });\n    }\n    new CollapsiblePanel({\n      title: 'Базовые слои',\n      content: () => this._createNgwLayers(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Подложки',\n      content: () => this._createBasemapsContainer(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Закладки',\n      content: () => this._createBookmarksContainer(),\n      open: false,\n      parent: container,\n    });\n\n    return container;\n  }\n\n  private _createNgwLayers() {\n    const container = document.createElement('div');\n    container.className = 'webmap-tree-container';\n    for (const n in this.ngwLayers) {\n      const ngwLayer = this.ngwLayers[n];\n      const tree = new WebmapTreeItem(ngwLayer.layer.layer);\n      const treeContainer = tree.getContainer();\n      if (treeContainer) {\n        container.appendChild(treeContainer);\n      }\n    }\n    return container;\n  }\n\n  private _createBookmarksContainer() {\n    const container = document.createElement('div');\n    const bookmarks = this.options.bookmarks;\n    if (bookmarks) {\n      const bookmarkContainer = new BookmarksContainer({\n        bookmarks,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(bookmarkContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createFiresContainer() {\n    const container = document.createElement('div');\n    const { firms, userFires } = this.options;\n    let dateRange: [Date | undefined, Date | undefined] = [\n      undefined,\n      undefined,\n    ];\n    if (firms || userFires) {\n      const fires: NgwLayerOptions<'GEOJSON'>[] = [];\n      if (userFires && userFires.id) {\n        fires.push(userFires);\n        dateRange = await layerTimestampExtremum({\n          layer: userFires,\n          connector: this.options.ngwMap.connector,\n        });\n      }\n      if (firms) {\n        firms.forEach((x) => fires.push(x));\n      }\n      const timedelta = this.actionMap.options.timedelta || 24;\n      const defaultDateRange = daysBehindRange(timedelta, NOW);\n      const firesContainer = new FiresContainer({\n        layers: fires,\n        ngwMap: this.options.ngwMap,\n        dateRange,\n        defaultDateRange,\n        timedelta: this.actionMap.options.timedelta || 72,\n        onDateChange: () => {\n          if (this.options.onDateChange) {\n            this.options.onDateChange();\n          }\n        },\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private async _createSensorContainer() {\n    const container = document.createElement('div');\n    const { sensors } = this.options;\n    if (sensors) {\n      const firesContainer = new LayersContainer({\n        layers: [sensors],\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createBasemapsContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.firms;\n    if (fires) {\n      const baseMapsContainer = new BaseMapsContainer({\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(baseMapsContainer.getContainer());\n    }\n    return container;\n  }\n}\n","import './GetCoordinateControl.css';\nimport '../ToggleControl.css';\nimport { ActionMap } from '../ActionMap';\nimport { Clipboard } from '@nextgis/utils';\nimport { EventEmitter } from 'events';\n\nimport type { Feature, Point } from 'geojson';\nimport type {\n  MapClickEvent,\n  VectorLayerAdapter,\n  ToggleControlOptions,\n} from '@nextgis/ngw-map';\n\nexport interface GetCoordinatePanelControlOptions {\n  toggle?: (status: boolean) => void;\n}\n\nexport class GetCoordinatePanelControl implements ToggleControlOptions {\n  html = '<i class=\"fas fa-map-pin btn-control-icon \"></i>';\n  title = {\n    off: 'Полученить координаты с карты',\n    on: 'Выключить режим получения координат с карты',\n  };\n\n  addClass = 'toggle-control webmap-tree-control';\n  addClassOn = 'active';\n\n  status = false;\n\n  emitter = new EventEmitter();\n\n  private _toggle?: (status: boolean) => void;\n  private __onMapClick?: (e: MapClickEvent) => void;\n  private _layer!: VectorLayerAdapter;\n\n  constructor(\n    private actionMap: ActionMap,\n    options: GetCoordinatePanelControlOptions = {},\n  ) {\n    this._toggle = options.toggle;\n    this.actionMap.ngwMap\n      .addFeatureLayer<any, Point>({\n        id: 'show-coordinate-click',\n        visibility: true,\n        paint: { radius: 6 },\n        popup: true,\n        popupOptions: {\n          createPopupContent: (d) => {\n            if (d.feature) {\n              return this._createPopupContent(\n                d.feature.geometry.coordinates.map((x) => x.toFixed(5)),\n              );\n            }\n          },\n        },\n      })\n      .then((layer) => {\n        if (layer) {\n          this._layer = layer;\n        }\n      });\n  }\n\n  onClick(status?: boolean): void {\n    this.toggleControl(status);\n  }\n\n  show(): void {\n    this.actionMap.ngwMap.setCursor('crosshair');\n    this._removeClickListener();\n    this.__onMapClick = (e: MapClickEvent) => this._onMapClick(e);\n    this.actionMap.ngwMap.emitter.on('click', this.__onMapClick);\n  }\n\n  hide(): void {\n    this.actionMap.ngwMap.setCursor('default');\n    this._removeClickListener();\n    this.actionMap.ngwMap.clearLayerData(this._layer);\n  }\n\n  private _removeClickListener() {\n    if (this.__onMapClick) {\n      this.actionMap.ngwMap.emitter.off('click', this.__onMapClick);\n      this.__onMapClick = undefined;\n    }\n  }\n\n  private _onMapClick(e: MapClickEvent) {\n    const feature: Feature<Point> = {\n      type: 'Feature',\n      properties: {},\n      geometry: { type: 'Point', coordinates: e.lngLat },\n    };\n    this.actionMap.ngwMap.setLayerData(this._layer, feature);\n  }\n\n  private toggleControl(status?: boolean) {\n    status = status !== undefined ? status : !this.status;\n    if (status) {\n      this.show();\n    } else {\n      this.hide();\n    }\n\n    this.status = status;\n    if (this._toggle) {\n      this._toggle(status);\n    }\n    this.emitter.emit('status', this.status);\n  }\n\n  private _createPopupContent([lng, lat]: string[]) {\n    const content = document.createElement('div');\n    const latLngStr = `${lat}, ${lng}`;\n    content.innerHTML = `\n    <span>Широта/Долгота:</span>\n    <span class=\"lat-lng-coord\"> ${latLngStr}</span>\n    <a href=\"#\" class=\"copy-to-clipboard\">\n    <i class=\"far fa-clipboard\"></i>\n    </a>`;\n    const clipBoardLink = content.getElementsByClassName(\n      'copy-to-clipboard',\n    )[0] as HTMLLinkElement;\n    clipBoardLink.onclick = () => {\n      Clipboard.copy(latLngStr);\n    };\n\n    return content;\n  }\n}\n","import type { Messages } from './interfaces';\n\nexport const I18N: Record<string, Messages> = {\n  en: {\n    linearMeasurement: 'Distance measurement',\n    areaMeasurement: 'Area measurement',\n    start: 'Start',\n    meter: 'm',\n    kilometer: 'km',\n    squareMeter: 'm²',\n    squareKilometers: 'km²',\n  },\n  ru: {\n    linearMeasurement: 'Измерение расстояния',\n    areaMeasurement: 'Измерение площади',\n    start: 'Старт',\n    meter: 'м',\n    kilometer: 'км',\n    squareMeter: 'м²',\n    squareKilometers: 'км²',\n  },\n};\n","import type { LatLng } from 'leaflet';\nimport type { Messages } from './interfaces';\n\nexport function toRadians(deg: number): number {\n  return deg * (Math.PI / 180);\n}\nexport function square(x: number): number {\n  return Math.pow(x, 2);\n}\nexport function getDistanceString(\n  distance: number,\n  messages: { meter: string; kilometer: string },\n): string {\n  return distance < 1e3\n    ? numberFormat(distance, 0) + ' ' + messages.meter\n    : numberFormat(distance / 1e3, 2) + ' ' + messages.kilometer;\n}\n\nexport function getDistance(latlng1: LatLng, latlng2: LatLng): number {\n  const earthRadius = 6378137; // radius of the earth in meter\n  const lat1 = toRadians(latlng1.lat);\n  const lat2 = toRadians(latlng2.lat);\n  const lat_dif = lat2 - lat1;\n  const lng_dif = toRadians(latlng2.lng - latlng1.lng);\n  const a =\n    square(Math.sin(lat_dif / 2)) +\n    Math.cos(lat1) * Math.cos(lat2) * square(Math.sin(lng_dif / 2));\n  return 2 * earthRadius * Math.asin(Math.sqrt(a));\n}\nexport function getAreaString(points: LatLng[], messages: Messages): string {\n  const a = Math.round(getArea(points));\n  return a < 1e6\n    ? numberFormat(a, 0) + ' ' + messages.squareMeter\n    : numberFormat(a / 1e6, 2) + ' ' + messages.squareKilometers;\n}\nexport function getArea(points: LatLng[]): number {\n  const earthRadius = 6378137;\n  let area = 0;\n  const len = points.length;\n  let x1 = points[len - 1].lng;\n  let y1 = points[len - 1].lat;\n  for (let i = 0; i < len; i++) {\n    const x2 = points[i].lng;\n    const y2 = points[i].lat;\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return Math.abs((area * earthRadius * earthRadius) / 2.0);\n}\nexport function numberFormat(number: number, decimals = 2): string {\n  const thousandsSep = ',';\n  const sign = number < 0 ? '-' : '';\n  const num = Math.abs(+number || 0);\n  const intPart = parseInt(num.toFixed(decimals), 10) + '';\n  const j = intPart.length > 3 ? intPart.length % 3 : 0;\n\n  return [\n    sign,\n    j ? intPart.substr(0, j) + thousandsSep : '',\n    intPart.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSep),\n    decimals\n      ? '.' +\n        Math.abs(num - Number(intPart))\n          .toFixed(decimals)\n          .slice(2)\n      : '',\n  ].join('');\n}\n","import { Layer, Point, Util, Browser, DomUtil, latLng } from 'leaflet';\n\nimport type { Map, LayerOptions, LatLng, ZoomAnimEvent } from 'leaflet';\n\nexport interface MeasureLabelOptions extends LayerOptions {\n  offset?: Point;\n  latlng: null | LatLng;\n  content: string;\n  className: string;\n}\n\nexport class MeasureLabel extends Layer {\n  options: MeasureLabelOptions = {\n    latlng: null,\n    content: '',\n    className: '',\n  };\n\n  protected _map!: Map;\n  private _offset = new Point(0, 30);\n  private _container?: HTMLElement;\n  private _contentNode?: HTMLElement;\n  private _closeButton?: HTMLElement;\n  private _containerBottom?: number;\n  private _containerLeft?: number;\n\n  constructor(options: MeasureLabelOptions) {\n    super(options);\n    Util.setOptions(this, options);\n    if (this.options.offset) {\n      this._offset = this.options.offset;\n    }\n  }\n  onAdd(map: Map): this {\n    this._map = map;\n    this._container || this._initLayout();\n    if (this._container) {\n      map.getPanes().popupPane.appendChild(this._container);\n    }\n    map.on('viewreset', this._updatePosition, this);\n    if (Browser.any3d) {\n      map.on('zoomanim', this._zoomAnimation, this);\n    }\n    this._update();\n    return this;\n  }\n  addTo(map: Map): this {\n    map.addLayer(this);\n    return this;\n  }\n  onRemove(map: Map): this {\n    if (this._container) {\n      map.getPanes().popupPane.removeChild(this._container);\n    }\n    map.off('viewreset', this._updatePosition, this);\n    map.off('zoomanim', this._zoomAnimation, this);\n    (this._map as any) = null;\n    return this;\n  }\n  setLatLng(latlng: LatLng): this {\n    this.options.latlng = latLng(latlng);\n    this._updatePosition();\n    return this;\n  }\n  setContent(content: string): this {\n    this.options.content = content;\n    this._updateContent();\n    return this;\n  }\n  enableClose(): HTMLElement {\n    this._closeButton = DomUtil.create('span', 'close', this._container);\n    this._closeButton.innerHTML =\n      '<svg class=\"icon\" viewBox=\"0 0 40 40\"><path stroke=\"#FF0000\" stroke-width=\"3\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" /></svg>';\n    return this._closeButton;\n  }\n  private _initLayout(): void {\n    this._container = DomUtil.create('div', this.options.className);\n    this._contentNode = DomUtil.create('div', 'content', this._container);\n  }\n  private _update(): void {\n    this._map && (this._updateContent(), this._updatePosition());\n  }\n  private _updateContent(): void {\n    if (this._contentNode && this.options.content) {\n      if (typeof this.options.content == 'string') {\n        this._contentNode.innerHTML = this.options.content;\n      } else {\n        this._contentNode.innerHTML = '';\n        this._contentNode.appendChild(this.options.content);\n      }\n    }\n  }\n  private _updatePosition(): void {\n    if (this.options.latlng && this._container) {\n      const point = this._map.latLngToLayerPoint(this.options.latlng);\n      const is3D = Browser.any3d;\n      const offset = this._offset;\n      is3D && DomUtil.setPosition(this._container, point);\n      this._containerBottom = -offset.y - (is3D ? 0 : point.y);\n      this._containerLeft = offset.x + (is3D ? 0 : point.x);\n      this._container.style.bottom = this._containerBottom + 'px';\n      this._container.style.left = this._containerLeft + 'px';\n    }\n  }\n  private _zoomAnimation(a: ZoomAnimEvent): void {\n    if (this._container) {\n      const point = (this._map as any)._latLngToNewLayerPoint(\n        this.options.latlng,\n        a.zoom,\n        a.center,\n      ) as Point;\n      DomUtil.setPosition(this._container, point);\n    }\n  }\n}\n","import {\n  Handler,\n  Util,\n  DomUtil,\n  DomEvent,\n  Polygon,\n  Polyline,\n  CircleMarker,\n} from 'leaflet';\n\nimport { I18N } from './i18n';\nimport { getAreaString, getDistance, getDistanceString } from './utils';\nimport { MeasureLabel } from './MeasureLabel';\n\nimport type { Map, LatLng, LeafletMouseEvent } from 'leaflet';\nimport {\n  DirectPath,\n  MeasureActionOptions,\n  MeasureModel,\n  Trail,\n} from './interfaces';\n\nexport class MeasureAction extends Handler {\n  options: MeasureActionOptions = {\n    color: '#FF0080',\n    model: 'distance',\n    messages: I18N['en'],\n  };\n\n  private _map: Map;\n  private _measureHandler: this;\n  private _finished: boolean;\n  private _startMove?: boolean;\n  private _measurementStarted?: boolean;\n  private _lastPoint?: LatLng;\n  private _totalDistance = 0;\n  private _trail: Trail = { overlays: [], points: [] };\n  private _directPath?: DirectPath;\n  private _measurePath?: DirectPath;\n\n  constructor(map: Map, options: MeasureActionOptions) {\n    super(map);\n    this._map = map;\n    this._measureHandler = this;\n    this._finished = false;\n    Util.setOptions(this, options);\n  }\n  setModel(model: MeasureModel): this {\n    this.options.model = model;\n    return this;\n  }\n  addHooks(): void {\n    this._activeMeasure();\n  }\n  removeHooks(): void {\n    this._disableMeasure();\n  }\n  private _activeMeasure(): void {\n    this._measureHandler._measurementStarted &&\n      this._measureHandler._finishMeasure();\n    this._measurementStarted ? this._finishMeasure() : this._enableMeasure();\n  }\n  private _onMouseClick(event: LeafletMouseEvent): void {\n    const latlng = event.latlng || this._map.mouseEventToLatLng(event as any);\n    if (this._lastPoint && latlng.equals(this._lastPoint)) {\n      return;\n    }\n    if (this._trail.points.length > 0) {\n      const points = this._trail.points;\n      points.push(latlng);\n      const length = points.length;\n      this._totalDistance += getDistance(\n        points[length - 2],\n        points[length - 1],\n      );\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          getDistanceString(this._totalDistance, this.options.messages),\n          'leaflet-measure-label',\n        );\n      }\n    } else {\n      this._totalDistance = 0;\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          this.options.messages.start,\n          'leaflet-measure-label',\n        );\n      }\n      this._trail.points.push(latlng);\n    }\n    this._lastPoint = latlng;\n    this._startMove = false;\n  }\n  private _onMouseMove(event: LeafletMouseEvent): void {\n    const latlng = event.latlng;\n    if (this._directPath && this._trail.points.length > 0) {\n      if (this._startMove) {\n        this._directPath.setLatLngs(this._trail.points.concat(latlng));\n      } else {\n        this._directPath.setLatLngs([latlng]);\n        this._startMove = true;\n      }\n    }\n  }\n  private _enableMeasure(): void {\n    this._trail = {\n      overlays: [],\n      points: [],\n    };\n    const map = this._map;\n    DomUtil.addClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.disable();\n    this._measurementStarted = true;\n    map.on('click', this._onMouseClick, this);\n    map.on('dblclick', this._finishMeasure, this);\n    map.on('contextmenu', this._finishMeasure, this);\n    map.doubleClickZoom.disable();\n    map.on('mousemove', this._onMouseMove, this);\n    map.fire('measure:start');\n  }\n  private _disableMeasure(): void {\n    const map = this._map;\n    DomUtil.removeClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.enable();\n    map.off('click', this._onMouseClick, this);\n    map.off('dblclick', this._finishMeasure, this);\n    map.off('contextmenu', this._finishMeasure, this);\n    map.off('mousemove', this._onMouseMove, this);\n    map.doubleClickZoom.enable();\n    this._measurementStarted = this._startMove = false;\n    if (!this._finished) {\n      this._clearOverlay.call(this);\n    }\n    map.fire('measure:stop');\n  }\n  private _finishMeasure(event?: LeafletMouseEvent): void {\n    if (this._trail.points.length > 0) {\n      if (this._trail.points.length > 1) {\n        if (this._directPath && (!event || event.type === 'contextmenu')) {\n          this._directPath.setLatLngs(this._trail.points);\n        }\n        if (this._lastPoint) {\n          if (this.options.model === 'area') {\n            this._addLable(\n              this._lastPoint,\n              getAreaString(this._trail.points, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          } else {\n            this._addLable(\n              this._lastPoint,\n              getDistanceString(this._totalDistance, this.options.messages),\n              'leaflet-measure-label',\n              true,\n            );\n          }\n        }\n        this._directPath && this._map.removeLayer(this._directPath);\n        this._finished = true;\n      } else {\n        this._clearOverlay.call(this);\n      }\n    }\n    this.disable();\n  }\n  private _resetDirectPath(latlng: LatLng): void {\n    if (!this._directPath) {\n      let directPath: DirectPath;\n      if (this.options.model === 'area') {\n        directPath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          fillOpacity: 0,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          interactive: false,\n        });\n        directPath = polyline;\n      }\n      this._map.addLayer(directPath);\n      this._trail.overlays.push(directPath);\n      this._directPath = directPath;\n    } else {\n      this._directPath.addLatLng(latlng);\n    }\n  }\n  private _addMeasurePoint(latlng: LatLng): void {\n    if (!this._measurePath) {\n      let measurePath: DirectPath;\n      if (this.options.model === 'area') {\n        measurePath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          fillColor: this.options.color,\n          fillOpacity: 0.5,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          interactive: false,\n        });\n        measurePath = polyline;\n      }\n      this._map.addLayer(measurePath);\n      this._trail.overlays.push(measurePath);\n      this._measurePath = measurePath;\n    } else {\n      this._measurePath.addLatLng(latlng);\n    }\n    this._resetDirectPath(latlng);\n  }\n  private _addMarker(latLng: LatLng): void {\n    const marker = new CircleMarker(latLng, {\n      color: this.options.color,\n      opacity: 1,\n      weight: 1,\n      fillColor: '#FFFFFF',\n      fill: true,\n      fillOpacity: 1,\n      radius: 3,\n      interactive: false,\n    });\n    this._map.addLayer(marker);\n    this._trail.overlays.push(marker);\n  }\n  private _addLable(\n    latlng: LatLng,\n    content: string,\n    className: string,\n    ended?: boolean,\n  ): void {\n    const lable = new MeasureLabel({\n      latlng,\n      content,\n      className,\n    });\n    this._map.addLayer(lable);\n    this._trail.overlays.push(lable);\n    if (ended) {\n      const closeButton = lable.enableClose();\n      DomEvent.on(\n        closeButton,\n        'click',\n        (e) => {\n          DomEvent.stopPropagation(e);\n          this._clearOverlay();\n        },\n        this,\n      );\n    }\n  }\n  private _clearOverlay(): void {\n    const overlays = this._trail.overlays;\n    let i = 0,\n      length;\n    for (length = overlays.length; i < length; i++) {\n      this._map.removeLayer(overlays[i]);\n    }\n  }\n}\n","import { Control, DomUtil, DomEvent, Util } from 'leaflet';\nimport { I18N } from './i18n';\nimport { MeasureAction } from './MeasureAction';\n\nimport type { Map, Handler } from 'leaflet';\nimport type { MeasureOptions } from './interfaces';\n\nexport class Measure extends Control {\n  options: MeasureOptions = {\n    position: 'topright',\n    title: 'Measurement',\n    collapsed: true,\n    color: '#FF0080',\n    locale: 'en',\n    messages: I18N['en'],\n  };\n\n  private _map?: Map;\n  private _container?: HTMLElement;\n  private _link?: HTMLAnchorElement;\n  private _contents?: HTMLElement;\n  private _measureHandler?: Handler;\n\n  constructor(options: Partial<MeasureOptions>) {\n    super(options);\n    Util.setOptions(this, options);\n    const locale = options.locale;\n    if (locale && locale !== 'en') {\n      const messages = I18N[locale];\n      if (messages) {\n        this.options.messages = { ...I18N, ...messages };\n      } else {\n        console.error(\n          'Measure control has no messages for ' +\n            this.options.locale +\n            ' locale',\n        );\n      }\n    }\n  }\n  onAdd(map: Map): HTMLElement {\n    this._map = map;\n    return this._container || this._initLayout();\n  }\n  disableMeasure(): void {\n    if (this._measureHandler) {\n      this._measureHandler.disable();\n      this._measureHandler = undefined;\n    }\n  }\n  private _buildContainer(): HTMLElement {\n    this._container = DomUtil.create(\n      'div',\n      'leaflet-control-measure leaflet-bar leaflet-control',\n    );\n\n    this._contents = DomUtil.create(\n      'div',\n      'leaflet-measure-contents',\n      this._container,\n    );\n\n    this._link = DomUtil.create('a', 'leaflet-measure-toggle', this._container);\n    this._link.title = this.options.title || 'Measurement';\n    this._link.href = '#';\n\n    // if (this.options.title) {\n    //   var title = DomUtil.create('h3', '', this._contents);\n    //   title.innerText = this.options.title;\n    // }\n\n    this._buildItems();\n    return this._container;\n  }\n  private _buildItems(): void {\n    const ele_ul = DomUtil.create(\n      'ul',\n      'leaflet-measure-actions',\n      this._contents,\n    );\n    let ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_line = DomUtil.create('a', 'start', ele_li);\n    ele_link_line.innerText = this.options.messages.linearMeasurement;\n    ele_link_line.href = '#';\n    DomEvent.disableClickPropagation(ele_link_line);\n    DomEvent.on(ele_link_line, 'click', this._enableMeasureLine, this);\n\n    ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_area = DomUtil.create(\n      'a',\n      'leaflet-measure-action start',\n      ele_li,\n    );\n    ele_link_area.innerText = this.options.messages.areaMeasurement;\n    ele_link_area.href = '#';\n    DomEvent.disableClickPropagation(ele_link_area);\n    DomEvent.on(ele_link_area, 'click', this._enableMeasureArea, this);\n  }\n  private _initLayout(): HTMLElement {\n    const container = this._buildContainer();\n    DomEvent.disableClickPropagation(container);\n    DomEvent.disableScrollPropagation(container);\n    if (this.options.collapsed) {\n      DomEvent.on(\n        container,\n        {\n          mouseenter: this._expand,\n          mouseleave: this._collapse,\n        },\n        this,\n      );\n    } else {\n      this._expand();\n    }\n    return container;\n  }\n  private _enableMeasureLine(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'distance',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _enableMeasureArea(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'area',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _expand(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'none';\n      DomUtil.addClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n  private _collapse(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'block';\n      DomUtil.removeClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n}\n","export const StopToggleControlsCb: Array<{\n  name: string;\n  stop: () => void;\n}> = [];\n\nexport function addStopToggleControl(name: string, stop: () => void): void {\n  StopToggleControlsCb.push({ name, stop });\n}\n\nexport function stopToggleControlsFor(excludeControlName?: string): void {\n  StopToggleControlsCb.forEach((x) => {\n    if (x.name !== excludeControlName) {\n      x.stop();\n    }\n  });\n}\n","import { Measure } from '../assets/Leaflet.Measure-master/src';\nimport '../assets/Leaflet.Measure-master/src/leaflet.measure.css';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nimport type { Map } from 'leaflet';\n\nexport function createMeasureControl(ngwMap: NgwMap): void {\n  // @ts-ignore\n  const control = new Measure({ locale: 'ru' });\n  ngwMap.addControl(control, 'top-left');\n\n  ngwMap.onLoad().then(() => {\n    const map = ngwMap.mapAdapter.map as Map;\n    if (map) {\n      map.on('measure:start', () => {\n        stopToggleControlsFor('measure');\n        ngwMap.disableSelection();\n      });\n      map.on('measure:stop', () => {\n        ngwMap.setCursor('default');\n        ngwMap.enableSelection();\n      });\n    }\n    addStopToggleControl('measure', () => {\n      control.disableMeasure();\n    });\n  });\n}\n","import 'leaflet/dist/leaflet.css';\n// import 'ol/ol.css';\nimport './ActionMap.css';\n\n// @ts-ignore\nimport ShareButtons from 'share-buttons/dist/share-buttons';\n\nimport {\n  NgwMap,\n  NgwLayers,\n  LocationEvent,\n  ToggleControl,\n  NgwIdentifyEvent,\n  VectorAdapterOptions,\n} from '@nextgis/ngw-map';\nimport { CirclePaint } from '@nextgis/paint';\nimport { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport { getIcon } from '@nextgis/icons';\nimport MapAdapter from '@nextgis/leaflet-map-adapter';\n// import MapAdapter from '@nextgis/ol-map-adapter';\nimport UrlRuntimeParams from '@nextgis/url-runtime-params';\nimport { QmsAdapterOptions } from '@nextgis/qms-kit';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { ResourceHierarchy } from '@nextgis/ngw-connector';\n\nimport { Popup } from './Popup';\nimport { MapSettingsPanel } from './MapSettingsPanel/MapSettingsPanel';\nimport { GetCoordinatePanelControl } from './GetCoordinateControl/GetCoordinateControl';\nimport { createMeasureControl } from './createMeasureControl';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\nimport { daysBehindFilter } from '../utils/daysBehindRange';\n\nimport { NOW } from '../constants';\n\nimport type { Control, Map, Layer } from 'leaflet';\nimport type {\n  AppOptions,\n  FiresAdapterOptions,\n  FirmsLayerOptions,\n  SensorLayerOptions,\n  UserFiresLayerOptions,\n} from '../interfaces';\n\nexport class ActionMap {\n  ngwMap!: NgwMap<Map, Layer, any>;\n\n  tree?: MapSettingsPanel;\n  treeControl?: Control & ToggleControl;\n\n  authControl?: Control & ToggleControl;\n  popup: Popup;\n\n  private _promises: { [name: string]: CancelablePromise<any> } = {};\n\n  constructor(public options: Partial<AppOptions>) {\n    this.popup = new Popup();\n  }\n\n  async create(opt: Partial<AppOptions>): Promise<void> {\n    // const auth = new Auth(opt.mapOptions);\n    const mapOpt = { ...opt.mapOptions };\n    // try {\n    //   await auth.login();\n    //   mapOpt.connector = auth.connector;\n    // } catch (er) {\n    //   // cancel login\n    // }\n\n    const { basemaps, firms, userFires, sensors } = opt;\n\n    const ngwMap = new NgwMap<Map, Layer>({\n      mapAdapter: new MapAdapter(),\n      controls: [],\n      minZoom: 4,\n      runtimeParams: [new UrlRuntimeParams()],\n      ...mapOpt,\n    });\n\n    this.ngwMap = ngwMap;\n\n    ngwMap.setCursor('default');\n    this.popup.setNgwMap(ngwMap);\n\n    if (basemaps) {\n      ngwMap.onLoad().then(() =>\n        basemaps.forEach((x, i) => {\n          ngwMap.addBaseLayer<any, QmsAdapterOptions>('QMS', {\n            ...x,\n            visibility: i === 0,\n          });\n        }),\n      );\n    }\n    ngwMap.getPaintFunctions = { base: getIcon };\n\n    ngwMap.addControl('ZOOM', 'top-left');\n    this._createLocateControl();\n    ngwMap.addControl('ATTRIBUTION', 'bottom-right', {\n      customAttribution: [\n        '<a href=\"https://nextgis.com\" target=\"_blank\">©NextGIS</a>',\n      ],\n    });\n    createMeasureControl(ngwMap);\n    this._createShareControl();\n    // await this._createAuthControl(auth);\n    // this.ngwMap.addControl(this.authControl, 'top-right');\n\n    const ngwLayers = await ngwMap.getNgwLayers();\n    const bookmarks: ResourceHierarchy[] = [];\n    Object.values(ngwLayers).forEach((x) => {\n      const bookmark =\n        x.layer.item &&\n        x.layer.item.webmap &&\n        x.layer.item.webmap.bookmark_resource;\n      if (bookmark) {\n        bookmarks.push(bookmark);\n      }\n    });\n\n    await this._addFireLayer(opt.userFires);\n    await this._addFirms(opt.firms);\n    await this._addSensors(opt.sensors);\n    this._createGetCoordinateControl();\n\n    this._addTreeControl({\n      ngwLayers,\n      firms,\n      sensors,\n      userFires,\n      bookmarks,\n    });\n\n    this._addEventsListeners();\n  }\n\n  private _locate() {\n    const locationfound = (e: LocationEvent) => {\n      const lngLat = e.lngLat;\n\n      this.ngwMap.setView(\n        lngLat,\n        Math.max(...[this.ngwMap.getZoom() ?? 0, 16]),\n      );\n    };\n\n    this.ngwMap.locate({ setView: false }, { locationfound });\n  }\n\n  // private async _createAuthControl(auth: Auth) {\n  //   const authBtn = document.getElementsByClassName(\n  //     'js-auth-btn',\n  //   )[0] as HTMLElement;\n  //   const getStatus = () => {\n  //     return !!(this.ngwMap.connector && this.ngwMap.connector.user);\n  //   };\n  //   const onClick = () => {\n  //     auth.logout();\n  //     window.location.reload();\n  //   };\n  //   authBtn.innerHTML = getStatus() ? 'Выйти' : 'Войти';\n  //   authBtn.style.display = 'block';\n  //   authBtn.addEventListener('click', onClick);\n  // }\n\n  private _createShareControl() {\n    const shareModal = document.getElementsByClassName('js-modal')[0];\n    const closeModalBtn = document.getElementsByClassName('js-modal-close')[0];\n    const shareModalContent = document.getElementsByClassName(\n      'js-share-modal-content',\n    )[0];\n    const shareInput = document.getElementsByClassName(\n      'js-share-input',\n    )[0] as HTMLInputElement;\n    const showModal = () => {\n      const href = location.href;\n      const html = this._createShareModalContent(href);\n      shareInput.value = href;\n      shareModalContent.innerHTML = html;\n      ShareButtons.update();\n      shareModal.classList.add('is-active');\n    };\n    const closeModal = () => {\n      shareModalContent.innerHTML = '';\n      shareModal.classList.remove('is-active');\n    };\n    closeModalBtn.addEventListener('click', () => {\n      closeModal();\n    });\n\n    const shareControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-share-alt btn-control-icon \"></i>',\n      onClick() {\n        showModal();\n      },\n    });\n    this.ngwMap.addControl(shareControl, 'bottom-right');\n  }\n\n  private async _createGetCoordinateControl() {\n    const control = new GetCoordinatePanelControl(this, {\n      toggle: (status) => {\n        if (status) {\n          stopToggleControlsFor('coordinate');\n          this.ngwMap.disableSelection();\n        } else {\n          this.ngwMap.enableSelection();\n        }\n      },\n    });\n    const toggleControl = await this.ngwMap.createToggleControl(control);\n    this.ngwMap.addControl(toggleControl, 'top-left');\n    addStopToggleControl('coordinate', () => toggleControl.onClick(false));\n  }\n\n  private _createLocateControl() {\n    const onClick = () => this._locate();\n    const locateControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-location-arrow btn-control-icon\"></i>',\n      title: 'Найти меня на карте',\n      onClick,\n    });\n    this.ngwMap.addControl(locateControl, 'top-left');\n  }\n\n  private _createShareModalContent(url: string) {\n    const social = [\n      { id: 'tw', name: 'Twitter', icon: 'fab fa-twitter' },\n      { id: 'vk', name: 'VK', icon: 'fab fa-vk' },\n      { id: 'fb', name: 'Facebook', icon: 'fab fa-facebook-square' },\n    ];\n\n    const html = `<div class=\"buttons share-btn js-share-btn\" data-url=\"${url}\" data-title=\"\" data-desc=\"\">\n      ${social\n        .map(\n          (x) => `<a class=\"button is-primary\" data-id=\"${x.id}\">\n                    <span class=\"icon\">\n                        <i class=\"${x.icon}\"></i>\n                    </span>\n                    <span>${x.name}</span>\n                </a>`,\n        )\n        .join('')}\n    </div>`;\n    return html;\n  }\n\n  private async _addFireLayer(\n    x?: NgwLayerOptions<'GEOJSON'>,\n    adapterOptions?: VectorAdapterOptions,\n  ) {\n    if (x) {\n      const paint =\n        x.adapterOptions && x.adapterOptions.paint\n          ? (x.adapterOptions.paint as CirclePaint)\n          : {};\n      return this.ngwMap.addNgwLayer({\n        resource: x.resource,\n        id: x.id,\n        adapterOptions: {\n          ...x.adapterOptions,\n          paint: {\n            ...paint,\n            radius: 5,\n          },\n          selectable: true,\n          selectedPaint: {\n            ...paint,\n            radius: 7,\n          },\n          ...adapterOptions,\n          propertiesFilter: daysBehindFilter(\n            this.options.timedelta || 24,\n            x.adapterOptions as FiresAdapterOptions,\n            NOW,\n          ),\n        },\n      });\n    }\n  }\n\n  private async _addFirms(fires?: FirmsLayerOptions[]) {\n    if (fires) {\n      for (const x of fires) {\n        await this._addFireLayer(x);\n      }\n    }\n  }\n\n  private async _addSensors(sensor?: SensorLayerOptions) {\n    return sensor && this.ngwMap.addNgwLayer(sensor);\n  }\n\n  private async _addTreeControl(opt: {\n    ngwLayers: NgwLayers;\n    firms?: FirmsLayerOptions[];\n    userFires?: UserFiresLayerOptions;\n    sensors?: SensorLayerOptions;\n    bookmarks?: ResourceHierarchy[];\n  }) {\n    const sidebarToggleBtn = document.getElementsByClassName('js-sidebar')[0];\n\n    const isActive = () => sidebarToggleBtn.classList.contains('is-active');\n    const activateBurger = () => sidebarToggleBtn.classList.add('is-active');\n    const deactivateBurger = () =>\n      sidebarToggleBtn.classList.remove('is-active');\n\n    await this.ngwMap.onLoad();\n\n    this.tree = new MapSettingsPanel(this, {\n      ...opt,\n      onDateChange: () => {\n        this._cleanSelection();\n      },\n      ngwMap: this.ngwMap,\n    });\n\n    const toggle = (status?: boolean) => {\n      status = status !== undefined ? status : isActive();\n      if (status) {\n        stopToggleControlsFor('tree');\n        this.tree && this.tree.show();\n        activateBurger();\n      } else {\n        this.tree && this.tree.hide();\n        deactivateBurger();\n      }\n    };\n    sidebarToggleBtn.addEventListener('click', () => {\n      toggle();\n    });\n    setTimeout(() => {\n      toggle();\n    }, 500);\n    addStopToggleControl('tree', () => toggle(false));\n  }\n\n  private _cleanSelection() {\n    if (this._promises.getFeaturePromise instanceof CancelablePromise) {\n      this._promises.getFeaturePromise.cancel();\n    }\n    this.ngwMap.removeLayer('highlight');\n  }\n\n  private _highlighNgwLayer(i: NgwIdentifyEvent) {\n    this._cleanSelection();\n    const paramsList = i.getIdentifyItems();\n    const paramsLast = paramsList[paramsList.length - 1];\n    if (paramsLast) {\n      const isSensor =\n        this.options.sensors &&\n        paramsLast.layerId === this.options.sensors.resource;\n      // const resourceId = params.resourceId;\n      paramsLast.identify().then((item) => {\n        if (item) {\n          item.toGeojson().then((feature) => {\n            this.ngwMap.addLayer('GEOJSON', {\n              id: 'highlight',\n              data: feature,\n              paint: { color: 'green', stroke: true, fillOpacity: '0.8' },\n              popup: true,\n              popupOptions: {\n                maxWidth: 300,\n                createPopupContent: (e) => {\n                  e.onClose(() => {\n                    this._cleanSelection();\n                    this.ngwMap.unSelectLayers();\n                  });\n                  if (e.feature) {\n                    if (isSensor) {\n                      // const range = daysBehindRange(\n                      //   this.options.timedelta || 24,\n                      //   NOW,\n                      // );\n                      return this.popup.createSensorPopupContent({\n                        feature,\n                      });\n                    } else {\n                      return this.popup.createPopupContent(\n                        feature,\n                        paramsLast.layerId,\n                        item.extensions.attachment,\n                      );\n                    }\n                  }\n                },\n              },\n            });\n          });\n        }\n      });\n    }\n  }\n\n  private _addEventsListeners() {\n    this.ngwMap.emitter.on('click', () => {\n      this.ngwMap.cancelPromises('identify', 'select');\n    });\n    this.ngwMap.emitter.on('ngw:select', (e) => e && this._highlighNgwLayer(e));\n  }\n}\n","export const DATE_RANGE_SELECT: [days: number, text: string][] = [\n  [24, '1 день'],\n  [48, '2 дня'],\n  [72, '3 дня'],\n  [96, '4 дня'],\n  [120, '5 дней'],\n  [144, '6 дней'],\n  [168, 'неделя'],\n];\n\nexport const USERFIRE_ID = 'USERFIRE';\nexport const MODIS_ID = 'MODIS';\nexport const VIIRS_ID = 'VIIRS';\nexport const SENSOR_ID = 'SENSOR';\n\nexport const SENSOR_MEASUREMENT_API = process.env.SENSOR_MEASUREMENT_API;\n\nexport let NOW = new Date();\n\n// update global NOW each hour for long session\nsetInterval(() => {\n  NOW = new Date();\n}, 60 * 60 * 1000);\n","import { MODIS_ID, SENSOR_ID, USERFIRE_ID, VIIRS_ID } from './constants';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { AppOptions, FiresAdapterOptions } from './interfaces';\n\nconst firmsAdapterOptions: FiresAdapterOptions = {\n  limit: 2000,\n  props: { dateField: 'timestamp', timeUnit: 's' },\n};\n\nconst stroke: CirclePaint = {\n  stroke: true,\n  strokeColor: '#ffffff',\n  strokeOpacity: 1,\n  opacity: 1,\n};\n\nconst options: AppOptions = {\n  mapOptions: {\n    target: 'map',\n    bounds: [36.59, 43.385, 49.374, 50.214],\n    baseUrl: 'https://clear-horizon.nextgis.com',\n    resources: [\n      {\n        resource: 1,\n        fit: true,\n        adapterOptions: { selectable: true },\n      },\n    ],\n  },\n  timedelta: 72,\n  basemaps: [\n    {\n      qmsId: 1135,\n    },\n    // {\n    //   qmsId: 487,\n    // },\n  ],\n  userFires: {\n    resource: 'userfirepoints',\n    id: USERFIRE_ID,\n    adapterOptions: {\n      paint: { color: 'rgb(100,20,40)', ...stroke },\n      props: { dateField: 'field_9', timeUnit: 'ISO' },\n    },\n  },\n  sensors: {\n    resource: 446,\n    id: SENSOR_ID,\n    adapterOptions: {\n      selectable: true,\n      paint: {\n        color: '#0000ff',\n        radius: 5,\n        ...stroke,\n      },\n    },\n  },\n  firms: [\n    {\n      resource: 103,\n      id: MODIS_ID,\n      adapterOptions: {\n        paint: { color: 'red', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n    {\n      resource: 105,\n      id: VIIRS_ID,\n      adapterOptions: {\n        paint: { color: 'orange', ...stroke },\n        ...firmsAdapterOptions,\n      },\n    },\n  ],\n};\n\nexport default options;\n","import 'regenerator-runtime/runtime';\n\nimport { App } from './App';\nimport config from './config';\n\nimport './style/style.scss';\n\nconst app = new App(config);\n\napp.create();\n"],"names":["document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","target","dataset","$target","getElementById","classList","toggle","fetchSensorData","_ref","valueType","lastHours","sensorId","start","end","params","sensor_id","value_type","lasthours","String","toISOString","apiUrl","SENSOR_MEASUREMENT_API","fetch","concat","URLSearchParams","toString","method","then","resp","json","_regeneratorRuntime","exports","Op","Object","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","createSensorPopupContent","_x","_createSensorPopupContent","apply","arguments","_callee","_feature$properties","feature","popupElement","sensor","chartCanvas","notFoundDiv","_context","createElement","properties","SID_T","Chart","data","datasets","map","t","label","filter","s","row","x","Date","datetime","getTime","y","options","scales","time","unit","displayFormats","hour","appendChild","innerHTML","args","_asyncToGenerator","_defineProperties","props","descriptor","_toPropertyKey","_defineProperty","input","hint","prim","toPrimitive","res","_toPrimitive","Popup","instance","Constructor","_classCallCheck","protoProps","_getResourceItem2","_addPhotos2","_updateElementContent","_createSensorPopupContent2","ngwMap","this","resourceId","attachment","propContainer","className","propertiesList","entries","_ref2","createPropertiesHtml","pre","updateElementContent","_addPhotos","Number","id","elem","_ref3","day","month","year","join","minute","str","RegExp","test","prepareColumnValue","_callee2","element","item","newProperties","newContent","_context2","_getResourceItem","feature_layer","fields","grid_visibility","property","keyname","replace","a","b","display_name","getElementsByClassName","_x2","_x3","_x4","_callee3","fid","attachmentElement","_iterator","_step","img","figure","src","imgElem","_context3","_createForOfIteratorHelper","n","style","maxHeight","height","maxWidth","width","_loadImage","t0","e","f","bulmaCarousel","_x5","_x6","_x7","_x8","_callee4","_context4","_resourceItems","connector","get","_x9","_this","url","makeQuery","responseType","blob","reader","FileReader","readAsDataURL","onloadend","er","LOADING_TEXT","CollapsiblePanel","status","open","_updateContainer","parent","getContainer","_updateContent2","_container","_content","_updateContent","_toggle","_getToggleButtonHtml","_cleanContent","close","icon","title","header","_createHeader","content","leftLevel","rightLevel","onclick","html","WebmapTreeItem","layer","container","_createTreeItem","layers","setAttribute","visibility","checked","emitter","on","ev","set","propagation","WebMap","item_type","children","tree","getChildren","treeBranch","_createTreeBranch","BaseMapsContainer","_createContainer","isBaseLayer","_updateBaseMapContainer","basemaps","_baseMapsContainer","_this2","_createBaseMapItem","getBaseLayers","getLayer","baseMap","_this3","control","isLayerVisible","toggleLayer","activeBaseLayer","getActiveBaseLayer","hideLayer","createTextNode","BookmarksContainer","bookmarksContainer","bookmarks","resource","labelField","find","label_field","fetchNgwLayerItems","items","_createBookmarkItem","bookmark","nameField","bookmarkBlock","nameValue","geoJson","GeoJSON","geom","lMap","mapAdapter","fitBounds","getBounds","formatTime","dt","daysBehindRange","days","to","to_","now","daysBehindFilter","_layer$props","timeUnit","dateField","range","Math","ceil","daysBehindRangeFormat","LayersContainer","firesEl","_createFireItem","cb","onLayerAdd","off","fire","defined","wrapper","layer_","split","trim","symbol","_createSymbol","createItem","_fire$adapterOptions","adapterOptions","paint","_fire$adapterOptions2","color","stroke","strokeColor","backgroundColor","borderColor","FiresContainer","_LayersContainer","_inherits","_super","_get","_getPrototypeOf","calendarWrapper","_createCalendar","insertBefore","firstChild","fires","promises","promise","all","block","_buildCalendarBlock","dateRange","defaultDateRange","extremeItems","defaultItems","_extremeItems","_slicedToArray","min","max","_defaultItems","startDate","endDate","opt","timedelta","onChange","l","propertiesFilter","onDateChange","minDate","maxDate","DATE_RANGE_SELECT","select","querySelector","inputFrom","calendarCleanBtn","calendarOpenBtn","today","changeFunction","debounce","prop","defaultDate","datepicker","flatpickr","mode","locale","Russian","allowInput","updateCleanBtnDisplay","display","setRange","_daysBehindRange2","setDate","stopPropagation","preventDefault","isOpen","onchange","createCalendar","layerTimestampExtremum","_layer$adapterOptions","_layer$adapterOptions2","getResourceIdOrFail","extremeReqOpt","limit","extremePromises","_objectSpread","orderBy","ngwDate","NOW","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","source","getOwnPropertyDescriptors","defineProperties","OPTIONS","MapSettingsPanel","actionMap","_target","HTMLElement","sidebar","Sidebar","closeButton","position","autoPan","addTo","ngwLayers","hide","_createSensorContainer2","_createFiresContainer2","remove","show","add","userFires","firms","_createFiresContainer","sensors","_createSensorContainer","_createNgwLayers","_createBasemapsContainer","_createBookmarksContainer","ngwLayer","treeContainer","bookmarkContainer","_this$options","firesContainer","baseMapsContainer","GetCoordinatePanelControl","EventEmitter","addFeatureLayer","radius","popup","popupOptions","createPopupContent","d","_createPopupContent","geometry","coordinates","toFixed","_layer","toggleControl","setCursor","_removeClickListener","__onMapClick","_onMapClick","clearLayerData","lngLat","setLayerData","emit","lng","lat","latLngStr","Clipboard","I18N","en","linearMeasurement","areaMeasurement","meter","kilometer","squareMeter","squareKilometers","ru","toRadians","deg","PI","square","pow","getDistanceString","distance","messages","numberFormat","number","decimals","sign","num","abs","intPart","parseInt","j","substr","MeasureLabel","_Layer","_assertThisInitialized","latlng","Point","Util","offset","_offset","_map","_initLayout","getPanes","popupPane","_updatePosition","Browser","_zoomAnimation","_update","addLayer","removeChild","latLng","_closeButton","DomUtil","_contentNode","point","latLngToLayerPoint","is3D","_containerBottom","_containerLeft","bottom","left","_latLngToNewLayerPoint","zoom","center","Layer","MeasureAction","_Handler","model","overlays","points","_measureHandler","_finished","_activeMeasure","_disableMeasure","_measurementStarted","_finishMeasure","_enableMeasure","event","mouseEventToLatLng","_lastPoint","equals","_trail","_totalDistance","latlng1","latlng2","lat1","lat_dif","lat2","lng_dif","sin","cos","asin","sqrt","_addMeasurePoint","_addMarker","_addLable","_startMove","_directPath","setLatLngs","contextMenu","disable","_onMouseClick","doubleClickZoom","_onMouseMove","enable","_clearOverlay","round","earthRadius","area","len","x1","y1","x2","y2","getArea","removeLayer","directPath","addLatLng","Polygon","weight","dashArray","fillOpacity","interactive","Polyline","measurePath","_measurePath","fillColor","_resetDirectPath","marker","CircleMarker","opacity","fill","ended","lable","enableClose","DomEvent","Handler","Measure","_Control","collapsed","console","_contents","_link","href","_buildItems","ele_ul","ele_li","ele_link_line","innerText","_enableMeasureLine","ele_link_area","_enableMeasureArea","_buildContainer","mouseenter","_expand","mouseleave","_collapse","disableMeasure","Control","StopToggleControlsCb","addStopToggleControl","stopToggleControlsFor","excludeControlName","createMeasureControl","addControl","onLoad","disableSelection","enableSelection","ActionMap","_addTreeControl2","_addSensors2","_addFirms2","_addFireLayer2","_createGetCoordinateControl2","_create","mapOpt","mapOptions","NgwMap","MapAdapter","controls","minZoom","runtimeParams","UrlRuntimeParams","setNgwMap","addBaseLayer","getPaintFunctions","base","getIcon","_createLocateControl","customAttribution","_createShareControl","getNgwLayers","webmap","bookmark_resource","_addFireLayer","_addFirms","_addSensors","_createGetCoordinateControl","_addTreeControl","_addEventsListeners","locate","setView","locationfound","_this$ngwMap$getZoom","getZoom","shareModal","closeModalBtn","shareModalContent","shareInput","shareControl","createButtonControl","onClick","location","_createShareModalContent","ShareButtons","createToggleControl","_this4","locateControl","_locate","addNgwLayer","selectable","selectedPaint","_callee5","_context5","_callee6","sidebarToggleBtn","isActive","activateBurger","deactivateBurger","_this5","_context6","contains","_cleanSelection","setTimeout","_promises","getFeaturePromise","CancelablePromise","cancel","_this6","paramsList","getIdentifyItems","paramsLast","isSensor","layerId","identify","toGeojson","onClose","unSelectLayers","extensions","_this7","cancelPromises","_highlighNgwLayer","USERFIRE_ID","MODIS_ID","VIIRS_ID","SENSOR_ID","process","setInterval","firmsAdapterOptions","strokeOpacity","bounds","baseUrl","resources","fit","qmsId","App","config"],"sourceRoot":""}