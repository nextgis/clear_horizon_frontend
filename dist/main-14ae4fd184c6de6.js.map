{"version":3,"file":"main-14ae4fd184c6de6.js","mappings":"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","sources":["webpack://clear_horizon/./@nextgis/packages/ngw-map/src/utils/appendNgwResources.ts","webpack://clear_horizon/./@nextgis/packages/ngw-map/src/utils/prepareWebMapOptions.ts","webpack://clear_horizon/./@nextgis/packages/ngw-map/src/NgwMap.ts"],"sourcesContent":["import type { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type { NgwResourceDefinition } from '../interfaces';\n\nexport function appendNgwResources(\n  options: NgwLayerOptions[],\n  resource?: NgwResourceDefinition,\n  defOptions?: Partial<NgwLayerOptions>,\n  overwriteOptions?: Partial<NgwLayerOptions>,\n): void {\n  if (typeof resource === 'number' || typeof resource === 'string') {\n    resource = Number(resource);\n    options.push({\n      ...defOptions,\n      resource,\n    });\n  } else if (Array.isArray(resource)) {\n    const [resourceId, id] = resource;\n    options.push({\n      ...defOptions,\n      resource: resourceId,\n      id,\n      ...overwriteOptions,\n    });\n  } else if (typeof resource === 'object') {\n    options.push({ ...defOptions, ...resource, ...overwriteOptions });\n  }\n}\n","import { deepmerge } from '@nextgis/utils';\nimport { StarterKit, MapOptions } from '@nextgis/webmap';\nimport NgwConnector from '@nextgis/ngw-connector';\nimport { QmsKit } from '@nextgis/qms-kit';\nimport { NgwKit } from '@nextgis/ngw-kit';\n\nimport { NgwMapOptions } from '../interfaces';\n\nexport const OPTIONS: NgwMapOptions = {\n  target: 'map',\n  baseUrl: '',\n  whitlabel: false,\n  controls: ['ZOOM', 'ATTRIBUTION'],\n  controlsOptions: {\n    ZOOM: { position: 'top-left' },\n    ATTRIBUTION: {\n      position: 'bottom-right',\n      customAttribution: [\n        '<a href=\"https://nextgis.com\" target=\"_blank\">©NextGIS</a>',\n      ],\n    },\n  },\n  pixelRadius: 10,\n};\n\nexport function prepareWebMapOptions(options: NgwMapOptions): MapOptions {\n  const kits: StarterKit[] = [new QmsKit()];\n  if (options.starterKits) {\n    options.starterKits.forEach((x) => {\n      kits.push(x);\n    });\n  }\n\n  if (!options.connector) {\n    options.connector = new NgwConnector({\n      baseUrl: options.baseUrl || '',\n      auth: options.auth,\n    });\n  } else if (options.connector) {\n    options.baseUrl = options.connector.options.baseUrl;\n  }\n  options = deepmerge(OPTIONS, options);\n\n  if (!options.center && !options.bounds) {\n    options.bounds = [-179, -90, 180, 90];\n    // options.maxBounds = options.bounds;\n  }\n\n  if (options.connector) {\n    kits.push(\n      new NgwKit({\n        connector: options.connector,\n        auth: options.auth,\n      }),\n    );\n  }\n  options = {\n    ...options,\n    starterKits: kits,\n    create: false,\n  };\n  return options;\n}\n","import StrictEventEmitter from 'strict-event-emitter-types';\nimport { EventEmitter } from 'events';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { defined, isObject, getIdentifyRadius } from '@nextgis/utils';\nimport { AdapterOptions, WebMap } from '@nextgis/webmap';\nimport NgwConnector from '@nextgis/ngw-connector';\n\nimport {\n  fetchNgwLayerFeatureCollection,\n  createNgwLayerAdapter,\n  fetchNgwLayerFeature,\n  fetchIdentifyGeoJson,\n  sendIdentifyRequest,\n  createIdentifyItem,\n  fetchNgwLayerItems,\n  fetchIdentifyItem,\n  fetchNgwLayerItem,\n  getIdentifyItems,\n  getCompanyLogo,\n  fetchNgwExtent,\n} from '@nextgis/ngw-kit';\nimport { deprecatedWarn } from '@nextgis/utils';\nimport { getIcon } from '@nextgis/icons';\n\nimport { appendNgwResources } from './utils/appendNgwResources';\nimport { prepareWebMapOptions } from './utils/prepareWebMapOptions';\n\nimport type { JsonMap, FeatureProperties } from '@nextgis/utils';\nimport type {\n  FeatureItem,\n  LayerFeature,\n  ResourceItem,\n  FeatureLayersIdentify,\n  FeatureLayersIdentifyItems,\n} from '@nextgis/ngw-connector';\nimport type {\n  OnLayerMouseOptions,\n  ControlPosition,\n  MapClickEvent,\n  LayerAdapter,\n  WebMapEvents,\n  MapControls,\n  FitOptions,\n  LayerDef,\n} from '@nextgis/webmap';\nimport type {\n  NgwIdentify,\n  NgwWebmapItem,\n  ResourceAdapter,\n  FetchNgwItemsOptions,\n  NgwFeatureItemResponse,\n  NgwFeatureRequestOptions,\n} from '@nextgis/ngw-kit';\nimport type { Geometry, Feature, FeatureCollection } from 'geojson';\nimport type { QmsAdapterOptions } from '@nextgis/qms-kit';\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type {\n  NgwIdentifyEvent,\n  NgwMapOptions,\n  NgwMapEvents,\n  NgwLayers,\n} from './interfaces';\nimport type { FetchNgwItemOptions } from '@nextgis/ngw-kit';\n\ntype PromiseGroup = 'select' | 'identify';\n\n/**\n * Base class containing the logic of interaction WebMap with NextGIS services.\n *\n * @example\n * ```javascript\n * import { NgwMap } from '@nextgis/ngw-map';\n * import MapAdapter from '@nextgis/leaflet-map-adapter';\n * // styles are not included in the leaflet-map-adapter\n * import 'leaflet/dist/leaflet.css';\n *\n * const ngwMap = new NgwMap({\n *   mapAdapter: new MapAdapter(),\n *   target: 'map',\n *   qmsId: 448,\n *   baseUrl: 'https://demo.nextgis.com',\n *   webmapId: 3985\n * });\n * ```\n */\nexport class NgwMap<\n  M = unknown,\n  L = unknown,\n  C extends object = any,\n  O extends NgwMapOptions<M, C> = NgwMapOptions<M, C>,\n> extends WebMap<M, L, C, NgwMapEvents, O> {\n  static getIcon = getIcon;\n\n  readonly emitter: StrictEventEmitter<EventEmitter, NgwMapEvents> =\n    new EventEmitter();\n  connector!: NgwConnector;\n\n  protected _ngwLayers: NgwLayers = {};\n  private $$selectFromNgwRaster?: (ev: MapClickEvent) => void;\n  private $$selectFromNgwVector?: (ev: OnLayerMouseOptions) => void;\n  private _promises: Record<PromiseGroup, CancelablePromise[]> = {\n    select: [],\n    identify: [],\n  };\n\n  constructor(options: O) {\n    super(prepareWebMapOptions(options) as O);\n    if (options.connector) {\n      this.connector = options.connector;\n    }\n    this._createWebMap().then(() => {\n      const container = this.getContainer();\n      if (container) {\n        container.classList.add('ngw-map-container');\n      }\n      if (this.options.whitlabel) {\n        this._whiteLabel();\n      }\n    });\n  }\n\n  /**\n   * Organized addition to the map design and controls elements,\n   * calling `control.onAdd(this.webMap.mapAdapter)`\n   * @param control - object with onAdd and onRemove methods\n   *                or a string value indicating the name of the control installed in the map adapter\n   * @param position - position relative to the map angles\n   * @param options - initialization parameters if the control is set as a string value\n   *\n   * @example\n   * ```javascript\n   * ngwMap.addControl(new CustomControl(), 'bottom-left');\n   * ngwMap.addControl('ZOOM', 'top-right')\n   * ```\n   */\n  async addControl<K extends keyof MapControls>(\n    controlDef: K | C,\n    position: ControlPosition,\n    options?: MapControls[K],\n  ): Promise<any> {\n    await this.onLoad('controls:create');\n    return super.addControl(controlDef, position, options);\n  }\n\n  /**\n   * Add any (style, vector, webmap) NGW layer by resource definition.\n   * @param options - set layer identification parameters and render method.\n   *\n   * @example\n   * ```javascript\n   * // Add raster layer resourceId is the style of 4004 layer\n   * ngwMap.addNgwLayer({ resource: 4005 });\n   * // Add vector data from layer GEOJSON source\n   * ngwMap.addNgwLayer({\n   *   resource: 4038,\n   *   adapter: 'GEOJSON',\n   *   adapterOptions: { paint: { color: 'red' } }\n   * });\n   * ```\n   */\n  async addNgwLayer(\n    options: NgwLayerOptions,\n  ): Promise<ResourceAdapter | undefined> {\n    await this.onMapLoad();\n    // @ts-ignore for backward compatibility\n    const { keyname, resourceId } = options;\n\n    if (keyname || resourceId !== undefined) {\n      deprecatedWarn(\n        'set `resource` options instead of `keyname` or `resourceId`',\n      );\n    }\n\n    const resource = options.resource;\n    if (!keyname && !resourceId && !resource) {\n      throw new Error(\n        'resource, resourceId or keyname is required parameter to add NGW layer',\n      );\n    }\n    if (defined(this.options.baseUrl)) {\n      try {\n        if (defined(this.options.setViewDelay)) {\n          options.adapterOptions = options.adapterOptions || {};\n          if (!defined(options.adapterOptions.setViewDelay)) {\n            options.adapterOptions.setViewDelay = this.options.setViewDelay;\n          }\n        }\n        const adapter = createNgwLayerAdapter(options, this, this.connector);\n        const adapterOpts = {\n          visibility: true,\n          // TODO: do not merge options, use only `adapterOptions`\n          ...options,\n          ...options.adapterOptions,\n        } as AdapterOptions;\n        const layer = (await this.addLayer(\n          adapter,\n          adapterOpts,\n        )) as ResourceAdapter<M, L, AdapterOptions>;\n        const id = layer && this.getLayerId(layer);\n        if (layer && id) {\n          this._ngwLayers[id] = { layer, resourceId: layer.resourceId };\n          layer.options.name =\n            layer.options.name ||\n            (layer.item && layer.item.resource.display_name);\n          if (layer.options.baselayer) {\n            const visibleLayerBaseLayer = this.getActiveBaseLayer();\n            if (visibleLayerBaseLayer) {\n              return layer;\n            }\n          }\n        }\n        return layer;\n      } catch (er) {\n        const resId =\n          isObject(resource) && 'id' in resource\n            ? resource.id\n            : keyname || resourceId || resource;\n        console.error(`Can't add NGW layer ${resId}.`, er);\n      }\n    }\n  }\n\n  /**\n   * Pans and zooms the map to the initial position specified in the options\n   */\n  fit(): void {\n    const { center, zoom, bounds } = this.options;\n    if (center) {\n      this.setCenter(center);\n      if (zoom) {\n        this.setZoom(zoom);\n      }\n    } else if (bounds) {\n      this.fitBounds(bounds);\n    }\n  }\n\n  fetchNgwLayerItem<\n    G extends Geometry = Geometry,\n    P extends FeatureProperties = FeatureProperties,\n  >(\n    options: Omit<FetchNgwItemOptions<P>, 'connector'>,\n  ): CancelablePromise<FeatureItem> {\n    return fetchNgwLayerItem<G, P>({\n      connector: this.connector,\n      ...options,\n    });\n  }\n\n  fetchNgwLayerItems<\n    F extends FeatureProperties = FeatureProperties,\n    G extends Geometry = Geometry,\n  >(\n    options: Omit<FetchNgwItemsOptions<F>, 'connector'>,\n  ): CancelablePromise<FeatureItem<F, G>[]> {\n    return fetchNgwLayerItems<G, F>({\n      connector: this.connector,\n      ...options,\n    });\n  }\n\n  fetchNgwLayerFeature<\n    G extends Geometry = Geometry,\n    P extends FeatureProperties = FeatureProperties,\n  >(\n    options: Omit<FetchNgwItemOptions<P>, 'connector'>,\n  ): CancelablePromise<Feature<G, P>> {\n    return fetchNgwLayerFeature<G, P>({\n      connector: this.connector,\n      ...options,\n    });\n  }\n\n  fetchNgwLayerFeatures<\n    G extends Geometry | null = Geometry,\n    P extends FeatureProperties = FeatureProperties,\n  >(\n    options: Omit<FetchNgwItemsOptions<P>, 'connector'>,\n  ): CancelablePromise<FeatureCollection<G, P>> {\n    return fetchNgwLayerFeatureCollection({\n      connector: this.connector,\n      ...options,\n    });\n  }\n\n  fetchIdentifyItem<\n    G extends Geometry = Geometry,\n    P extends FeatureProperties = FeatureProperties,\n  >(\n    identify: NgwIdentify,\n    requestOptions?: NgwFeatureRequestOptions,\n    // multiple = false\n  ): CancelablePromise<NgwFeatureItemResponse<P, G> | undefined> {\n    const promise = fetchIdentifyItem<G, P>({\n      identify,\n      connector: this.connector,\n      requestOptions,\n      // multiple,\n    });\n\n    this._addPromise('identify', promise);\n    return promise;\n  }\n\n  fetchIdentifyGeoJson(\n    identify: NgwIdentify,\n    multiple = false,\n  ): CancelablePromise<Feature | undefined> {\n    const promise = fetchIdentifyGeoJson({\n      identify,\n      connector: this.connector,\n      multiple,\n    });\n    if (promise && 'then' in promise) {\n      this._addPromise('identify', promise);\n      return promise;\n    } else {\n      return CancelablePromise.resolve(promise);\n    }\n  }\n\n  /**\n   * @deprecated use {@link fetchIdentifyGeoJson} instead\n   */\n  getIdentifyGeoJson(\n    identify: NgwIdentify,\n    multiple = false,\n  ): CancelablePromise<Feature | undefined> {\n    return this.fetchIdentifyGeoJson(identify, multiple);\n  }\n\n  async getNgwLayers(): Promise<NgwLayers> {\n    await this.onLoad();\n    return this._ngwLayers;\n  }\n\n  async getNgwLayerByResourceId(id: number): Promise<LayerAdapter | undefined> {\n    for (const n in this._ngwLayers) {\n      const mem = this._ngwLayers[n];\n      if (mem.resourceId === id) {\n        return mem && mem.layer;\n      } else if (mem.layer.getIdentificationIds) {\n        const ids = await mem.layer.getIdentificationIds();\n        if (ids && ids.some((x) => x === id)) {\n          return mem.layer;\n        }\n      }\n      if (mem.layer.getDependLayers) {\n        const dependLayers = mem.layer.getDependLayers() as NgwWebmapItem[];\n        const dependFit = dependLayers.find((x) => {\n          return x.item && x.item.parentId === id;\n        });\n        if (dependFit) {\n          return dependFit.layer;\n        }\n      }\n    }\n  }\n\n  /**\n   * Move map to layer. If the layer is NGW resource, extent will be received from the server\n   *\n   * @example\n   * ```javascript\n   * const ngwLayer = ngwMap.addNgwLayer({ id: 'ngw_layer_name', resource: 4005 });\n   * ngwMap.fitLayer(ngwLayer);\n   * ngwMap.fitLayer('ngw_layer_name');\n   * ```\n   */\n  async fitLayer(\n    layerDef: LayerDef | number,\n    options?: FitOptions,\n  ): Promise<void> {\n    let id: string | undefined;\n    if (typeof layerDef === 'string' || typeof layerDef === 'number') {\n      id = String(id);\n    } else {\n      id = layerDef.id;\n    }\n    const ngwLayer = id && this._ngwLayers[id];\n    if (ngwLayer) {\n      if (ngwLayer.layer.getBounds) {\n        const bounds = await ngwLayer.layer.getBounds();\n        if (bounds) {\n          this.fitBounds(bounds, options);\n        }\n      } else {\n        let item: ResourceItem | undefined;\n        if (ngwLayer.layer.item) {\n          item = ngwLayer.layer.item;\n        } else {\n          const resourceId = ngwLayer.resourceId;\n          item = await this.connector.getResource(resourceId);\n        }\n        if (item) {\n          fetchNgwExtent({\n            resourceId: item.resource.id,\n            connector: this.connector,\n          }).then((extent) => {\n            if (extent) {\n              this.fitBounds(extent, options);\n            }\n          });\n        }\n      }\n    } else {\n      super.fitLayer(\n        typeof layerDef === 'number' ? String(layerDef) : layerDef,\n        options,\n      );\n    }\n  }\n\n  /** @deprecated use {@link NgwMap.fitLayer} instead */\n  async zoomToLayer(layerDef: string | ResourceAdapter): Promise<void> {\n    return this.fitLayer(layerDef);\n  }\n\n  onLoad(event: keyof NgwMapEvents = 'ngw-map:create'): Promise<this> {\n    return super.onLoad(event as keyof WebMapEvents);\n  }\n\n  removeLayer(layerDef: LayerDef): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const layerId = this.getLayerId(layer);\n      if (layerId) {\n        delete this._ngwLayers[layerId];\n      }\n      super.removeLayer(layer);\n    }\n  }\n\n  enableSelection(): void {\n    if (!this.$$selectFromNgwRaster) {\n      this.$$selectFromNgwRaster = (ev: MapClickEvent) => {\n        const count = this._getSelectListenersCount();\n        if (count) {\n          this.selectFromNgwRaster(ev);\n        }\n      };\n      this.$$selectFromNgwVector = (ev: OnLayerMouseOptions) => {\n        const count = this._getSelectListenersCount();\n        if (count) {\n          this._selectFromNgwVector(ev);\n        }\n      };\n      this.emitter.on('click', this.$$selectFromNgwRaster);\n      this.emitter.on('layer:click', this.$$selectFromNgwVector);\n    }\n  }\n\n  disableSelection(): void {\n    if (this.$$selectFromNgwRaster) {\n      this.emitter.removeListener('click', this.$$selectFromNgwRaster);\n      this.$$selectFromNgwRaster = undefined;\n    }\n    if (this.$$selectFromNgwVector) {\n      this.emitter.removeListener('layer:click', this.$$selectFromNgwVector);\n\n      this.$$selectFromNgwVector = undefined;\n    }\n  }\n\n  /**\n   * @deprecated use {@link NgwMap.fetchNgwLayerItem} instead\n   */\n  getNgwLayerItem<\n    G extends Geometry = Geometry,\n    P extends FeatureProperties = FeatureProperties,\n  >(\n    options: Omit<FetchNgwItemOptions<P>, 'connector'>,\n  ): CancelablePromise<FeatureItem> {\n    return this.fetchNgwLayerItem<G, P>(options);\n  }\n\n  /**\n   * @deprecated use {@link NgwMap.fetchNgwLayerItems} instead\n   */\n  getNgwLayerItems<\n    F extends FeatureProperties = FeatureProperties,\n    G extends Geometry = Geometry,\n  >(\n    options: Omit<FetchNgwItemsOptions<F>, 'connector'>,\n  ): CancelablePromise<FeatureItem<F, G>[]> {\n    return this.fetchNgwLayerItems<F, G>(options);\n  }\n\n  /**\n   * @deprecated use {@link NgwMap.fetchNgwLayerFeature} instead\n   */\n  getNgwLayerFeature<\n    G extends Geometry = Geometry,\n    P extends FeatureProperties = FeatureProperties,\n  >(\n    options: Omit<FetchNgwItemOptions<P>, 'connector'>,\n  ): CancelablePromise<Feature<G, P>> {\n    return this.fetchNgwLayerFeature<G, P>(options);\n  }\n\n  /**\n   * @deprecated use {@link NgwMap.fetchNgwLayerFeatures} instead\n   */\n  getNgwLayerFeatures<\n    G extends Geometry | null = Geometry,\n    P extends JsonMap = JsonMap,\n  >(\n    options: FetchNgwItemsOptions<P>,\n  ): CancelablePromise<FeatureCollection<G, P>> {\n    return this.fetchNgwLayerFeatures(options);\n  }\n\n  /** @deprecated use {@link NgwMap.cancelPromises} instead */\n  cancelPromise(...args: PromiseGroup[]): void {\n    this.cancelPromises(...args);\n  }\n\n  cancelPromises(...args: PromiseGroup[]): void {\n    if (!args.length) {\n      args = Object.keys(this._promises) as PromiseGroup[];\n    }\n    args.forEach((name) => {\n      const group = this._promises[name];\n      if (group) {\n        group.forEach((x) => x.cancel());\n        this._promises[name] = [];\n      }\n    });\n  }\n\n  async selectFromNgwRaster(\n    ev: MapClickEvent,\n  ): Promise<NgwIdentifyEvent | undefined> {\n    this._emitStatusEvent('ngw:preselect');\n\n    const promises: Promise<number[] | undefined>[] = [];\n    const layers = Object.values(this._ngwLayers);\n    layers.sort((a, b) => {\n      if (a.layer.order && b.layer.order) {\n        return b.layer.order - a.layer.order;\n      }\n      return 1;\n    });\n    for (const l of layers) {\n      const layer = l.layer;\n      const identFunc =\n        typeof layer.getIdentificationIds === 'function'\n          ? layer.getIdentificationIds\n          : false;\n      if (identFunc && layer.options.selectable && this.isLayerVisible(layer)) {\n        promises.push(identFunc.call(layer));\n      }\n    }\n    const getIdsPromise = Promise.all(promises);\n    const getIds = await getIdsPromise;\n    const ids: number[] = [];\n    for (const x of getIds) {\n      if (x) {\n        ids.push(...x);\n      }\n    }\n\n    if (!ids.length) {\n      this._emitStatusEvent('ngw:select', null);\n      return;\n    }\n\n    const pixelRadius = this.options.pixelRadius || 10;\n    const center = this.getCenter();\n    let zoom = this.getZoom();\n    zoom = zoom !== undefined ? zoom : 20;\n    if (!center || !zoom) {\n      this._emitStatusEvent('ngw:select', null);\n      return;\n    }\n    const radius = getIdentifyRadius(center, zoom, pixelRadius);\n\n    const selectPromise = sendIdentifyRequest(ev, {\n      layers: ids,\n      connector: this.connector,\n      radius,\n    }).then((resp) => {\n      const identify: NgwIdentify = {\n        ...resp,\n        resources: ids,\n        sourceType: 'raster',\n        event: ev,\n      };\n      const identifyEvent: NgwIdentifyEvent = this._prepareToIdentify(identify);\n      this._emitStatusEvent('ngw:select', identifyEvent);\n      return identifyEvent;\n    });\n    this._addPromise('select', selectPromise);\n    return selectPromise;\n  }\n\n  private _addPromise(groupName: PromiseGroup, promise: CancelablePromise) {\n    const group = this._promises[groupName];\n    if (group && group.indexOf(promise) === -1) {\n      const removeFromGroup = () => {\n        const index = group.indexOf(promise);\n        if (index !== -1) {\n          group.splice(index, 1);\n        }\n      };\n      promise.then(removeFromGroup);\n      promise.catch(removeFromGroup);\n      group.push(promise);\n    }\n  }\n\n  private _isFitFromResource() {\n    const params = this._initMapState;\n    if (params.zoom && params.center) {\n      return false;\n    }\n    return true;\n  }\n\n  private async _createWebMap() {\n    await this.create();\n    if (this.options.qmsId) {\n      this._addQmsBaseLayer();\n    }\n    if (this.options.osm) {\n      this._addOsmBaseLayer();\n    }\n\n    const resources: NgwLayerOptions[] = [];\n    const layerFitAllowed = this._isFitFromResource();\n    if (this.options.webmapId) {\n      appendNgwResources(resources, this.options.webmapId, {\n        fit: layerFitAllowed,\n      });\n    }\n    if (this.options.resources && Array.isArray(this.options.resources)) {\n      for (const x of this.options.resources) {\n        const overwriteOptions: Partial<NgwLayerOptions> = {};\n        if (!layerFitAllowed) {\n          overwriteOptions.fit = false;\n        }\n        appendNgwResources(resources, x, {}, overwriteOptions);\n      }\n    }\n    for (const r of resources) {\n      try {\n        await this.addNgwLayer(r);\n      } catch (er) {\n        console.warn(er);\n      }\n    }\n    this._emitStatusEvent('ngw-map:create', this);\n    this.enableSelection();\n  }\n\n  private _addOsmBaseLayer() {\n    this.addBaseLayer('OSM');\n  }\n\n  private _addQmsBaseLayer() {\n    let qmsId: number;\n    let qmsLayerName: string | undefined;\n    if (Array.isArray(this.options.qmsId)) {\n      qmsId = this.options.qmsId[0];\n      qmsLayerName = this.options.qmsId[1];\n    } else {\n      qmsId = Number(this.options.qmsId);\n    }\n    const qmsLayerOptions: Partial<QmsAdapterOptions> = {\n      qmsId,\n    };\n    if (qmsLayerName) {\n      qmsLayerOptions.id = qmsLayerName;\n    }\n\n    this.addBaseLayer('QMS', qmsLayerOptions);\n  }\n\n  private _selectFromNgwVector(\n    ev: OnLayerMouseOptions,\n  ): FeatureLayersIdentify | undefined {\n    const layer: ResourceAdapter = ev.layer as ResourceAdapter;\n    const selectable = layer.options.selectable && this.isLayerVisible(layer);\n    if (!selectable) {\n      return undefined;\n    }\n    // Item property means layer is NgwResource\n    const id = layer.item && layer.item.resource.id;\n    const feature = ev.feature;\n\n    if (id !== undefined && feature) {\n      const featureId = feature.id;\n      if (featureId) {\n        const identifyFeature: LayerFeature = {\n          id: Number(featureId),\n          fields: feature.properties || {},\n          label: `#${id}`,\n          layerId: Number(id),\n          parent: '',\n          geom: feature.geometry,\n        };\n        const items: FeatureLayersIdentifyItems = {\n          featureCount: 1,\n          features: [identifyFeature],\n        };\n        const identify: FeatureLayersIdentify = {\n          featureCount: 1,\n          [id]: items,\n        };\n        this._emitStatusEvent(\n          'ngw:select',\n          this._prepareToIdentify({\n            ...identify,\n            resources: [id],\n            sourceType: 'vector',\n          } as NgwIdentify),\n        );\n        return identify;\n      }\n    }\n  }\n\n  private _prepareToIdentify<\n    F extends FeatureProperties = FeatureProperties,\n    G extends Geometry = Geometry,\n  >(identify: NgwIdentify): NgwIdentifyEvent {\n    const getIdentifyItems_ = () => {\n      return getIdentifyItems(identify, true).map((x) => {\n        return createIdentifyItem<F, G>({\n          feature: x.feature,\n          connector: this.connector,\n        });\n      });\n    };\n    return {\n      ...identify,\n      getIdentifyItems: getIdentifyItems_,\n    };\n  }\n\n  private _getSelectListenersCount() {\n    return this.emitter.listenerCount('ngw:select');\n  }\n\n  private async _whiteLabel() {\n    const container = this.getContainer();\n    if (container) {\n      const logo = await getCompanyLogo(\n        this.connector,\n        this.options.companyLogoOptions,\n      );\n      if (logo) {\n        container.appendChild(logo);\n      }\n    }\n  }\n}\n"],"names":["appendNgwResources","options","resource","defOptions","overwriteOptions","Number","push","_objectSpread","Array","isArray","_resource2","resourceId","id","_typeof","OPTIONS","target","baseUrl","whitlabel","controls","controlsOptions","ZOOM","position","ATTRIBUTION","customAttribution","pixelRadius","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_defineProperties","props","descriptor","_toPropertyKey","_get","Reflect","get","bind","property","receiver","base","_getPrototypeOf","_superPropBase","getOwnPropertyDescriptor","_setPrototypeOf","o","p","_assertThisInitialized","ReferenceError","_defineProperty","input","hint","prim","toPrimitive","res","String","_toPrimitive","NgwMap","_WebMap","subClass","superClass","_inherits","Constructor","protoProps","_whiteLabel2","_createWebMap2","_selectFromNgwRaster","_zoomToLayer","_fitLayer","_getNgwLayerByResourceId","_getNgwLayers","_addNgwLayer","_addControl","Derived","hasNativeReflectConstruct","_super","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","NewTarget","_possibleConstructorReturn","_this","instance","_classCallCheck","kits","QmsKit","starterKits","x","connector","NgwConnector","auth","deepmerge","center","bounds","NgwKit","prepareWebMapOptions","EventEmitter","select","identify","_createWebMap","container","getContainer","classList","add","_whiteLabel","_callee","controlDef","_context","this","onLoad","_x","_x2","_x3","_callee2","keyname","adapter","adapterOpts","layer","resId","_context2","onMapLoad","deprecatedWarn","defined","setViewDelay","adapterOptions","createNgwLayerAdapter","visibility","addLayer","getLayerId","_ngwLayers","item","display_name","baselayer","getActiveBaseLayer","t0","isObject","console","concat","_x4","_this$options","zoom","setCenter","setZoom","fitBounds","fetchNgwLayerItem","fetchNgwLayerItems","fetchNgwLayerFeature","fetchNgwLayerFeatureCollection","requestOptions","promise","fetchIdentifyItem","_addPromise","multiple","fetchIdentifyGeoJson","CancelablePromise","_callee3","_context3","_callee4","n","mem","ids","dependLayers","dependFit","_context4","t1","getIdentificationIds","some","getDependLayers","find","parentId","_x5","_callee5","layerDef","ngwLayer","_this2","_context5","getBounds","getResource","fetchNgwExtent","extent","_x6","_x7","_callee6","_context6","fitLayer","_x8","event","getLayer","layerId","_this3","$$selectFromNgwRaster","ev","_getSelectListenersCount","selectFromNgwRaster","$$selectFromNgwVector","_selectFromNgwVector","emitter","on","removeListener","fetchNgwLayerFeatures","cancelPromises","_this4","_len","_key","_promises","group","cancel","_callee7","promises","layers","_i","_layers","l","identFunc","getIdsPromise","getIds","_iterator","_step","radius","selectPromise","_this5","_context7","_emitStatusEvent","sort","a","b","order","selectable","isLayerVisible","all","_createForOfIteratorHelper","s","f","getCenter","getZoom","getIdentifyRadius","sendIdentifyRequest","resp","resources","sourceType","identifyEvent","_prepareToIdentify","_x9","groupName","indexOf","removeFromGroup","index","splice","params","_initMapState","_callee8","layerFitAllowed","_iterator2","_step2","_i2","_resources","r","_context8","qmsId","_addQmsBaseLayer","osm","_addOsmBaseLayer","_isFitFromResource","webmapId","fit","addNgwLayer","warn","enableSelection","addBaseLayer","qmsLayerName","qmsLayerOptions","feature","featureId","featureCount","features","fields","properties","label","parent","geom","geometry","_this6","getIdentifyItems","map","createIdentifyItem","listenerCount","_callee9","logo","_context9","getCompanyLogo","companyLogoOptions","appendChild","WebMap","getIcon"],"sourceRoot":""}