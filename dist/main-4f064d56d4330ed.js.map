{"version":3,"sources":["webpack://clear_horizon/./src/components/Popup.ts","webpack://clear_horizon/./src/Utils.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/CollapsiblePanel.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/WebmapTreeItem.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/FiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/FirmsFiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BaseMapsContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/BookmarksContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/UserFiresContainer.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/createCalendar.ts","webpack://clear_horizon/./src/components/MapSettingsPanel/MapSettingsPanel.ts","webpack://clear_horizon/./src/components/GetCoordinateControl/GetCoordinateControl.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/i18n.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/utils.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureLabel.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/MeasureAction.ts","webpack://clear_horizon/./src/assets/Leaflet.Measure-master/src/Measure.ts","webpack://clear_horizon/./src/components/ToggleControl.ts","webpack://clear_horizon/./src/components/createMeasureControl.ts","webpack://clear_horizon/./src/components/ActionMap.ts","webpack://clear_horizon/./src/bulma.ts","webpack://clear_horizon/./src/App.ts","webpack://clear_horizon/./src/main.ts"],"names":["Popup","ngwMap","this","feature","resourceId","popupElement","document","createElement","properties","className","propertiesList","Object","entries","map","key","value","innerHTML","createPropertiesHtml","pre","appendChild","updateElementContent","then","elem","forEach","day","month","year","join","hour","minute","str","RegExp","test","prepareColumnValue","element","_getResourceItem","item","feature_layer","newProperties","fields","x","grid_visibility","property","keyname","push","display_name","newContent","getElementsByClassName","attachment","id","fid","attachmentElement","img","figure","_loadImage","width","height","src","imgElem","bulmaCarousel","_resourceItems","connector","get","options","Promise","resolve","reject","url","makeQuery","responseType","blob","reader","FileReader","readAsDataURL","onloadend","result","catch","er","CollapsiblePanel","status","undefined","open","_updateContainer","parent","getContainer","_container","_content","_updateContent","_toggle","_getToggleButtonHtml","_cleanContent","close","icon","title","header","_createHeader","content","leftLevel","rightLevel","toggle","onclick","html","WebmapTreeItem","layer","container","_createTreeItem","layers","input","setAttribute","item_type","layer_enabled","checked","visibility","emitter","on","ev","set","propagation","WebMap","name","children","length","tree","getChildren","treeBranch","_createTreeBranch","reverse","FiresContainer","_createContainer","fires","f","_createFireItem","cb","getLayer","onLayerAdd","e","off","fire","defined","layer_","toggleLayer","displayName","resource","split","replace","trim","symbol","_createSymbol","createItem","color","adapterOptions","paint","style","borderColor","backgroundColor","SELECT","FirmsFiresContainer","selector","_createSelector","insertBefore","firstChild","label","createTextNode","option","text","onchange","propertiesFilter","Math","floor","Date","now","Number","BaseMapsContainer","isBaseLayer","_updateBaseMapContainer","basemaps","_baseMapsContainer","_createBaseMapItem","getBaseLayers","baseMap","control","isLayerVisible","activeBaseLayer","getActiveBaseLayer","hideLayer","BookmarksContainer","bookmarksContainer","bookmarks","b","labelField","find","label_field","fetchNgwLayerItems","items","_createBookmarkItem","bookmark","nameField","bookmarkBlock","nameValue","String","geoJson","GeoJSON","geom","lMap","mapAdapter","fitBounds","getBounds","UserFiresContainer","calendarWrapper","_createCalendar","fireItem","dateField","props","getResourceIdOrFail","extremeReqOpt","extremePromises","orderBy","all","minItem","maxItem","block","_buildCalendarBlock","extremeItems","today","onChange","opt","calendar","bulmaCalendar","isRange","lang","startDate","subMonths","endDate","maxDate","dateFormat","displayMode","showTodayButton","cancelLabel","clearLabel","enableMonthSwitch","enableYearSwitch","date","createCalendar","filter","start","toISOString","end","dt","OPTIONS","target","MapSettingsPanel","actionMap","getElementById","Error","_target","HTMLElement","sidebar","Sidebar","closeButton","position","autoPan","addTo","ngwLayers","hide","classList","remove","show","add","userFires","_createUserFiresContainer","_createFiresContainer","_createNgwLayers","_createBasemapsContainer","_createBookmarksContainer","n","ngwLayer","treeContainer","bookmarkContainer","firesContainer","baseMapsContainer","GetCoordinatePanelControl","EventEmitter","addLayer","radius","popup","popupOptions","createPopupContent","d","_createPopupContent","geometry","coordinates","toFixed","_layer","toggleControl","setCursor","_removeClickListener","__onMapClick","_onMapClick","clearLayerData","type","lngLat","setLayerData","emit","lng","lat","latLngStr","Clipboard","I18N","en","linearMeasurement","areaMeasurement","meter","kilometer","squareMeter","squareKilometers","ru","toRadians","deg","PI","square","pow","getDistanceString","distance","messages","numberFormat","number","decimals","thousandsSep","sign","num","abs","intPart","parseInt","j","substr","slice","MeasureLabel","latlng","Point","Util","offset","_offset","_map","_initLayout","getPanes","popupPane","_updatePosition","Browser","_zoomAnimation","_update","removeChild","latLng","_closeButton","DomUtil","_contentNode","point","latLngToLayerPoint","is3D","_containerBottom","y","_containerLeft","bottom","left","a","_latLngToNewLayerPoint","zoom","center","Layer","MeasureAction","model","overlays","points","_measureHandler","_finished","_activeMeasure","_disableMeasure","_measurementStarted","_finishMeasure","_enableMeasure","event","mouseEventToLatLng","_lastPoint","equals","_trail","_totalDistance","latlng1","latlng2","lat1","lat_dif","lat2","lng_dif","sin","cos","asin","sqrt","_addMeasurePoint","_addMarker","_addLable","_startMove","_directPath","setLatLngs","concat","contextMenu","disable","_onMouseClick","doubleClickZoom","_onMouseMove","enable","_clearOverlay","call","round","earthRadius","area","len","x1","y1","i","x2","y2","getArea","removeLayer","directPath","addLatLng","Polygon","weight","dashArray","fillOpacity","interactive","Polyline","measurePath","_measurePath","fillColor","_resetDirectPath","marker","CircleMarker","opacity","fill","ended","lable","enableClose","DomEvent","Handler","Measure","collapsed","locale","console","error","_contents","_link","href","_buildItems","ele_ul","ele_li","ele_link_line","innerText","_enableMeasureLine","ele_link_area","_enableMeasureArea","_buildContainer","mouseenter","_expand","mouseleave","_collapse","disableMeasure","display","Control","StopToggleControlsCb","addStopToggleControl","stop","stopToggleControlsFor","excludeControlName","createMeasureControl","addControl","onLoad","disableSelection","enableSelection","ActionMap","mapOpt","mapOptions","NgwMap","MapAdapter","controls","minZoom","runtimeParams","UrlRuntimeParams","setNgwMap","addBaseLayer","getPaintFunctions","base","getIcon","_createLocateControl","customAttribution","_createShareControl","getNgwLayers","values","webmap","bookmark_resource","_addUserFires","_addFires","_createGetCoordinateControl","_addTreeControl","_addEventsListeners","locate","setView","locationfound","setCenter","auth","authBtn","getStatus","user","onClick","logout","window","location","reload","addEventListener","shareModal","closeModalBtn","shareModalContent","shareInput","shareControl","createButtonControl","_createShareModalContent","ShareButtons","createToggleControl","locateControl","_locate","addNgwLayer","stroke","selectable","selectedPaint","timedelta","sidebarToggleBtn","isActive","contains","activeBurger","disactiveBurger","setTimeout","_promises","getFeaturePromise","cancel","_clean","params","getIdentifyItems","fetchIdentifyItem","extensions","toGeojson","geojson","data","selectOnHover","_addPhotos","featureId","cancelPromises","_highlighNgwLayer","$navbarBurgers","Array","prototype","querySelectorAll","el","dataset","$target","App","showContent","create","appContent","appLoadingContent","config","require","warn","deepmerge","bounds"],"mappings":"6vEAyBO,IAAMA,EAAb,yB,4FAAA,yDAEmE,I,QAFnE,a,EAAA,G,EAAA,wBAIE,SAAUC,GACRC,KAAKD,OAASA,IALlB,gCAQE,SACEE,EACAC,GAEA,IAAMC,EAAeC,SAASC,cAAc,OACtCC,EAAaF,SAASC,cAAc,OAC1CC,EAAWC,UAAY,aACvB,IAAMC,EAA6BC,OAAOC,QAAQT,EAAQK,YAAYK,KACpE,YAAkB,I,IAAA,G,EAAA,E,4CAAA,I,qfAChB,MAAO,CACLC,IAFc,KAGdC,MAHc,SASpB,GAFAP,EAAWQ,UAAYd,KAAKe,qBAAqBP,GAE7CN,EAAY,CACd,IAAMc,EAAMZ,SAASC,cAAc,OACnCW,EAAIC,YAAYX,GAChBH,EAAaW,UAAY,WACzBd,KAAKkB,qBAAqBF,EAAKd,EAAYD,GAASkB,MAAK,WACvDhB,EAAaW,UAAY,GACzBX,EAAac,YAAYD,WAG3Bb,EAAac,YAAYX,GAE3B,OAAOH,IApCX,kCAuCE,SACEG,GAEA,IAAIc,EAAO,GAgBX,OAfAd,EAAWe,SAAQ,YAAoB,IAAjBT,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACJ,WAAjB,EAAOA,IAAsBA,IAC3B,SAAUA,EACZA,EAAQ,CAACA,EAAMS,IAAKT,EAAMU,MAAOV,EAAMW,MAAMC,KAAK,KACzC,SAAUZ,IACnBA,EAAQ,CAACA,EAAMa,KAAMb,EAAMc,QAAQF,KAAK,OAG5CL,GAAQ,sFAAJ,OAEkCR,EAFlC,+CC/CH,SAA4BC,GACjC,MAAqB,iBAAVA,IAdOe,EAeDf,EAdD,IAAIgB,OAClB,wKAMA,KAEeC,KAAKF,IAMlB,mBAAmBf,EAAnB,6BAA6CA,EAA7C,QAGGA,EAnBT,IAAoBe,ED+DUG,CAAmBlB,GAHvC,mCAOCO,IA1DX,gEA6DE,WAIEY,EACA9B,EACAD,GANF,4GAQqBD,KAAKiC,iBAAiB/B,GAR3C,cAQQgC,EARR,QASWC,gBACDC,EAA4B,GAClCF,EAAKC,cAAcE,OAAOhB,SAAQ,SAACiB,GACjC,GAAIA,EAAEC,gBAAiB,CACrB,IAAMC,EAAWvC,EAAQK,WAAWgC,EAAEG,SAClCD,GACFJ,EAAcM,KAAK,CAAE9B,IAAK0B,EAAEK,aAAc9B,MAAO2B,QAIjDI,EAAa5C,KAAKe,qBAAqBqB,IACvCpB,EAAMgB,EAAQa,uBAAuB,cAAc,MAEvD7B,EAAIF,UAAY8B,IAtBtB,kBAyBSV,GAzBT,gDA7DF,wGAyFE,WACEF,EACAc,EACAC,EACAC,GAJF,mGAMQC,EAAoB7C,SAASC,cAAc,QAE/BE,UAAY,sBARhC,IASoBuC,GATpB,gEASaI,EATb,SAYUC,EAAS/C,SAASC,cAAc,WAC/BE,UAAP,mBAHc,IAGd,YAFe,KAXnB,UAcsBP,KAAKoD,WAAWF,EAAK,CACrCG,MALY,IAMZC,OALa,IAMbP,KACAC,QAlBN,QAcUO,EAdV,QAoBUC,EAAUpD,SAASC,cAAc,QAC/BkD,IAAMA,EACdJ,EAAOlC,YAAYuC,GACnBP,EAAkBhC,YAAYkC,GAvBlC,+IAyBEnB,EAAQf,YAAYgC,GACpBQ,WAAqBR,GA1BvB,gEAzFF,gHAsHE,WAA+B/C,GAA/B,yFACOF,KAAK0D,eAAexD,GAD3B,gCAEuBF,KAAKD,OAAO4D,UAAUC,IAAI,gBAAiB,KAAM,CAClEb,GAAI7C,IAHV,OAEUgC,EAFV,OAKIlC,KAAK0D,eAAexD,GAAcgC,EALtC,gCAOSlC,KAAK0D,eAAexD,IAP7B,gDAtHF,sEAgIE,SACEgD,EACAW,GACA,WACA,OAAO,IAAIC,SAAgB,SAACC,EAASC,GACnC,IAAQX,EAAkBQ,EAAlBR,MAAOC,EAAWO,EAAXP,OACTW,EACJ,iBACAJ,EAAQd,GACR,YACAc,EAAQb,IAHR,sBAIeE,EAAIH,GAJnB,WAKCM,GAASC,EAAT,gBAA2BD,EAA3B,YAAoCC,GAAW,IAClD,EAAKvD,OAAO4D,UACTO,UAAUD,EAAK,GAAI,CAAEE,aAAc,SACnChD,MAAK,SAACiD,GACL,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,UAAY,WACjBT,EAAQM,EAAOI,YAGlBC,OAAM,SAACC,GACNX,EAAOW,c,iBAvJjB,K,iTEdO,IAAMC,EAAb,WAME,WAAoBf,I,4FAAkC,cAAlCA,UAAkC,oBALxBzD,SAASC,cAAc,QAKC,2EACpDL,KAAK6E,YAA+BC,IAAtB9E,KAAK6D,QAAQkB,MAAqB/E,KAAK6D,QAAQkB,KAC7D/E,KAAKgF,mBACDhF,KAAK6D,QAAQoB,QACfjF,KAAK6D,QAAQoB,OAAOhE,YAAYjB,KAAKkF,gB,QAV3C,O,EAAA,G,EAAA,2BAcE,WACE,OAAOlF,KAAKmF,aAfhB,kBAkBE,WACMnF,KAAKoF,WAAapF,KAAKoF,SAAStE,WAClCd,KAAKqF,iBAGHrF,KAAKsF,UACPtF,KAAKsF,QAAQxE,UAAYd,KAAKuF,qBAAqB,sBAErDvF,KAAK6E,QAAS,IA1BlB,mBA6BE,WACE7E,KAAKwF,gBACDxF,KAAKsF,UACPtF,KAAKsF,QAAQxE,UAAYd,KAAKuF,qBAAqB,wBAErDvF,KAAK6E,QAAS,IAlClB,oBAqCE,WACM7E,KAAK6E,OACP7E,KAAKyF,QAELzF,KAAK+E,SAzCX,kCA6CE,SAA6BW,GAC3B,qGAGcA,EAHd,yCA9CJ,8BAuDE,WAEE,GADA1F,KAAKmF,WAAWrE,UAAY,GACxBd,KAAK6D,QAAQ8B,MAAO,CACtB,IAAMC,EAAS5F,KAAK6F,gBACpB7F,KAAKmF,WAAWlE,YAAY2E,GAE9B,IAAME,EAAU1F,SAASC,cAAc,OACvCyF,EAAQvF,UAAY,gBACpBP,KAAKoF,SAAWU,EAChB9F,KAAKmF,WAAWlE,YAAY6E,GAExB9F,KAAK6E,OACP7E,KAAK+E,OAEL/E,KAAKyF,UArEX,2BAyEE,WAAwB,WAChBG,EAASxF,SAASC,cAAc,OACtCuF,EAAOrF,UAAY,+BAEnB,IAAMwF,EAAY3F,SAASC,cAAc,OACzC0F,EAAUxF,UAAY,aAEtB,IAAMoF,EAAQvF,SAASC,cAAc,OACrCsF,EAAMpF,UAAY,iCAClBoF,EAAM7E,UAAYd,KAAK6D,QAAQ8B,OAAS,GACxCI,EAAU9E,YAAY0E,GAEtB,IAAMK,EAAa5F,SAASC,cAAc,OAC1C2F,EAAWzF,UAAY,cACvB,IAAM0F,EAAS7F,SAASC,cAAc,OAYtC,OAXA4F,EAAO1F,UAAY,kCACnByF,EAAW/E,YAAYgF,GAEvBA,EAAOC,QAAU,WACf,EAAKD,UAEPjG,KAAKsF,QAAUW,EAEfL,EAAO3E,YAAY8E,GACnBH,EAAO3E,YAAY+E,GAEZJ,IAnGX,2BAsGE,WACM5F,KAAKoF,WACPpF,KAAKoF,SAAStE,UAAY,MAxGhC,4BA4GE,WAEE,GADAd,KAAKwF,gBACDxF,KAAKoF,SAAU,CACjB,IAAMe,EAC4B,mBAAzBnG,KAAK6D,QAAQiC,QAChB9F,KAAK6D,QAAQiC,UACb9F,KAAK6D,QAAQiC,QAEnB9F,KAAKoF,SAASnE,YAAYkF,GAE5B,OAAOnG,KAAKoF,c,iBAtHhB,K,gLCPO,IAAMgB,EAAb,WAGE,WAAYC,G,qGAAsB,S,OAAA,G,EAAA,qB,sBAAA,K,uDAAA,K,KAChC,IAAMC,EAAYtG,KAAKuG,gBAAgBF,GACnCC,IACFtG,KAAKmF,WAAamB,G,QANxB,O,EAAA,G,EAAA,2BAUE,WACE,OAAOtG,KAAKmF,aAXhB,+BAcE,SAA0BqB,GAAyB,WAC3CpF,EAAOhB,SAASC,cAAc,OAUpC,OATAe,EAAKb,UAAY,gCACjBiG,EAAOnF,SAAQ,SAACiB,GACd,GAAIA,EAAEJ,KAAM,CACV,IAAMA,EAAO,EAAKqE,gBAAgBjE,GAC9BJ,GACFd,EAAKH,YAAYiB,OAIhBd,IAzBX,6BA4BE,SAAwBiF,GACtB,IAAMnE,EAA8BmE,EAAMnE,KAC1C,IAAKA,EACH,OAAO,EAET,IAAMd,EAAOhB,SAASC,cAAc,OAEpC,GADAe,EAAKb,UAAY,uBACb2B,EAAKS,aAAc,CACrB,IAAM8D,EAAQrG,SAASC,cAAc,SACrCoG,EAAMC,aAAa,OAAQ,YAC3B,IAAM7F,EAA2B,UAAnBqB,EAAKyE,WAAwBzE,EAAK0E,cAChDH,EAAMI,QAAUhG,EAEhB,IAAMiG,EAAaT,EAAM/F,WAAWkC,SAClC,cAEEsE,IACFA,EAAWC,QAAQC,GAAG,UAAU,SAACC,GAC/BR,EAAMI,QAAUI,EAAGpG,SAErB4F,EAAMP,QAAU,WACdY,EAAWI,IAAIT,EAAMI,QAAS,CAC5BM,YAAaC,kBAAoB,YAKvC,IAAMC,EAAOjH,SAASC,cAAc,QACpCgH,EAAKvG,UAAYoB,EAAKS,aAEtBvB,EAAKH,YAAYwF,GACjBrF,EAAKH,YAAYoG,GAGnB,GACqB,UAAnBnF,EAAKyE,WACe,SAAnBzE,EAAKyE,WAAwBzE,EAAKoF,SAASC,OAC5C,CACA,IAAMD,EAAWjB,EAAMmB,KAAKC,cACtBC,EAAa1H,KAAK2H,kBAAkBL,EAASM,WACnDxG,EAAKH,YAAYyG,GAEnB,OAAOtG,O,iBAtEX,K,6UCUO,IAAeyG,EAAtB,WAIE,WAAsBhE,I,4FAAgC,cAAhCA,UAAgC,oDACpD7D,KAAKD,OAAS8D,EAAQ9D,OACtBC,KAAKmF,WAAanF,KAAK8H,mB,QAN3B,O,EAAA,G,EAAA,2BASE,WACE,OAAO9H,KAAKmF,aAVhB,8BAaE,WAA0C,WAClCmB,EAAYlG,SAASC,cAAc,OACzCiG,EAAU/F,UAAY,4CAEtB,IAAMwH,EAAQ3H,SAASC,cAAc,OAOrC,OANA0H,EAAMxH,UAAY,6BAClBP,KAAK6D,QAAQkE,MAAM1G,SAAQ,SAAC2G,GAC1B,EAAKC,gBAAgBD,EAAGD,MAE1BzB,EAAUrF,YAAY8G,GAEfzB,IAxBX,wBA2BE,SAAqBvD,EAAYmF,GAA4C,WACrEnI,EAASC,KAAK6D,QAAQ9D,OACtBsG,EAAQtG,GAAWA,EAAOoI,SAASpF,GACzC,GAAIsD,EACF6B,EAAG7B,OACE,CAOLrG,KAAKD,OAAOgH,QAAQC,GAAG,aANJ,SAAboB,EAAcC,GACdA,EAAEtF,KAAOA,IACXmF,EAAGG,GACH,EAAKtI,OAAOgH,QAAQuB,IAAI,YAAaF,UApC/C,6BA2CE,SAAwBG,EAAoBjC,GAA8B,WAClElF,EAAOhB,SAASC,cAAc,OACpCe,EAAKb,UAAY,uBACjB,IAAMwC,EAAKwF,EAAKxF,IACXyF,QAAQzF,IA4Bb/C,KAAKoI,WAAWrF,GAAI,SAACsD,GAAD,OA1BD,SAACoC,GAClB,IAAMvG,EAAOuG,EAAOvG,KAEpB,GAAIA,EAAM,CACR,IAAMuE,EAAQrG,SAASC,cAAc,SACrCoG,EAAMC,aAAa,OAAQ,YAE3BD,EAAMI,SAAU,EAKhBJ,EAAMP,QAAU,WACd,EAAKnG,OAAO2I,YAAY3F,EAAI0D,EAAMI,UAGpC,IAAMQ,EAAOjH,SAASC,cAAc,QAC9BsI,EAAczG,EAAK0G,SAASjG,aAAakG,MAAM,MAAM,GAC3DxB,EAAKvG,UAAY6H,EAAYG,QAAQ,QAAS,IAAIC,OAClD,IAAMC,EAAS,EAAKC,cAAcV,GAClCnH,EAAKH,YAAYwF,GACjBrF,EAAKH,YAAY+H,GACjB5H,EAAKH,YAAYoG,GACjBf,EAAUrF,YAAYG,IAGK8H,CAAW7C,QA3E9C,2BA8EE,SAAsBkC,GAAiC,MAC/CS,EAAS5I,SAASC,cAAc,QACtC2I,EAAOzI,UAAY,cACnB,IAAM4I,GAAQ,UAACZ,EAAKa,sBAAN,aAAC,EAAqBC,OAAsBF,MAM1D,MALqB,iBAAVA,IACTH,EAAOM,MAAMH,MAAQA,EACrBH,EAAOM,MAAMC,YAAcJ,EAC3BH,EAAOM,MAAME,gBAAkBL,GAE1BH,O,iBAvFX,K,4qCCRA,IAAMS,EAAS,CACb,CAAC,KAAM,WACP,CAAC,KAAM,YACP,CAAC,KAAM,WACP,CAAC,MAAO,WAGGC,EAAb,a,kOAAA,U,QAAA,G,EAAA,E,+YAAA,6D,EAAA,G,EAAA,+BACE,WACE,IAAMpD,EAAY,EAAH,mDAETqD,EAAW3J,KAAK4J,kBAGtB,OAFAtD,EAAUuD,aAAaF,EAAUrD,EAAUwD,YAEpCxD,IAPX,6BAUE,WAA0B,WAClBlF,EAAOhB,SAASC,cAAc,OAC9B0J,EAAQ3J,SAASC,cAAc,SAErC0J,EAAM9I,YAAYb,SAAS4J,eAAe,0BAC1C,IAAML,EAAWvJ,SAASC,cAAc,UA6BxC,OA3BAoJ,EAAOpI,SAAQ,SAACiB,GACd,IAAM2H,EAAS7J,SAASC,cAAc,UACtC4J,EAAOpJ,MAAQyB,EAAE,GACjB2H,EAAOC,KAAO5H,EAAE,GAChBqH,EAAS1I,YAAYgJ,MAGvBN,EAASQ,SAAW,WAClB,EAAKtG,QAAQkE,MAAM1G,SAAQ,SAACiB,GAC1B,IAAMS,EAAKT,EAAES,GACb,IAAIyF,QAAQzF,GAAK,CACf,IAAMsD,EAAQ,EAAKtG,OAAOoI,SAASpF,GAC/BsD,EAAM+D,kBACR/D,EAAM+D,iBAAiB,CACrB,CACE,YACA,KACAC,KAAKC,MAAMC,KAAKC,MAAQ,KAAiC,KAAzBC,OAAOd,EAAS9I,eAQ5DkJ,EAAM9I,YAAY0I,GAClBvI,EAAKH,YAAY8I,GACV3I,O,iBA5CX,GAAyCyG,G,8RCLlC,IAAM6C,EAAb,WAKE,WAAoB7G,GAAmC,Y,4FAAA,cAAnCA,UAAmC,wFACrD7D,KAAKD,OAAS8D,EAAQ9D,OACtBC,KAAKmF,WAAanF,KAAK8H,mBACvB9H,KAAKD,OAAOgH,QAAQC,GAAG,aAAa,SAACqB,GAC/B,EAAKtI,OAAO4K,YAAYtC,IAC1B,EAAKuC,6B,QAVb,O,EAAA,G,EAAA,2BAeE,WACE,OAAO5K,KAAKmF,aAhBhB,8BAmBE,WACE,IAAMmB,EAAYlG,SAASC,cAAc,OACzCiG,EAAU/F,UAAY,sDAEtB,IAAMsK,EAAWzK,SAASC,cAAc,OAKxC,OAJAwK,EAAStK,UAAY,gCACrBP,KAAK8K,mBAAqBD,EAC1BvE,EAAUrF,YAAY4J,GACtB7K,KAAK4K,0BACEtE,IA5BX,qCA+BE,WAAkC,WAC5BtG,KAAK8K,qBACP9K,KAAK8K,mBAAmBhK,UAAY,IAGtCd,KAAK+K,qBACL/K,KAAKD,OAAOiL,gBAAgB3J,SAAQ,SAACiB,GACnC,IAAM+D,EAAQ,EAAKtG,OAAOoI,SAAS7F,GAC/B+D,GACF,EAAK0E,mBAAmB1E,QAxChC,gCA6CE,SAA2B4E,GAAwB,WAC3CC,EAAU9K,SAASC,cAAc,OACvC6K,EAAQ3K,UAAY,UACpB,IAAMa,EAAOhB,SAASC,cAAc,SACpCe,EAAKb,UAAY,gCAEjB,IAAMkG,EAAQrG,SAASC,cAAc,SACrCoG,EAAMC,aAAa,OAAQ,SAC3BD,EAAMC,aAAa,OAAQ,WAE3BD,EAAMI,UAAYoE,GAAWjL,KAAKD,OAAOoL,eAAeF,GAKxDxE,EAAMP,QAAU,WACd,GAAI+E,GAAWA,EAAQlI,GACrB,EAAKhD,OAAO2I,YAAYuC,EAAQlI,GAAI0D,EAAMI,aACrC,CACL,IAAMuE,EAAkB,EAAKrL,OAAOsL,qBAChCD,GACF,EAAKrL,OAAOuL,UAAUF,KAI5B,IACMzC,EADYsC,IAAYA,EAAQ5D,MAAQ4D,EAAQpH,QAAQwD,OAC7B,QAC3BA,EAAOjH,SAAS4J,eAAerB,GAErCvH,EAAKH,YAAYwF,GAEjBrF,EAAKH,YAAYoG,GAEjB6D,EAAQjK,YAAYG,GAChBpB,KAAK8K,oBACP9K,KAAK8K,mBAAmB7J,YAAYiK,Q,iBAhF1C,K,kTCKO,IAAMK,EAAb,WAIE,WAAoB1H,I,4FAAoC,cAApCA,UAAoC,oDACtD7D,KAAKD,OAAS8D,EAAQ9D,OACtBC,KAAKmF,WAAanF,KAAK8H,mB,QAN3B,O,EAAA,G,EAAA,2BASE,WACE,OAAO9H,KAAKmF,aAVhB,8BAaE,WAAgC,WACxBmB,EAAYlG,SAASC,cAAc,OACzCiG,EAAU/F,UAAY,gDAEtB,IAAMiL,EAAqBpL,SAASC,cAAc,OA4BlD,OA3BAmL,EAAmBjL,UAAY,iCAC/BP,KAAK6D,QAAQ4H,UAAUpK,SAAQ,SAACqK,GAC9B,EAAK3L,OAAO4D,UACTC,IAAI,gBAAiB,KAAM,CAAEb,GAAI2I,EAAE3I,KACnC5B,MAAK,SAACyH,GACL,GAAIA,EAASzG,cAAe,CAC1B,IAAMwJ,EAAa/C,EAASzG,cAAcE,OAAOuJ,MAC/C,SAACtJ,GAAD,OAAOA,EAAEuJ,eAEPF,GACF,EAAK5L,OACF+L,mBAAsC,CAAE5L,WAAYwL,EAAE3I,KACtD5B,MAAK,SAAC4K,GACLA,EAAM1K,SAAQ,SAACiB,GACb,IAAMlB,EAAO,EAAK4K,oBAChB1J,EACAqJ,EAAWlJ,SAEb6D,EAAUrF,YAAYG,gBAOtCkF,EAAUrF,YAAYuK,GAEflF,IA7CX,iCAgDE,SACE2F,GAEa,WADbC,EACa,uDADQ,OAEf9K,EAAOhB,SAASC,cAAc,OACpCe,EAAKb,UAAY,gCACjB,IAAM4L,EAAgB/L,SAASC,cAAc,OACvC+L,EAAYH,EAAS5J,OAAO6J,GAQlC,OAPAC,EAAcrL,UAAYuL,OAAOD,GACjCD,EAAcjG,QAAU,WACtB,IAAMoG,EAAU,IAAIC,UAAQN,EAASO,MAC/BC,EAAO,EAAK1M,OAAO2M,WAAW/L,IACpC8L,GAAQA,EAAKE,UAAUL,EAAQM,cAEjCxL,EAAKH,YAAYkL,GACV/K,O,iBA/DX,K,itFCJO,IAAMyL,GAAb,a,mOAAA,U,QAAA,G,EAAA,E,kZAAA,8D,EAAA,G,EAAA,+BACE,WACE,IAAMvG,EAAY,uDAEZwG,EAAkB9M,KAAK+M,kBAE7B,OADAzG,EAAUuD,aAAaiD,EAAiBxG,EAAUwD,YAC3CxD,IANX,6BASE,WAAuC,WAC/BwG,EAAkB1M,SAASC,cAAc,OACzC2M,EAAWhN,KAAK6D,QAAQkE,MAAM,GAC9BpE,EAAY3D,KAAK6D,QAAQ9D,OAAO4D,UAChCiF,EAAWoE,EAASpE,SAC1B,GAAIoE,GAAYpE,GAAYjF,EAAW,SAC/BsJ,GAAY,UAAAD,EAAS5D,sBAAT,mBAAyB8D,aAAzB,eAAgCD,YAAa,UAC/DtJ,EAAUwJ,oBAAoBvE,GAAUzH,MAAK,SAACjB,GAC5C,IAAMkN,EAAsC,CAC1ClN,aACAmC,OAAQ,CAAC4K,GACTT,MAAM,EACN7I,aAEI0J,EAAkB,EACtBvB,QAAmB,SAAKsB,GAAN,IAAqBE,QAAS,CAACL,OACjDnB,QAAmB,SAAKsB,GAAN,IAAqBE,QAAS,CAAC,IAAML,OAEzDnJ,QAAQyJ,IAAIF,GAAiBlM,MAAK,YAAwB,I,IAAA,G,EAAA,E,4CAAA,I,kxBAAtBqM,EAAsB,KAAbC,EAAa,KACxD,EAAKrF,WAAW4E,EAASjK,IAAMsJ,OAAOW,EAASpE,WAAW,SAACvC,GACzD,IAAMqH,EAAQ,EAAKC,oBACjBtH,EACA,CAACmH,EAASC,GACVR,GAEFH,EAAgB7L,YAAYyM,YAMpC,OAAOZ,IAxCX,iCA2CE,SACEzG,EACAuH,EACAX,GAkCA,OCjFG,SAAwBpJ,GAC7B,IAAMsC,EAAO/F,SAASC,cAAc,OACpC8F,EAAK5F,UAAY,oBAEjB,IAAMkG,EAAQrG,SAASC,cAAc,SACrCoG,EAAMC,aAAa,OAAQ,QAC3BP,EAAKlF,YAAYwF,GACjB,IAAMoH,EAAQ,IAAItD,KAEVuD,EAAqBjK,EAArBiK,SAAaC,E,kXAArB,CAA6BlK,EAA7B,GAEMmK,EAAWC,WAAqBxH,EAArB,IACfyH,SAAS,EACTC,KAAM,KACNC,WAAWC,OAAUR,EAAO,GAC5BS,QAAST,EACTU,QAASV,EACTW,WAAY,aACZC,YAAa,SACbC,iBAAiB,EACjBC,YAAa,UACbC,WAAY,WACZC,mBAAmB,EACnBC,kBAAkB,GACff,IACF,GAMH,OALAC,EAAShH,GAAG,UAAU,WAEpB8G,EAAS,GAAD,GAAME,EAASe,UAGlB5I,EDkDE6I,CAtB4B,CACjClB,SAAU,SAACzF,GACT,IAAM4G,EAA2B,GAC7B5G,EAAE6G,OACJD,EAAOvM,KAAK,CAACuK,EAAW,KAAM5E,EAAE6G,MAAMC,gBAEpC9G,EAAE+G,KACJH,EAAOvM,KAAK,CAACuK,EAAW,KAAM5E,EAAE+G,IAAID,gBAElC9I,EAAM+D,kBACR/D,EAAM+D,iBAAiB6E,QApEjC,2BAmFE,SAAsBI,GACpB,OAAO,IAAI9E,KAAK8E,EAAG7N,KAAM6N,EAAG9N,MAAO8N,EAAG/N,U,kBApF1C,GAAwCuG,G,o2BEQxC,IAAMyH,GAA4C,CAChDC,OAAQ,QAIGC,GAAb,WAUE,WAAoBC,EAAsB5L,GAExC,G,4FAF0E,cAAxD4L,YAAwD,uIAC1EzP,KAAK6D,QAAL,SAAoByL,IAAYzL,GACG,iBAAxB7D,KAAK6D,QAAQ0L,OAAqB,CAC3C,IAAMA,EAASnP,SAASsP,eAAe1P,KAAK6D,QAAQ0L,QACpD,IAAIA,EAGF,MAAM,IAAII,MAAJ,8BACmB3P,KAAK6D,QAAQ0L,OADhC,iCAFNvP,KAAK4P,QAAUL,OAMRvP,KAAK6D,QAAQ0L,kBAAkBM,cACxC7P,KAAK4P,QAAU5P,KAAK6D,QAAQ0L,QAE9BvP,KAAK8P,QAAU,IAAIC,IAAJ,CAAY/P,KAAK4P,QAAS,CACvCI,aAAa,EACbC,SAAU,OACVC,SAAS,IAEXlQ,KAAK8P,QAAQK,MAAMnQ,KAAKyP,UAAU1P,OAAO2M,WAAW/L,KAEpDX,KAAKoQ,UAAYpQ,KAAK6D,QAAQuM,UAE9BpQ,KAAKmF,WAAanF,KAAK8H,mBAClB9H,KAAK6D,QAAQgB,QAChB7E,KAAKqQ,OAEPrQ,KAAK4P,SAAW5P,KAAK4P,QAAQ3O,YAAYjB,KAAKmF,Y,QArClD,O,EAAA,G,EAAA,mBAwCE,WACEnF,KAAKmF,WAAWmL,UAAUC,OAAO,UACjCvQ,KAAK8P,QAAQU,SA1CjB,kBA6CE,WACExQ,KAAK8P,QAAQO,OACbrQ,KAAKmF,WAAWmL,UAAUG,IAAI,YA/ClC,8BAkDE,WAAwC,WAChCnK,EAAYlG,SAASC,cAAc,OAwCzC,OAvCAiG,EAAU/F,UAAY,sBAEKuE,IAAvB9E,KAAK6D,QAAQR,QACfiD,EAAUgD,MAAMjG,MAAQrD,KAAK6D,QAAQR,MAAQ,MAG3CrD,KAAK6D,QAAQ6M,WACf,IAAI9L,EAAiB,CACnBe,MAAO,SACPG,QAAS,kBAAM,EAAK6K,6BACpB1L,OAAQqB,IAGRtG,KAAK6D,QAAQkE,OACf,IAAInD,EAAiB,CACnBe,MAAO,qBACPG,QAAS,kBAAM,EAAK8K,yBACpB3L,OAAQqB,IAGZ,IAAI1B,EAAiB,CACnBe,MAAO,eACPG,QAAS,kBAAM,EAAK+K,oBACpB9L,MAAM,EACNE,OAAQqB,IAEV,IAAI1B,EAAiB,CACnBe,MAAO,WACPG,QAAS,kBAAM,EAAKgL,4BACpB/L,MAAM,EACNE,OAAQqB,IAEV,IAAI1B,EAAiB,CACnBe,MAAO,WACPG,QAAS,kBAAM,EAAKiL,6BACpBhM,MAAM,EACNE,OAAQqB,IAGHA,IA3FX,8BA8FE,WACE,IAAMA,EAAYlG,SAASC,cAAc,OAEzC,IAAK,IAAM2Q,KADX1K,EAAU/F,UAAY,wBACNP,KAAKoQ,UAAW,CAC9B,IAAMa,EAAWjR,KAAKoQ,UAAUY,GAE1BE,EADO,IAAI9K,EAAe6K,EAAS5K,MAAMA,OACpBnB,eACvBgM,GACF5K,EAAUrF,YAAYiQ,GAG1B,OAAO5K,IAzGX,uCA4GE,WACE,IAAMA,EAAYlG,SAASC,cAAc,OACnCoL,EAAYzL,KAAK6D,QAAQ4H,UAC/B,GAAIA,EAAW,CACb,IAAM0F,EAAoB,IAAI5F,EAAmB,CAC/CE,YACA1L,OAAQC,KAAK6D,QAAQ9D,SAEvBuG,EAAUrF,YAAYkQ,EAAkBjM,gBAE1C,OAAOoB,IAtHX,uCAyHE,WACE,IAAMA,EAAYlG,SAASC,cAAc,OACzC,GAAIL,KAAK6D,QAAQ6M,UAAW,CAC1B,IAAMU,EAAiB,IAAIvE,GAAmB,CAC5C9E,MAAO,CAAC/H,KAAK6D,QAAQ6M,WACrB3Q,OAAQC,KAAK6D,QAAQ9D,SAEvBuG,EAAUrF,YAAYmQ,EAAelM,gBAEvC,OAAOoB,IAlIX,mCAqIE,WACE,IAAMA,EAAYlG,SAASC,cAAc,OACnC0H,EAAQ/H,KAAK6D,QAAQkE,MAC3B,GAAIA,EAAO,CACT,IAAMqJ,EAAiB,IAAI1H,EAAoB,CAC7C3B,QACAhI,OAAQC,KAAK6D,QAAQ9D,SAEvBuG,EAAUrF,YAAYmQ,EAAelM,gBAEvC,OAAOoB,IA/IX,sCAkJE,WACE,IAAMA,EAAYlG,SAASC,cAAc,OAEzC,GADcL,KAAK6D,QAAQkE,MAChB,CACT,IAAMsJ,EAAoB,IAAI3G,EAAkB,CAC9C3K,OAAQC,KAAK6D,QAAQ9D,SAEvBuG,EAAUrF,YAAYoQ,EAAkBnM,gBAE1C,OAAOoB,O,kBA3JX,K,+fCJO,IAAMgL,GAAb,WAkBE,WACU7B,GAER,WADA5L,EACA,uDAD4C,GAC5C,gBAFQ4L,YAER,eApBK,oDAoBL,gBAnBM,CACNnH,IAAK,gCACLtB,GAAI,gDAiBJ,mBAdS,sCAcT,qBAbW,UAaX,kBAXO,GAWP,kBATQ,IAAIuK,iBASZ,kFACAvR,KAAKsF,QAAUzB,EAAQoC,OACvBjG,KAAKyP,UAAU1P,OACZyR,SAAS,UAAW,CACnBzO,GAAI,wBACJ+D,YAAY,EACZuC,MAAO,CAAEoI,OAAQ,GACjBC,OAAO,EACPC,aAAc,CACZC,mBAAoB,SAACC,GACnB,GAAIA,EAAE5R,QACJ,OAAO,EAAK6R,oBACVD,EAAE5R,QAAQ8R,SAASC,YAAYrR,KAAI,SAAC2B,GAAD,OAAOA,EAAE2P,QAAQ,WAM7D9Q,MAAK,SAACkF,GACDA,IACF,EAAK6L,OAAS7L,M,QAzCxB,O,EAAA,G,EAAA,sBA8CE,SAAQxB,GACN7E,KAAKmS,cAActN,KA/CvB,kBAkDE,WAAa,WACX7E,KAAKyP,UAAU1P,OAAOqS,UAAU,aAChCpS,KAAKqS,uBACLrS,KAAKsS,aAAe,SAACjK,GAAD,OAAsB,EAAKkK,YAAYlK,IAC3DrI,KAAKyP,UAAU1P,OAAOgH,QAAQC,GAAG,QAAShH,KAAKsS,gBAtDnD,kBAyDE,WACEtS,KAAKyP,UAAU1P,OAAOqS,UAAU,WAChCpS,KAAKqS,uBACLrS,KAAKyP,UAAU1P,OAAOyS,eAAexS,KAAKkS,UA5D9C,kCA+DE,WACMlS,KAAKsS,eACPtS,KAAKyP,UAAU1P,OAAOgH,QAAQuB,IAAI,QAAStI,KAAKsS,cAChDtS,KAAKsS,kBAAexN,KAlE1B,yBAsEE,SAAoBuD,GAClB,IAAMpI,EAA0B,CAC9BwS,KAAM,UACNnS,WAAY,GACZyR,SAAU,CAAEU,KAAM,QAAST,YAAa3J,EAAEqK,SAE5C1S,KAAKyP,UAAU1P,OAAO4S,aAAa3S,KAAKkS,OAAQjS,KA5EpD,2BA+EE,SAAsB4E,IACpBA,OAAoBC,IAAXD,EAAuBA,GAAU7E,KAAK6E,QAE7C7E,KAAKwQ,OAELxQ,KAAKqQ,OAGPrQ,KAAK6E,OAASA,EACV7E,KAAKsF,SACPtF,KAAKsF,QAAQT,GAEf7E,KAAK+G,QAAQ6L,KAAK,SAAU5S,KAAK6E,UA3FrC,iCA8FE,YAAkD,I,IAAA,G,EAAA,E,4CAAA,I,kxBAArBgO,EAAqB,KAAhBC,EAAgB,KAC1ChN,EAAU1F,SAASC,cAAc,OACjC0S,EAAY,GAAH,OAAMD,EAAN,aAAcD,GAc7B,OAbA/M,EAAQhF,UAAR,+EAE+BiS,EAF/B,uGAMsBjN,EAAQjD,uBAC5B,qBACA,GACYqD,QAAU,WACtB8M,UAAeD,IAGVjN,O,kBA9GX,KChBamN,GAAiC,CAC5CC,GAAI,CACFC,kBAAmB,uBACnBC,gBAAiB,mBACjBlE,MAAO,QACPmE,MAAO,IACPC,UAAW,KACXC,YAAa,KACbC,iBAAkB,OAEpBC,GAAI,CACFN,kBAAmB,uBACnBC,gBAAiB,oBACjBlE,MAAO,QACPmE,MAAO,IACPC,UAAW,KACXC,YAAa,KACbC,iBAAkB,QChBf,SAASE,GAAUC,GACxB,OAAOA,GAAOtJ,KAAKuJ,GAAK,KAEnB,SAASC,GAAOvR,GACrB,OAAO+H,KAAKyJ,IAAIxR,EAAG,GAEd,SAASyR,GACdC,EACAC,GAEA,OAAOD,EAAW,IACdE,GAAaF,EAAU,GAAK,IAAMC,EAASZ,MAC3Ca,GAAaF,EAAW,IAAK,GAAK,IAAMC,EAASX,UAqChD,SAASY,GAAaC,GAAsC,IAAtBC,EAAsB,uDAAX,EAChDC,EAAe,IACfC,EAAOH,EAAS,EAAI,IAAM,GAC1BI,EAAMlK,KAAKmK,KAAKL,GAAU,GAC1BM,EAAUC,SAASH,EAAItC,QAAQmC,GAAW,IAAM,GAChDO,EAAIF,EAAQlN,OAAS,EAAIkN,EAAQlN,OAAS,EAAI,EAEpD,MAAO,CACL+M,EACAK,EAAIF,EAAQG,OAAO,EAAGD,GAAKN,EAAe,GAC1CI,EAAQG,OAAOD,GAAG7L,QAAQ,iBAAkB,KAAOuL,GACnDD,EACI,IACA/J,KAAKmK,IAAID,EAAM9J,OAAOgK,IACnBxC,QAAQmC,GACRS,MAAM,GACT,IACJpT,KAAK,I,s7BC1DF,IAAMqT,GAAb,a,mOAAA,U,QAAA,G,EAAA,E,kZAeE,WAAYjR,GAA8B,a,4FAAA,eACxC,cAAMA,IADkC,UAdX,CAC7BkR,OAAQ,KACRjP,QAAS,GACTvF,UAAW,KAW6B,2CAPxB,IAAIyU,QAAM,EAAG,KAOW,oKAExCC,kBAAA,MAAsBpR,GAClB,EAAKA,QAAQqR,SACf,EAAKC,QAAU,EAAKtR,QAAQqR,QAJU,EAf5C,O,EAAA,G,EAAA,oBAsBE,SAAMvU,GAWJ,OAVAX,KAAKoV,KAAOzU,EACZX,KAAKmF,YAAcnF,KAAKqV,cACpBrV,KAAKmF,YACPxE,EAAI2U,WAAWC,UAAUtU,YAAYjB,KAAKmF,YAE5CxE,EAAIqG,GAAG,YAAahH,KAAKwV,gBAAiBxV,MACtCyV,iBACF9U,EAAIqG,GAAG,WAAYhH,KAAK0V,eAAgB1V,MAE1CA,KAAK2V,UACE3V,OAjCX,mBAmCE,SAAMW,GAEJ,OADAA,EAAI6Q,SAASxR,MACNA,OArCX,sBAuCE,SAASW,GAOP,OANIX,KAAKmF,YACPxE,EAAI2U,WAAWC,UAAUK,YAAY5V,KAAKmF,YAE5CxE,EAAI2H,IAAI,YAAatI,KAAKwV,gBAAiBxV,MAC3CW,EAAI2H,IAAI,WAAYtI,KAAK0V,eAAgB1V,MACxCA,KAAKoV,KAAe,KACdpV,OA9CX,uBAgDE,SAAU+U,GAGR,OAFA/U,KAAK6D,QAAQkR,QAASc,YAAOd,GAC7B/U,KAAKwV,kBACExV,OAnDX,wBAqDE,SAAW8F,GAGT,OAFA9F,KAAK6D,QAAQiC,QAAUA,EACvB9F,KAAKqF,iBACErF,OAxDX,yBA0DE,WAIE,OAHAA,KAAK8V,aAAeC,iBAAe,OAAQ,QAAS/V,KAAKmF,YACzDnF,KAAK8V,aAAahV,UAChB,6HACKd,KAAK8V,eA9DhB,yBAgEE,WACE9V,KAAKmF,WAAa4Q,iBAAe,MAAO/V,KAAK6D,QAAQtD,WACrDP,KAAKgW,aAAeD,iBAAe,MAAO,UAAW/V,KAAKmF,cAlE9D,qBAoEE,WACEnF,KAAKoV,OAASpV,KAAKqF,iBAAkBrF,KAAKwV,qBArE9C,4BAuEE,WACMxV,KAAKgW,cAAgBhW,KAAK6D,QAAQiC,UACD,iBAAxB9F,KAAK6D,QAAQiC,QACtB9F,KAAKgW,aAAalV,UAAYd,KAAK6D,QAAQiC,SAE3C9F,KAAKgW,aAAalV,UAAY,GAC9Bd,KAAKgW,aAAa/U,YAAYjB,KAAK6D,QAAQiC,aA7EnD,6BAiFE,WACE,GAAI9F,KAAK6D,QAAQkR,QAAU/U,KAAKmF,WAAY,CAC1C,IAAM8Q,EAAQjW,KAAKoV,KAAKc,mBAAmBlW,KAAK6D,QAAQkR,QAClDoB,EAAOV,gBACPP,EAASlV,KAAKmV,QACpBgB,GAAQJ,sBAAoB/V,KAAKmF,WAAY8Q,GAC7CjW,KAAKoW,kBAAoBlB,EAAOmB,GAAKF,EAAO,EAAIF,EAAMI,GACtDrW,KAAKsW,eAAiBpB,EAAO5S,GAAK6T,EAAO,EAAIF,EAAM3T,GACnDtC,KAAKmF,WAAWmE,MAAMiN,OAASvW,KAAKoW,iBAAmB,KACvDpW,KAAKmF,WAAWmE,MAAMkN,KAAOxW,KAAKsW,eAAiB,QA1FzD,4BA6FE,SAAuBG,GACrB,GAAIzW,KAAKmF,WAAY,CACnB,IAAM8Q,EAASjW,KAAKoV,KAAasB,uBAC/B1W,KAAK6D,QAAQkR,OACb0B,EAAEE,KACFF,EAAEG,QAEJb,sBAAoB/V,KAAKmF,WAAY8Q,S,kBApG3C,GAAkCY,S,86BCW3B,IAAMC,GAAb,a,mOAAA,U,QAAA,G,EAAA,E,kZAkBE,WAAYnW,EAAUkD,GAA+B,a,4FAAA,eACnD,cAAMlD,IAD6C,UAjBrB,CAC9BwI,MAAO,UACP4N,MAAO,WACP9C,SAAUhB,QAcyC,qNAL5B,GAK4B,kBAJ7B,CAAE+D,SAAU,GAAIC,OAAQ,KAIK,+DAEnD,EAAK7B,KAAOzU,EACZ,EAAKuW,gBAAL,MACA,EAAKC,WAAY,EACjBlC,kBAAA,MAAsBpR,GAL6B,EAlBvD,O,EAAA,G,EAAA,uBAyBE,SAASkT,GAEP,OADA/W,KAAK6D,QAAQkT,MAAQA,EACd/W,OA3BX,sBA6BE,WACEA,KAAKoX,mBA9BT,yBAgCE,WACEpX,KAAKqX,oBAjCT,4BAmCE,WACErX,KAAKkX,gBAAgBI,qBACnBtX,KAAKkX,gBAAgBK,iBACvBvX,KAAKsX,oBAAsBtX,KAAKuX,iBAAmBvX,KAAKwX,mBAtC5D,2BAwCE,SAAsBC,GACpB,IAAM1C,EAAS0C,EAAM1C,QAAU/U,KAAKoV,KAAKsC,mBAAmBD,GAC5D,IAAIzX,KAAK2X,aAAc5C,EAAO6C,OAAO5X,KAAK2X,YAA1C,CAGA,GAAI3X,KAAK6X,OAAOZ,OAAO1P,OAAS,EAAG,CACjC,IAAM0P,EAASjX,KAAK6X,OAAOZ,OAC3BA,EAAOvU,KAAKqS,GACZ,IAAMxN,EAAS0P,EAAO1P,OACtBvH,KAAK8X,iBFrDiBC,EEsDpBd,EAAO1P,EAAS,GFtDqByQ,EEuDrCf,EAAO1P,EAAS,GFrDhB0Q,EAAOvE,GAAUqE,EAAQjF,KAEzBoF,GADAC,EAAOzE,GAAUsE,EAAQlF,MACRmF,EACjBG,EAAU1E,GAAUsE,EAAQnF,IAAMkF,EAAQlF,KAC1C4D,EACJ5C,GAAOxJ,KAAKgO,IAAIH,EAAU,IAC1B7N,KAAKiO,IAAIL,GAAQ5N,KAAKiO,IAAIH,GAAQtE,GAAOxJ,KAAKgO,IAAID,EAAU,IACvD,SAAkB/N,KAAKkO,KAAKlO,KAAKmO,KAAK/B,KEgDzCzW,KAAKyY,iBAAiB1D,GACtB/U,KAAK0Y,WAAW3D,GACW,SAAvB/U,KAAK6D,QAAQkT,OACf/W,KAAK2Y,UACH5D,EACAhB,GAAkB/T,KAAK8X,eAAgB9X,KAAK6D,QAAQoQ,UACpD,8BAIJjU,KAAK8X,eAAiB,EACtB9X,KAAKyY,iBAAiB1D,GACtB/U,KAAK0Y,WAAW3D,GACW,SAAvB/U,KAAK6D,QAAQkT,OACf/W,KAAK2Y,UACH5D,EACA/U,KAAK6D,QAAQoQ,SAAS/E,MACtB,yBAGJlP,KAAK6X,OAAOZ,OAAOvU,KAAKqS,GF7EvB,IAAqBgD,EAAiBC,EAErCC,EACAE,EACAD,EACAE,EACA3B,EEyEJzW,KAAK2X,WAAa5C,EAClB/U,KAAK4Y,YAAa,KA5EtB,0BA8EE,SAAqBnB,GACnB,IAAM1C,EAAS0C,EAAM1C,OACjB/U,KAAK6Y,aAAe7Y,KAAK6X,OAAOZ,OAAO1P,OAAS,IAC9CvH,KAAK4Y,WACP5Y,KAAK6Y,YAAYC,WAAW9Y,KAAK6X,OAAOZ,OAAO8B,OAAOhE,KAEtD/U,KAAK6Y,YAAYC,WAAW,CAAC/D,IAC7B/U,KAAK4Y,YAAa,MArF1B,4BAyFE,WACE5Y,KAAK6X,OAAS,CACZb,SAAU,GACVC,OAAQ,IAEV,IAAMtW,EAAMX,KAAKoV,KACjBW,mBAAiBpV,EAAIuE,eAAgB,uBAErCvE,EAAIqY,aAAerY,EAAIqY,YAAYC,UACnCjZ,KAAKsX,qBAAsB,EAC3B3W,EAAIqG,GAAG,QAAShH,KAAKkZ,cAAelZ,MACpCW,EAAIqG,GAAG,WAAYhH,KAAKuX,eAAgBvX,MACxCW,EAAIqG,GAAG,cAAehH,KAAKuX,eAAgBvX,MAC3CW,EAAIwY,gBAAgBF,UACpBtY,EAAIqG,GAAG,YAAahH,KAAKoZ,aAAcpZ,MACvCW,EAAI4H,KAAK,mBAxGb,6BA0GE,WACE,IAAM5H,EAAMX,KAAKoV,KACjBW,sBAAoBpV,EAAIuE,eAAgB,uBAExCvE,EAAIqY,aAAerY,EAAIqY,YAAYK,SACnC1Y,EAAI2H,IAAI,QAAStI,KAAKkZ,cAAelZ,MACrCW,EAAI2H,IAAI,WAAYtI,KAAKuX,eAAgBvX,MACzCW,EAAI2H,IAAI,cAAetI,KAAKuX,eAAgBvX,MAC5CW,EAAI2H,IAAI,YAAatI,KAAKoZ,aAAcpZ,MACxCW,EAAIwY,gBAAgBE,SACpBrZ,KAAKsX,oBAAsBtX,KAAK4Y,YAAa,EACxC5Y,KAAKmX,WACRnX,KAAKsZ,cAAcC,KAAKvZ,MAE1BW,EAAI4H,KAAK,kBAxHb,4BA0HE,SAAuBkP,GFnHlB,IAAuBR,EAAkBhD,EACxCwC,EEmHAzW,KAAK6X,OAAOZ,OAAO1P,OAAS,IAC1BvH,KAAK6X,OAAOZ,OAAO1P,OAAS,IAC1BvH,KAAK6Y,aAAiBpB,GAAwB,gBAAfA,EAAMhF,MACvCzS,KAAK6Y,YAAYC,WAAW9Y,KAAK6X,OAAOZ,QAEtCjX,KAAK2X,aACoB,SAAvB3X,KAAK6D,QAAQkT,MACf/W,KAAK2Y,UACH3Y,KAAK2X,YF5HWV,EE6HFjX,KAAK6X,OAAOZ,OF7HQhD,EE6HAjU,KAAK6D,QAAQoQ,UF5HrDwC,EAAIpM,KAAKmP,MAKV,SAAiBvC,GAMtB,IALA,IAAMwC,EAAc,QAChBC,EAAO,EACLC,EAAM1C,EAAO1P,OACfqS,EAAK3C,EAAO0C,EAAM,GAAG9G,IACrBgH,EAAK5C,EAAO0C,EAAM,GAAG7G,IAChBgH,EAAI,EAAGA,EAAIH,EAAKG,IAAK,CAC5B,IAAMC,EAAK9C,EAAO6C,GAAGjH,IACfmH,EAAK/C,EAAO6C,GAAGhH,IACrB4G,GACEhG,GAAUqG,EAAKH,IACd,EAAIvP,KAAKgO,IAAI3E,GAAUmG,IAAOxP,KAAKgO,IAAI3E,GAAUsG,KACpDJ,EAAKG,EACLF,EAAKG,EAEP,OAAO3P,KAAKmK,IAAKkF,EAAOD,EAAcA,EAAe,GApBhCQ,CAAQhD,KAClB,IACP/C,GAAauC,EAAG,GAAK,IAAMxC,EAASV,YACpCW,GAAauC,EAAI,IAAK,GAAK,IAAMxC,EAAST,kBE0HlC,yBACA,GAGFxT,KAAK2Y,UACH3Y,KAAK2X,WACL5D,GAAkB/T,KAAK8X,eAAgB9X,KAAK6D,QAAQoQ,UACpD,yBACA,IAINjU,KAAK6Y,aAAe7Y,KAAKoV,KAAK8E,YAAYla,KAAK6Y,aAC/C7Y,KAAKmX,WAAY,GAEjBnX,KAAKsZ,cAAcC,KAAKvZ,OAG5BA,KAAKiZ,YAvJT,8BAyJE,SAAyBlE,GAErB,IAAIoF,EADDna,KAAK6Y,YAuBR7Y,KAAK6Y,YAAYuB,UAAUrF,IApBzBoF,EADyB,SAAvBna,KAAK6D,QAAQkT,MACF,IAAIsD,UAAQ,CAACtF,GAAS,CACjCuF,OAAQ,EACRnR,MAAOnJ,KAAK6D,QAAQsF,MACpBoR,UAAW,CAAC,EAAG,GACfC,YAAa,EACbC,aAAa,IAGE,IAAIC,WAAS,CAAC3F,GAAS,CACtCuF,OAAQ,EACRnR,MAAOnJ,KAAK6D,QAAQsF,MACpBoR,UAAW,CAAC,EAAG,GACfE,aAAa,IAIjBza,KAAKoV,KAAK5D,SAAS2I,GACnBna,KAAK6X,OAAOb,SAAStU,KAAKyX,GAC1Bna,KAAK6Y,YAAcsB,KA/KzB,8BAoLE,SAAyBpF,GAErB,IAAI4F,EADD3a,KAAK4a,aAsBR5a,KAAK4a,aAAaR,UAAUrF,IAnB1B4F,EADyB,SAAvB3a,KAAK6D,QAAQkT,MACD,IAAIsD,UAAQ,CAACtF,GAAS,CAClCuF,OAAQ,EACRnR,MAAOnJ,KAAK6D,QAAQsF,MACpB0R,UAAW7a,KAAK6D,QAAQsF,MACxBqR,YAAa,GACbC,aAAa,IAGE,IAAIC,WAAS,CAAC3F,GAAS,CACtCuF,OAAQ,EACRnR,MAAOnJ,KAAK6D,QAAQsF,MACpBsR,aAAa,IAIjBza,KAAKoV,KAAK5D,SAASmJ,GACnB3a,KAAK6X,OAAOb,SAAStU,KAAKiY,GAC1B3a,KAAK4a,aAAeD,GAItB3a,KAAK8a,iBAAiB/F,KA7M1B,wBA+ME,SAAmBc,GACjB,IAAMkF,EAAS,IAAIC,eAAanF,EAAQ,CACtC1M,MAAOnJ,KAAK6D,QAAQsF,MACpB8R,QAAS,EACTX,OAAQ,EACRO,UAAW,UACXK,MAAM,EACNV,YAAa,EACb/I,OAAQ,EACRgJ,aAAa,IAEfza,KAAKoV,KAAK5D,SAASuJ,GACnB/a,KAAK6X,OAAOb,SAAStU,KAAKqY,KA3N9B,uBA6NE,SACEhG,EACAjP,EACAvF,EACA4a,GACM,WACAC,EAAQ,IAAItG,GAAa,CAC7BC,SACAjP,UACAvF,cAIF,GAFAP,KAAKoV,KAAK5D,SAAS4J,GACnBpb,KAAK6X,OAAOb,SAAStU,KAAK0Y,GACtBD,EAAO,CACT,IAAMnL,EAAcoL,EAAMC,cAC1BC,cACEtL,EACA,SACA,SAAC3H,GACCiT,2BAAyBjT,GACzB,EAAKiR,kBAEPtZ,SAnPR,2BAuPE,WACE,IAEEuH,EAFIyP,EAAWhX,KAAK6X,OAAOb,SACzB8C,EAAI,EAER,IAAKvS,EAASyP,EAASzP,OAAQuS,EAAIvS,EAAQuS,IACzC9Z,KAAKoV,KAAK8E,YAAYlD,EAAS8C,S,kBA5PrC,GAAmCyB,W,k/CCf5B,IAAMC,GAAb,a,mOAAA,U,QAAA,G,EAAA,E,kZAgBE,WAAY3X,GAAkC,O,4FAAA,eAC5C,cAAMA,IADsC,UAfpB,CACxBoM,SAAU,WACVtK,MAAO,cACP8V,WAAW,EACXtS,MAAO,UACPuS,OAAQ,KACRzH,SAAUhB,QASkC,+IAE5CgC,kBAAA,MAAsBpR,GACtB,IAAM6X,EAAS7X,EAAQ6X,OACvB,GAAIA,GAAqB,OAAXA,EAAiB,CAC7B,IAAMzH,EAAWhB,GAAKyI,GAClBzH,EACF,EAAKpQ,QAAQoQ,SAAb,SAA6BhB,IAASgB,GAEtC0H,QAAQC,MACN,uCACE,EAAK/X,QAAQ6X,OACb,WAZoC,SAhBhD,O,EAAA,G,EAAA,oBAiCE,SAAM/a,GAEJ,OADAX,KAAKoV,KAAOzU,EACLX,KAAKmF,YAAcnF,KAAKqV,gBAnCnC,4BAqCE,WACMrV,KAAKkX,kBACPlX,KAAKkX,gBAAgB+B,UACrBjZ,KAAKkX,qBAAkBpS,KAxC7B,6BA2CE,WAsBE,OArBA9E,KAAKmF,WAAa4Q,iBAChB,MACA,uDAGF/V,KAAK6b,UAAY9F,iBACf,MACA,2BACA/V,KAAKmF,YAGPnF,KAAK8b,MAAQ/F,iBAAe,IAAK,yBAA0B/V,KAAKmF,YAChEnF,KAAK8b,MAAMnW,MAAQ3F,KAAK6D,QAAQ8B,OAAS,cACzC3F,KAAK8b,MAAMC,KAAO,IAOlB/b,KAAKgc,cACEhc,KAAKmF,aAjEhB,yBAmEE,WACE,IAAM8W,EAASlG,iBACb,KACA,0BACA/V,KAAK6b,WAEHK,EAASnG,iBAAe,KAAM,yBAA0BkG,GACtDE,EAAgBpG,iBAAe,IAAK,QAASmG,GACnDC,EAAcC,UAAYpc,KAAK6D,QAAQoQ,SAASd,kBAChDgJ,EAAcJ,KAAO,IACrBT,mCAAiCa,GACjCb,cAAYa,EAAe,QAASnc,KAAKqc,mBAAoBrc,MAE7Dkc,EAASnG,iBAAe,KAAM,yBAA0BkG,GACxD,IAAMK,EAAgBvG,iBACpB,IACA,+BACAmG,GAEFI,EAAcF,UAAYpc,KAAK6D,QAAQoQ,SAASb,gBAChDkJ,EAAcP,KAAO,IACrBT,mCAAiCgB,GACjChB,cAAYgB,EAAe,QAAStc,KAAKuc,mBAAoBvc,QAzFjE,yBA2FE,WACE,IAAMsG,EAAYtG,KAAKwc,kBAevB,OAdAlB,mCAAiChV,GACjCgV,oCAAkChV,GAC9BtG,KAAK6D,QAAQ4X,UACfH,cACEhV,EACA,CACEmW,WAAYzc,KAAK0c,QACjBC,WAAY3c,KAAK4c,WAEnB5c,MAGFA,KAAK0c,UAEApW,IA3GX,gCA6GE,SAA2BW,GACzBqU,2BAAyBrU,GACzBjH,KAAK6c,iBACD7c,KAAKoV,OACPpV,KAAKkX,gBAAkB,IAAIJ,GAAc9W,KAAKoV,KAAM,CAClD2B,MAAO,WACP5N,MAAOnJ,KAAK6D,QAAQsF,MACpB8K,SAAUjU,KAAK6D,QAAQoQ,WAEzBjU,KAAKkX,gBAAgBmC,YAtH3B,gCAyHE,SAA2BpS,GACzBqU,2BAAyBrU,GACzBjH,KAAK6c,iBACD7c,KAAKoV,OACPpV,KAAKkX,gBAAkB,IAAIJ,GAAc9W,KAAKoV,KAAM,CAClD2B,MAAO,OACP5N,MAAOnJ,KAAK6D,QAAQsF,MACpB8K,SAAUjU,KAAK6D,QAAQoQ,WAEzBjU,KAAKkX,gBAAgBmC,YAlI3B,qBAqIE,WAKE,OAJIrZ,KAAK8b,OAAS9b,KAAKmF,aACrBnF,KAAK8b,MAAMxS,MAAMwT,QAAU,OAC3B/G,mBAAiB/V,KAAKmF,WAAY,6BAE7BnF,OA1IX,uBA4IE,WAKE,OAJIA,KAAK8b,OAAS9b,KAAKmF,aACrBnF,KAAK8b,MAAMxS,MAAMwT,QAAU,QAC3B/G,sBAAoB/V,KAAKmF,WAAY,6BAEhCnF,U,kBAjJX,GAA6B+c,WCPhBC,GAGR,GAEE,SAASC,GAAqB5V,EAAc6V,GACjDF,GAAqBta,KAAK,CAAE2E,OAAM6V,SAG7B,SAASC,GAAsBC,GACpCJ,GAAqB3b,SAAQ,SAACiB,GACxBA,EAAE+E,OAAS+V,GACb9a,EAAE4a,UCLD,SAASG,GAAqBtd,GAEnC,IAAMmL,EAAU,IAAIsQ,GAAQ,CAAEE,OAAQ,OACtC3b,EAAOud,WAAWpS,EAAS,YAE3BnL,EAAOwd,SAASpc,MAAK,WACnB,IAAMR,EAAMZ,EAAO2M,WAAW/L,IAC1BA,IACFA,EAAIqG,GAAG,iBAAiB,WACtBmW,GAAsB,WACtBpd,EAAOyd,sBAET7c,EAAIqG,GAAG,gBAAgB,WACrBjH,EAAOqS,UAAU,WACjBrS,EAAO0d,sBAGXR,GAAqB,WAAW,WAC9B/R,EAAQ2R,uB,+qECWP,IAAMa,GAAb,WAWE,WAAoB7Z,I,4FAAqB,cAArBA,UAAqB,wJAFuB,IAG9D7D,KAAK0R,MAAQ,IAAI5R,E,QAZrB,mB,EAAA,G,EAAA,oDAeE,WAAaiO,GAAb,yGAEQ4P,EAFR,MAEsB5P,EAAI6P,YAQhB/S,EAA+BkD,EAA/BlD,SAAU9C,EAAqBgG,EAArBhG,MAAO2I,EAAc3C,EAAd2C,UAEnB3Q,EAAS,IAAI8d,KAAJ,IACbnR,WAAY,IAAIoR,IAChBC,SAAU,GACVC,QAAS,EACTC,cAAe,CAAC,IAAIC,MACjBP,IAGL3d,KAAKD,OAASA,EAEdA,EAAOqS,UAAU,WACjBpS,KAAK0R,MAAMyM,UAAUpe,GAEjB8K,GACF9K,EAAOwd,SAASpc,MAAK,kBACnB0J,EAASxJ,SAAQ,SAACiB,EAAGwX,GACnB/Z,EAAOqe,aAAqC,MAA5C,SACK9b,GADL,IAEEwE,WAAkB,IAANgT,WAKpB/Z,EAAOse,kBAAoB,CAAEC,KAAMC,KAEnCxe,EAAOud,WAAW,OAAQ,YAC1Btd,KAAKwe,uBACLze,EAAOud,WAAW,cAAe,eAAgB,CAC/CmB,kBAAmB,CACjB,gEAGJpB,GAAqBtd,GACrBC,KAAK0e,sBA7CP,UAiD0B3e,EAAO4e,eAjDjC,eAiDQvO,EAjDR,OAkDQ3E,EAAiC,GACvChL,OAAOme,OAAOxO,GAAW/O,SAAQ,SAACiB,GAChC,IAAM2J,EACJ3J,EAAE+D,MAAMnE,MACRI,EAAE+D,MAAMnE,KAAK2c,QACbvc,EAAE+D,MAAMnE,KAAK2c,OAAOC,kBAClB7S,GACFR,EAAU/I,KAAKuJ,MAzDrB,UA6DQjM,KAAK+e,cAAchR,EAAI2C,WA7D/B,yBA8DQ1Q,KAAKgf,UAAUjR,EAAIhG,OA9D3B,QA+DE/H,KAAKif,8BAELjf,KAAKkf,gBAAgB,CACnB9O,YACArI,QACA2I,YACAjF,cAIFzL,KAAKmf,sBAzEP,iDAfF,mEA2FE,WAAkB,WAkBhBnf,KAAKD,OAAOqf,OAAO,CAAEC,SAAS,GAAS,CAAEC,cAjBnB,SAACjX,GACrB,IAAMqK,EAASrK,EAAEqK,OAajB,EAAK3S,OAAOwf,UAAU7M,QA1G5B,+DAgHE,WAAiC8M,GAAjC,iGACQC,EAAUrf,SAASyC,uBACvB,eACA,GACI6c,EAAY,WAChB,SAAU,EAAK3f,OAAO4D,YAAa,EAAK5D,OAAO4D,UAAUgc,OAErDC,EAAU,WACdJ,EAAKK,SACLC,OAAOC,SAASC,UAElBP,EAAQ3e,UAAY4e,IAAc,QAAU,QAC5CD,EAAQnW,MAAMwT,QAAU,QACxB2C,EAAQQ,iBAAiB,QAASL,GAbpC,2CAhHF,+EAgIE,WAA8B,WACtBM,EAAa9f,SAASyC,uBAAuB,YAAY,GACzDsd,EAAgB/f,SAASyC,uBAAuB,kBAAkB,GAClEud,EAAoBhgB,SAASyC,uBACjC,0BACA,GACIwd,EAAajgB,SAASyC,uBAC1B,kBACA,GAaFsd,EAAcF,iBAAiB,SAAS,WAHtCG,EAAkBtf,UAAY,GAC9Bof,EAAW5P,UAAUC,OAAO,gBAM9B,IAAM+P,EAAetgB,KAAKD,OAAOwgB,oBAAoB,CACnDpa,KAAM,qDACNyZ,QAFmD,WAhBnC,IACV7D,EACA5V,EADA4V,EAAOgE,SAAShE,KAChB5V,EAAO,EAAKqa,yBAAyBzE,GAC3CsE,EAAWxf,MAAQkb,EACnBqE,EAAkBtf,UAAYqF,EAC9Bsa,aACAP,EAAW5P,UAAUG,IAAI,gBAgB3BzQ,KAAKD,OAAOud,WAAWgD,EAAc,kBA/JzC,wEAkKE,mHACQpV,EAAU,IAAIoG,GAA0BtR,KAAM,CAClDiG,OAAQ,SAACpB,GACHA,GACFsY,GAAsB,cACtB,EAAKpd,OAAOyd,oBAEZ,EAAKzd,OAAO0d,qBAPpB,SAW8Bzd,KAAKD,OAAO2gB,oBAAoBxV,GAX9D,OAWQiH,EAXR,OAYEnS,KAAKD,OAAOud,WAAWnL,EAAe,YACtC8K,GAAqB,cAAc,kBAAM9K,EAAcyN,SAAQ,MAbjE,gDAlKF,+EAkLE,WAA+B,WAEvBe,EAAgB3gB,KAAKD,OAAOwgB,oBAAoB,CACpDpa,KAAM,yDACNR,MAAO,sBACPia,QAJc,kBAAM,EAAKgB,aAM3B5gB,KAAKD,OAAOud,WAAWqD,EAAe,cAzL1C,sCA4LE,SAAiC1c,GAmB/B,MAZa,yDAAH,OAA4DA,EAA5D,gDANK,CACb,CAAElB,GAAI,KAAMsE,KAAM,UAAW3B,KAAM,kBACnC,CAAE3C,GAAI,KAAMsE,KAAM,KAAM3B,KAAM,aAC9B,CAAE3C,GAAI,KAAMsE,KAAM,WAAY3B,KAAM,2BAKjC/E,KACC,SAAC2B,GAAD,sDAAgDA,EAAES,GAAlD,0FAE0BT,EAAEoD,KAF5B,0EAIkBpD,EAAE+E,KAJpB,oCAOD5F,KAAK,IAVA,kBAnMd,0DAkNE,WACEa,EACA8G,GAFF,sFAIM9G,IACI+G,EACJ/G,EAAE8G,gBAAkB9G,EAAE8G,eAAeC,MAChC/G,EAAE8G,eAAeC,MAClB,GACNrJ,KAAKD,OAAO8gB,YAAY,CACtBjY,SAAUtG,EAAEsG,SACZ7F,GAAIT,EAAES,GACNqG,eAAgB,IACdC,MAAO,SACFA,GADA,IAEHyX,QAAQ,EACRtG,YAAa,GACb/I,OAAQ,IAEVsP,YAAY,EACZC,cAAe,SACV3X,GADQ,IAEXyX,QAAQ,EACRtG,YAAa,GACb/I,OAAQ,KAEPrI,MA1BX,gDAlNF,sGAkPE,WAAwBrB,GAAxB,8FACMA,EADN,sBAEoBA,GAFpB,gEAEezF,EAFf,iBAGYtC,KAAK+e,cAAczc,EAAG,CAC1B8H,iBAAkB,CAChB,CACE,YACA,KACAC,KAAKC,MAAMC,KAAKC,MAAQ,KACW,KAAjCC,OAAOzK,KAAK6D,QAAQod,eATlC,sMAlPF,0GAmQE,WAA8BlT,GAA9B,4GAMQmT,EAAmB9gB,SAASyC,uBAAuB,cAAc,GAEjEse,EAAW,kBAAMD,EAAiB5Q,UAAU8Q,SAAS,cACrDC,EAAe,kBAAMH,EAAiB5Q,UAAUG,IAAI,cACpD6Q,EAAkB,kBACtBJ,EAAiB5Q,UAAUC,OAAO,cAXtC,SAaQvQ,KAAKD,OAAOwd,SAbpB,OAeEvd,KAAKwH,KAAO,IAAIgI,GAAiBxP,KAArB,SACP+N,GADO,IAEVhO,OAAQC,KAAKD,UAGTkG,EAAS,SAACpB,IACdA,OAAoBC,IAAXD,EAAuBA,EAASsc,MAEvChE,GAAsB,QACtB,EAAK3V,MAAQ,EAAKA,KAAKgJ,OACvB6Q,MAEA,EAAK7Z,MAAQ,EAAKA,KAAK6I,OACvBiR,MAGJJ,EAAiBjB,iBAAiB,SAAS,WACzCha,OAEFsb,YAAW,WACTtb,MACC,KACHgX,GAAqB,QAAQ,kBAAMhX,GAAO,MArC5C,iDAnQF,kEA2SE,WAEIjG,KAAKwhB,UAAUC,mBACfzhB,KAAKwhB,UAAUC,kBAAkBC,QAEjC1hB,KAAKwhB,UAAUC,kBAAkBC,SAEnC1hB,KAAKD,OAAOma,YAAY,eAlT5B,+BAqTE,SAA0B7R,GAAgB,WACxCrI,KAAK2hB,SACL,IACMC,GADaC,QAAiBxZ,GACV,GAC1B,GAAIuZ,EAAQ,CACV,IAAM1hB,EAAa0hB,EAAO1hB,WAC1BF,KAAKD,OACF+hB,kBAAkBzZ,EAAG,CACpB0Z,WAAY,CAAC,gBAEd5gB,MAAK,SAACe,GACLA,GACEA,EAAK8f,YAAY7gB,MAAK,SAAC8gB,GACrB,EAAKliB,OAAOyR,SAAS,UAAW,CAC9BzO,GAAI,YACJmf,KAAMD,EACNnb,YAAY,EACZuC,MAAO,CAAEF,MAAO,QAAS2X,QAAQ,EAAMtG,YAAa,OAEpD2H,eAAe,EACfzQ,OAAO,EAEPC,aAAc,CACZC,mBAAoB,SAACvJ,GACnB,GAAIA,EAAEpI,QAAS,CACb,IAAM+B,EAAU,EAAK0P,MAAME,mBACzBvJ,EAAEpI,QACFC,GAaF,OAVEgC,EAAK6f,WAAWjf,YAChBZ,EAAK6f,WAAWjf,WAAWyE,QAE3B,EAAKmK,MAAM0Q,WACTpgB,EACAE,EAAK6f,WAAWjf,WAChB8e,EAAO1hB,WACP0hB,EAAOS,WAGJrgB,gBA7V7B,iCAuWE,WAA8B,WAC5BhC,KAAKD,OAAOgH,QAAQC,GAAG,SAAS,WAC9B,EAAKjH,OAAOuiB,eAAe,WAAY,aAEzCtiB,KAAKD,OAAOgH,QAAQC,GAAG,cAAc,SAACqB,GAAD,OAAOA,GAAK,EAAKka,kBAAkBla,W,kBA3W5E,K,6jCCpCAjI,SAAS6f,iBAAiB,oBAAoB,WAE5C,IAAMuC,EAAiBC,MAAMC,UAAU7N,MAAM0E,KAC3CnZ,SAASuiB,iBAAiB,kBAC1B,GAIEH,EAAejb,OAAS,GAE1Bib,EAAenhB,SAAQ,SAACuhB,GACtBA,EAAG3C,iBAAiB,SAAS,WAE3B,IAAM1Q,EAASqT,EAAGC,QAAQtT,OACpBuT,EAAU1iB,SAASsP,eAAeH,GAGxCqT,EAAGtS,UAAUrK,OAAO,aAChB6c,GACFA,EAAQxS,UAAUrK,OAAO,sBCkB5B,IAAM8c,GAAb,WAGE,aAA6C,IAA1Blf,EAA0B,uDAAJ,GAAI,gBAA1BA,UAA0B,4BAC3C7D,KAAKyP,UAAY,IAAIiO,GAAU7Z,G,UAJnC,S,EAAA,G,EAAA,sB,EAAA,yBAOE,WAAaA,GAAb,uFACE7D,KAAK6D,QAAL,SAAoB7D,KAAK6D,SAAYA,GAErC7D,KAAKgjB,cAHP,SAIQhjB,KAAKyP,UAAUwT,OAAOjjB,KAAK6D,SAJnC,+CAPF,E,gLAAA,uEAcE,WACE,IAAMqf,EAAa9iB,SAASsP,eAAe,OACrCyT,EAAoB/iB,SAASsP,eAAe,eAC9CyT,IACFA,EAAkB7Z,MAAMwT,QAAU,QAEhCoG,IACFA,EAAW5Z,MAAMwT,QAAU,c,kBArBjC,KC9BIsG,GAAqB,GACzB,IACEA,GAASC,UACT,MAAO1e,GACPgX,QAAQ2H,KAAK,wDAWH,IAAIP,IADAQ,QAPY,CAC1B3F,WAAY,CACVrO,OAAQ,MACRiU,OAAQ,CAAC,MAAO,OAAQ,OAAQ,SAElCvC,UAAW,IAEsBmC,KAG/BH,W","file":"main-4f064d56d4330ed.js","sourcesContent":["// @ts-ignore\nimport bulmaCarousel from 'bulma-carousel';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { Feature, Geometry } from 'geojson';\nimport { FeatureItemAttachment, ResourceItem } from '@nextgis/ngw-connector';\nimport { prepareColumnValue } from '../Utils';\n\ninterface CollectorDate {\n  year: number;\n  month: number;\n  day: number;\n}\ninterface CollectorTime {\n  hour: number;\n  minute: number;\n  second: number;\n}\n\ninterface KeyValue {\n  key: string;\n  value: any;\n}\n\ntype CollectorProperty = string | number | CollectorDate | CollectorTime;\n\nexport class Popup {\n  private ngwMap!: NgwMap;\n  private _resourceItems: { [resourceId: number]: ResourceItem } = {};\n\n  setNgwMap(ngwMap: NgwMap): void {\n    this.ngwMap = ngwMap;\n  }\n\n  createPopupContent<G extends Geometry = any, P = Record<string, any>>(\n    feature: Feature<G, P>,\n    resourceId?: number,\n  ): HTMLElement {\n    const popupElement = document.createElement('div');\n    const properties = document.createElement('div');\n    properties.className = 'properties';\n    const propertiesList: KeyValue[] = Object.entries(feature.properties).map(\n      ([key, value]) => {\n        return {\n          key,\n          value,\n        };\n      },\n    );\n    properties.innerHTML = this.createPropertiesHtml(propertiesList);\n\n    if (resourceId) {\n      const pre = document.createElement('div');\n      pre.appendChild(properties);\n      popupElement.innerHTML = 'Загрузка';\n      this.updateElementContent(pre, resourceId, feature).then(() => {\n        popupElement.innerHTML = '';\n        popupElement.appendChild(pre);\n      });\n    } else {\n      popupElement.appendChild(properties);\n    }\n    return popupElement;\n  }\n\n  createPropertiesHtml(\n    properties: Array<{ key: string; value: CollectorProperty }>,\n  ): string {\n    let elem = '';\n    properties.forEach(({ key, value }) => {\n      if (typeof value === 'object' && value) {\n        if ('year' in value) {\n          value = [value.day, value.month, value.year].join('.');\n        } else if ('hour' in value) {\n          value = [value.hour, value.minute].join(':');\n        }\n      }\n      elem += `\n      <div class=\"columns is-mobile\">\n        <div class=\"column is-two-fifths\">${key}</div>\n        <div class=\"column\">${prepareColumnValue(value)}</div>\n      </div>\n      `;\n    });\n    return elem;\n  }\n\n  async updateElementContent<\n    G extends Geometry = any,\n    P extends Record<string, any> = Record<string, any>,\n  >(\n    element: HTMLElement,\n    resourceId: number,\n    feature: Feature<G, P>,\n  ): Promise<ResourceItem> {\n    const item = await this._getResourceItem(resourceId);\n    if (item.feature_layer) {\n      const newProperties: KeyValue[] = [];\n      item.feature_layer.fields.forEach((x) => {\n        if (x.grid_visibility) {\n          const property = feature.properties[x.keyname];\n          if (property) {\n            newProperties.push({ key: x.display_name, value: property });\n          }\n        }\n      });\n      const newContent = this.createPropertiesHtml(newProperties);\n      const pre = element.getElementsByClassName('properties')[0];\n      if (pre) {\n        pre.innerHTML = newContent;\n      }\n    }\n    return item;\n  }\n\n  async _addPhotos(\n    element: HTMLElement,\n    attachment: FeatureItemAttachment[],\n    id: number,\n    fid: number,\n  ): Promise<void> {\n    const attachmentElement = document.createElement('div');\n\n    attachmentElement.className = 'carousel attachment';\n    for (const img of attachment) {\n      const width = 300;\n      const height = 300;\n      const figure = document.createElement('figure');\n      figure.className = `image is-${width}x${height}`;\n      const src = await this._loadImage(img, {\n        width,\n        height,\n        id,\n        fid,\n      });\n      const imgElem = document.createElement('img');\n      imgElem.src = src;\n      figure.appendChild(imgElem);\n      attachmentElement.appendChild(figure);\n    }\n    element.appendChild(attachmentElement);\n    bulmaCarousel.attach(attachmentElement);\n  }\n\n  private async _getResourceItem(resourceId: number) {\n    if (!this._resourceItems[resourceId]) {\n      const item = await this.ngwMap.connector.get('resource.item', null, {\n        id: resourceId,\n      });\n      this._resourceItems[resourceId] = item;\n    }\n    return this._resourceItems[resourceId];\n  }\n\n  private _loadImage(\n    img: FeatureItemAttachment,\n    options: { id: number; fid: number; width?: number; height?: number },\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const { width, height } = options;\n      const url =\n        '/api/resource/' +\n        options.id +\n        '/feature/' +\n        options.fid +\n        `/attachment/${img.id}/image` +\n        (width && height ? `?size=${width}x${height}` : '');\n      this.ngwMap.connector\n        .makeQuery(url, {}, { responseType: 'blob' })\n        .then((blob) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            resolve(reader.result as string);\n          };\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n}\n","export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function objToUrlStr(obj: { [param: string]: any }): string {\n  let str = '';\n  for (const key in obj) {\n    if (str !== '') {\n      str += '&';\n    }\n    str += key + '=' + encodeURIComponent(obj[key]);\n  }\n  return str;\n}\n\nfunction isValidUrl(str: string): boolean {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function prepareColumnValue(value: unknown): unknown | string {\n  if (typeof value === 'string') {\n    if (isValidUrl(value)) {\n      return `<a href=\"${value}\" target=\"_blank\">${value}</a>`;\n    }\n  }\n  return value;\n}\n","import './CollapsiblePanel.css';\n\ntype GetHTML = () => HTMLElement;\n\nexport interface CollapsiblePanelOptions {\n  title?: string;\n  content: HTMLElement | GetHTML;\n  open?: boolean;\n  parent?: HTMLElement;\n}\n\nexport class CollapsiblePanel {\n  private readonly _container = document.createElement('div');\n  private _content?: HTMLElement;\n  private _toggle?: HTMLElement;\n  private status: boolean;\n\n  constructor(private options: CollapsiblePanelOptions) {\n    this.status = this.options.open !== undefined ? this.options.open : true;\n    this._updateContainer();\n    if (this.options.parent) {\n      this.options.parent.appendChild(this.getContainer());\n    }\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  open(): void {\n    if (this._content && !this._content.innerHTML) {\n      this._updateContent();\n    }\n    // this._container.appendChild(this._content);\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-up');\n    }\n    this.status = true;\n  }\n\n  close(): void {\n    this._cleanContent();\n    if (this._toggle) {\n      this._toggle.innerHTML = this._getToggleButtonHtml('fas fa-chevron-down');\n    }\n    this.status = false;\n  }\n\n  toggle(): void {\n    if (this.status) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _getToggleButtonHtml(icon?: string) {\n    return `\n    <a class=\"button is-small\">\n    <span class=\"icon is-small\">\n      <i class=\"${icon}\"></i>\n    </span>\n    </a>\n    `;\n  }\n\n  private _updateContainer() {\n    this._container.innerHTML = '';\n    if (this.options.title) {\n      const header = this._createHeader();\n      this._container.appendChild(header);\n    }\n    const content = document.createElement('div');\n    content.className = 'panel-content';\n    this._content = content;\n    this._container.appendChild(content);\n\n    if (this.status) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  private _createHeader() {\n    const header = document.createElement('div');\n    header.className = 'level is-mobile panel-header';\n\n    const leftLevel = document.createElement('div');\n    leftLevel.className = 'level-left';\n\n    const title = document.createElement('div');\n    title.className = 'level-item panel-header__title';\n    title.innerHTML = this.options.title || '';\n    leftLevel.appendChild(title);\n\n    const rightLevel = document.createElement('div');\n    rightLevel.className = 'level-right';\n    const toggle = document.createElement('div');\n    toggle.className = 'level-item panel-header__toggle';\n    rightLevel.appendChild(toggle);\n\n    toggle.onclick = () => {\n      this.toggle();\n    };\n    this._toggle = toggle;\n\n    header.appendChild(leftLevel);\n    header.appendChild(rightLevel);\n\n    return header;\n  }\n\n  private _cleanContent() {\n    if (this._content) {\n      this._content.innerHTML = '';\n    }\n  }\n\n  private _updateContent() {\n    this._cleanContent();\n    if (this._content) {\n      const html =\n        typeof this.options.content === 'function'\n          ? this.options.content()\n          : this.options.content;\n\n      this._content.appendChild(html);\n    }\n    return this._content;\n  }\n}\n","import { WebMap } from '@nextgis/webmap';\nimport { CheckProperty, ChangeEvent } from '@nextgis/item';\nimport { NgwWebmapItem, TreeGroup, TreeLayer } from '@nextgis/ngw-kit';\n\nexport class WebmapTreeItem {\n  private _container?: HTMLElement;\n\n  constructor(layer: NgwWebmapItem) {\n    const container = this._createTreeItem(layer);\n    if (container) {\n      this._container = container;\n    }\n  }\n\n  getContainer(): HTMLElement | undefined {\n    return this._container;\n  }\n\n  private _createTreeBranch(layers: NgwWebmapItem[]) {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item-children';\n    layers.forEach((x) => {\n      if (x.item) {\n        const item = this._createTreeItem(x);\n        if (item) {\n          elem.appendChild(item);\n        }\n      }\n    });\n    return elem;\n  }\n\n  private _createTreeItem(layer: NgwWebmapItem) {\n    const item: TreeGroup | TreeLayer = layer.item;\n    if (!item) {\n      return false;\n    }\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    if (item.display_name) {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'checkbox');\n      const value = item.item_type === 'layer' ? item.layer_enabled : true;\n      input.checked = value;\n\n      const visibility = layer.properties.property(\n        'visibility',\n      ) as CheckProperty;\n      if (visibility) {\n        visibility.emitter.on('change', (ev: ChangeEvent) => {\n          input.checked = ev.value;\n        });\n        input.onclick = () => {\n          visibility.set(input.checked, {\n            propagation: WebMap.keys.pressed('ctrl'),\n          });\n        };\n      }\n\n      const name = document.createElement('span');\n      name.innerHTML = item.display_name;\n\n      elem.appendChild(input);\n      elem.appendChild(name);\n    }\n\n    if (\n      item.item_type === 'group' ||\n      (item.item_type === 'root' && item.children.length)\n    ) {\n      const children = layer.tree.getChildren() as NgwWebmapItem[];\n      const treeBranch = this._createTreeBranch(children.reverse());\n      elem.appendChild(treeBranch);\n    }\n    return elem;\n  }\n}\n","import './FiresContainer.css';\n\nimport { defined } from '@nextgis/utils';\n\nimport type { LayerAdapter, NgwMap } from '@nextgis/ngw-map';\nimport type { CirclePaint } from '@nextgis/paint';\nimport type { ResourceAdapter, NgwLayerOptions } from '@nextgis/ngw-kit';\nimport type { FireResource } from '../../App';\n\nexport interface FiresContainerOptions {\n  ngwMap: NgwMap;\n  fires: NgwLayerOptions<'GEOJSON'>[];\n}\n\nexport abstract class FiresContainer {\n  protected readonly ngwMap: NgwMap;\n  protected _container: HTMLElement;\n\n  constructor(protected options: FiresContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  protected _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'fires-contentainer panel-content-padding ';\n\n    const fires = document.createElement('div');\n    fires.className = 'fires-contentainer__layers';\n    this.options.fires.forEach((f) => {\n      this._createFireItem(f, fires);\n    });\n    container.appendChild(fires);\n\n    return container;\n  }\n\n  protected onLayerAdd(id: string, cb: (layer: ResourceAdapter) => void): void {\n    const ngwMap = this.options.ngwMap;\n    const layer = ngwMap && (ngwMap.getLayer(id) as ResourceAdapter);\n    if (layer) {\n      cb(layer);\n    } else {\n      const onLayerAdd = (e: LayerAdapter) => {\n        if (e.id === id) {\n          cb(e as ResourceAdapter);\n          this.ngwMap.emitter.off('layer:add', onLayerAdd);\n        }\n      };\n      this.ngwMap.emitter.on('layer:add', onLayerAdd);\n    }\n  }\n\n  private _createFireItem(fire: FireResource, container: HTMLElement): void {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item';\n    const id = fire.id;\n    if (!defined(id)) return;\n\n    const createItem = (layer_: ResourceAdapter): void => {\n      const item = layer_.item;\n\n      if (item) {\n        const input = document.createElement('input');\n        input.setAttribute('type', 'checkbox');\n\n        input.checked = true;\n\n        // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n        //   input.checked = ev.value;\n        // });\n        input.onclick = () => {\n          this.ngwMap.toggleLayer(id, input.checked);\n        };\n\n        const name = document.createElement('span');\n        const displayName = item.resource.display_name.split('__')[0];\n        name.innerHTML = displayName.replace('fires', '').trim();\n        const symbol = this._createSymbol(fire);\n        elem.appendChild(input);\n        elem.appendChild(symbol);\n        elem.appendChild(name);\n        container.appendChild(elem);\n      }\n    };\n    this.onLayerAdd(id, (layer) => createItem(layer));\n  }\n\n  private _createSymbol(fire: FireResource): HTMLElement {\n    const symbol = document.createElement('span');\n    symbol.className = 'item-symbol';\n    const color = (fire.adapterOptions?.paint as CirclePaint).color;\n    if (typeof color === 'string') {\n      symbol.style.color = color;\n      symbol.style.borderColor = color;\n      symbol.style.backgroundColor = color;\n    }\n    return symbol;\n  }\n}\n","import './FiresContainer.css';\n\nimport { defined } from '@nextgis/utils';\nimport { VectorResourceAdapter } from '@nextgis/ngw-kit';\nimport { FiresContainer } from './FiresContainer';\n\nconst SELECT = [\n  ['24', '24 часа'],\n  ['48', '48 часов'],\n  ['72', '72 часа'],\n  ['168', 'неделя'],\n];\n\nexport class FirmsFiresContainer extends FiresContainer {\n  _createContainer(): HTMLElement {\n    const container = super._createContainer();\n\n    const selector = this._createSelector();\n    container.insertBefore(selector, container.firstChild);\n\n    return container;\n  }\n\n  private _createSelector() {\n    const elem = document.createElement('div');\n    const label = document.createElement('label');\n\n    label.appendChild(document.createTextNode('Просмотр термоточек: '));\n    const selector = document.createElement('select');\n\n    SELECT.forEach((x) => {\n      const option = document.createElement('option');\n      option.value = x[0];\n      option.text = x[1];\n      selector.appendChild(option);\n    });\n\n    selector.onchange = () => {\n      this.options.fires.forEach((x) => {\n        const id = x.id;\n        if (defined(id)) {\n          const layer = this.ngwMap.getLayer(id) as VectorResourceAdapter;\n          if (layer.propertiesFilter) {\n            layer.propertiesFilter([\n              [\n                'timestamp',\n                'ge',\n                Math.floor(Date.now() / 1000) - Number(selector.value) * 3600,\n              ],\n            ]);\n          }\n        }\n      });\n    };\n\n    label.appendChild(selector);\n    elem.appendChild(label);\n    return elem;\n  }\n}\n","import './BaseMapsContainer.css';\n\nimport { NgwMap, LayerAdapter } from '@nextgis/ngw-map';\n\nexport interface BaseMapsContainerOptions {\n  ngwMap: NgwMap;\n}\n\nexport class BaseMapsContainer {\n  private readonly ngwMap: NgwMap;\n  private _container: HTMLElement;\n  private _baseMapsContainer?: HTMLElement;\n\n  constructor(private options: BaseMapsContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n    this.ngwMap.emitter.on('layer:add', (e) => {\n      if (this.ngwMap.isBaseLayer(e)) {\n        this._updateBaseMapContainer();\n      }\n    });\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  private _createContainer() {\n    const container = document.createElement('div');\n    container.className = 'basemaps-contentainer panel-content-padding control';\n\n    const basemaps = document.createElement('div');\n    basemaps.className = 'basemaps-contentainer__layers';\n    this._baseMapsContainer = basemaps;\n    container.appendChild(basemaps);\n    this._updateBaseMapContainer();\n    return container;\n  }\n\n  private _updateBaseMapContainer() {\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.innerHTML = '';\n    }\n    // first checkbox to remove any basemap\n    this._createBaseMapItem();\n    this.ngwMap.getBaseLayers().forEach((x) => {\n      const layer = this.ngwMap.getLayer(x);\n      if (layer) {\n        this._createBaseMapItem(layer);\n      }\n    });\n  }\n\n  private _createBaseMapItem(baseMap?: LayerAdapter) {\n    const control = document.createElement('div');\n    control.className = 'control';\n    const elem = document.createElement('label');\n    elem.className = 'radio basemap-container__item';\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'radio');\n    input.setAttribute('name', 'basemap');\n\n    input.checked = !!baseMap && this.ngwMap.isLayerVisible(baseMap);\n\n    // visibility.emitter.on('change', (ev: CheckChangeEvent) => {\n    //   input.checked = ev.value;\n    // });\n    input.onclick = () => {\n      if (baseMap && baseMap.id) {\n        this.ngwMap.toggleLayer(baseMap.id, input.checked);\n      } else {\n        const activeBaseLayer = this.ngwMap.getActiveBaseLayer();\n        if (activeBaseLayer) {\n          this.ngwMap.hideLayer(activeBaseLayer);\n        }\n      }\n    };\n    const layerName = baseMap && (baseMap.name || baseMap.options.name);\n    const displayName = layerName || 'Blank';\n    const name = document.createTextNode(displayName);\n\n    elem.appendChild(input);\n\n    elem.appendChild(name);\n\n    control.appendChild(elem);\n    if (this._baseMapsContainer) {\n      this._baseMapsContainer.appendChild(control);\n    }\n  }\n}\n","import './BookmarksContainer.css';\n\nimport { Bookmark } from 'src/App';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { ResourceHierarchy, FeatureItem } from '@nextgis/ngw-connector';\nimport { GeoJSON, Map } from 'leaflet';\nimport { Polygon } from 'geojson';\n\nexport interface BookmarksContainerOptions {\n  ngwMap: NgwMap<Map>;\n  bookmarks: ResourceHierarchy[];\n}\n\nexport class BookmarksContainer {\n  private readonly ngwMap: NgwMap<Map>;\n  private _container: HTMLElement;\n\n  constructor(private options: BookmarksContainerOptions) {\n    this.ngwMap = options.ngwMap;\n    this._container = this._createContainer();\n  }\n\n  getContainer(): HTMLElement {\n    return this._container;\n  }\n\n  _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'bookmarks-contentainer panel-content-padding ';\n\n    const bookmarksContainer = document.createElement('div');\n    bookmarksContainer.className = 'bookmarks-contentainer__layers';\n    this.options.bookmarks.forEach((b) => {\n      this.ngwMap.connector\n        .get('resource.item', null, { id: b.id })\n        .then((resource) => {\n          if (resource.feature_layer) {\n            const labelField = resource.feature_layer.fields.find(\n              (x) => x.label_field,\n            );\n            if (labelField) {\n              this.ngwMap\n                .fetchNgwLayerItems<Bookmark, Polygon>({ resourceId: b.id })\n                .then((items) => {\n                  items.forEach((x) => {\n                    const elem = this._createBookmarkItem(\n                      x,\n                      labelField.keyname as keyof Bookmark,\n                    );\n                    container.appendChild(elem);\n                  });\n                });\n            }\n          }\n        });\n    });\n    container.appendChild(bookmarksContainer);\n\n    return container;\n  }\n\n  _createBookmarkItem<B extends Bookmark = Bookmark>(\n    bookmark: FeatureItem<B, Polygon>,\n    nameField: keyof B = 'name',\n  ): HTMLElement {\n    const elem = document.createElement('div');\n    elem.className = 'tree-container__item bookmark';\n    const bookmarkBlock = document.createElement('div');\n    const nameValue = bookmark.fields[nameField];\n    bookmarkBlock.innerHTML = String(nameValue);\n    bookmarkBlock.onclick = () => {\n      const geoJson = new GeoJSON(bookmark.geom);\n      const lMap = this.ngwMap.mapAdapter.map;\n      lMap && lMap.fitBounds(geoJson.getBounds());\n    };\n    elem.appendChild(bookmarkBlock);\n    return elem;\n  }\n}\n","import { fetchNgwLayerItems } from '@nextgis/ngw-kit';\n\nimport { createCalendar } from './createCalendar';\nimport { FiresContainer } from './FiresContainer';\n\nimport type { ResourceAdapter, FetchNgwItemsOptions } from '@nextgis/ngw-kit';\nimport type { FeatureItem, NgwDateFormat } from '@nextgis/ngw-connector';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { CreateCalendarOptions } from './createCalendar';\nexport class UserFiresContainer extends FiresContainer {\n  protected _createContainer(): HTMLElement {\n    const container = super._createContainer();\n\n    const calendarWrapper = this._createCalendar();\n    container.insertBefore(calendarWrapper, container.firstChild);\n    return container;\n  }\n\n  private _createCalendar(): HTMLElement {\n    const calendarWrapper = document.createElement('div');\n    const fireItem = this.options.fires[0];\n    const connector = this.options.ngwMap.connector;\n    const resource = fireItem.resource;\n    if (fireItem && resource && connector) {\n      const dateField = fireItem.adapterOptions?.props?.dateField || 'field_9';\n      connector.getResourceIdOrFail(resource).then((resourceId) => {\n        const extremeReqOpt: FetchNgwItemsOptions = {\n          resourceId,\n          fields: [dateField],\n          geom: false,\n          connector,\n        };\n        const extremePromises = [\n          fetchNgwLayerItems({ ...extremeReqOpt, orderBy: [dateField] }),\n          fetchNgwLayerItems({ ...extremeReqOpt, orderBy: ['-' + dateField] }),\n        ];\n        Promise.all(extremePromises).then(([minItem, maxItem]) => {\n          this.onLayerAdd(fireItem.id || String(fireItem.resource), (layer) => {\n            const block = this._buildCalendarBlock(\n              layer,\n              [minItem, maxItem],\n              dateField,\n            );\n            calendarWrapper.appendChild(block);\n          });\n        });\n      });\n    }\n\n    return calendarWrapper;\n  }\n\n  private _buildCalendarBlock(\n    layer: ResourceAdapter,\n    extremeItems: FeatureItem[][],\n    dateField: string,\n  ) {\n    // const [min, max]: (null | Date)[] = extremeItems.map((items) => {\n    //   const item = items[0];\n    //   if (item) {\n    //     const ngwDate = item.fields[dateField] as NgwDateFormat;\n    //     if (ngwDate) {\n    //       return this._parseNgwDate(ngwDate);\n    //     }\n    //   }\n    //   return null;\n    // });\n    const opt: CreateCalendarOptions = {\n      onChange: (e) => {\n        const filter: PropertiesFilter = [];\n        if (e.start) {\n          filter.push([dateField, 'ge', e.start.toISOString()]);\n        }\n        if (e.end) {\n          filter.push([dateField, 'le', e.end.toISOString()]);\n        }\n        if (layer.propertiesFilter) {\n          layer.propertiesFilter(filter);\n        }\n      },\n    };\n    // if (min) {\n    //   opt.minDate = min;\n    //   opt.startDate = min;\n    // }\n    // if (max) {\n    //   opt.maxDate = max;\n    //   opt.endDate = max;\n    // }\n    return createCalendar(opt);\n  }\n\n  private _parseNgwDate(dt: NgwDateFormat): Date {\n    return new Date(dt.year, dt.month, dt.day);\n  }\n}\n","import 'bulma-calendar/dist/css/bulma-calendar.css';\nimport bulmaCalendar from 'bulma-calendar';\nimport { subMonths } from 'date-fns';\n\nexport interface CreateCalendarOptions extends bulmaCalendar.Options {\n  onChange: (val: { start?: Date; end?: Date }) => void;\n}\n\nexport function createCalendar(options: CreateCalendarOptions): HTMLElement {\n  const html = document.createElement('div');\n  html.className = 'calendar__content';\n\n  const input = document.createElement('input');\n  input.setAttribute('type', 'date');\n  html.appendChild(input);\n  const today = new Date();\n\n  const { onChange, ...opt } = options;\n\n  const calendar = bulmaCalendar.attach(input, {\n    isRange: true,\n    lang: 'ru',\n    startDate: subMonths(today, 1),\n    endDate: today,\n    maxDate: today,\n    dateFormat: 'yyyy-MM-dd',\n    displayMode: 'dialog',\n    showTodayButton: false,\n    cancelLabel: 'Закрыть',\n    clearLabel: 'Сбросить',\n    enableMonthSwitch: true,\n    enableYearSwitch: false,\n    ...opt,\n  })[0];\n  calendar.on('select', () => {\n    // const val = calendar.value(); // string - string\n    onChange({ ...calendar.date });\n  });\n\n  return html;\n}\n","import './MapSettingsPanel.css';\n// @ts-ignore\nimport Sidebar from 'leaflet-sidebar';\nimport 'leaflet-sidebar/src/L.Control.Sidebar.css';\n\nimport { NgwLayers } from '@nextgis/ngw-map';\n\nimport { ActionMap } from '../ActionMap';\nimport { CollapsiblePanel } from './CollapsiblePanel';\nimport { WebmapTreeItem } from './WebmapTreeItem';\nimport { FirmsFiresContainer } from './FirmsFiresContainer';\nimport { BaseMapsContainer } from './BaseMapsContainer';\nimport { BookmarksContainer } from './BookmarksContainer';\nimport { UserFiresContainer } from './UserFiresContainer';\n\nimport type { MapSettingsPanelOptions } from './interfaces';\n\nconst OPTIONS: Partial<MapSettingsPanelOptions> = {\n  target: 'tree',\n  // width: 300\n};\n\nexport class MapSettingsPanel {\n  options: MapSettingsPanelOptions;\n\n  sidebar: Sidebar;\n\n  private _container: HTMLElement;\n  private _target?: HTMLElement;\n\n  private ngwLayers!: NgwLayers;\n\n  constructor(private actionMap: ActionMap, options: MapSettingsPanelOptions) {\n    this.options = { ...OPTIONS, ...options };\n    if (typeof this.options.target === 'string') {\n      const target = document.getElementById(this.options.target);\n      if (target) {\n        this._target = target;\n      } else {\n        throw new Error(\n          `No element with ID #${this.options.target} in document for webmap tree`,\n        );\n      }\n    } else if (this.options.target instanceof HTMLElement) {\n      this._target = this.options.target;\n    }\n    this.sidebar = new Sidebar(this._target, {\n      closeButton: false,\n      position: 'left',\n      autoPan: false,\n    });\n    this.sidebar.addTo(this.actionMap.ngwMap.mapAdapter.map);\n\n    this.ngwLayers = this.options.ngwLayers;\n\n    this._container = this._createContainer();\n    if (!this.options.status) {\n      this.hide();\n    }\n    this._target && this._target.appendChild(this._container);\n  }\n\n  show(): void {\n    this._container.classList.remove('hidden');\n    this.sidebar.show();\n  }\n\n  hide(): void {\n    this.sidebar.hide();\n    this._container.classList.add('hidden');\n  }\n\n  private _createContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'tree-container';\n\n    if (this.options.width !== undefined) {\n      container.style.width = this.options.width + 'px';\n    }\n\n    if (this.options.userFires) {\n      new CollapsiblePanel({\n        title: 'Пожары',\n        content: () => this._createUserFiresContainer(),\n        parent: container,\n      });\n    }\n    if (this.options.fires) {\n      new CollapsiblePanel({\n        title: 'Термоточки (FIRMS)',\n        content: () => this._createFiresContainer(),\n        parent: container,\n      });\n    }\n    new CollapsiblePanel({\n      title: 'Базовые слои',\n      content: () => this._createNgwLayers(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Подложки',\n      content: () => this._createBasemapsContainer(),\n      open: false,\n      parent: container,\n    });\n    new CollapsiblePanel({\n      title: 'Закладки',\n      content: () => this._createBookmarksContainer(),\n      open: false,\n      parent: container,\n    });\n\n    return container;\n  }\n\n  private _createNgwLayers() {\n    const container = document.createElement('div');\n    container.className = 'webmap-tree-container';\n    for (const n in this.ngwLayers) {\n      const ngwLayer = this.ngwLayers[n];\n      const tree = new WebmapTreeItem(ngwLayer.layer.layer);\n      const treeContainer = tree.getContainer();\n      if (treeContainer) {\n        container.appendChild(treeContainer);\n      }\n    }\n    return container;\n  }\n\n  private _createBookmarksContainer() {\n    const container = document.createElement('div');\n    const bookmarks = this.options.bookmarks;\n    if (bookmarks) {\n      const bookmarkContainer = new BookmarksContainer({\n        bookmarks,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(bookmarkContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createUserFiresContainer() {\n    const container = document.createElement('div');\n    if (this.options.userFires) {\n      const firesContainer = new UserFiresContainer({\n        fires: [this.options.userFires],\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createFiresContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.fires;\n    if (fires) {\n      const firesContainer = new FirmsFiresContainer({\n        fires,\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(firesContainer.getContainer());\n    }\n    return container;\n  }\n\n  private _createBasemapsContainer() {\n    const container = document.createElement('div');\n    const fires = this.options.fires;\n    if (fires) {\n      const baseMapsContainer = new BaseMapsContainer({\n        ngwMap: this.options.ngwMap,\n      });\n      container.appendChild(baseMapsContainer.getContainer());\n    }\n    return container;\n  }\n}\n","import './GetCoordinateControl.css';\nimport '../ToggleControl.css';\nimport { ActionMap } from '../ActionMap';\nimport {\n  ToggleControlOptions,\n  MapClickEvent,\n  VectorLayerAdapter,\n  LayerDefinition,\n} from '@nextgis/ngw-map';\nimport { Clipboard } from '@nextgis/utils';\n\nimport { EventEmitter } from 'events';\nimport { Feature, Point } from 'geojson';\n\nexport interface GetCoordinatePanelControlOptions {\n  toggle?: (status: boolean) => void;\n}\n\nexport class GetCoordinatePanelControl implements ToggleControlOptions {\n  html = '<i class=\"fas fa-map-pin btn-control-icon \"></i>';\n  title = {\n    off: 'Полученить координаты с карты',\n    on: 'Выключить режим получения координат с карты',\n  };\n\n  addClass = 'toggle-control webmap-tree-control';\n  addClassOn = 'active';\n\n  status = false;\n\n  emitter = new EventEmitter();\n\n  private _toggle?: (status: boolean) => void;\n  private __onMapClick?: (e: MapClickEvent) => void;\n  private _layer!: VectorLayerAdapter;\n\n  constructor(\n    private actionMap: ActionMap,\n    options: GetCoordinatePanelControlOptions = {},\n  ) {\n    this._toggle = options.toggle;\n    this.actionMap.ngwMap\n      .addLayer('GEOJSON', {\n        id: 'show-coordinate-click',\n        visibility: true,\n        paint: { radius: 6 },\n        popup: true,\n        popupOptions: {\n          createPopupContent: (d: LayerDefinition<Feature<Point>>) => {\n            if (d.feature) {\n              return this._createPopupContent(\n                d.feature.geometry.coordinates.map((x) => x.toFixed(5)),\n              );\n            }\n          },\n        },\n      })\n      .then((layer) => {\n        if (layer) {\n          this._layer = layer;\n        }\n      });\n  }\n\n  onClick(status?: boolean): void {\n    this.toggleControl(status);\n  }\n\n  show(): void {\n    this.actionMap.ngwMap.setCursor('crosshair');\n    this._removeClickListener();\n    this.__onMapClick = (e: MapClickEvent) => this._onMapClick(e);\n    this.actionMap.ngwMap.emitter.on('click', this.__onMapClick);\n  }\n\n  hide(): void {\n    this.actionMap.ngwMap.setCursor('default');\n    this._removeClickListener();\n    this.actionMap.ngwMap.clearLayerData(this._layer);\n  }\n\n  private _removeClickListener() {\n    if (this.__onMapClick) {\n      this.actionMap.ngwMap.emitter.off('click', this.__onMapClick);\n      this.__onMapClick = undefined;\n    }\n  }\n\n  private _onMapClick(e: MapClickEvent) {\n    const feature: Feature<Point> = {\n      type: 'Feature',\n      properties: {},\n      geometry: { type: 'Point', coordinates: e.lngLat },\n    };\n    this.actionMap.ngwMap.setLayerData(this._layer, feature);\n  }\n\n  private toggleControl(status?: boolean) {\n    status = status !== undefined ? status : !this.status;\n    if (status) {\n      this.show();\n    } else {\n      this.hide();\n    }\n\n    this.status = status;\n    if (this._toggle) {\n      this._toggle(status);\n    }\n    this.emitter.emit('status', this.status);\n  }\n\n  private _createPopupContent([lng, lat]: string[]) {\n    const content = document.createElement('div');\n    const latLngStr = `${lat}, ${lng}`;\n    content.innerHTML = `\n    <span>Широта/Долгота:</span>\n    <span class=\"lat-lng-coord\"> ${latLngStr}</span>\n    <a href=\"#\" class=\"copy-to-clipboard\">\n    <i class=\"far fa-clipboard\"></i>\n    </a>`;\n    const clipBoardLink = content.getElementsByClassName(\n      'copy-to-clipboard',\n    )[0] as HTMLLinkElement;\n    clipBoardLink.onclick = () => {\n      Clipboard.copy(latLngStr);\n    };\n\n    return content;\n  }\n}\n","import type { Messages } from './interfaces';\n\nexport const I18N: Record<string, Messages> = {\n  en: {\n    linearMeasurement: 'Distance measurement',\n    areaMeasurement: 'Area measurement',\n    start: 'Start',\n    meter: 'm',\n    kilometer: 'km',\n    squareMeter: 'm²',\n    squareKilometers: 'km²',\n  },\n  ru: {\n    linearMeasurement: 'Измерение расстояния',\n    areaMeasurement: 'Измерение площади',\n    start: 'Старт',\n    meter: 'м',\n    kilometer: 'км',\n    squareMeter: 'м²',\n    squareKilometers: 'км²',\n  },\n};\n","import type { LatLng } from 'leaflet';\nimport type { Messages } from './interfaces';\n\nexport function toRadians(deg: number): number {\n  return deg * (Math.PI / 180);\n}\nexport function square(x: number): number {\n  return Math.pow(x, 2);\n}\nexport function getDistanceString(\n  distance: number,\n  messages: { meter: string; kilometer: string },\n): string {\n  return distance < 1e3\n    ? numberFormat(distance, 0) + ' ' + messages.meter\n    : numberFormat(distance / 1e3, 2) + ' ' + messages.kilometer;\n}\n\nexport function getDistance(latlng1: LatLng, latlng2: LatLng): number {\n  const earthRadius = 6378137; // radius of the earth in meter\n  const lat1 = toRadians(latlng1.lat);\n  const lat2 = toRadians(latlng2.lat);\n  const lat_dif = lat2 - lat1;\n  const lng_dif = toRadians(latlng2.lng - latlng1.lng);\n  const a =\n    square(Math.sin(lat_dif / 2)) +\n    Math.cos(lat1) * Math.cos(lat2) * square(Math.sin(lng_dif / 2));\n  return 2 * earthRadius * Math.asin(Math.sqrt(a));\n}\nexport function getAreaString(points: LatLng[], messages: Messages): string {\n  const a = Math.round(getArea(points));\n  return a < 1e6\n    ? numberFormat(a, 0) + ' ' + messages.squareMeter\n    : numberFormat(a / 1e6, 2) + ' ' + messages.squareKilometers;\n}\nexport function getArea(points: LatLng[]): number {\n  const earthRadius = 6378137;\n  let area = 0;\n  const len = points.length;\n  let x1 = points[len - 1].lng;\n  let y1 = points[len - 1].lat;\n  for (let i = 0; i < len; i++) {\n    const x2 = points[i].lng;\n    const y2 = points[i].lat;\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return Math.abs((area * earthRadius * earthRadius) / 2.0);\n}\nexport function numberFormat(number: number, decimals = 2): string {\n  const thousandsSep = ',';\n  const sign = number < 0 ? '-' : '';\n  const num = Math.abs(+number || 0);\n  const intPart = parseInt(num.toFixed(decimals), 10) + '';\n  const j = intPart.length > 3 ? intPart.length % 3 : 0;\n\n  return [\n    sign,\n    j ? intPart.substr(0, j) + thousandsSep : '',\n    intPart.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSep),\n    decimals\n      ? '.' +\n        Math.abs(num - Number(intPart))\n          .toFixed(decimals)\n          .slice(2)\n      : '',\n  ].join('');\n}\n","import { Layer, Point, Util, Browser, DomUtil, latLng } from 'leaflet';\n\nimport type { Map, LayerOptions, LatLng, ZoomAnimEvent } from 'leaflet';\n\nexport interface MeasureLabelOptions extends LayerOptions {\n  offset?: Point;\n  latlng: null | LatLng;\n  content: string;\n  className: string;\n}\n\nexport class MeasureLabel extends Layer {\n  options: MeasureLabelOptions = {\n    latlng: null,\n    content: '',\n    className: '',\n  };\n\n  protected _map!: Map;\n  private _offset = new Point(0, 30);\n  private _container?: HTMLElement;\n  private _contentNode?: HTMLElement;\n  private _closeButton?: HTMLElement;\n  private _containerBottom?: number;\n  private _containerLeft?: number;\n\n  constructor(options: MeasureLabelOptions) {\n    super(options);\n    Util.setOptions(this, options);\n    if (this.options.offset) {\n      this._offset = this.options.offset;\n    }\n  }\n  onAdd(map: Map): this {\n    this._map = map;\n    this._container || this._initLayout();\n    if (this._container) {\n      map.getPanes().popupPane.appendChild(this._container);\n    }\n    map.on('viewreset', this._updatePosition, this);\n    if (Browser.any3d) {\n      map.on('zoomanim', this._zoomAnimation, this);\n    }\n    this._update();\n    return this;\n  }\n  addTo(map: Map): this {\n    map.addLayer(this);\n    return this;\n  }\n  onRemove(map: Map): this {\n    if (this._container) {\n      map.getPanes().popupPane.removeChild(this._container);\n    }\n    map.off('viewreset', this._updatePosition, this);\n    map.off('zoomanim', this._zoomAnimation, this);\n    (this._map as any) = null;\n    return this;\n  }\n  setLatLng(latlng: LatLng): this {\n    this.options.latlng = latLng(latlng);\n    this._updatePosition();\n    return this;\n  }\n  setContent(content: string): this {\n    this.options.content = content;\n    this._updateContent();\n    return this;\n  }\n  enableClose(): HTMLElement {\n    this._closeButton = DomUtil.create('span', 'close', this._container);\n    this._closeButton.innerHTML =\n      '<svg class=\"icon\" viewBox=\"0 0 40 40\"><path stroke=\"#FF0000\" stroke-width=\"3\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" /></svg>';\n    return this._closeButton;\n  }\n  private _initLayout(): void {\n    this._container = DomUtil.create('div', this.options.className);\n    this._contentNode = DomUtil.create('div', 'content', this._container);\n  }\n  private _update(): void {\n    this._map && (this._updateContent(), this._updatePosition());\n  }\n  private _updateContent(): void {\n    if (this._contentNode && this.options.content) {\n      if (typeof this.options.content == 'string') {\n        this._contentNode.innerHTML = this.options.content;\n      } else {\n        this._contentNode.innerHTML = '';\n        this._contentNode.appendChild(this.options.content);\n      }\n    }\n  }\n  private _updatePosition(): void {\n    if (this.options.latlng && this._container) {\n      const point = this._map.latLngToLayerPoint(this.options.latlng);\n      const is3D = Browser.any3d;\n      const offset = this._offset;\n      is3D && DomUtil.setPosition(this._container, point);\n      this._containerBottom = -offset.y - (is3D ? 0 : point.y);\n      this._containerLeft = offset.x + (is3D ? 0 : point.x);\n      this._container.style.bottom = this._containerBottom + 'px';\n      this._container.style.left = this._containerLeft + 'px';\n    }\n  }\n  private _zoomAnimation(a: ZoomAnimEvent): void {\n    if (this._container) {\n      const point = (this._map as any)._latLngToNewLayerPoint(\n        this.options.latlng,\n        a.zoom,\n        a.center,\n      ) as Point;\n      DomUtil.setPosition(this._container, point);\n    }\n  }\n}\n","import {\n  Handler,\n  Util,\n  DomUtil,\n  DomEvent,\n  Polygon,\n  Polyline,\n  CircleMarker,\n} from 'leaflet';\n\nimport { I18N } from './i18n';\nimport { getAreaString, getDistance, getDistanceString } from './utils';\nimport { MeasureLabel } from './MeasureLabel';\n\nimport type { Map, LatLng, LeafletMouseEvent } from 'leaflet';\nimport {\n  DirectPath,\n  MeasureActionOptions,\n  MeasureModel,\n  Trail,\n} from './interfaces';\n\nexport class MeasureAction extends Handler {\n  options: MeasureActionOptions = {\n    color: '#FF0080',\n    model: 'distance',\n    messages: I18N['en'],\n  };\n\n  private _map: Map;\n  private _measureHandler: this;\n  private _finished: boolean;\n  private _startMove?: boolean;\n  private _measurementStarted?: boolean;\n  private _lastPoint?: LatLng;\n  private _totalDistance = 0;\n  private _trail: Trail = { overlays: [], points: [] };\n  private _directPath?: DirectPath;\n  private _measurePath?: DirectPath;\n\n  constructor(map: Map, options: MeasureActionOptions) {\n    super(map);\n    this._map = map;\n    this._measureHandler = this;\n    this._finished = false;\n    Util.setOptions(this, options);\n  }\n  setModel(model: MeasureModel): this {\n    this.options.model = model;\n    return this;\n  }\n  addHooks(): void {\n    this._activeMeasure();\n  }\n  removeHooks(): void {\n    this._disableMeasure();\n  }\n  private _activeMeasure(): void {\n    this._measureHandler._measurementStarted &&\n      this._measureHandler._finishMeasure();\n    this._measurementStarted ? this._finishMeasure() : this._enableMeasure();\n  }\n  private _onMouseClick(event: LeafletMouseEvent): void {\n    const latlng = event.latlng || this._map.mouseEventToLatLng(event as any);\n    if (this._lastPoint && latlng.equals(this._lastPoint)) {\n      return;\n    }\n    if (this._trail.points.length > 0) {\n      const points = this._trail.points;\n      points.push(latlng);\n      const length = points.length;\n      this._totalDistance += getDistance(\n        points[length - 2],\n        points[length - 1],\n      );\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          getDistanceString(this._totalDistance, this.options.messages),\n          'leaflet-measure-lable',\n        );\n      }\n    } else {\n      this._totalDistance = 0;\n      this._addMeasurePoint(latlng);\n      this._addMarker(latlng);\n      if (this.options.model !== 'area') {\n        this._addLable(\n          latlng,\n          this.options.messages.start,\n          'leaflet-measure-lable',\n        );\n      }\n      this._trail.points.push(latlng);\n    }\n    this._lastPoint = latlng;\n    this._startMove = false;\n  }\n  private _onMouseMove(event: LeafletMouseEvent): void {\n    const latlng = event.latlng;\n    if (this._directPath && this._trail.points.length > 0) {\n      if (this._startMove) {\n        this._directPath.setLatLngs(this._trail.points.concat(latlng));\n      } else {\n        this._directPath.setLatLngs([latlng]);\n        this._startMove = true;\n      }\n    }\n  }\n  private _enableMeasure(): void {\n    this._trail = {\n      overlays: [],\n      points: [],\n    };\n    const map = this._map;\n    DomUtil.addClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.disable();\n    this._measurementStarted = true;\n    map.on('click', this._onMouseClick, this);\n    map.on('dblclick', this._finishMeasure, this);\n    map.on('contextmenu', this._finishMeasure, this);\n    map.doubleClickZoom.disable();\n    map.on('mousemove', this._onMouseMove, this);\n    map.fire('measure:start');\n  }\n  private _disableMeasure(): void {\n    const map = this._map;\n    DomUtil.removeClass(map.getContainer(), 'leaflet-measure-map');\n    // @ts-ignore\n    map.contextMenu && map.contextMenu.enable();\n    map.off('click', this._onMouseClick, this);\n    map.off('dblclick', this._finishMeasure, this);\n    map.off('contextmenu', this._finishMeasure, this);\n    map.off('mousemove', this._onMouseMove, this);\n    map.doubleClickZoom.enable();\n    this._measurementStarted = this._startMove = false;\n    if (!this._finished) {\n      this._clearOverlay.call(this);\n    }\n    map.fire('measure:stop');\n  }\n  private _finishMeasure(event?: LeafletMouseEvent): void {\n    if (this._trail.points.length > 0) {\n      if (this._trail.points.length > 1) {\n        if (this._directPath && (!event || event.type === 'contextmenu')) {\n          this._directPath.setLatLngs(this._trail.points);\n        }\n        if (this._lastPoint) {\n          if (this.options.model === 'area') {\n            this._addLable(\n              this._lastPoint,\n              getAreaString(this._trail.points, this.options.messages),\n              'leaflet-measure-lable',\n              true,\n            );\n          } else {\n            this._addLable(\n              this._lastPoint,\n              getDistanceString(this._totalDistance, this.options.messages),\n              'leaflet-measure-lable',\n              true,\n            );\n          }\n        }\n        this._directPath && this._map.removeLayer(this._directPath);\n        this._finished = true;\n      } else {\n        this._clearOverlay.call(this);\n      }\n    }\n    this.disable();\n  }\n  private _resetDirectPath(latlng: LatLng): void {\n    if (!this._directPath) {\n      let directPath: DirectPath;\n      if (this.options.model === 'area') {\n        directPath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          fillOpacity: 0,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          dashArray: [5, 5],\n          interactive: false,\n        });\n        directPath = polyline;\n      }\n      this._map.addLayer(directPath);\n      this._trail.overlays.push(directPath);\n      this._directPath = directPath;\n    } else {\n      this._directPath.addLatLng(latlng);\n    }\n  }\n  private _addMeasurePoint(latlng: LatLng): void {\n    if (!this._measurePath) {\n      let measurePath: DirectPath;\n      if (this.options.model === 'area') {\n        measurePath = new Polygon([latlng], {\n          weight: 2,\n          color: this.options.color,\n          fillColor: this.options.color,\n          fillOpacity: 0.5,\n          interactive: false,\n        });\n      } else {\n        const polyline = new Polyline([latlng], {\n          weight: 2,\n          color: this.options.color,\n          interactive: false,\n        });\n        measurePath = polyline;\n      }\n      this._map.addLayer(measurePath);\n      this._trail.overlays.push(measurePath);\n      this._measurePath = measurePath;\n    } else {\n      this._measurePath.addLatLng(latlng);\n    }\n    this._resetDirectPath(latlng);\n  }\n  private _addMarker(latLng: LatLng): void {\n    const marker = new CircleMarker(latLng, {\n      color: this.options.color,\n      opacity: 1,\n      weight: 1,\n      fillColor: '#FFFFFF',\n      fill: true,\n      fillOpacity: 1,\n      radius: 3,\n      interactive: false,\n    });\n    this._map.addLayer(marker);\n    this._trail.overlays.push(marker);\n  }\n  private _addLable(\n    latlng: LatLng,\n    content: string,\n    className: string,\n    ended?: boolean,\n  ): void {\n    const lable = new MeasureLabel({\n      latlng,\n      content,\n      className,\n    });\n    this._map.addLayer(lable);\n    this._trail.overlays.push(lable);\n    if (ended) {\n      const closeButton = lable.enableClose();\n      DomEvent.on(\n        closeButton,\n        'click',\n        (e) => {\n          DomEvent.stopPropagation(e);\n          this._clearOverlay();\n        },\n        this,\n      );\n    }\n  }\n  private _clearOverlay(): void {\n    const overlays = this._trail.overlays;\n    let i = 0,\n      length;\n    for (length = overlays.length; i < length; i++) {\n      this._map.removeLayer(overlays[i]);\n    }\n  }\n}\n","import { Control, DomUtil, DomEvent, Util } from 'leaflet';\nimport { I18N } from './i18n';\nimport { MeasureAction } from './MeasureAction';\n\nimport type { Map, Handler } from 'leaflet';\nimport type { MeasureOptions } from './interfaces';\n\nexport class Measure extends Control {\n  options: MeasureOptions = {\n    position: 'topright',\n    title: 'Measurement',\n    collapsed: true,\n    color: '#FF0080',\n    locale: 'en',\n    messages: I18N['en'],\n  };\n\n  private _map?: Map;\n  private _container?: HTMLElement;\n  private _link?: HTMLAnchorElement;\n  private _contents?: HTMLElement;\n  private _measureHandler?: Handler;\n\n  constructor(options: Partial<MeasureOptions>) {\n    super(options);\n    Util.setOptions(this, options);\n    const locale = options.locale;\n    if (locale && locale !== 'en') {\n      const messages = I18N[locale];\n      if (messages) {\n        this.options.messages = { ...I18N, ...messages };\n      } else {\n        console.error(\n          'Measure control has no messages for ' +\n            this.options.locale +\n            ' locale',\n        );\n      }\n    }\n  }\n  onAdd(map: Map): HTMLElement {\n    this._map = map;\n    return this._container || this._initLayout();\n  }\n  disableMeasure(): void {\n    if (this._measureHandler) {\n      this._measureHandler.disable();\n      this._measureHandler = undefined;\n    }\n  }\n  private _buildContainer(): HTMLElement {\n    this._container = DomUtil.create(\n      'div',\n      'leaflet-control-measure leaflet-bar leaflet-control',\n    );\n\n    this._contents = DomUtil.create(\n      'div',\n      'leaflet-measure-contents',\n      this._container,\n    );\n\n    this._link = DomUtil.create('a', 'leaflet-measure-toggle', this._container);\n    this._link.title = this.options.title || 'Measurement';\n    this._link.href = '#';\n\n    // if (this.options.title) {\n    //   var title = DomUtil.create('h3', '', this._contents);\n    //   title.innerText = this.options.title;\n    // }\n\n    this._buildItems();\n    return this._container;\n  }\n  private _buildItems(): void {\n    const ele_ul = DomUtil.create(\n      'ul',\n      'leaflet-measure-actions',\n      this._contents,\n    );\n    let ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_line = DomUtil.create('a', 'start', ele_li);\n    ele_link_line.innerText = this.options.messages.linearMeasurement;\n    ele_link_line.href = '#';\n    DomEvent.disableClickPropagation(ele_link_line);\n    DomEvent.on(ele_link_line, 'click', this._enableMeasureLine, this);\n\n    ele_li = DomUtil.create('li', 'leaflet-measure-action', ele_ul);\n    const ele_link_area = DomUtil.create(\n      'a',\n      'leaflet-measure-action start',\n      ele_li,\n    );\n    ele_link_area.innerText = this.options.messages.areaMeasurement;\n    ele_link_area.href = '#';\n    DomEvent.disableClickPropagation(ele_link_area);\n    DomEvent.on(ele_link_area, 'click', this._enableMeasureArea, this);\n  }\n  private _initLayout(): HTMLElement {\n    const container = this._buildContainer();\n    DomEvent.disableClickPropagation(container);\n    DomEvent.disableScrollPropagation(container);\n    if (this.options.collapsed) {\n      DomEvent.on(\n        container,\n        {\n          mouseenter: this._expand,\n          mouseleave: this._collapse,\n        },\n        this,\n      );\n    } else {\n      this._expand();\n    }\n    return container;\n  }\n  private _enableMeasureLine(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'distance',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _enableMeasureArea(ev: Event): void {\n    DomEvent.stopPropagation(ev);\n    this.disableMeasure();\n    if (this._map) {\n      this._measureHandler = new MeasureAction(this._map, {\n        model: 'area',\n        color: this.options.color,\n        messages: this.options.messages,\n      });\n      this._measureHandler.enable();\n    }\n  }\n  private _expand(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'none';\n      DomUtil.addClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n  private _collapse(): this {\n    if (this._link && this._container) {\n      this._link.style.display = 'block';\n      DomUtil.removeClass(this._container, 'leaflet-measure-expanded');\n    }\n    return this;\n  }\n}\n","export const StopToggleControlsCb: Array<{\n  name: string;\n  stop: () => void;\n}> = [];\n\nexport function addStopToggleControl(name: string, stop: () => void): void {\n  StopToggleControlsCb.push({ name, stop });\n}\n\nexport function stopToggleControlsFor(excludeControlName?: string): void {\n  StopToggleControlsCb.forEach((x) => {\n    if (x.name !== excludeControlName) {\n      x.stop();\n    }\n  });\n}\n","import { Measure } from '../assets/Leaflet.Measure-master/src';\nimport '../assets/Leaflet.Measure-master/src/leaflet.measure.css';\nimport { NgwMap } from '@nextgis/ngw-map';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nimport type { Map } from 'leaflet';\n\nexport function createMeasureControl(ngwMap: NgwMap): void {\n  // @ts-ignore\n  const control = new Measure({ locale: 'ru' });\n  ngwMap.addControl(control, 'top-left');\n\n  ngwMap.onLoad().then(() => {\n    const map = ngwMap.mapAdapter.map as Map;\n    if (map) {\n      map.on('measure:start', () => {\n        stopToggleControlsFor('measure');\n        ngwMap.disableSelection();\n      });\n      map.on('measure:stop', () => {\n        ngwMap.setCursor('default');\n        ngwMap.enableSelection();\n      });\n    }\n    addStopToggleControl('measure', () => {\n      control.disableMeasure();\n    });\n  });\n}\n","import 'leaflet/dist/leaflet.css';\nimport 'bulma-carousel/dist/css/bulma-carousel.min.css';\nimport './ActionMap.css';\n\nimport { Control, Map, Layer } from 'leaflet';\n// @ts-ignore\nimport ShareButtons from 'share-buttons/dist/share-buttons';\n\nimport {\n  NgwMap,\n  ToggleControl,\n  NgwLayers,\n  LocationEvent,\n  VectorAdapterOptions,\n} from '@nextgis/ngw-map';\nimport { CirclePaint } from '@nextgis/paint';\nimport {\n  NgwIdentify,\n  NgwLayerOptions,\n  getIdentifyItems,\n} from '@nextgis/ngw-kit';\nimport { getIcon } from '@nextgis/icons';\nimport MapAdapter from '@nextgis/leaflet-map-adapter';\nimport UrlRuntimeParams from '@nextgis/url-runtime-params';\nimport { QmsAdapterOptions } from '@nextgis/qms-kit';\nimport CancelablePromise from '@nextgis/cancelable-promise';\nimport { ResourceHierarchy } from '@nextgis/ngw-connector';\n\nimport { AppOptions } from '../App';\nimport { Auth } from './Auth/Auth';\nimport { Popup } from './Popup';\nimport { MapSettingsPanel } from './MapSettingsPanel/MapSettingsPanel';\nimport { GetCoordinatePanelControl } from './GetCoordinateControl/GetCoordinateControl';\nimport { createMeasureControl } from './createMeasureControl';\nimport { addStopToggleControl, stopToggleControlsFor } from './ToggleControl';\n\nexport class ActionMap {\n  ngwMap!: NgwMap<Map, Layer, any>;\n\n  tree?: MapSettingsPanel;\n  treeControl?: Control & ToggleControl;\n\n  authControl?: Control & ToggleControl;\n  popup: Popup;\n\n  private _promises: { [name: string]: CancelablePromise<any> } = {};\n\n  constructor(private options: AppOptions) {\n    this.popup = new Popup();\n  }\n\n  async create(opt: AppOptions): Promise<void> {\n    // const auth = new Auth(opt.mapOptions);\n    const mapOpt = { ...opt.mapOptions };\n    // try {\n    //   await auth.login();\n    //   mapOpt.connector = auth.connector;\n    // } catch (er) {\n    //   // cancel login\n    // }\n\n    const { basemaps, fires, userFires } = opt;\n\n    const ngwMap = new NgwMap<Map, Layer>({\n      mapAdapter: new MapAdapter(),\n      controls: [],\n      minZoom: 4,\n      runtimeParams: [new UrlRuntimeParams()],\n      ...mapOpt,\n    });\n\n    this.ngwMap = ngwMap;\n\n    ngwMap.setCursor('default');\n    this.popup.setNgwMap(ngwMap);\n\n    if (basemaps) {\n      ngwMap.onLoad().then(() =>\n        basemaps.forEach((x, i) => {\n          ngwMap.addBaseLayer<any, QmsAdapterOptions>('QMS', {\n            ...x,\n            visibility: i === 0,\n          });\n        }),\n      );\n    }\n    ngwMap.getPaintFunctions = { base: getIcon };\n\n    ngwMap.addControl('ZOOM', 'top-left');\n    this._createLocateControl();\n    ngwMap.addControl('ATTRIBUTION', 'bottom-right', {\n      customAttribution: [\n        '<a href=\"https://nextgis.com\" target=\"_blank\">©NextGIS</a>',\n      ],\n    });\n    createMeasureControl(ngwMap);\n    this._createShareControl();\n    // await this._createAuthControl(auth);\n    // this.ngwMap.addControl(this.authControl, 'top-right');\n\n    const ngwLayers = await ngwMap.getNgwLayers();\n    const bookmarks: ResourceHierarchy[] = [];\n    Object.values(ngwLayers).forEach((x) => {\n      const bookmark =\n        x.layer.item &&\n        x.layer.item.webmap &&\n        x.layer.item.webmap.bookmark_resource;\n      if (bookmark) {\n        bookmarks.push(bookmark);\n      }\n    });\n\n    await this._addUserFires(opt.userFires);\n    await this._addFires(opt.fires);\n    this._createGetCoordinateControl();\n\n    this._addTreeControl({\n      ngwLayers,\n      fires,\n      userFires,\n      bookmarks,\n    });\n    // this.ngwMap.addControl(crateLineMeasureControl(), 'top-left');\n\n    this._addEventsListeners();\n  }\n\n  private _locate() {\n    const locationfound = (e: LocationEvent) => {\n      const lngLat = e.lngLat;\n      // const lngLat: [number, number] = [40, 46];\n      // TODO: get extent from webmap or frame layer;\n      // const extent = this.ngwMap.getBounds();\n      // if (extent) {\n      //   const [minLng, minLat, maxLng, maxLat] = extent;\n      //   const [lng, lat] = lngLat;\n      //   const isLngInBbox = minLng < lng && lng < maxLng;\n      //   const isLatInBbox = minLat < lat && lat < maxLat;\n      //   if (isLngInBbox && isLatInBbox) {\n      //     this.ngwMap.setCenter(lngLat);\n      //   }\n      // }\n      this.ngwMap.setCenter(lngLat);\n    };\n\n    this.ngwMap.locate({ setView: false }, { locationfound });\n  }\n\n  private async _createAuthControl(auth: Auth) {\n    const authBtn = document.getElementsByClassName(\n      'js-auth-btn',\n    )[0] as HTMLElement;\n    const getStatus = () => {\n      return !!(this.ngwMap.connector && this.ngwMap.connector.user);\n    };\n    const onClick = () => {\n      auth.logout();\n      window.location.reload();\n    };\n    authBtn.innerHTML = getStatus() ? 'Выйти' : 'Войти';\n    authBtn.style.display = 'block';\n    authBtn.addEventListener('click', onClick);\n  }\n\n  private _createShareControl() {\n    const shareModal = document.getElementsByClassName('js-modal')[0];\n    const closeModalBtn = document.getElementsByClassName('js-modal-close')[0];\n    const shareModalContent = document.getElementsByClassName(\n      'js-share-modal-content',\n    )[0];\n    const shareInput = document.getElementsByClassName(\n      'js-share-input',\n    )[0] as HTMLInputElement;\n    const showModal = () => {\n      const href = location.href;\n      const html = this._createShareModalContent(href);\n      shareInput.value = href;\n      shareModalContent.innerHTML = html;\n      ShareButtons.update();\n      shareModal.classList.add('is-active');\n    };\n    const closeModal = () => {\n      shareModalContent.innerHTML = '';\n      shareModal.classList.remove('is-active');\n    };\n    closeModalBtn.addEventListener('click', () => {\n      closeModal();\n    });\n\n    const shareControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-share-alt btn-control-icon \"></i>',\n      onClick() {\n        showModal();\n      },\n    });\n    this.ngwMap.addControl(shareControl, 'bottom-right');\n  }\n\n  private async _createGetCoordinateControl() {\n    const control = new GetCoordinatePanelControl(this, {\n      toggle: (status) => {\n        if (status) {\n          stopToggleControlsFor('coordinate');\n          this.ngwMap.disableSelection();\n        } else {\n          this.ngwMap.enableSelection();\n        }\n      },\n    });\n    const toggleControl = await this.ngwMap.createToggleControl(control);\n    this.ngwMap.addControl(toggleControl, 'top-left');\n    addStopToggleControl('coordinate', () => toggleControl.onClick(false));\n  }\n\n  private _createLocateControl() {\n    const onClick = () => this._locate();\n    const locateControl = this.ngwMap.createButtonControl({\n      html: '<i class=\"fas fa-location-arrow btn-control-icon\"></i>',\n      title: 'Найти меня на карте',\n      onClick,\n    });\n    this.ngwMap.addControl(locateControl, 'top-left');\n  }\n\n  private _createShareModalContent(url: string) {\n    const social = [\n      { id: 'tw', name: 'Twitter', icon: 'fab fa-twitter' },\n      { id: 'vk', name: 'VK', icon: 'fab fa-vk' },\n      { id: 'fb', name: 'Facebook', icon: 'fab fa-facebook-square' },\n    ];\n\n    const html = `<div class=\"buttons share-btn js-share-btn\" data-url=\"${url}\" data-title=\"\" data-desc=\"\">\n      ${social\n        .map(\n          (x) => `<a class=\"button is-primary\" data-id=\"${x.id}\">\n                    <span class=\"icon\">\n                        <i class=\"${x.icon}\"></i>\n                    </span>\n                    <span>${x.name}</span>\n                </a>`,\n        )\n        .join('')}\n    </div>`;\n    return html;\n  }\n\n  private async _addUserFires(\n    x?: NgwLayerOptions<'GEOJSON'>,\n    adapterOptions?: VectorAdapterOptions,\n  ) {\n    if (x) {\n      const paint =\n        x.adapterOptions && x.adapterOptions.paint\n          ? (x.adapterOptions.paint as CirclePaint)\n          : {};\n      this.ngwMap.addNgwLayer({\n        resource: x.resource,\n        id: x.id,\n        adapterOptions: {\n          paint: {\n            ...paint,\n            stroke: true,\n            fillOpacity: 0.6,\n            radius: 5,\n          },\n          selectable: true,\n          selectedPaint: {\n            ...paint,\n            stroke: true,\n            fillOpacity: 0.9,\n            radius: 7,\n          },\n          ...adapterOptions,\n        },\n      });\n    }\n  }\n\n  private async _addFires(fires?: NgwLayerOptions<'GEOJSON'>[]) {\n    if (fires) {\n      for (const x of fires) {\n        await this._addUserFires(x, {\n          propertiesFilter: [\n            [\n              'timestamp',\n              'ge',\n              Math.floor(Date.now() / 1000) -\n                Number(this.options.timedelta) * 3600,\n            ],\n          ],\n        });\n      }\n    }\n  }\n\n  private async _addTreeControl(opt: {\n    ngwLayers: NgwLayers;\n    fires?: NgwLayerOptions<'GEOJSON'>[];\n    userFires?: NgwLayerOptions<'GEOJSON'>;\n    bookmarks?: ResourceHierarchy[];\n  }) {\n    const sidebarToggleBtn = document.getElementsByClassName('js-sidebar')[0];\n\n    const isActive = () => sidebarToggleBtn.classList.contains('is-active');\n    const activeBurger = () => sidebarToggleBtn.classList.add('is-active');\n    const disactiveBurger = () =>\n      sidebarToggleBtn.classList.remove('is-active');\n\n    await this.ngwMap.onLoad();\n\n    this.tree = new MapSettingsPanel(this, {\n      ...opt,\n      ngwMap: this.ngwMap,\n    });\n\n    const toggle = (status?: boolean) => {\n      status = status !== undefined ? status : isActive();\n      if (status) {\n        stopToggleControlsFor('tree');\n        this.tree && this.tree.show();\n        activeBurger();\n      } else {\n        this.tree && this.tree.hide();\n        disactiveBurger();\n      }\n    };\n    sidebarToggleBtn.addEventListener('click', () => {\n      toggle();\n    });\n    setTimeout(() => {\n      toggle();\n    }, 500);\n    addStopToggleControl('tree', () => toggle(false));\n  }\n\n  private _clean() {\n    if (\n      this._promises.getFeaturePromise &&\n      this._promises.getFeaturePromise.cancel\n    ) {\n      this._promises.getFeaturePromise.cancel();\n    }\n    this.ngwMap.removeLayer('highlight');\n  }\n\n  private _highlighNgwLayer(e: NgwIdentify) {\n    this._clean();\n    const paramsList = getIdentifyItems(e);\n    const params = paramsList[0];\n    if (params) {\n      const resourceId = params.resourceId;\n      this.ngwMap\n        .fetchIdentifyItem(e, {\n          extensions: ['attachment'],\n        })\n        .then((item) => {\n          item &&\n            item.toGeojson().then((geojson) => {\n              this.ngwMap.addLayer('GEOJSON', {\n                id: 'highlight',\n                data: geojson,\n                visibility: true,\n                paint: { color: 'green', stroke: true, fillOpacity: '0.8' },\n                // selectable: true,\n                selectOnHover: true,\n                popup: true,\n                // popupOnSelect: true,\n                popupOptions: {\n                  createPopupContent: (e) => {\n                    if (e.feature) {\n                      const element = this.popup.createPopupContent(\n                        e.feature,\n                        resourceId,\n                      );\n                      if (\n                        item.extensions.attachment &&\n                        item.extensions.attachment.length\n                      ) {\n                        this.popup._addPhotos(\n                          element,\n                          item.extensions.attachment,\n                          params.resourceId,\n                          params.featureId,\n                        );\n                      }\n                      return element;\n                    }\n                  },\n                },\n              });\n            });\n        });\n    }\n  }\n\n  private _addEventsListeners() {\n    this.ngwMap.emitter.on('click', () => {\n      this.ngwMap.cancelPromises('identify', 'select');\n    });\n    this.ngwMap.emitter.on('ngw:select', (e) => e && this._highlighNgwLayer(e));\n  }\n}\n","document.addEventListener('DOMContentLoaded', () => {\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(\n    document.querySelectorAll('.navbar-burger'),\n    0,\n  );\n\n  // Check if there are any navbar burgers\n  if ($navbarBurgers.length > 0) {\n    // Add a click event on each of them\n    $navbarBurgers.forEach((el) => {\n      el.addEventListener('click', () => {\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target);\n\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n        el.classList.toggle('is-active');\n        if ($target) {\n          $target.classList.toggle('is-active');\n        }\n      });\n    });\n  }\n});\n","import { ActionMap } from './components/ActionMap';\nimport './bulma';\n\nimport type { NgwMapOptions } from '@nextgis/ngw-map';\nimport type { NgwLayerOptions } from '@nextgis/ngw-kit';\nexport interface AsuLayer {\n  name: string;\n}\n\nexport interface ConnectionOptions {\n  acsUrl?: string;\n  authUrl: string;\n  showUrl: string;\n}\n\nexport type FireResource = NgwLayerOptions<'GEOJSON'>;\n\nexport interface Bookmark {\n  id: string;\n  name: string;\n}\n\nexport type Bookmarks = Bookmark[];\n\nexport interface BaseLayer {\n  name?: string;\n  qmsId: number;\n}\n\nexport interface AppOptions {\n  mapOptions?: NgwMapOptions;\n  fires?: NgwLayerOptions<'GEOJSON'>[];\n  userFires?: NgwLayerOptions<'GEOJSON'>;\n  basemaps?: BaseLayer[];\n  timedelta?: 24;\n}\n\nexport class App {\n  actionMap: ActionMap;\n\n  constructor(public options: AppOptions = {}) {\n    this.actionMap = new ActionMap(options);\n  }\n\n  async create(options?: AppOptions): Promise<void> {\n    this.options = { ...this.options, ...options };\n    // show app html after js and css loading and before map drawing start\n    this.showContent();\n    await this.actionMap.create(this.options);\n  }\n\n  showContent(): void {\n    const appContent = document.getElementById('app');\n    const appLoadingContent = document.getElementById('app-loading');\n    if (appLoadingContent) {\n      appLoadingContent.style.display = 'none';\n    }\n    if (appContent) {\n      appContent.style.display = 'block';\n    }\n  }\n}\n","// import 'core-js';\nimport 'regenerator-runtime/runtime';\nimport { deepmerge } from '@nextgis/utils';\nimport { App, AppOptions } from './App';\n\nimport './style/style.scss';\n\nlet config: AppOptions = {};\ntry {\n  config = require('../config').default;\n} catch (er) {\n  console.warn('Config file is not funded, run with default settings');\n}\n\nconst OPTIONS: AppOptions = {\n  mapOptions: {\n    target: 'map',\n    bounds: [36.59, 43.385, 49.374, 50.214],\n  },\n  timedelta: 24,\n};\nconst options = deepmerge(OPTIONS, config);\nconst app = new App(options);\n\napp.create();\n"],"sourceRoot":""}