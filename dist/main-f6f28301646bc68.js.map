{"version":3,"file":"main-f6f28301646bc68.js","mappings":"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","sources":["webpack://clear_horizon/./@nextgis/packages/ngw-kit/src/BookmarkItem.ts","webpack://clear_horizon/./@nextgis/packages/ngw-kit/src/IdentifyItem.ts"],"sourcesContent":["import { Feature, Point } from 'geojson';\nimport { createGeoJsonFeature, fetchNgwLayerItem } from '@nextgis/ngw-kit';\nimport CancelablePromise from '@nextgis/cancelable-promise';\n\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { FeatureItem } from '@nextgis/ngw-connector';\nimport type { LngLatBoundsArray } from '@nextgis/utils';\n\ninterface BookmarkItemOptions {\n  connector: NgwConnector;\n  resourceId: number;\n  item: FeatureItem;\n  labelField?: string;\n}\n\nexport class BookmarkItem {\n  readonly name: string;\n  readonly resourceId: number;\n  readonly item: FeatureItem;\n\n  private _extent?: LngLatBoundsArray;\n\n  constructor(private options: BookmarkItemOptions) {\n    this.resourceId = options.resourceId;\n    const item = options.item;\n    this.item = item;\n    if (options.labelField && item.fields) {\n      this.name = item.fields[options.labelField];\n    } else {\n      this.name = String(item.id);\n    }\n  }\n\n  extent(): CancelablePromise<LngLatBoundsArray> {\n    if (this._extent) {\n      return CancelablePromise.resolve(this._extent);\n    }\n    return this.options.connector\n      .get('feature_layer.feature.item_extent', null, {\n        id: this.resourceId,\n        fid: this.item.id,\n      })\n      .then((resp) => {\n        const { minLat, minLon, maxLat, maxLon } = resp.extent;\n        const lonLat = [minLon, minLat, maxLon, maxLat];\n        this._extent = lonLat;\n        return lonLat;\n      });\n  }\n\n  geoJson(): CancelablePromise<Feature<Point, any>> {\n    if (this.item.geom) {\n      return CancelablePromise.resolve(createGeoJsonFeature(this.item));\n    } else {\n      return fetchNgwLayerItem({\n        resourceId: this.resourceId,\n        featureId: this.item.id,\n        connector: this.options.connector,\n        geom: true,\n        fields: null,\n        extensions: null,\n      }).then((onlyGeomItem) => {\n        const geom = onlyGeomItem.geom;\n        this.item.geom = geom;\n        return createGeoJsonFeature(this.item);\n      });\n    }\n  }\n}\n","import {\n  fetchNgwLayerItem,\n  IdentifyItemOptions,\n  fetchNgwLayerItemExtent,\n} from '.';\nimport CancelablePromise from '@nextgis/cancelable-promise';\n\nimport type { NgwFeatureItemResponse } from '.';\nimport type { GeoJsonObject, Geometry, Feature } from 'geojson';\nimport type {\n  VectorLayerResourceItem,\n  FeatureItemExtensions,\n  FeatureResource,\n  LayerFeature,\n} from '@nextgis/ngw-connector';\nimport type NgwConnector from '@nextgis/ngw-connector';\nimport type { FeatureProperties, LngLatBoundsArray } from '@nextgis/utils';\nimport type { FetchNgwItemOptions } from './interfaces';\n\nexport class IdentifyItem<\n  F extends FeatureProperties = FeatureProperties,\n  G extends Geometry = Geometry,\n> implements LayerFeature\n{\n  readonly id: number;\n  readonly label: string;\n  readonly layerId: number;\n  readonly parent: string;\n  readonly fields: FeatureProperties;\n  geom?: GeoJsonObject;\n  extensions?: FeatureItemExtensions;\n\n  private connector: NgwConnector;\n  private _item?: NgwFeatureItemResponse<F, G>;\n  private _geojson?: Feature<G, F>;\n  private _resource?: VectorLayerResourceItem;\n  private _extent?: LngLatBoundsArray;\n\n  constructor(options: IdentifyItemOptions) {\n    const f = options.feature;\n    this.id = f.id;\n    this.geom = f.geom;\n    this.label = f.label;\n    this.parent = f.parent;\n    this.fields = f.fields;\n    this.layerId = f.layerId;\n    this.connector = options.connector;\n  }\n\n  identify(\n    options: Partial<FetchNgwItemOptions<F>> = {},\n  ): CancelablePromise<NgwFeatureItemResponse<F, G>> {\n    if (this._item) {\n      return CancelablePromise.resolve(this._item);\n    }\n    return fetchNgwLayerItem<G, F>({\n      connector: this.connector,\n      featureId: this.id,\n      resourceId: this.layerId,\n      fields: null,\n      extensions: ['attachment', 'description'],\n      ...options,\n    }).then((resp) => {\n      this._item = resp;\n      this.geom = resp.geom;\n      this.extensions = resp.extensions;\n      return resp;\n    });\n  }\n\n  resource(): CancelablePromise<FeatureResource> {\n    if (this._resource) {\n      return CancelablePromise.resolve(this._resource.feature_layer);\n    }\n    return this.connector.getResource(this.layerId).then((resp) => {\n      this._resource = resp as VectorLayerResourceItem;\n      return this._resource.feature_layer;\n    });\n  }\n\n  getBounds(): CancelablePromise<LngLatBoundsArray | undefined> {\n    if (this._extent) {\n      return CancelablePromise.resolve(this._extent);\n    }\n    return fetchNgwLayerItemExtent({\n      connector: this.connector,\n      featureId: this.id,\n      resourceId: this.layerId,\n    });\n  }\n\n  geojson(): CancelablePromise<Feature<G, F>> {\n    if (this._geojson) {\n      return CancelablePromise.resolve(this._geojson);\n    }\n    return this.identify().then((resp) => {\n      return resp.toGeojson().then((geojson) => {\n        this._geojson = geojson;\n        return geojson;\n      });\n    });\n  }\n}\n"],"names":["BookmarkItem","options","_classCallCheck","_defineProperty","this","resourceId","item","labelField","fields","name","String","id","key","value","_this","_extent","CancelablePromise","connector","get","fid","then","resp","_resp$extent","extent","minLat","minLon","maxLat","lonLat","maxLon","_this2","geom","createGeoJsonFeature","fetchNgwLayerItem","featureId","extensions","onlyGeomItem","IdentifyItem","f","feature","label","parent","layerId","arguments","length","undefined","_item","_objectSpread","_resource","feature_layer","getResource","fetchNgwLayerItemExtent","_this3","_geojson","identify","toGeojson","geojson"],"sourceRoot":""}